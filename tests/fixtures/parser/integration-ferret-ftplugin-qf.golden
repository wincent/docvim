Unit
  [ DocBlock
      [ OptionAnnotation "g:FerretQFOptions" "boolean" (Just "1")
      , Paragraph
          [ Plaintext "Controls"
          , Whitespace
          , Plaintext "whether"
          , Whitespace
          , Plaintext "to"
          , Whitespace
          , Plaintext "set"
          , Whitespace
          , Plaintext "up"
          , Whitespace
          , Plaintext "setting"
          , Whitespace
          , Plaintext "overrides"
          , Whitespace
          , Plaintext "for"
          , Whitespace
          , Link "quickfix"
          , Whitespace
          , Plaintext "windows."
          , Whitespace
          , Plaintext "These"
          , Whitespace
          , Plaintext "are"
          , Whitespace
          , Plaintext "various"
          , Whitespace
          , Plaintext "settings,"
          , Whitespace
          , Plaintext "such"
          , Whitespace
          , Plaintext "as"
          , Whitespace
          , Link "norelativenumber"
          , Plaintext ","
          , Whitespace
          , Link "nolist"
          , Whitespace
          , Plaintext "and"
          , Whitespace
          , Link "nowrap"
          , Plaintext ","
          , Whitespace
          , Plaintext "that"
          , Whitespace
          , Plaintext "are"
          , Whitespace
          , Plaintext "intended"
          , Whitespace
          , Plaintext "to"
          , Whitespace
          , Plaintext "make"
          , Whitespace
          , Plaintext "the"
          , Whitespace
          , Link "quickfix"
          , Whitespace
          , Plaintext "window,"
          , Whitespace
          , Plaintext "which"
          , Whitespace
          , Plaintext "is"
          , Whitespace
          , Plaintext "typically"
          , Whitespace
          , Plaintext "very"
          , Whitespace
          , Plaintext "small"
          , Whitespace
          , Plaintext "relative"
          , Whitespace
          , Plaintext "to"
          , Whitespace
          , Plaintext "other"
          , Whitespace
          , Plaintext "windows,"
          , Whitespace
          , Plaintext "more"
          , Whitespace
          , Plaintext "usable."
          ]
      , Paragraph
          [ Plaintext "A"
          , Whitespace
          , Plaintext "full"
          , Whitespace
          , Plaintext "list"
          , Whitespace
          , Plaintext "of"
          , Whitespace
          , Plaintext "overridden"
          , Whitespace
          , Plaintext "settings"
          , Whitespace
          , Plaintext "can"
          , Whitespace
          , Plaintext "be"
          , Whitespace
          , Plaintext "found"
          , Whitespace
          , Plaintext "in"
          , Whitespace
          , Link "ferret-overrides"
          , Plaintext "."
          ]
      , Paragraph
          [ Plaintext "To"
          , Whitespace
          , Plaintext "prevent"
          , Whitespace
          , Plaintext "the"
          , Whitespace
          , Plaintext "custom"
          , Whitespace
          , Plaintext "settings"
          , Whitespace
          , Plaintext "from"
          , Whitespace
          , Plaintext "being"
          , Whitespace
          , Plaintext "applied,"
          , Whitespace
          , Plaintext "set"
          , Whitespace
          , Link "g:FerretQFOptions"
          , Whitespace
          , Plaintext "to"
          , Whitespace
          , Plaintext "0:"
          ]
      , Fenced [ "let g:FerretQFOptions=0" ]
      ]
  , LetStatement { letLexpr = "s:options" , letValue = "get(g:," }
  , GenericStatement "'FerretQFOptions',1)"
  , GenericStatement "ifs:options"
  , GenericStatement "setlocalnolist"
  , GenericStatement "ifexists('+relativenumber')"
  , GenericStatement "setlocalnorelativenumber"
  , GenericStatement "endif"
  , GenericStatement "setlocalnowrap"
  , GenericStatement "setlocalnumber"
  , LetStatement
      { letLexpr = "s:original_scrolloff" , letValue = "&scrolloff" }
  , GenericStatement "setscrolloff=0"
  , GenericStatement "ifhas('autocmd')"
  , GenericStatement "augroupFerretQF"
  , GenericStatement "autocmd!"
  , GenericStatement
      "autocmdBufLeave<buffer>execute'setscrolloff='.s:original_scrolloff"
  , GenericStatement
      "autocmdBufEnter<buffer>setscrolloff=0|setlocalnocursorline"
  , GenericStatement "augroupEND"
  , GenericStatement "endif"
  , GenericStatement "endif"
  , DocBlock
      [ OptionAnnotation "g:FerretQFMap" "boolean" (Just "1")
      , Paragraph
          [ Plaintext "Controls"
          , Whitespace
          , Plaintext "whether"
          , Whitespace
          , Plaintext "to"
          , Whitespace
          , Plaintext "set"
          , Whitespace
          , Plaintext "up"
          , Whitespace
          , Plaintext "mappings"
          , Whitespace
          , Plaintext "in"
          , Whitespace
          , Plaintext "the"
          , Whitespace
          , Link "quickfix"
          , Whitespace
          , Plaintext "results"
          , Whitespace
          , Plaintext "window"
          , Whitespace
          , Plaintext "for"
          , Whitespace
          , Plaintext "deleting"
          , Whitespace
          , Plaintext "results."
          , Whitespace
          , Plaintext "The"
          , Whitespace
          , Plaintext "mappings"
          , Whitespace
          , Plaintext "include:"
          ]
      , List
          [ ListItem
              [ Code "d"
              , Whitespace
              , Plaintext "("
              , Link "visual-mode"
              , Plaintext "):"
              , Whitespace
              , Plaintext "delete"
              , Whitespace
              , Plaintext "visual"
              , Whitespace
              , Plaintext "selection"
              ]
          , ListItem
              [ Code "dd"
              , Whitespace
              , Plaintext "("
              , Link "Normal-mode"
              , Plaintext "):"
              , Whitespace
              , Plaintext "delete"
              , Whitespace
              , Plaintext "current"
              , Whitespace
              , Plaintext "line"
              ]
          , ListItem
              [ Code "d"
              , Plaintext "{motion}"
              , Whitespace
              , Plaintext "("
              , Link "Normal-mode"
              , Plaintext "):"
              , Whitespace
              , Plaintext "delete"
              , Whitespace
              , Plaintext "range"
              , Whitespace
              , Plaintext "indicated"
              , Whitespace
              , Plaintext "by"
              , Whitespace
              , Plaintext "{motion}"
              ]
          ]
      , Paragraph
          [ Plaintext "To"
          , Whitespace
          , Plaintext "prevent"
          , Whitespace
          , Plaintext "these"
          , Whitespace
          , Plaintext "mappings"
          , Whitespace
          , Plaintext "from"
          , Whitespace
          , Plaintext "being"
          , Whitespace
          , Plaintext "set"
          , Whitespace
          , Plaintext "up,"
          , Whitespace
          , Plaintext "set"
          , Whitespace
          , Plaintext "to"
          , Whitespace
          , Plaintext "0:"
          ]
      , Fenced [ "let g:FerretQFMap=0" ]
      ]
  , LetStatement { letLexpr = "s:map" , letValue = "get(g:," }
  , GenericStatement "'FerretQFMap',1)"
  , GenericStatement "ifs:map"
  , GenericStatement
      "nnoremap<buffer><silent>d:setoperatorfunc=ferret#private#qf_delete_motion<CR>g@"
  , GenericStatement
      "nnoremap<buffer><silent>dd:callferret#private#qf_delete()<CR>"
  , GenericStatement
      "vnoremap<buffer><silent>d:callferret#private#qf_delete()<CR>"
  , GenericStatement "endif"
  ]
