The following sample text was extracted from:

- https://github.com/wincent/ferret/tree/80a1c6f2f6e18952fa6eb85000446650216987fd

(manually, via copy-paste and then stripping off the Vimscript comment syntax;
note that the source order here may not correspond to the order as it appears in
the rendered documentation.)

The only other change made was removal of the leading indent in the section
marked with `@indent` and `@dedent` annotations, which I am not planning on
supporting in the Rust version of docvim.

---

@header

@image https://raw.githubusercontent.com/wincent/ferret/media/ferret.jpg center
@image https://raw.githubusercontent.com/wincent/ferret/media/ferret.gif center


@plugin ferret Ferret plug-in for Vim

# Intro

> "ferret (verb)<br />
> (ferret something out) search tenaciously for and find something: she had
> the ability to ferret out the facts."

                                                              *ferret-features*
Ferret improves Vim's multi-file search in four ways:

## 1. Powerful multi-file search

Ferret provides an |:Ack| command for searching across multiple files using
ripgrep (https://github.com/BurntSushi/ripgrep), The Silver Searcher
(https://github.com/ggreer/the_silver_searcher), or Ack
(http://beyondgrep.com/). Support for passing options through to the
underlying search command exists, along with the ability to use full regular
expression syntax without doing special escaping. On modern versions
of Vim (version 8 or higher, or Neovim), searches are performed
asynchronously (without blocking the UI).

Shortcut mappings are provided to start an |:Ack| search (`<Leader>a`) or to
search for the word currently under the cursor (`<Leader>s`).

Results are normally displayed in the |quickfix| window, but Ferret also
provides a |:Lack| command that behaves like |:Ack| but uses the
|location-list| instead, and a `<Leader>l` mapping as a shortcut to |:Lack|.

|:Back| and |:Black| are analogous to |:Ack| and |:Lack|, but scoped to search
within currently open buffers only. |:Quack| is scoped to search among the
files currently in the |quickfix| list.

## 2. Streamlined multi-file replace

The companion to |:Ack| is |:Acks| (mnemonic: "Ack substitute", accessible via
shortcut `<Leader>r`), which allows you to run a multi-file replace across all
the files placed in the |quickfix| window by a previous invocation of |:Ack|
(or |:Back|, or |:Quack|).

Correspondingly, results obtained by |:Lack| can be targeted for replacement
with |:Lacks|.

## 3. Quickfix listing enhancements

The |quickfix| listing itself is enhanced with settings to improve its
usability, and natural mappings that allow quick removal of items from the
list (for example, you can reduce clutter in the listing by removing lines
that you don't intend to make changes to).

Additionally, Vim's |:cn|, |:cp|, |:cnf| and |:cpf| commands are tweaked to
make it easier to immediately identify matches by centering them within the
viewport.

## 4. Easy operations on files in the quickfix listing

Finally, Ferret provides a |:Qargs| command that puts the files currently in
the |quickfix| listing into the |:args| list, where they can be operated on in
bulk via the |:argdo| command. This is what's used under the covers on older
versions of Vim by |:Acks| to do its work (on newer versions the built-in
|:cdo| or |:cfdo| are used instead).

Ferret also provides a |:Largs| command, which is a |location-list| analog
for |:Qargs|.

# Installation

To install Ferret, use your plug-in management system of choice.

If you don't have a "plug-in management system of choice", I recommend
Pathogen (https://github.com/tpope/vim-pathogen) due to its simplicity and
robustness. Assuming that you have Pathogen installed and configured, and that
you want to install Ferret into `~/.vim/bundle`, you can do so with:

```
git clone https://github.com/wincent/ferret.git ~/.vim/bundle/ferret
```

Alternatively, if you use a Git submodule for each Vim plug-in, you could do
the following after `cd`-ing into the top-level of your Git superproject:

```
git submodule add https://github.com/wincent/ferret.git ~/vim/bundle/ferret
git submodule init
```

To generate help tags under Pathogen, you can do so from inside Vim with:

```
:call pathogen#helptags()
```

@mappings

## Circumstances where mappings do not get set up

Note that Ferret will not try to set up the |<Leader>| mappings if any of the
following are true:

- A mapping with the same |{lhs}| already exists.
- An alternative mapping for the same functionality has already been set up
  from a |.vimrc|.
- The mapping has been suppressed by setting |g:FerretMap| to 0 in your
  |.vimrc|.

## Mappings specific to the quickfix window

Additionally, Ferret will set up special mappings in |quickfix| listings,
unless prevented from doing so by |g:FerretQFMap|:

- `d` (|visual-mode|): delete visual selection
- `dd` (|Normal-mode|): delete current line
- `d`{motion} (|Normal-mode|): delete range indicated by {motion}


@footer

# Custom autocommands

     *FerretAsyncStart* *FerretAsyncFinish* *FerretWillWrite* *FerretDidWrite*
For maximum compatibility with other plug-ins, Ferret runs the following
"User" autocommands before and after running the file writing operations
during |:Acks| or |:Lacks|:

- FerretWillWrite
- FerretDidWrite

For example, to call a pair of custom functions in response to these events,
you might do:

```
autocmd! User FerretWillWrite
autocmd User FerretWillWrite call CustomWillWrite()
autocmd! User FerretDidWrite
autocmd User FerretDidWrite call CustomDidWrite()
```

Additionally, Ferret runs these autocommands when an async search begins and
ends:

- FerretAsyncStart
- FerretAsyncFinish

# Overrides

Ferret overrides the 'grepformat' and 'grepprg' settings, preferentially
setting `rg`, `ag`, `ack` or `ack-grep` as the 'grepprg' (in that order) and
configuring a suitable 'grepformat'.

Additionally, Ferret includes an |ftplugin| for the |quickfix| listing that
adjusts a number of settings to improve the usability of search results.

@indent
                                                                *ferret-nolist*
## 'nolist'

Turned off to reduce visual clutter in the search results, and because
'list' is most useful in files that are being actively edited, which is not
the case for |quickfix| results.

                                                      *ferret-norelativenumber*
## 'norelativenumber'

Turned off, because it is more useful to have a sense of absolute progress
through the results list than to have the ability to jump to nearby results
(especially seeing as the most common operations are moving to the next or
previous file, which are both handled nicely by |:cnf| and |:cpf|
respectively).

                                                                *ferret-nowrap*
## 'nowrap'

Turned off to avoid ugly wrapping that makes the results list hard to read,
and because in search results, the most relevant information is the
filename, which is on the left and is usually visible even without wrapping.

                                                                *ferret-number*
## 'number'

Turned on to give a sense of absolute progress through the results.

                                                             *ferret-scrolloff*
## 'scrolloff'

Set to 0 because the |quickfix| listing is usually small by default, so
trying to keep the current line away from the edge of the viewpoint is
futile; by definition it is usually near the edge.

                                                          *ferret-nocursorline*
## 'nocursorline'

Turned off to reduce visual clutter.

@dedent

To prevent any of these |quickfix|-specific overrides from being set up, you
can set |g:FerretQFOptions| to 0 in your |.vimrc|:

```
let g:FerretQFOptions=0
```

# Troubleshooting

                                                                *ferret-quotes*
## Ferret fails to find patterns containing spaces

As described in the documentation for |:Ack|, the search pattern is passed
through as-is to the underlying search command, and no escaping is required
other than preceding spaces by a single backslash.

So, to find "foo bar", you would search like:

```
:Ack foo\ bar
```

Unescaped spaces in the search are treated as argument separators, so a
command like the following means pass the `-w` option through, search for
pattern "foo", and limit search to the "bar" directory:

```
:Ack -w foo bar
```

Note that wrapping in quotes will probably not do what you want.

This, for example, is a search for `"foo` in the `bar"` directory:

```
:Ack "foo bar"
```

and this is a search for `'abc` in the `xyz'` directory:

```
:Ack 'abc xyz'
```

This approach to escaping is taken in order to make it straightfoward to use
powerful Perl-compatible regular expression syntax in an unambiguous way
without having to worry about shell escaping rules; for example:

```
:Ack \blog\((['"]).*?\1\) -i --ignore-dir=src/vendor src dist build
```

# FAQ

## Why do Ferret commands start with "Ack", "Lack" and so on?

Ferret was originally the thinnest of wrappers (7 lines of code in my
|.vimrc|) around `ack`. The earliest traces of it can be seen in the initial
commit to my dotfiles repo in May, 2009 (https://wincent.dev/h).

So, even though Ferret has a new name now and actually prefers `rg` then `ag`
over `ack`/`ack-grep` when available, I prefer to keep the command names
intact and benefit from years of accumulated muscle-memory.

# Related

Just as Ferret aims to improve the multi-file search and replace experience,
Loupe does the same for within-file searching:

  https://github.com/wincent/loupe

# Website

Source code:

  https://github.com/wincent/ferret

Official releases are listed at:

  http://www.vim.org/scripts/script.php?script_id=5220

# License

Copyright 2015-present Greg Hurrell. All rights reserved.

Redistribution and use in source and binary forms, with or without
modification, are permitted provided that the following conditions are met:

1. Redistributions of source code must retain the above copyright notice,
   this list of conditions and the following disclaimer.

2. Redistributions in binary form must reproduce the above copyright notice,
   this list of conditions and the following disclaimer in the documentation
   and/or other materials provided with the distribution.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
POSSIBILITY OF SUCH DAMAGE.

# Development

## Contributing patches

Patches can be sent via mail to greg@hurrell.net, or as GitHub pull requests
at: https://github.com/wincent/ferret/pulls

## Cutting a new release

At the moment the release process is manual:

- Perform final sanity checks and manual testing
- Update the |ferret-history| section of the documentation
- Verify clean work tree:

```
git status
```

- Tag the release:

```
git tag -s -m "$VERSION release" $VERSION
```

- Publish the code:

```
git push origin main --follow-tags
git push github main --follow-tags
```

- Produce the release archive:

```
git archive -o ferret-$VERSION.zip HEAD -- .
```

- Upload to http://www.vim.org/scripts/script.php?script_id=5220

# Authors

Ferret is written and maintained by Greg Hurrell <greg@hurrell.net>.

Other contributors that have submitted patches include (in alphabetical
order):

- Andrew Macpherson
- Daniel Silva
- Filip Szymański
- Joe Lencioni
- Jon Parise
- Nelo Wallus
- Tom Dooner
- Vaibhav Sagar
- Yoni Weill
- fent

This list produced with:

```
:read !git shortlog -s HEAD | grep -v 'Greg Hurrell' | cut -f 2-3 | sed -e 's/^/- /'
```

# History

## main (not yet released)

- Add |<Plug>(FerretBack)|, |<Plug>(FerretBlack)|, and |<Plug>(FerretQuack)|
  targets for use in mappings (https://github.com/wincent/ferret/issues/79).
- Fix hangs produced by options that take arguments in `rg` v13.0.0
  (https://github.com/wincent/ferret/issues/82).
- Fix |E42| and |E684| errors when deleting last item in listing, or trying to
  delete from an empty listing (https://github.com/wincent/ferret/issues/83).
- Add |g:FerretCommandNames| (https://github.com/wincent/ferret/issues/75).

## 5.1 (9 July 2021)

- Add |g:FerretAckWordWord| setting, to pass `-w` to the underlying search
  tool when |<Plug>(FerretAckWord)| is pressed
  (https://github.com/wincent/ferret/issues/66).
- Use `:normal!` instead of |:normal| to avoid running custom mappings
  (patch from Yoni Weill, https://github.com/wincent/ferret/pull/67).
- Append a trailing slash when autocompleting a directory name
  (https://github.com/wincent/ferret/issues/69).
- Fixed failure to detect pre-existing mapping to |<Plug>(FerretLack)|.
- Worked around breakage caused by `rg` v13.0.0
  (https://github.com/wincent/ferret/issues/78).

## 5.0 (8 June 2019)

- The |<Plug>(FerretAcks)| mapping now uses |/\v| "very magic" mode by
  default. This default can be changed using the |g:FerretVeryMagic| option.
- |:Acks| now preferentially uses |:cdo| (rather than |:cfdo|) to make
  replacements, which means that it no longer operates on a per-file level and
  instead targets individual entries within the |quickfix| window. This is
  relevant if you've used Ferrets mappings to delete entries from the window.
  The old behavior can be restored with the |g:FerretAcksCommand| option.
- Ferret now has a |:Lacks| command, an analog to |:Acks| which applies to the
  |location-list|.
- Likewise, Ferret now has a |:Largs| command, analogous to |:Qargs|, which
  applies to the |location-list| instead of the |quickfix| window.
- The Ferret bindings that are set-up in the |quickfix| window when
  |g:FerretQFMap| is enabled now also apply to the |location-list|.

## 4.1 (31 January 2019)

- Added |:Quack| command, analogous to |:Ack| but scoped to the files
  currently listed in the |quickfix| window.
- Fixed option autocompletion.

## 4.0.2 (11 January 2019)

- Restore compatibility with versions of `rg` prior to v0.8
  (https://github.com/wincent/ferret/issues/59).

## 4.0.1 (8 January 2019)

- Make |:Acks| behavior the same irrespective of the |'gdefault'| setting.

## 4.0 (25 December 2018)

- Try to avoid "press ENTER to continue" prompts.
- Put search term in |w:quickfix_title| for use in statuslines
  (https://github.com/wincent/ferret/pull/57).
- Add |g:FerretExecutableArguments| and |ferret#get_default_arguments()|
  (https://github.com/wincent/ferret/pull/46).

## 3.0.3 (23 March 2018)

- Fix for |:Lack| results opening in quickfix listing in Neovim
  (https://github.com/wincent/ferret/issues/47).

## 3.0.2 (25 October 2017)

- Fix broken |:Back| and |:Black| commands
  (https://github.com/wincent/ferret/issues/48).

## 3.0.1 (24 August 2017)

- Fix failure to handle search patterns containing multiple escaped spaces
  (https://github.com/wincent/ferret/issues/49).

## 3.0 (13 June 2017)

- Improve handling of backslash escapes
  (https://github.com/wincent/ferret/issues/41).
- Add |g:FerretAutojump|.
- Drop support for vim-dispatch.

## 2.0 (6 June 2017)

- Add support for Neovim, along with |g:FerretNvim| setting.

## 1.5 "Cinco de Cuatro" (4 May 2017)

- Improvements to the handling of very large result sets (due to wide lines or
  many results).
- Added |g:FerretLazyInit|.
- Added missing documentation for |g:FerretJob|.
- Added |g:FerretMaxResults|.
- Added feature-detection for `rg` and `ag`, allowing Ferret to gracefully
  work with older versions of those tools that do not support all desired
  command-line switches.

## 1.4 (21 January 2017)

- Drop broken support for `grep`, printing a prompt to install `rg`, `ag`, or
  `ack`/`ack-grep` instead.
- If an `ack` executable is not found, search for `ack-grep`, which is the
  name used on Debian-derived distros.

## 1.3 (8 January 2017)

- Reset |'errorformat'| before each search (fixes issue #31).
- Added |:Back| and |:Black| commands, analogous to |:Ack| and |:Lack| but
  scoped to search within currently open buffers only.
- Change |:Acks| to use |:cfdo| when available rather than |:Qargs| and
  |:argdo|, to avoid polluting the |arglist|.
- Remove superfluous |QuickFixCmdPost| autocommands, resolving clash with
  Neomake plug-in (patch from Tom Dooner, #36).
- Add support for searching with ripgrep (`rg`).

## 1.2a (16 May 2016)

- Add optional support for running searches asynchronously using Vim's |+job|
  feature (enabled by default in sufficiently recent versions of Vim); see
  |g:FerretJob|, |:FerretCancelAsync| and |:FerretPullAsync|.

## 1.1.1 (7 March 2016)

- Fix another edge case when searching for patterns containing "#", only
  manifesting under dispatch.vim.

## 1.1 (7 March 2016)

- Fix edge case when searching for strings of the form "<foo>".
- Fix edge case when searching for patterns containing "#" and "%".
- Provide completion for `ag` and `ack` options when using |:Ack| and |:Lack|.
- Fix display of error messages under dispatch.vim.

## 1.0 (28 December 2015)

- Fix broken |:Qargs| command (patch from Daniel Silva).
- Add |g:FerretQFHandler| and |g:FerretLLHandler| options (patch from Daniel
  Silva).
- Make |<Plug>| mappings accessible even |g:FerretMap| is set to 0.
- Fix failure to report filename when using `ack` and explicitly scoping
  search to a single file (patch from Daniel Silva).
- When using `ag`, report multiple matches per line instead of just the first
  (patch from Daniel Silva).
- Improve content and display of error messages.

## 0.3 (24 July 2015)

- Added highlighting of search pattern and related |g:FerretHlsearch| option
  (patch from Nelo-Thara Wallus).
- Add better error reporting for failed or incorrect searches.

## 0.2 (16 July 2015)

- Added |FerretDidWrite| and |FerretWillWrite| autocommands (patch from Joe
  Lencioni).
- Add |<Plug>(FerretAcks)| mapping (patch from Nelo-Thara Wallus).

## 0.1 (8 July 2015)

- Initial release, extracted from my dotfiles
  (https://github.com/wincent/wincent).

@option g:FerretLoaded any

To prevent Ferret from being loaded, set |g:FerretLoaded| to any value in your
|.vimrc|. For example:

```
let g:FerretLoaded=1
```

@option g:FerretLazyInit boolean 1

In order to minimize impact on Vim start-up time Ferret will initialize itself
lazily on first use by default. If you wish to force immediate initialization
(for example, to cause |'grepprg'| and |'grepformat'| to be set as soon as Vim
launches), then set |g:FerretLazyInit| to 0 in your |.vimrc|:

```
let g:FerretLazyInit=0
```

@option g:FerretCommandNames dictionary {}

Ferret's command names are mostly chosen because the plugin started as a
simple `ack` wrapper. As related commands were added over time, a pattern
involving common suffixes evolved, to make the commands easy to remember
(even once Ferret started offering support for non-`ack` tools, such as
`ag` and `rg`). As such, |:Ack|, |:Back|, |:Black|, |:Lack|, and |:Quack|
are all commands, as are the variants |:Acks| and |:Lacks|, along with
|:Qargs| and |:Largs|. Exceptions to the pattern are |:FerretCancelAsync| and
|:FerretPullAsync|.

Should you wish to override any or all of these names, you may define
|g:FerretCommandNames| early on in your |.vimrc| (before Ferret is loaded),
and it will use the specified names instead, falling back to the defaults for
any undefined commands. For example, to use `:Rg` in place of the |:Ack|
command, and `:Rgb` in place of |:Back|, but keep using the standard names for
all other commands, you would write:

```
let g:FerretCommandNames={'Ack': 'Rg', 'Back': 'Rgb'}
```

Overriding may be useful to avoid conflicts with other plug-ins that compete
to define commands with the same names, or simply to match personal
preferences.

@command :Ack {pattern} {options}

Searches for {pattern} in all the files under the current directory (see
|:pwd|), unless otherwise overridden via {options}, and displays the results
in the |quickfix| listing.

`rg` (ripgrep) then `ag` (The Silver Searcher) will be used preferentially if
present on the system, because they are faster, falling back to
`ack`/`ack-grep` as needed.

On newer versions of Vim (version 8 and above), the search process runs
asynchronously in the background and does not block the UI.

Asynchronous searches are preferred because they do not block, despite the
fact that Vim itself is single threaded.

The {pattern} is passed through as-is to the underlying search program, and no
escaping is required other than preceding spaces by a single backslash. For
example, to search for "\bfoo[0-9]{2} bar\b" (ie. using `ag`'s Perl-style
regular expression syntax), you could do:

```
:Ack \bfoo[0-9]{2}\ bar\b
```

Likewise, {options} are passed through. In this example, we pass the `-w`
option (to search on word boundaries), and scope the search to the "foo" and
"bar" subdirectories:

```
:Ack -w something foo bar
```

As a convenience `<Leader>a` is set-up (|<Plug>(FerretAck)|) as a shortcut to
enter |Cmdline-mode| with `:Ack` inserted on the |Cmdline|. Likewise `<Leader>s`
(|<Plug>(FerretAckWord)|) is a shortcut for running |:Ack| with the word
currently under the cursor.

@command :Ack! {pattern} {options}

Like |:Ack|, but returns all results irrespective of the value of
|g:FerretMaxResults|.

@command :Lack {pattern} {options}

Just like |:Ack|, but instead of using the |quickfix| listing, which is global
across an entire Vim instance, it uses the |location-list|, which is a
per-window construct.

Note that |:Lack| always runs synchronously via |:cexpr|.

@command :Lack! {pattern} {options}

Like |:Lack|, but returns all results irrespective of the value of
|g:FerretMaxResults|.

@command :Back {pattern} {options}

Like |:Ack|, but searches only listed buffers. Note that the search is still
delegated to the underlying |'grepprg'| (`rg`, `ag`, `ack` or `ack-grep`),
which means that only buffers written to disk will be searched. If no buffers
are written to disk, then |:Back| behaves exactly like |:Ack| and will search
all files in the current directory.

@command :Back! {pattern} {options}

Like |:Back|, but returns all results irrespective of the value of
|g:FerretMaxResults|.

@command :Black {pattern} {options}

Like |:Lack|, but searches only listed buffers. As with |:Back|, the search is
still delegated to the underlying |'grepprg'| (`rg`, `ag`, `ack` or
`ack-grep`), which means that only buffers written to disk will be searched.
Likewise, If no buffers are written to disk, then |:Black| behaves exactly
like |:Lack| and will search all files in the current directory.

@command :Black! {pattern} {options}

Like |:Black|, but returns all results irrespective of the value of
|g:FerretMaxResults|.

@command :Quack {pattern} {options}

Like |:Ack|, but searches only among files currently in the |quickfix|
listing. Note that the search is still delegated to the underlying
|'grepprg'| (`rg`, `ag`, `ack` or `ack-grep`), which means that only
buffers written to disk will be searched. If no buffers are written
to disk, then |:Quack| behaves exactly like |:Ack| and will search all
files in the current directory.

@command :Quack! {pattern} {options}

Like |:Quack|, but returns all results irrespective of the value of
|g:FerretMaxResults|.

@command :Acks /{pattern}/{replacement}/

Takes all of the files currently in the |quickfix| listing and performs a
substitution of all instances of {pattern} (a standard Vim search |pattern|)
by {replacement}.

A typical sequence consists of an |:Ack| invocation to populate the |quickfix|
listing and then |:Acks| (mnemonic: "Ack substitute") to perform replacements.
For example, to replace "foo" with "bar" across all files in the current
directory:

```
:Ack foo
:Acks /foo/bar/
```

The pattern and replacement are passed through literally to Vim's
|:substitute| command, preserving all characters and escapes,
including references to matches in the pattern. For example, the
following could be used to swap the order of "foo123" and "bar":

```
:Acks /\v(foo\d+)(bar)/\2\1/
```

@command :Lacks /{pattern}/{replacement}/

Takes all of the files in the current |location-list| and performs a
substitution of all instances of {pattern} by {replacement}. This is an analog
of the |:Acks| command, but operates on the |location-list| instead of the
|quickfix| listing.

@command :FerretCancelAsync

Cancels any asynchronous search that may be in progress in the background.

@command :FerretPullAsync

Eagerly populates the |quickfix| (or |location-list|) window with any results
that may have been produced by a long-running asynchronous search in progress
in the background.

@mapping <Plug>(FerretBack)

Ferret provides |<Plug>(FerretBack)| which can be used to trigger the |:Back|
command. To configure a mapping for it, use |:nmap|:

```
nmap <Leader>fb <Plug>(FerretBack)
```

@mapping <Plug>(FerretBlack)

Ferret provides |<Plug>(FerretBlack)| which can be used to trigger the |:Black|
command. To configure a mapping for it, use |:nmap|:

```
nmap <Leader>fl <Plug>(FerretBlack)
```

@mapping <Plug>(FerretQuack)

Ferret provides |<Plug>(FerretBack)| which can be used to trigger the |:Quack|
command. To configure a mapping for it, use |:nmap|:

```
nmap <Leader>fq <Plug>(FerretQuack)
```

@option g:FerretAckWordWord boolean 0

When set to 1, passes the `-w` option to the underlying search tool whenever
|<Plug>(FerretAckWord)| is pressed. This forces the tool to match only on word
boundaries (ie. analagous to Vim's |star| mapping).

The default is 0, which means the `-w` option is not passed and matches need
not occur on word boundaries (ie. analagous to Vim's |gstar| mapping).

To override the default:

```
let g:FerretAckWordWord=1
```

@option g:FerretMap boolean 1

Controls whether to set up the Ferret mappings, such as |<Plug>(FerretAck)|
(see |ferret-mappings| for a full list). To prevent any mapping from being
configured, set to 0:

```
let g:FerretMap=0
```

@mapping <Plug>(FerretAck)

Ferret maps `<Leader>a` to |<Plug>(FerretAck)|, which triggers the |:Ack|
command. To use an alternative mapping instead, create a different one in
your |.vimrc| instead using |:nmap|:

```
" Instead of <Leader>a, use <Leader>x.
nmap <Leader>x <Plug>(FerretAck)
```

@mapping <Plug>(FerretLack)

Ferret maps `<Leader>l` to |<Plug>(FerretLack)|, which triggers the |:Lack|
command. To use an alternative mapping instead, create a different one in
your |.vimrc| instead using |:nmap|:

```
" Instead of <Leader>l, use <Leader>y.
nmap <Leader>y <Plug>(FerretLack)
```

@mapping <Plug>(FerretAckWord)

Ferret maps `<Leader>s` (mnemonic: "selection) to |<Plug>(FerretAckWord)|,
which uses |:Ack| to search for the word currently under the cursor. To
use an alternative mapping instead, create a different one in your
|.vimrc| instead using |:nmap|:

```
" Instead of <Leader>s, use <Leader>z.
nmap <Leader>z <Plug>(FerretAckWord)
```

@mapping <Plug>(FerretAcks)

Ferret maps `<Leader>r` (mnemonic: "replace") to |<Plug>(FerretAcks)|, which
triggers the |:Acks| command and fills the prompt with the last search
term from Ferret. to use an alternative mapping instead, create a
different one in your |.vimrc| instead using |:nmap|:

```
" Instead of <Leader>r, use <Leader>u.
nmap <Leader>u <Plug>(FerretAcks)
```

@command :Qargs

This is a utility function that is used internally when running on older
versions of Vim (prior to version 8) but is also generally useful enough to
warrant being exposed publicly.

It takes the files currently in the |quickfix| listing and sets them as
|:args| so that they can be operated on en masse via the |:argdo| command.

@command :Largs

Just like |:Qargs|, but applies to the current |location-list|.

It takes the files in the current |location-list| and sets them as
|:args| so that they can be operated on en masse via the |:argdo| command.

@option g:FerretQFCommands boolean 1

Controls whether to set up custom versions of the |quickfix| commands, |:cn|,
|:cnf|, |:cp| an |:cpf|. These overrides vertically center the match within
the viewport on each jump. To prevent the custom versions from being
configured, set to 0:

```
let g:FerretQFCommands=0
```

@option g:FerretFormat string "%f:%l:%c:%m"

Sets the '|grepformat|' used by Ferret.

@option g:FerretQFOptions boolean 1

Controls whether to set up setting overrides for |quickfix| windows. These are
various settings, such as |norelativenumber|, |nolist| and |nowrap|, that are
intended to make the |quickfix| window, which is typically very small relative
to other windows, more usable.

A full list of overridden settings can be found in |ferret-overrides|.

To prevent the custom settings from being applied, set |g:FerretQFOptions|
to 0:

```
let g:FerretQFOptions=0
```

@option g:FerretQFMap boolean 1

Controls whether to set up mappings in the |quickfix| results window and
|location-list| for deleting results. The mappings include:

- `d` (|visual-mode|): delete visual selection
- `dd` (|Normal-mode|): delete current line
- `d`{motion} (|Normal-mode|): delete range indicated by {motion}

To prevent these mappings from being set up, set to 0:

```
let g:FerretQFMap=0
```

@function ferret#get_default_arguments

Call this with an executable name to find out the default arguments that will
be passed when invoking that executable. For example:

```
echo ferret#get_default_arguments('rg')
```

This may be useful if you wish to extend or otherwise modify the arguments
by setting |g:FerretExecutableArguments|.

@option g:FerretNvim boolean 1

Controls whether to use Neovim's |job-control| features, when
available, to run searches asynchronously. To prevent this from
being used, set to 0, in which case Ferret will fall back to the next
method in the list (Vim's built-in async primitives -- see
|g:FerretJob| -- which are typically not available in Neovim, so
will then fall back to the next available method).

```
let g:FerretNvim=0
```

@option g:FerretJob boolean 1

Controls whether to use Vim's |+job| feature, when available, to run
searches asynchronously. To prevent |+job| from being used, set to 0, in
which case Ferret will fall back to the next available method.

```
let g:FerretJob=0
```

@option g:FerretHlsearch boolean

Controls whether Ferret should attempt to highlight the search pattern
when running |:Ack| or |:Lack|. If left unset, Ferret will respect the
current 'hlsearch' setting. To force highlighting on or off irrespective
of 'hlsearch', set |g:FerretHlsearch| to 1 (on) or 0 (off):

```
let g:FerretHlsearch=0
```

@option g:FerretAcksCommand string "cdo"

Controls the underlying Vim command that |:Acks| uses to peform
substitutions. On versions of Vim that have it, defaults to |:cdo|, which
means that substitutions will apply to the specific lines currently in the
|quickfix| listing. Can be set to "cfdo" to instead use |:cfdo| (if
available), which means that the substitutions will be applied on a
per-file basis to all the files in the |quickfix| listing. This
distinction is important if you have used Ferret's bindings to delete
entries from the listing.

```
let g:FerretAcksCommand='cfdo'
```

@option g:FerretLacksCommand string "ldo"

Controls the underlying Vim command that |:Lacks| uses to peform
substitutions. On versions of Vim that have it, defaults to |:ldo|, which
means that substitutions will apply to the specific lines currently in the
|location-list|. Can be set to "lfdo" to instead use |:lfdo| (if
available), which means that the substitutions will be applied on a
per-file basis to all the files in the |location-list|. This
distinction is important if you have used Ferret's bindings to delete
entries from the listing.

```
let g:FerretLacksCommand='lfdo'
```

@option g:FerretVeryMagic boolean 1

Controls whether the |<Plug>(FerretAcks)| mapping should populate the command
line with the |/\v| "very magic" marker. Given that the argument passed to
|:Acks| is handed straight to Vim, using "very magic" makes it more likely
that the (probably Perl-compatible) regular expression used in the initial
search can be used directly with Vim's (famously not-Perl-compatible) regular
expression engine.

To prevent the automatic use of |/\v|, set this option to 0:

```
let g:FerretVeryMagic=0
```

@option g:FerretExecutable string "rg,ag,ack,ack-grep"

Ferret will preferentially use `rg`, `ag` and finally `ack`/`ack-grep` (in
that order, using the first found executable), however you can force your
preference for a specific tool to be used by setting an override in your
|.vimrc|. Valid values are a comma-separated list of "rg", "ag", "ack" or
"ack-grep". If no requested executable exists, Ferret will fall-back to the
next in the default list.

Example:

```
" Prefer `ag` over `rg`.
let g:FerretExecutable='ag,rg'
```

@option g:FerretExecutableArguments dict {}

Allows you to override the default arguments that get passed to the
underlying search executables. For example, to add `-s` to the default
arguments passed to `ack` (`--column --with-filename`):

```
let g:FerretExecutableArguments = {
  \   'ack': '--column --with-filename -s'
  \ }
```

To find out the default arguments for a given executable, see
|ferret#get_default_arguments()|.

@option g:FerretMaxResults number 100000

Controls the maximum number of results Ferret will attempt to gather before
displaying the results. Note that this only applies when searching
asynchronously; that is, on recent versions of Vim with |+job| support and
when |g:FerretJob| is not set to 0.

The intent of this option is to prevent runaway search processes that produce
huge volumes of output (for example, searching for a common string like "test"
inside a |$HOME| directory containing millions of files) from locking up Vim.

In the event that Ferret aborts a search that has hit the |g:FerretMaxResults|
limit, a message will be printed prompting users to run the search again
with |:Ack!| or |:Lack!| if they want to bypass the limit.

@option g:FerretAutojump number 1

Controls whether Ferret will automatically jump to the first found match.

- Set to 0, Ferret will show the search results but perform no jump.
- Set to 1 (the default), Ferret will show the search results and
  focus the result listing.
- Set to 2, Ferret will show the search results and jump to the first found
  match.

Example override:

```
let g:FerretAutojump=2
```

@option g:FerretQFHandler string "botright copen"

Allows you to override the mechanism that opens the |quickfix| window to
display search results.

@option g:FerretLLHandler string "lopen"

Allows you to override the mechanism that opens the |location-list|
window to display search results.

↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ OUTPUT ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

Token { kind: Text, char_start: 0, char_end: 3, byte_start: 0, byte_end: 3, column_start: 1, column_end: 4, line_start: 1, line_end: 1 }: The
Token { kind: Space, char_start: 3, char_end: 4, byte_start: 3, byte_end: 4, column_start: 4, column_end: 5, line_start: 1, line_end: 1 }: " "
Token { kind: Text, char_start: 4, char_end: 13, byte_start: 4, byte_end: 13, column_start: 5, column_end: 14, line_start: 1, line_end: 1 }: following
Token { kind: Space, char_start: 13, char_end: 14, byte_start: 13, byte_end: 14, column_start: 14, column_end: 15, line_start: 1, line_end: 1 }: " "
Token { kind: Text, char_start: 14, char_end: 20, byte_start: 14, byte_end: 20, column_start: 15, column_end: 21, line_start: 1, line_end: 1 }: sample
Token { kind: Space, char_start: 20, char_end: 21, byte_start: 20, byte_end: 21, column_start: 21, column_end: 22, line_start: 1, line_end: 1 }: " "
Token { kind: Text, char_start: 21, char_end: 25, byte_start: 21, byte_end: 25, column_start: 22, column_end: 26, line_start: 1, line_end: 1 }: text
Token { kind: Space, char_start: 25, char_end: 26, byte_start: 25, byte_end: 26, column_start: 26, column_end: 27, line_start: 1, line_end: 1 }: " "
Token { kind: Text, char_start: 26, char_end: 29, byte_start: 26, byte_end: 29, column_start: 27, column_end: 30, line_start: 1, line_end: 1 }: was
Token { kind: Space, char_start: 29, char_end: 30, byte_start: 29, byte_end: 30, column_start: 30, column_end: 31, line_start: 1, line_end: 1 }: " "
Token { kind: Text, char_start: 30, char_end: 39, byte_start: 30, byte_end: 39, column_start: 31, column_end: 40, line_start: 1, line_end: 1 }: extracted
Token { kind: Space, char_start: 39, char_end: 40, byte_start: 39, byte_end: 40, column_start: 40, column_end: 41, line_start: 1, line_end: 1 }: " "
Token { kind: Text, char_start: 40, char_end: 45, byte_start: 40, byte_end: 45, column_start: 41, column_end: 46, line_start: 1, line_end: 1 }: from:
Token { kind: Newline, char_start: 45, char_end: 46, byte_start: 45, byte_end: 46, column_start: 46, column_end: 1, line_start: 1, line_end: 2 }: "\n"
Token { kind: Newline, char_start: 46, char_end: 47, byte_start: 46, byte_end: 47, column_start: 1, column_end: 1, line_start: 2, line_end: 3 }: "\n"
Token { kind: Hyphen, char_start: 47, char_end: 48, byte_start: 47, byte_end: 48, column_start: 1, column_end: 2, line_start: 3, line_end: 3 }: -
Token { kind: Space, char_start: 48, char_end: 49, byte_start: 48, byte_end: 49, column_start: 2, column_end: 3, line_start: 3, line_end: 3 }: " "
Token { kind: Text, char_start: 49, char_end: 128, byte_start: 49, byte_end: 128, column_start: 3, column_end: 82, line_start: 3, line_end: 3 }: https://github.com/wincent/ferret/tree/80a1c6f2f6e18952fa6eb85000446650216987fd
Token { kind: Newline, char_start: 128, char_end: 129, byte_start: 128, byte_end: 129, column_start: 82, column_end: 1, line_start: 3, line_end: 4 }: "\n"
Token { kind: Newline, char_start: 129, char_end: 130, byte_start: 129, byte_end: 130, column_start: 1, column_end: 1, line_start: 4, line_end: 5 }: "\n"
Token { kind: Lparen, char_start: 130, char_end: 131, byte_start: 130, byte_end: 131, column_start: 1, column_end: 2, line_start: 5, line_end: 5 }: (
Token { kind: Text, char_start: 131, char_end: 140, byte_start: 131, byte_end: 140, column_start: 2, column_end: 11, line_start: 5, line_end: 5 }: manually,
Token { kind: Space, char_start: 140, char_end: 141, byte_start: 140, byte_end: 141, column_start: 11, column_end: 12, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 141, char_end: 144, byte_start: 141, byte_end: 144, column_start: 12, column_end: 15, line_start: 5, line_end: 5 }: via
Token { kind: Space, char_start: 144, char_end: 145, byte_start: 144, byte_end: 145, column_start: 15, column_end: 16, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 145, char_end: 149, byte_start: 145, byte_end: 149, column_start: 16, column_end: 20, line_start: 5, line_end: 5 }: copy
Token { kind: Hyphen, char_start: 149, char_end: 150, byte_start: 149, byte_end: 150, column_start: 20, column_end: 21, line_start: 5, line_end: 5 }: -
Token { kind: Text, char_start: 150, char_end: 155, byte_start: 150, byte_end: 155, column_start: 21, column_end: 26, line_start: 5, line_end: 5 }: paste
Token { kind: Space, char_start: 155, char_end: 156, byte_start: 155, byte_end: 156, column_start: 26, column_end: 27, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 156, char_end: 159, byte_start: 156, byte_end: 159, column_start: 27, column_end: 30, line_start: 5, line_end: 5 }: and
Token { kind: Space, char_start: 159, char_end: 160, byte_start: 159, byte_end: 160, column_start: 30, column_end: 31, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 160, char_end: 164, byte_start: 160, byte_end: 164, column_start: 31, column_end: 35, line_start: 5, line_end: 5 }: then
Token { kind: Space, char_start: 164, char_end: 165, byte_start: 164, byte_end: 165, column_start: 35, column_end: 36, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 165, char_end: 174, byte_start: 165, byte_end: 174, column_start: 36, column_end: 45, line_start: 5, line_end: 5 }: stripping
Token { kind: Space, char_start: 174, char_end: 175, byte_start: 174, byte_end: 175, column_start: 45, column_end: 46, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 175, char_end: 178, byte_start: 175, byte_end: 178, column_start: 46, column_end: 49, line_start: 5, line_end: 5 }: off
Token { kind: Space, char_start: 178, char_end: 179, byte_start: 178, byte_end: 179, column_start: 49, column_end: 50, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 179, char_end: 182, byte_start: 179, byte_end: 182, column_start: 50, column_end: 53, line_start: 5, line_end: 5 }: the
Token { kind: Space, char_start: 182, char_end: 183, byte_start: 182, byte_end: 183, column_start: 53, column_end: 54, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 183, char_end: 192, byte_start: 183, byte_end: 192, column_start: 54, column_end: 63, line_start: 5, line_end: 5 }: Vimscript
Token { kind: Space, char_start: 192, char_end: 193, byte_start: 192, byte_end: 193, column_start: 63, column_end: 64, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 193, char_end: 200, byte_start: 193, byte_end: 200, column_start: 64, column_end: 71, line_start: 5, line_end: 5 }: comment
Token { kind: Space, char_start: 200, char_end: 201, byte_start: 200, byte_end: 201, column_start: 71, column_end: 72, line_start: 5, line_end: 5 }: " "
Token { kind: Text, char_start: 201, char_end: 208, byte_start: 201, byte_end: 208, column_start: 72, column_end: 79, line_start: 5, line_end: 5 }: syntax;
Token { kind: Newline, char_start: 208, char_end: 209, byte_start: 208, byte_end: 209, column_start: 79, column_end: 1, line_start: 5, line_end: 6 }: "\n"
Token { kind: Text, char_start: 209, char_end: 213, byte_start: 209, byte_end: 213, column_start: 1, column_end: 5, line_start: 6, line_end: 6 }: note
Token { kind: Space, char_start: 213, char_end: 214, byte_start: 213, byte_end: 214, column_start: 5, column_end: 6, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 214, char_end: 218, byte_start: 214, byte_end: 218, column_start: 6, column_end: 10, line_start: 6, line_end: 6 }: that
Token { kind: Space, char_start: 218, char_end: 219, byte_start: 218, byte_end: 219, column_start: 10, column_end: 11, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 219, char_end: 222, byte_start: 219, byte_end: 222, column_start: 11, column_end: 14, line_start: 6, line_end: 6 }: the
Token { kind: Space, char_start: 222, char_end: 223, byte_start: 222, byte_end: 223, column_start: 14, column_end: 15, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 223, char_end: 229, byte_start: 223, byte_end: 229, column_start: 15, column_end: 21, line_start: 6, line_end: 6 }: source
Token { kind: Space, char_start: 229, char_end: 230, byte_start: 229, byte_end: 230, column_start: 21, column_end: 22, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 230, char_end: 235, byte_start: 230, byte_end: 235, column_start: 22, column_end: 27, line_start: 6, line_end: 6 }: order
Token { kind: Space, char_start: 235, char_end: 236, byte_start: 235, byte_end: 236, column_start: 27, column_end: 28, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 236, char_end: 240, byte_start: 236, byte_end: 240, column_start: 28, column_end: 32, line_start: 6, line_end: 6 }: here
Token { kind: Space, char_start: 240, char_end: 241, byte_start: 240, byte_end: 241, column_start: 32, column_end: 33, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 241, char_end: 244, byte_start: 241, byte_end: 244, column_start: 33, column_end: 36, line_start: 6, line_end: 6 }: may
Token { kind: Space, char_start: 244, char_end: 245, byte_start: 244, byte_end: 245, column_start: 36, column_end: 37, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 245, char_end: 248, byte_start: 245, byte_end: 248, column_start: 37, column_end: 40, line_start: 6, line_end: 6 }: not
Token { kind: Space, char_start: 248, char_end: 249, byte_start: 248, byte_end: 249, column_start: 40, column_end: 41, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 249, char_end: 259, byte_start: 249, byte_end: 259, column_start: 41, column_end: 51, line_start: 6, line_end: 6 }: correspond
Token { kind: Space, char_start: 259, char_end: 260, byte_start: 259, byte_end: 260, column_start: 51, column_end: 52, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 260, char_end: 262, byte_start: 260, byte_end: 262, column_start: 52, column_end: 54, line_start: 6, line_end: 6 }: to
Token { kind: Space, char_start: 262, char_end: 263, byte_start: 262, byte_end: 263, column_start: 54, column_end: 55, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 263, char_end: 266, byte_start: 263, byte_end: 266, column_start: 55, column_end: 58, line_start: 6, line_end: 6 }: the
Token { kind: Space, char_start: 266, char_end: 267, byte_start: 266, byte_end: 267, column_start: 58, column_end: 59, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 267, char_end: 272, byte_start: 267, byte_end: 272, column_start: 59, column_end: 64, line_start: 6, line_end: 6 }: order
Token { kind: Space, char_start: 272, char_end: 273, byte_start: 272, byte_end: 273, column_start: 64, column_end: 65, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 273, char_end: 275, byte_start: 273, byte_end: 275, column_start: 65, column_end: 67, line_start: 6, line_end: 6 }: as
Token { kind: Space, char_start: 275, char_end: 276, byte_start: 275, byte_end: 276, column_start: 67, column_end: 68, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 276, char_end: 278, byte_start: 276, byte_end: 278, column_start: 68, column_end: 70, line_start: 6, line_end: 6 }: it
Token { kind: Space, char_start: 278, char_end: 279, byte_start: 278, byte_end: 279, column_start: 70, column_end: 71, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 279, char_end: 286, byte_start: 279, byte_end: 286, column_start: 71, column_end: 78, line_start: 6, line_end: 6 }: appears
Token { kind: Space, char_start: 286, char_end: 287, byte_start: 286, byte_end: 287, column_start: 78, column_end: 79, line_start: 6, line_end: 6 }: " "
Token { kind: Text, char_start: 287, char_end: 289, byte_start: 287, byte_end: 289, column_start: 79, column_end: 81, line_start: 6, line_end: 6 }: in
Token { kind: Newline, char_start: 289, char_end: 290, byte_start: 289, byte_end: 290, column_start: 81, column_end: 1, line_start: 6, line_end: 7 }: "\n"
Token { kind: Text, char_start: 290, char_end: 293, byte_start: 290, byte_end: 293, column_start: 1, column_end: 4, line_start: 7, line_end: 7 }: the
Token { kind: Space, char_start: 293, char_end: 294, byte_start: 293, byte_end: 294, column_start: 4, column_end: 5, line_start: 7, line_end: 7 }: " "
Token { kind: Text, char_start: 294, char_end: 302, byte_start: 294, byte_end: 302, column_start: 5, column_end: 13, line_start: 7, line_end: 7 }: rendered
Token { kind: Space, char_start: 302, char_end: 303, byte_start: 302, byte_end: 303, column_start: 13, column_end: 14, line_start: 7, line_end: 7 }: " "
Token { kind: Text, char_start: 303, char_end: 317, byte_start: 303, byte_end: 317, column_start: 14, column_end: 28, line_start: 7, line_end: 7 }: documentation.
Token { kind: Rparen, char_start: 317, char_end: 318, byte_start: 317, byte_end: 318, column_start: 28, column_end: 29, line_start: 7, line_end: 7 }: )
Token { kind: Newline, char_start: 318, char_end: 319, byte_start: 318, byte_end: 319, column_start: 29, column_end: 1, line_start: 7, line_end: 8 }: "\n"
Token { kind: Newline, char_start: 319, char_end: 320, byte_start: 319, byte_end: 320, column_start: 1, column_end: 1, line_start: 8, line_end: 9 }: "\n"
Token { kind: Text, char_start: 320, char_end: 323, byte_start: 320, byte_end: 323, column_start: 1, column_end: 4, line_start: 9, line_end: 9 }: The
Token { kind: Space, char_start: 323, char_end: 324, byte_start: 323, byte_end: 324, column_start: 4, column_end: 5, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 324, char_end: 328, byte_start: 324, byte_end: 328, column_start: 5, column_end: 9, line_start: 9, line_end: 9 }: only
Token { kind: Space, char_start: 328, char_end: 329, byte_start: 328, byte_end: 329, column_start: 9, column_end: 10, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 329, char_end: 334, byte_start: 329, byte_end: 334, column_start: 10, column_end: 15, line_start: 9, line_end: 9 }: other
Token { kind: Space, char_start: 334, char_end: 335, byte_start: 334, byte_end: 335, column_start: 15, column_end: 16, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 335, char_end: 341, byte_start: 335, byte_end: 341, column_start: 16, column_end: 22, line_start: 9, line_end: 9 }: change
Token { kind: Space, char_start: 341, char_end: 342, byte_start: 341, byte_end: 342, column_start: 22, column_end: 23, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 342, char_end: 346, byte_start: 342, byte_end: 346, column_start: 23, column_end: 27, line_start: 9, line_end: 9 }: made
Token { kind: Space, char_start: 346, char_end: 347, byte_start: 346, byte_end: 347, column_start: 27, column_end: 28, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 347, char_end: 350, byte_start: 347, byte_end: 350, column_start: 28, column_end: 31, line_start: 9, line_end: 9 }: was
Token { kind: Space, char_start: 350, char_end: 351, byte_start: 350, byte_end: 351, column_start: 31, column_end: 32, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 351, char_end: 358, byte_start: 351, byte_end: 358, column_start: 32, column_end: 39, line_start: 9, line_end: 9 }: removal
Token { kind: Space, char_start: 358, char_end: 359, byte_start: 358, byte_end: 359, column_start: 39, column_end: 40, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 359, char_end: 361, byte_start: 359, byte_end: 361, column_start: 40, column_end: 42, line_start: 9, line_end: 9 }: of
Token { kind: Space, char_start: 361, char_end: 362, byte_start: 361, byte_end: 362, column_start: 42, column_end: 43, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 362, char_end: 365, byte_start: 362, byte_end: 365, column_start: 43, column_end: 46, line_start: 9, line_end: 9 }: the
Token { kind: Space, char_start: 365, char_end: 366, byte_start: 365, byte_end: 366, column_start: 46, column_end: 47, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 366, char_end: 373, byte_start: 366, byte_end: 373, column_start: 47, column_end: 54, line_start: 9, line_end: 9 }: leading
Token { kind: Space, char_start: 373, char_end: 374, byte_start: 373, byte_end: 374, column_start: 54, column_end: 55, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 374, char_end: 380, byte_start: 374, byte_end: 380, column_start: 55, column_end: 61, line_start: 9, line_end: 9 }: indent
Token { kind: Space, char_start: 380, char_end: 381, byte_start: 380, byte_end: 381, column_start: 61, column_end: 62, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 381, char_end: 383, byte_start: 381, byte_end: 383, column_start: 62, column_end: 64, line_start: 9, line_end: 9 }: in
Token { kind: Space, char_start: 383, char_end: 384, byte_start: 383, byte_end: 384, column_start: 64, column_end: 65, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 384, char_end: 387, byte_start: 384, byte_end: 387, column_start: 65, column_end: 68, line_start: 9, line_end: 9 }: the
Token { kind: Space, char_start: 387, char_end: 388, byte_start: 387, byte_end: 388, column_start: 68, column_end: 69, line_start: 9, line_end: 9 }: " "
Token { kind: Text, char_start: 388, char_end: 395, byte_start: 388, byte_end: 395, column_start: 69, column_end: 76, line_start: 9, line_end: 9 }: section
Token { kind: Newline, char_start: 395, char_end: 396, byte_start: 395, byte_end: 396, column_start: 76, column_end: 1, line_start: 9, line_end: 10 }: "\n"
Token { kind: Text, char_start: 396, char_end: 402, byte_start: 396, byte_end: 402, column_start: 1, column_end: 7, line_start: 10, line_end: 10 }: marked
Token { kind: Space, char_start: 402, char_end: 403, byte_start: 402, byte_end: 403, column_start: 7, column_end: 8, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 403, char_end: 407, byte_start: 403, byte_end: 407, column_start: 8, column_end: 12, line_start: 10, line_end: 10 }: with
Token { kind: Space, char_start: 407, char_end: 408, byte_start: 407, byte_end: 408, column_start: 12, column_end: 13, line_start: 10, line_end: 10 }: " "
Token { kind: Backtick, char_start: 408, char_end: 409, byte_start: 408, byte_end: 409, column_start: 13, column_end: 14, line_start: 10, line_end: 10 }: `
Token { kind: At, char_start: 409, char_end: 410, byte_start: 409, byte_end: 410, column_start: 14, column_end: 15, line_start: 10, line_end: 10 }: @
Token { kind: Text, char_start: 410, char_end: 416, byte_start: 410, byte_end: 416, column_start: 15, column_end: 21, line_start: 10, line_end: 10 }: indent
Token { kind: Backtick, char_start: 416, char_end: 417, byte_start: 416, byte_end: 417, column_start: 21, column_end: 22, line_start: 10, line_end: 10 }: `
Token { kind: Space, char_start: 417, char_end: 418, byte_start: 417, byte_end: 418, column_start: 22, column_end: 23, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 418, char_end: 421, byte_start: 418, byte_end: 421, column_start: 23, column_end: 26, line_start: 10, line_end: 10 }: and
Token { kind: Space, char_start: 421, char_end: 422, byte_start: 421, byte_end: 422, column_start: 26, column_end: 27, line_start: 10, line_end: 10 }: " "
Token { kind: Backtick, char_start: 422, char_end: 423, byte_start: 422, byte_end: 423, column_start: 27, column_end: 28, line_start: 10, line_end: 10 }: `
Token { kind: At, char_start: 423, char_end: 424, byte_start: 423, byte_end: 424, column_start: 28, column_end: 29, line_start: 10, line_end: 10 }: @
Token { kind: Text, char_start: 424, char_end: 430, byte_start: 424, byte_end: 430, column_start: 29, column_end: 35, line_start: 10, line_end: 10 }: dedent
Token { kind: Backtick, char_start: 430, char_end: 431, byte_start: 430, byte_end: 431, column_start: 35, column_end: 36, line_start: 10, line_end: 10 }: `
Token { kind: Space, char_start: 431, char_end: 432, byte_start: 431, byte_end: 432, column_start: 36, column_end: 37, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 432, char_end: 444, byte_start: 432, byte_end: 444, column_start: 37, column_end: 49, line_start: 10, line_end: 10 }: annotations,
Token { kind: Space, char_start: 444, char_end: 445, byte_start: 444, byte_end: 445, column_start: 49, column_end: 50, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 445, char_end: 450, byte_start: 445, byte_end: 450, column_start: 50, column_end: 55, line_start: 10, line_end: 10 }: which
Token { kind: Space, char_start: 450, char_end: 451, byte_start: 450, byte_end: 451, column_start: 55, column_end: 56, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 451, char_end: 452, byte_start: 451, byte_end: 452, column_start: 56, column_end: 57, line_start: 10, line_end: 10 }: I
Token { kind: Space, char_start: 452, char_end: 453, byte_start: 452, byte_end: 453, column_start: 57, column_end: 58, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 453, char_end: 455, byte_start: 453, byte_end: 455, column_start: 58, column_end: 60, line_start: 10, line_end: 10 }: am
Token { kind: Space, char_start: 455, char_end: 456, byte_start: 455, byte_end: 456, column_start: 60, column_end: 61, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 456, char_end: 459, byte_start: 456, byte_end: 459, column_start: 61, column_end: 64, line_start: 10, line_end: 10 }: not
Token { kind: Space, char_start: 459, char_end: 460, byte_start: 459, byte_end: 460, column_start: 64, column_end: 65, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 460, char_end: 468, byte_start: 460, byte_end: 468, column_start: 65, column_end: 73, line_start: 10, line_end: 10 }: planning
Token { kind: Space, char_start: 468, char_end: 469, byte_start: 468, byte_end: 469, column_start: 73, column_end: 74, line_start: 10, line_end: 10 }: " "
Token { kind: Text, char_start: 469, char_end: 471, byte_start: 469, byte_end: 471, column_start: 74, column_end: 76, line_start: 10, line_end: 10 }: on
Token { kind: Newline, char_start: 471, char_end: 472, byte_start: 471, byte_end: 472, column_start: 76, column_end: 1, line_start: 10, line_end: 11 }: "\n"
Token { kind: Text, char_start: 472, char_end: 482, byte_start: 472, byte_end: 482, column_start: 1, column_end: 11, line_start: 11, line_end: 11 }: supporting
Token { kind: Space, char_start: 482, char_end: 483, byte_start: 482, byte_end: 483, column_start: 11, column_end: 12, line_start: 11, line_end: 11 }: " "
Token { kind: Text, char_start: 483, char_end: 485, byte_start: 483, byte_end: 485, column_start: 12, column_end: 14, line_start: 11, line_end: 11 }: in
Token { kind: Space, char_start: 485, char_end: 486, byte_start: 485, byte_end: 486, column_start: 14, column_end: 15, line_start: 11, line_end: 11 }: " "
Token { kind: Text, char_start: 486, char_end: 489, byte_start: 486, byte_end: 489, column_start: 15, column_end: 18, line_start: 11, line_end: 11 }: the
Token { kind: Space, char_start: 489, char_end: 490, byte_start: 489, byte_end: 490, column_start: 18, column_end: 19, line_start: 11, line_end: 11 }: " "
Token { kind: Text, char_start: 490, char_end: 494, byte_start: 490, byte_end: 494, column_start: 19, column_end: 23, line_start: 11, line_end: 11 }: Rust
Token { kind: Space, char_start: 494, char_end: 495, byte_start: 494, byte_end: 495, column_start: 23, column_end: 24, line_start: 11, line_end: 11 }: " "
Token { kind: Text, char_start: 495, char_end: 502, byte_start: 495, byte_end: 502, column_start: 24, column_end: 31, line_start: 11, line_end: 11 }: version
Token { kind: Space, char_start: 502, char_end: 503, byte_start: 502, byte_end: 503, column_start: 31, column_end: 32, line_start: 11, line_end: 11 }: " "
Token { kind: Text, char_start: 503, char_end: 505, byte_start: 503, byte_end: 505, column_start: 32, column_end: 34, line_start: 11, line_end: 11 }: of
Token { kind: Space, char_start: 505, char_end: 506, byte_start: 505, byte_end: 506, column_start: 34, column_end: 35, line_start: 11, line_end: 11 }: " "
Token { kind: Text, char_start: 506, char_end: 513, byte_start: 506, byte_end: 513, column_start: 35, column_end: 42, line_start: 11, line_end: 11 }: docvim.
Token { kind: Newline, char_start: 513, char_end: 514, byte_start: 513, byte_end: 514, column_start: 42, column_end: 1, line_start: 11, line_end: 12 }: "\n"
Token { kind: Newline, char_start: 514, char_end: 515, byte_start: 514, byte_end: 515, column_start: 1, column_end: 1, line_start: 12, line_end: 13 }: "\n"
Token { kind: HorizontalRule, char_start: 515, char_end: 518, byte_start: 515, byte_end: 518, column_start: 1, column_end: 4, line_start: 13, line_end: 13 }: ---
Token { kind: Newline, char_start: 518, char_end: 519, byte_start: 518, byte_end: 519, column_start: 4, column_end: 1, line_start: 13, line_end: 14 }: "\n"
Token { kind: Newline, char_start: 519, char_end: 520, byte_start: 519, byte_end: 520, column_start: 1, column_end: 1, line_start: 14, line_end: 15 }: "\n"
Token { kind: At, char_start: 520, char_end: 521, byte_start: 520, byte_end: 521, column_start: 1, column_end: 2, line_start: 15, line_end: 15 }: @
Token { kind: Text, char_start: 521, char_end: 527, byte_start: 521, byte_end: 527, column_start: 2, column_end: 8, line_start: 15, line_end: 15 }: header
Token { kind: Newline, char_start: 527, char_end: 528, byte_start: 527, byte_end: 528, column_start: 8, column_end: 1, line_start: 15, line_end: 16 }: "\n"
Token { kind: Newline, char_start: 528, char_end: 529, byte_start: 528, byte_end: 529, column_start: 1, column_end: 1, line_start: 16, line_end: 17 }: "\n"
Token { kind: At, char_start: 529, char_end: 530, byte_start: 529, byte_end: 530, column_start: 1, column_end: 2, line_start: 17, line_end: 17 }: @
Token { kind: Text, char_start: 530, char_end: 535, byte_start: 530, byte_end: 535, column_start: 2, column_end: 7, line_start: 17, line_end: 17 }: image
Token { kind: Space, char_start: 535, char_end: 536, byte_start: 535, byte_end: 536, column_start: 7, column_end: 8, line_start: 17, line_end: 17 }: " "
Token { kind: Text, char_start: 536, char_end: 601, byte_start: 536, byte_end: 601, column_start: 8, column_end: 73, line_start: 17, line_end: 17 }: https://raw.githubusercontent.com/wincent/ferret/media/ferret.jpg
Token { kind: Space, char_start: 601, char_end: 602, byte_start: 601, byte_end: 602, column_start: 73, column_end: 74, line_start: 17, line_end: 17 }: " "
Token { kind: Text, char_start: 602, char_end: 608, byte_start: 602, byte_end: 608, column_start: 74, column_end: 80, line_start: 17, line_end: 17 }: center
Token { kind: Newline, char_start: 608, char_end: 609, byte_start: 608, byte_end: 609, column_start: 80, column_end: 1, line_start: 17, line_end: 18 }: "\n"
Token { kind: At, char_start: 609, char_end: 610, byte_start: 609, byte_end: 610, column_start: 1, column_end: 2, line_start: 18, line_end: 18 }: @
Token { kind: Text, char_start: 610, char_end: 615, byte_start: 610, byte_end: 615, column_start: 2, column_end: 7, line_start: 18, line_end: 18 }: image
Token { kind: Space, char_start: 615, char_end: 616, byte_start: 615, byte_end: 616, column_start: 7, column_end: 8, line_start: 18, line_end: 18 }: " "
Token { kind: Text, char_start: 616, char_end: 681, byte_start: 616, byte_end: 681, column_start: 8, column_end: 73, line_start: 18, line_end: 18 }: https://raw.githubusercontent.com/wincent/ferret/media/ferret.gif
Token { kind: Space, char_start: 681, char_end: 682, byte_start: 681, byte_end: 682, column_start: 73, column_end: 74, line_start: 18, line_end: 18 }: " "
Token { kind: Text, char_start: 682, char_end: 688, byte_start: 682, byte_end: 688, column_start: 74, column_end: 80, line_start: 18, line_end: 18 }: center
Token { kind: Newline, char_start: 688, char_end: 689, byte_start: 688, byte_end: 689, column_start: 80, column_end: 1, line_start: 18, line_end: 19 }: "\n"
Token { kind: Newline, char_start: 689, char_end: 690, byte_start: 689, byte_end: 690, column_start: 1, column_end: 1, line_start: 19, line_end: 20 }: "\n"
Token { kind: Newline, char_start: 690, char_end: 691, byte_start: 690, byte_end: 691, column_start: 1, column_end: 1, line_start: 20, line_end: 21 }: "\n"
Token { kind: At, char_start: 691, char_end: 692, byte_start: 691, byte_end: 692, column_start: 1, column_end: 2, line_start: 21, line_end: 21 }: @
Token { kind: Text, char_start: 692, char_end: 698, byte_start: 692, byte_end: 698, column_start: 2, column_end: 8, line_start: 21, line_end: 21 }: plugin
Token { kind: Space, char_start: 698, char_end: 699, byte_start: 698, byte_end: 699, column_start: 8, column_end: 9, line_start: 21, line_end: 21 }: " "
Token { kind: Text, char_start: 699, char_end: 705, byte_start: 699, byte_end: 705, column_start: 9, column_end: 15, line_start: 21, line_end: 21 }: ferret
Token { kind: Space, char_start: 705, char_end: 706, byte_start: 705, byte_end: 706, column_start: 15, column_end: 16, line_start: 21, line_end: 21 }: " "
Token { kind: Text, char_start: 706, char_end: 712, byte_start: 706, byte_end: 712, column_start: 16, column_end: 22, line_start: 21, line_end: 21 }: Ferret
Token { kind: Space, char_start: 712, char_end: 713, byte_start: 712, byte_end: 713, column_start: 22, column_end: 23, line_start: 21, line_end: 21 }: " "
Token { kind: Text, char_start: 713, char_end: 717, byte_start: 713, byte_end: 717, column_start: 23, column_end: 27, line_start: 21, line_end: 21 }: plug
Token { kind: Hyphen, char_start: 717, char_end: 718, byte_start: 717, byte_end: 718, column_start: 27, column_end: 28, line_start: 21, line_end: 21 }: -
Token { kind: Text, char_start: 718, char_end: 720, byte_start: 718, byte_end: 720, column_start: 28, column_end: 30, line_start: 21, line_end: 21 }: in
Token { kind: Space, char_start: 720, char_end: 721, byte_start: 720, byte_end: 721, column_start: 30, column_end: 31, line_start: 21, line_end: 21 }: " "
Token { kind: Text, char_start: 721, char_end: 724, byte_start: 721, byte_end: 724, column_start: 31, column_end: 34, line_start: 21, line_end: 21 }: for
Token { kind: Space, char_start: 724, char_end: 725, byte_start: 724, byte_end: 725, column_start: 34, column_end: 35, line_start: 21, line_end: 21 }: " "
Token { kind: Text, char_start: 725, char_end: 728, byte_start: 725, byte_end: 728, column_start: 35, column_end: 38, line_start: 21, line_end: 21 }: Vim
Token { kind: Newline, char_start: 728, char_end: 729, byte_start: 728, byte_end: 729, column_start: 38, column_end: 1, line_start: 21, line_end: 22 }: "\n"
Token { kind: Newline, char_start: 729, char_end: 730, byte_start: 729, byte_end: 730, column_start: 1, column_end: 1, line_start: 22, line_end: 23 }: "\n"
Token { kind: Heading(Heading1), char_start: 730, char_end: 731, byte_start: 730, byte_end: 731, column_start: 1, column_end: 2, line_start: 23, line_end: 23 }: #
Token { kind: Space, char_start: 731, char_end: 732, byte_start: 731, byte_end: 732, column_start: 2, column_end: 3, line_start: 23, line_end: 23 }: " "
Token { kind: Text, char_start: 732, char_end: 737, byte_start: 732, byte_end: 737, column_start: 3, column_end: 8, line_start: 23, line_end: 23 }: Intro
Token { kind: Newline, char_start: 737, char_end: 738, byte_start: 737, byte_end: 738, column_start: 8, column_end: 1, line_start: 23, line_end: 24 }: "\n"
Token { kind: Newline, char_start: 738, char_end: 739, byte_start: 738, byte_end: 739, column_start: 1, column_end: 1, line_start: 24, line_end: 25 }: "\n"
Token { kind: BlockQuote, char_start: 739, char_end: 740, byte_start: 739, byte_end: 740, column_start: 1, column_end: 2, line_start: 25, line_end: 25 }: >
Token { kind: Space, char_start: 740, char_end: 741, byte_start: 740, byte_end: 741, column_start: 2, column_end: 3, line_start: 25, line_end: 25 }: " "
Token { kind: Text, char_start: 741, char_end: 748, byte_start: 741, byte_end: 748, column_start: 3, column_end: 10, line_start: 25, line_end: 25 }: "ferret
Token { kind: Space, char_start: 748, char_end: 749, byte_start: 748, byte_end: 749, column_start: 10, column_end: 11, line_start: 25, line_end: 25 }: " "
Token { kind: Lparen, char_start: 749, char_end: 750, byte_start: 749, byte_end: 750, column_start: 11, column_end: 12, line_start: 25, line_end: 25 }: (
Token { kind: Text, char_start: 750, char_end: 754, byte_start: 750, byte_end: 754, column_start: 12, column_end: 16, line_start: 25, line_end: 25 }: verb
Token { kind: Rparen, char_start: 754, char_end: 755, byte_start: 754, byte_end: 755, column_start: 16, column_end: 17, line_start: 25, line_end: 25 }: )
Token { kind: Break, char_start: 755, char_end: 761, byte_start: 755, byte_end: 761, column_start: 17, column_end: 23, line_start: 25, line_end: 25 }: <br />
Token { kind: Newline, char_start: 761, char_end: 762, byte_start: 761, byte_end: 762, column_start: 23, column_end: 1, line_start: 25, line_end: 26 }: "\n"
Token { kind: BlockQuote, char_start: 762, char_end: 763, byte_start: 762, byte_end: 763, column_start: 1, column_end: 2, line_start: 26, line_end: 26 }: >
Token { kind: Space, char_start: 763, char_end: 764, byte_start: 763, byte_end: 764, column_start: 2, column_end: 3, line_start: 26, line_end: 26 }: " "
Token { kind: Lparen, char_start: 764, char_end: 765, byte_start: 764, byte_end: 765, column_start: 3, column_end: 4, line_start: 26, line_end: 26 }: (
Token { kind: Text, char_start: 765, char_end: 771, byte_start: 765, byte_end: 771, column_start: 4, column_end: 10, line_start: 26, line_end: 26 }: ferret
Token { kind: Space, char_start: 771, char_end: 772, byte_start: 771, byte_end: 772, column_start: 10, column_end: 11, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 772, char_end: 781, byte_start: 772, byte_end: 781, column_start: 11, column_end: 20, line_start: 26, line_end: 26 }: something
Token { kind: Space, char_start: 781, char_end: 782, byte_start: 781, byte_end: 782, column_start: 20, column_end: 21, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 782, char_end: 785, byte_start: 782, byte_end: 785, column_start: 21, column_end: 24, line_start: 26, line_end: 26 }: out
Token { kind: Rparen, char_start: 785, char_end: 786, byte_start: 785, byte_end: 786, column_start: 24, column_end: 25, line_start: 26, line_end: 26 }: )
Token { kind: Space, char_start: 786, char_end: 787, byte_start: 786, byte_end: 787, column_start: 25, column_end: 26, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 787, char_end: 793, byte_start: 787, byte_end: 793, column_start: 26, column_end: 32, line_start: 26, line_end: 26 }: search
Token { kind: Space, char_start: 793, char_end: 794, byte_start: 793, byte_end: 794, column_start: 32, column_end: 33, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 794, char_end: 805, byte_start: 794, byte_end: 805, column_start: 33, column_end: 44, line_start: 26, line_end: 26 }: tenaciously
Token { kind: Space, char_start: 805, char_end: 806, byte_start: 805, byte_end: 806, column_start: 44, column_end: 45, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 806, char_end: 809, byte_start: 806, byte_end: 809, column_start: 45, column_end: 48, line_start: 26, line_end: 26 }: for
Token { kind: Space, char_start: 809, char_end: 810, byte_start: 809, byte_end: 810, column_start: 48, column_end: 49, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 810, char_end: 813, byte_start: 810, byte_end: 813, column_start: 49, column_end: 52, line_start: 26, line_end: 26 }: and
Token { kind: Space, char_start: 813, char_end: 814, byte_start: 813, byte_end: 814, column_start: 52, column_end: 53, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 814, char_end: 818, byte_start: 814, byte_end: 818, column_start: 53, column_end: 57, line_start: 26, line_end: 26 }: find
Token { kind: Space, char_start: 818, char_end: 819, byte_start: 818, byte_end: 819, column_start: 57, column_end: 58, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 819, char_end: 829, byte_start: 819, byte_end: 829, column_start: 58, column_end: 68, line_start: 26, line_end: 26 }: something:
Token { kind: Space, char_start: 829, char_end: 830, byte_start: 829, byte_end: 830, column_start: 68, column_end: 69, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 830, char_end: 833, byte_start: 830, byte_end: 833, column_start: 69, column_end: 72, line_start: 26, line_end: 26 }: she
Token { kind: Space, char_start: 833, char_end: 834, byte_start: 833, byte_end: 834, column_start: 72, column_end: 73, line_start: 26, line_end: 26 }: " "
Token { kind: Text, char_start: 834, char_end: 837, byte_start: 834, byte_end: 837, column_start: 73, column_end: 76, line_start: 26, line_end: 26 }: had
Token { kind: Newline, char_start: 837, char_end: 838, byte_start: 837, byte_end: 838, column_start: 76, column_end: 1, line_start: 26, line_end: 27 }: "\n"
Token { kind: BlockQuote, char_start: 838, char_end: 839, byte_start: 838, byte_end: 839, column_start: 1, column_end: 2, line_start: 27, line_end: 27 }: >
Token { kind: Space, char_start: 839, char_end: 840, byte_start: 839, byte_end: 840, column_start: 2, column_end: 3, line_start: 27, line_end: 27 }: " "
Token { kind: Text, char_start: 840, char_end: 843, byte_start: 840, byte_end: 843, column_start: 3, column_end: 6, line_start: 27, line_end: 27 }: the
Token { kind: Space, char_start: 843, char_end: 844, byte_start: 843, byte_end: 844, column_start: 6, column_end: 7, line_start: 27, line_end: 27 }: " "
Token { kind: Text, char_start: 844, char_end: 851, byte_start: 844, byte_end: 851, column_start: 7, column_end: 14, line_start: 27, line_end: 27 }: ability
Token { kind: Space, char_start: 851, char_end: 852, byte_start: 851, byte_end: 852, column_start: 14, column_end: 15, line_start: 27, line_end: 27 }: " "
Token { kind: Text, char_start: 852, char_end: 854, byte_start: 852, byte_end: 854, column_start: 15, column_end: 17, line_start: 27, line_end: 27 }: to
Token { kind: Space, char_start: 854, char_end: 855, byte_start: 854, byte_end: 855, column_start: 17, column_end: 18, line_start: 27, line_end: 27 }: " "
Token { kind: Text, char_start: 855, char_end: 861, byte_start: 855, byte_end: 861, column_start: 18, column_end: 24, line_start: 27, line_end: 27 }: ferret
Token { kind: Space, char_start: 861, char_end: 862, byte_start: 861, byte_end: 862, column_start: 24, column_end: 25, line_start: 27, line_end: 27 }: " "
Token { kind: Text, char_start: 862, char_end: 865, byte_start: 862, byte_end: 865, column_start: 25, column_end: 28, line_start: 27, line_end: 27 }: out
Token { kind: Space, char_start: 865, char_end: 866, byte_start: 865, byte_end: 866, column_start: 28, column_end: 29, line_start: 27, line_end: 27 }: " "
Token { kind: Text, char_start: 866, char_end: 869, byte_start: 866, byte_end: 869, column_start: 29, column_end: 32, line_start: 27, line_end: 27 }: the
Token { kind: Space, char_start: 869, char_end: 870, byte_start: 869, byte_end: 870, column_start: 32, column_end: 33, line_start: 27, line_end: 27 }: " "
Token { kind: Text, char_start: 870, char_end: 877, byte_start: 870, byte_end: 877, column_start: 33, column_end: 40, line_start: 27, line_end: 27 }: facts."
Token { kind: Newline, char_start: 877, char_end: 878, byte_start: 877, byte_end: 878, column_start: 40, column_end: 1, line_start: 27, line_end: 28 }: "\n"
Token { kind: Newline, char_start: 878, char_end: 879, byte_start: 878, byte_end: 879, column_start: 1, column_end: 1, line_start: 28, line_end: 29 }: "\n"
Token { kind: Space, char_start: 879, char_end: 941, byte_start: 879, byte_end: 941, column_start: 1, column_end: 63, line_start: 29, line_end: 29 }: "                                                              "
Token { kind: Star, char_start: 941, char_end: 942, byte_start: 941, byte_end: 942, column_start: 63, column_end: 64, line_start: 29, line_end: 29 }: *
Token { kind: Text, char_start: 942, char_end: 948, byte_start: 942, byte_end: 948, column_start: 64, column_end: 70, line_start: 29, line_end: 29 }: ferret
Token { kind: Hyphen, char_start: 948, char_end: 949, byte_start: 948, byte_end: 949, column_start: 70, column_end: 71, line_start: 29, line_end: 29 }: -
Token { kind: Text, char_start: 949, char_end: 957, byte_start: 949, byte_end: 957, column_start: 71, column_end: 79, line_start: 29, line_end: 29 }: features
Token { kind: Star, char_start: 957, char_end: 958, byte_start: 957, byte_end: 958, column_start: 79, column_end: 80, line_start: 29, line_end: 29 }: *
Token { kind: Newline, char_start: 958, char_end: 959, byte_start: 958, byte_end: 959, column_start: 80, column_end: 1, line_start: 29, line_end: 30 }: "\n"
Token { kind: Text, char_start: 959, char_end: 965, byte_start: 959, byte_end: 965, column_start: 1, column_end: 7, line_start: 30, line_end: 30 }: Ferret
Token { kind: Space, char_start: 965, char_end: 966, byte_start: 965, byte_end: 966, column_start: 7, column_end: 8, line_start: 30, line_end: 30 }: " "
Token { kind: Text, char_start: 966, char_end: 974, byte_start: 966, byte_end: 974, column_start: 8, column_end: 16, line_start: 30, line_end: 30 }: improves
Token { kind: Space, char_start: 974, char_end: 975, byte_start: 974, byte_end: 975, column_start: 16, column_end: 17, line_start: 30, line_end: 30 }: " "
Token { kind: Text, char_start: 975, char_end: 980, byte_start: 975, byte_end: 980, column_start: 17, column_end: 22, line_start: 30, line_end: 30 }: Vim's
Token { kind: Space, char_start: 980, char_end: 981, byte_start: 980, byte_end: 981, column_start: 22, column_end: 23, line_start: 30, line_end: 30 }: " "
Token { kind: Text, char_start: 981, char_end: 986, byte_start: 981, byte_end: 986, column_start: 23, column_end: 28, line_start: 30, line_end: 30 }: multi
Token { kind: Hyphen, char_start: 986, char_end: 987, byte_start: 986, byte_end: 987, column_start: 28, column_end: 29, line_start: 30, line_end: 30 }: -
Token { kind: Text, char_start: 987, char_end: 991, byte_start: 987, byte_end: 991, column_start: 29, column_end: 33, line_start: 30, line_end: 30 }: file
Token { kind: Space, char_start: 991, char_end: 992, byte_start: 991, byte_end: 992, column_start: 33, column_end: 34, line_start: 30, line_end: 30 }: " "
Token { kind: Text, char_start: 992, char_end: 998, byte_start: 992, byte_end: 998, column_start: 34, column_end: 40, line_start: 30, line_end: 30 }: search
Token { kind: Space, char_start: 998, char_end: 999, byte_start: 998, byte_end: 999, column_start: 40, column_end: 41, line_start: 30, line_end: 30 }: " "
Token { kind: Text, char_start: 999, char_end: 1001, byte_start: 999, byte_end: 1001, column_start: 41, column_end: 43, line_start: 30, line_end: 30 }: in
Token { kind: Space, char_start: 1001, char_end: 1002, byte_start: 1001, byte_end: 1002, column_start: 43, column_end: 44, line_start: 30, line_end: 30 }: " "
Token { kind: Text, char_start: 1002, char_end: 1006, byte_start: 1002, byte_end: 1006, column_start: 44, column_end: 48, line_start: 30, line_end: 30 }: four
Token { kind: Space, char_start: 1006, char_end: 1007, byte_start: 1006, byte_end: 1007, column_start: 48, column_end: 49, line_start: 30, line_end: 30 }: " "
Token { kind: Text, char_start: 1007, char_end: 1012, byte_start: 1007, byte_end: 1012, column_start: 49, column_end: 54, line_start: 30, line_end: 30 }: ways:
Token { kind: Newline, char_start: 1012, char_end: 1013, byte_start: 1012, byte_end: 1013, column_start: 54, column_end: 1, line_start: 30, line_end: 31 }: "\n"
Token { kind: Newline, char_start: 1013, char_end: 1014, byte_start: 1013, byte_end: 1014, column_start: 1, column_end: 1, line_start: 31, line_end: 32 }: "\n"
Token { kind: Heading(Heading2), char_start: 1014, char_end: 1016, byte_start: 1014, byte_end: 1016, column_start: 1, column_end: 3, line_start: 32, line_end: 32 }: ##
Token { kind: Space, char_start: 1016, char_end: 1017, byte_start: 1016, byte_end: 1017, column_start: 3, column_end: 4, line_start: 32, line_end: 32 }: " "
Token { kind: Text, char_start: 1017, char_end: 1019, byte_start: 1017, byte_end: 1019, column_start: 4, column_end: 6, line_start: 32, line_end: 32 }: 1.
Token { kind: Space, char_start: 1019, char_end: 1020, byte_start: 1019, byte_end: 1020, column_start: 6, column_end: 7, line_start: 32, line_end: 32 }: " "
Token { kind: Text, char_start: 1020, char_end: 1028, byte_start: 1020, byte_end: 1028, column_start: 7, column_end: 15, line_start: 32, line_end: 32 }: Powerful
Token { kind: Space, char_start: 1028, char_end: 1029, byte_start: 1028, byte_end: 1029, column_start: 15, column_end: 16, line_start: 32, line_end: 32 }: " "
Token { kind: Text, char_start: 1029, char_end: 1034, byte_start: 1029, byte_end: 1034, column_start: 16, column_end: 21, line_start: 32, line_end: 32 }: multi
Token { kind: Hyphen, char_start: 1034, char_end: 1035, byte_start: 1034, byte_end: 1035, column_start: 21, column_end: 22, line_start: 32, line_end: 32 }: -
Token { kind: Text, char_start: 1035, char_end: 1039, byte_start: 1035, byte_end: 1039, column_start: 22, column_end: 26, line_start: 32, line_end: 32 }: file
Token { kind: Space, char_start: 1039, char_end: 1040, byte_start: 1039, byte_end: 1040, column_start: 26, column_end: 27, line_start: 32, line_end: 32 }: " "
Token { kind: Text, char_start: 1040, char_end: 1046, byte_start: 1040, byte_end: 1046, column_start: 27, column_end: 33, line_start: 32, line_end: 32 }: search
Token { kind: Newline, char_start: 1046, char_end: 1047, byte_start: 1046, byte_end: 1047, column_start: 33, column_end: 1, line_start: 32, line_end: 33 }: "\n"
Token { kind: Newline, char_start: 1047, char_end: 1048, byte_start: 1047, byte_end: 1048, column_start: 1, column_end: 1, line_start: 33, line_end: 34 }: "\n"
Token { kind: Text, char_start: 1048, char_end: 1054, byte_start: 1048, byte_end: 1054, column_start: 1, column_end: 7, line_start: 34, line_end: 34 }: Ferret
Token { kind: Space, char_start: 1054, char_end: 1055, byte_start: 1054, byte_end: 1055, column_start: 7, column_end: 8, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1055, char_end: 1063, byte_start: 1055, byte_end: 1063, column_start: 8, column_end: 16, line_start: 34, line_end: 34 }: provides
Token { kind: Space, char_start: 1063, char_end: 1064, byte_start: 1063, byte_end: 1064, column_start: 16, column_end: 17, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1064, char_end: 1066, byte_start: 1064, byte_end: 1066, column_start: 17, column_end: 19, line_start: 34, line_end: 34 }: an
Token { kind: Space, char_start: 1066, char_end: 1067, byte_start: 1066, byte_end: 1067, column_start: 19, column_end: 20, line_start: 34, line_end: 34 }: " "
Token { kind: Bar, char_start: 1067, char_end: 1068, byte_start: 1067, byte_end: 1068, column_start: 20, column_end: 21, line_start: 34, line_end: 34 }: |
Token { kind: Text, char_start: 1068, char_end: 1072, byte_start: 1068, byte_end: 1072, column_start: 21, column_end: 25, line_start: 34, line_end: 34 }: :Ack
Token { kind: Bar, char_start: 1072, char_end: 1073, byte_start: 1072, byte_end: 1073, column_start: 25, column_end: 26, line_start: 34, line_end: 34 }: |
Token { kind: Space, char_start: 1073, char_end: 1074, byte_start: 1073, byte_end: 1074, column_start: 26, column_end: 27, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1074, char_end: 1081, byte_start: 1074, byte_end: 1081, column_start: 27, column_end: 34, line_start: 34, line_end: 34 }: command
Token { kind: Space, char_start: 1081, char_end: 1082, byte_start: 1081, byte_end: 1082, column_start: 34, column_end: 35, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1082, char_end: 1085, byte_start: 1082, byte_end: 1085, column_start: 35, column_end: 38, line_start: 34, line_end: 34 }: for
Token { kind: Space, char_start: 1085, char_end: 1086, byte_start: 1085, byte_end: 1086, column_start: 38, column_end: 39, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1086, char_end: 1095, byte_start: 1086, byte_end: 1095, column_start: 39, column_end: 48, line_start: 34, line_end: 34 }: searching
Token { kind: Space, char_start: 1095, char_end: 1096, byte_start: 1095, byte_end: 1096, column_start: 48, column_end: 49, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1096, char_end: 1102, byte_start: 1096, byte_end: 1102, column_start: 49, column_end: 55, line_start: 34, line_end: 34 }: across
Token { kind: Space, char_start: 1102, char_end: 1103, byte_start: 1102, byte_end: 1103, column_start: 55, column_end: 56, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1103, char_end: 1111, byte_start: 1103, byte_end: 1111, column_start: 56, column_end: 64, line_start: 34, line_end: 34 }: multiple
Token { kind: Space, char_start: 1111, char_end: 1112, byte_start: 1111, byte_end: 1112, column_start: 64, column_end: 65, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1112, char_end: 1117, byte_start: 1112, byte_end: 1117, column_start: 65, column_end: 70, line_start: 34, line_end: 34 }: files
Token { kind: Space, char_start: 1117, char_end: 1118, byte_start: 1117, byte_end: 1118, column_start: 70, column_end: 71, line_start: 34, line_end: 34 }: " "
Token { kind: Text, char_start: 1118, char_end: 1123, byte_start: 1118, byte_end: 1123, column_start: 71, column_end: 76, line_start: 34, line_end: 34 }: using
Token { kind: Newline, char_start: 1123, char_end: 1124, byte_start: 1123, byte_end: 1124, column_start: 76, column_end: 1, line_start: 34, line_end: 35 }: "\n"
Token { kind: Text, char_start: 1124, char_end: 1131, byte_start: 1124, byte_end: 1131, column_start: 1, column_end: 8, line_start: 35, line_end: 35 }: ripgrep
Token { kind: Space, char_start: 1131, char_end: 1132, byte_start: 1131, byte_end: 1132, column_start: 8, column_end: 9, line_start: 35, line_end: 35 }: " "
Token { kind: Lparen, char_start: 1132, char_end: 1133, byte_start: 1132, byte_end: 1133, column_start: 9, column_end: 10, line_start: 35, line_end: 35 }: (
Token { kind: Text, char_start: 1133, char_end: 1170, byte_start: 1133, byte_end: 1170, column_start: 10, column_end: 47, line_start: 35, line_end: 35 }: https://github.com/BurntSushi/ripgrep
Token { kind: Rparen, char_start: 1170, char_end: 1171, byte_start: 1170, byte_end: 1171, column_start: 47, column_end: 48, line_start: 35, line_end: 35 }: )
Token { kind: Text, char_start: 1171, char_end: 1172, byte_start: 1171, byte_end: 1172, column_start: 48, column_end: 49, line_start: 35, line_end: 35 }: ,
Token { kind: Space, char_start: 1172, char_end: 1173, byte_start: 1172, byte_end: 1173, column_start: 49, column_end: 50, line_start: 35, line_end: 35 }: " "
Token { kind: Text, char_start: 1173, char_end: 1176, byte_start: 1173, byte_end: 1176, column_start: 50, column_end: 53, line_start: 35, line_end: 35 }: The
Token { kind: Space, char_start: 1176, char_end: 1177, byte_start: 1176, byte_end: 1177, column_start: 53, column_end: 54, line_start: 35, line_end: 35 }: " "
Token { kind: Text, char_start: 1177, char_end: 1183, byte_start: 1177, byte_end: 1183, column_start: 54, column_end: 60, line_start: 35, line_end: 35 }: Silver
Token { kind: Space, char_start: 1183, char_end: 1184, byte_start: 1183, byte_end: 1184, column_start: 60, column_end: 61, line_start: 35, line_end: 35 }: " "
Token { kind: Text, char_start: 1184, char_end: 1192, byte_start: 1184, byte_end: 1192, column_start: 61, column_end: 69, line_start: 35, line_end: 35 }: Searcher
Token { kind: Newline, char_start: 1192, char_end: 1193, byte_start: 1192, byte_end: 1193, column_start: 69, column_end: 1, line_start: 35, line_end: 36 }: "\n"
Token { kind: Lparen, char_start: 1193, char_end: 1194, byte_start: 1193, byte_end: 1194, column_start: 1, column_end: 2, line_start: 36, line_end: 36 }: (
Token { kind: Text, char_start: 1194, char_end: 1239, byte_start: 1194, byte_end: 1239, column_start: 2, column_end: 47, line_start: 36, line_end: 36 }: https://github.com/ggreer/the_silver_searcher
Token { kind: Rparen, char_start: 1239, char_end: 1240, byte_start: 1239, byte_end: 1240, column_start: 47, column_end: 48, line_start: 36, line_end: 36 }: )
Token { kind: Text, char_start: 1240, char_end: 1241, byte_start: 1240, byte_end: 1241, column_start: 48, column_end: 49, line_start: 36, line_end: 36 }: ,
Token { kind: Space, char_start: 1241, char_end: 1242, byte_start: 1241, byte_end: 1242, column_start: 49, column_end: 50, line_start: 36, line_end: 36 }: " "
Token { kind: Text, char_start: 1242, char_end: 1244, byte_start: 1242, byte_end: 1244, column_start: 50, column_end: 52, line_start: 36, line_end: 36 }: or
Token { kind: Space, char_start: 1244, char_end: 1245, byte_start: 1244, byte_end: 1245, column_start: 52, column_end: 53, line_start: 36, line_end: 36 }: " "
Token { kind: Text, char_start: 1245, char_end: 1248, byte_start: 1245, byte_end: 1248, column_start: 53, column_end: 56, line_start: 36, line_end: 36 }: Ack
Token { kind: Newline, char_start: 1248, char_end: 1249, byte_start: 1248, byte_end: 1249, column_start: 56, column_end: 1, line_start: 36, line_end: 37 }: "\n"
Token { kind: Lparen, char_start: 1249, char_end: 1250, byte_start: 1249, byte_end: 1250, column_start: 1, column_end: 2, line_start: 37, line_end: 37 }: (
Token { kind: Text, char_start: 1250, char_end: 1272, byte_start: 1250, byte_end: 1272, column_start: 2, column_end: 24, line_start: 37, line_end: 37 }: http://beyondgrep.com/
Token { kind: Rparen, char_start: 1272, char_end: 1273, byte_start: 1272, byte_end: 1273, column_start: 24, column_end: 25, line_start: 37, line_end: 37 }: )
Token { kind: Text, char_start: 1273, char_end: 1274, byte_start: 1273, byte_end: 1274, column_start: 25, column_end: 26, line_start: 37, line_end: 37 }: .
Token { kind: Space, char_start: 1274, char_end: 1275, byte_start: 1274, byte_end: 1275, column_start: 26, column_end: 27, line_start: 37, line_end: 37 }: " "
Token { kind: Text, char_start: 1275, char_end: 1282, byte_start: 1275, byte_end: 1282, column_start: 27, column_end: 34, line_start: 37, line_end: 37 }: Support
Token { kind: Space, char_start: 1282, char_end: 1283, byte_start: 1282, byte_end: 1283, column_start: 34, column_end: 35, line_start: 37, line_end: 37 }: " "
Token { kind: Text, char_start: 1283, char_end: 1286, byte_start: 1283, byte_end: 1286, column_start: 35, column_end: 38, line_start: 37, line_end: 37 }: for
Token { kind: Space, char_start: 1286, char_end: 1287, byte_start: 1286, byte_end: 1287, column_start: 38, column_end: 39, line_start: 37, line_end: 37 }: " "
Token { kind: Text, char_start: 1287, char_end: 1294, byte_start: 1287, byte_end: 1294, column_start: 39, column_end: 46, line_start: 37, line_end: 37 }: passing
Token { kind: Space, char_start: 1294, char_end: 1295, byte_start: 1294, byte_end: 1295, column_start: 46, column_end: 47, line_start: 37, line_end: 37 }: " "
Token { kind: Text, char_start: 1295, char_end: 1302, byte_start: 1295, byte_end: 1302, column_start: 47, column_end: 54, line_start: 37, line_end: 37 }: options
Token { kind: Space, char_start: 1302, char_end: 1303, byte_start: 1302, byte_end: 1303, column_start: 54, column_end: 55, line_start: 37, line_end: 37 }: " "
Token { kind: Text, char_start: 1303, char_end: 1310, byte_start: 1303, byte_end: 1310, column_start: 55, column_end: 62, line_start: 37, line_end: 37 }: through
Token { kind: Space, char_start: 1310, char_end: 1311, byte_start: 1310, byte_end: 1311, column_start: 62, column_end: 63, line_start: 37, line_end: 37 }: " "
Token { kind: Text, char_start: 1311, char_end: 1313, byte_start: 1311, byte_end: 1313, column_start: 63, column_end: 65, line_start: 37, line_end: 37 }: to
Token { kind: Space, char_start: 1313, char_end: 1314, byte_start: 1313, byte_end: 1314, column_start: 65, column_end: 66, line_start: 37, line_end: 37 }: " "
Token { kind: Text, char_start: 1314, char_end: 1317, byte_start: 1314, byte_end: 1317, column_start: 66, column_end: 69, line_start: 37, line_end: 37 }: the
Token { kind: Newline, char_start: 1317, char_end: 1318, byte_start: 1317, byte_end: 1318, column_start: 69, column_end: 1, line_start: 37, line_end: 38 }: "\n"
Token { kind: Text, char_start: 1318, char_end: 1328, byte_start: 1318, byte_end: 1328, column_start: 1, column_end: 11, line_start: 38, line_end: 38 }: underlying
Token { kind: Space, char_start: 1328, char_end: 1329, byte_start: 1328, byte_end: 1329, column_start: 11, column_end: 12, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1329, char_end: 1335, byte_start: 1329, byte_end: 1335, column_start: 12, column_end: 18, line_start: 38, line_end: 38 }: search
Token { kind: Space, char_start: 1335, char_end: 1336, byte_start: 1335, byte_end: 1336, column_start: 18, column_end: 19, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1336, char_end: 1343, byte_start: 1336, byte_end: 1343, column_start: 19, column_end: 26, line_start: 38, line_end: 38 }: command
Token { kind: Space, char_start: 1343, char_end: 1344, byte_start: 1343, byte_end: 1344, column_start: 26, column_end: 27, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1344, char_end: 1351, byte_start: 1344, byte_end: 1351, column_start: 27, column_end: 34, line_start: 38, line_end: 38 }: exists,
Token { kind: Space, char_start: 1351, char_end: 1352, byte_start: 1351, byte_end: 1352, column_start: 34, column_end: 35, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1352, char_end: 1357, byte_start: 1352, byte_end: 1357, column_start: 35, column_end: 40, line_start: 38, line_end: 38 }: along
Token { kind: Space, char_start: 1357, char_end: 1358, byte_start: 1357, byte_end: 1358, column_start: 40, column_end: 41, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1358, char_end: 1362, byte_start: 1358, byte_end: 1362, column_start: 41, column_end: 45, line_start: 38, line_end: 38 }: with
Token { kind: Space, char_start: 1362, char_end: 1363, byte_start: 1362, byte_end: 1363, column_start: 45, column_end: 46, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1363, char_end: 1366, byte_start: 1363, byte_end: 1366, column_start: 46, column_end: 49, line_start: 38, line_end: 38 }: the
Token { kind: Space, char_start: 1366, char_end: 1367, byte_start: 1366, byte_end: 1367, column_start: 49, column_end: 50, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1367, char_end: 1374, byte_start: 1367, byte_end: 1374, column_start: 50, column_end: 57, line_start: 38, line_end: 38 }: ability
Token { kind: Space, char_start: 1374, char_end: 1375, byte_start: 1374, byte_end: 1375, column_start: 57, column_end: 58, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1375, char_end: 1377, byte_start: 1375, byte_end: 1377, column_start: 58, column_end: 60, line_start: 38, line_end: 38 }: to
Token { kind: Space, char_start: 1377, char_end: 1378, byte_start: 1377, byte_end: 1378, column_start: 60, column_end: 61, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1378, char_end: 1381, byte_start: 1378, byte_end: 1381, column_start: 61, column_end: 64, line_start: 38, line_end: 38 }: use
Token { kind: Space, char_start: 1381, char_end: 1382, byte_start: 1381, byte_end: 1382, column_start: 64, column_end: 65, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1382, char_end: 1386, byte_start: 1382, byte_end: 1386, column_start: 65, column_end: 69, line_start: 38, line_end: 38 }: full
Token { kind: Space, char_start: 1386, char_end: 1387, byte_start: 1386, byte_end: 1387, column_start: 69, column_end: 70, line_start: 38, line_end: 38 }: " "
Token { kind: Text, char_start: 1387, char_end: 1394, byte_start: 1387, byte_end: 1394, column_start: 70, column_end: 77, line_start: 38, line_end: 38 }: regular
Token { kind: Newline, char_start: 1394, char_end: 1395, byte_start: 1394, byte_end: 1395, column_start: 77, column_end: 1, line_start: 38, line_end: 39 }: "\n"
Token { kind: Text, char_start: 1395, char_end: 1405, byte_start: 1395, byte_end: 1405, column_start: 1, column_end: 11, line_start: 39, line_end: 39 }: expression
Token { kind: Space, char_start: 1405, char_end: 1406, byte_start: 1405, byte_end: 1406, column_start: 11, column_end: 12, line_start: 39, line_end: 39 }: " "
Token { kind: Text, char_start: 1406, char_end: 1412, byte_start: 1406, byte_end: 1412, column_start: 12, column_end: 18, line_start: 39, line_end: 39 }: syntax
Token { kind: Space, char_start: 1412, char_end: 1413, byte_start: 1412, byte_end: 1413, column_start: 18, column_end: 19, line_start: 39, line_end: 39 }: " "
Token { kind: Text, char_start: 1413, char_end: 1420, byte_start: 1413, byte_end: 1420, column_start: 19, column_end: 26, line_start: 39, line_end: 39 }: without
Token { kind: Space, char_start: 1420, char_end: 1421, byte_start: 1420, byte_end: 1421, column_start: 26, column_end: 27, line_start: 39, line_end: 39 }: " "
Token { kind: Text, char_start: 1421, char_end: 1426, byte_start: 1421, byte_end: 1426, column_start: 27, column_end: 32, line_start: 39, line_end: 39 }: doing
Token { kind: Space, char_start: 1426, char_end: 1427, byte_start: 1426, byte_end: 1427, column_start: 32, column_end: 33, line_start: 39, line_end: 39 }: " "
Token { kind: Text, char_start: 1427, char_end: 1434, byte_start: 1427, byte_end: 1434, column_start: 33, column_end: 40, line_start: 39, line_end: 39 }: special
Token { kind: Space, char_start: 1434, char_end: 1435, byte_start: 1434, byte_end: 1435, column_start: 40, column_end: 41, line_start: 39, line_end: 39 }: " "
Token { kind: Text, char_start: 1435, char_end: 1444, byte_start: 1435, byte_end: 1444, column_start: 41, column_end: 50, line_start: 39, line_end: 39 }: escaping.
Token { kind: Space, char_start: 1444, char_end: 1445, byte_start: 1444, byte_end: 1445, column_start: 50, column_end: 51, line_start: 39, line_end: 39 }: " "
Token { kind: Text, char_start: 1445, char_end: 1447, byte_start: 1445, byte_end: 1447, column_start: 51, column_end: 53, line_start: 39, line_end: 39 }: On
Token { kind: Space, char_start: 1447, char_end: 1448, byte_start: 1447, byte_end: 1448, column_start: 53, column_end: 54, line_start: 39, line_end: 39 }: " "
Token { kind: Text, char_start: 1448, char_end: 1454, byte_start: 1448, byte_end: 1454, column_start: 54, column_end: 60, line_start: 39, line_end: 39 }: modern
Token { kind: Space, char_start: 1454, char_end: 1455, byte_start: 1454, byte_end: 1455, column_start: 60, column_end: 61, line_start: 39, line_end: 39 }: " "
Token { kind: Text, char_start: 1455, char_end: 1463, byte_start: 1455, byte_end: 1463, column_start: 61, column_end: 69, line_start: 39, line_end: 39 }: versions
Token { kind: Newline, char_start: 1463, char_end: 1464, byte_start: 1463, byte_end: 1464, column_start: 69, column_end: 1, line_start: 39, line_end: 40 }: "\n"
Token { kind: Text, char_start: 1464, char_end: 1466, byte_start: 1464, byte_end: 1466, column_start: 1, column_end: 3, line_start: 40, line_end: 40 }: of
Token { kind: Space, char_start: 1466, char_end: 1467, byte_start: 1466, byte_end: 1467, column_start: 3, column_end: 4, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1467, char_end: 1470, byte_start: 1467, byte_end: 1470, column_start: 4, column_end: 7, line_start: 40, line_end: 40 }: Vim
Token { kind: Space, char_start: 1470, char_end: 1471, byte_start: 1470, byte_end: 1471, column_start: 7, column_end: 8, line_start: 40, line_end: 40 }: " "
Token { kind: Lparen, char_start: 1471, char_end: 1472, byte_start: 1471, byte_end: 1472, column_start: 8, column_end: 9, line_start: 40, line_end: 40 }: (
Token { kind: Text, char_start: 1472, char_end: 1479, byte_start: 1472, byte_end: 1479, column_start: 9, column_end: 16, line_start: 40, line_end: 40 }: version
Token { kind: Space, char_start: 1479, char_end: 1480, byte_start: 1479, byte_end: 1480, column_start: 16, column_end: 17, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1480, char_end: 1481, byte_start: 1480, byte_end: 1481, column_start: 17, column_end: 18, line_start: 40, line_end: 40 }: 8
Token { kind: Space, char_start: 1481, char_end: 1482, byte_start: 1481, byte_end: 1482, column_start: 18, column_end: 19, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1482, char_end: 1484, byte_start: 1482, byte_end: 1484, column_start: 19, column_end: 21, line_start: 40, line_end: 40 }: or
Token { kind: Space, char_start: 1484, char_end: 1485, byte_start: 1484, byte_end: 1485, column_start: 21, column_end: 22, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1485, char_end: 1492, byte_start: 1485, byte_end: 1492, column_start: 22, column_end: 29, line_start: 40, line_end: 40 }: higher,
Token { kind: Space, char_start: 1492, char_end: 1493, byte_start: 1492, byte_end: 1493, column_start: 29, column_end: 30, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1493, char_end: 1495, byte_start: 1493, byte_end: 1495, column_start: 30, column_end: 32, line_start: 40, line_end: 40 }: or
Token { kind: Space, char_start: 1495, char_end: 1496, byte_start: 1495, byte_end: 1496, column_start: 32, column_end: 33, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1496, char_end: 1502, byte_start: 1496, byte_end: 1502, column_start: 33, column_end: 39, line_start: 40, line_end: 40 }: Neovim
Token { kind: Rparen, char_start: 1502, char_end: 1503, byte_start: 1502, byte_end: 1503, column_start: 39, column_end: 40, line_start: 40, line_end: 40 }: )
Token { kind: Text, char_start: 1503, char_end: 1504, byte_start: 1503, byte_end: 1504, column_start: 40, column_end: 41, line_start: 40, line_end: 40 }: ,
Token { kind: Space, char_start: 1504, char_end: 1505, byte_start: 1504, byte_end: 1505, column_start: 41, column_end: 42, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1505, char_end: 1513, byte_start: 1505, byte_end: 1513, column_start: 42, column_end: 50, line_start: 40, line_end: 40 }: searches
Token { kind: Space, char_start: 1513, char_end: 1514, byte_start: 1513, byte_end: 1514, column_start: 50, column_end: 51, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1514, char_end: 1517, byte_start: 1514, byte_end: 1517, column_start: 51, column_end: 54, line_start: 40, line_end: 40 }: are
Token { kind: Space, char_start: 1517, char_end: 1518, byte_start: 1517, byte_end: 1518, column_start: 54, column_end: 55, line_start: 40, line_end: 40 }: " "
Token { kind: Text, char_start: 1518, char_end: 1527, byte_start: 1518, byte_end: 1527, column_start: 55, column_end: 64, line_start: 40, line_end: 40 }: performed
Token { kind: Newline, char_start: 1527, char_end: 1528, byte_start: 1527, byte_end: 1528, column_start: 64, column_end: 1, line_start: 40, line_end: 41 }: "\n"
Token { kind: Text, char_start: 1528, char_end: 1542, byte_start: 1528, byte_end: 1542, column_start: 1, column_end: 15, line_start: 41, line_end: 41 }: asynchronously
Token { kind: Space, char_start: 1542, char_end: 1543, byte_start: 1542, byte_end: 1543, column_start: 15, column_end: 16, line_start: 41, line_end: 41 }: " "
Token { kind: Lparen, char_start: 1543, char_end: 1544, byte_start: 1543, byte_end: 1544, column_start: 16, column_end: 17, line_start: 41, line_end: 41 }: (
Token { kind: Text, char_start: 1544, char_end: 1551, byte_start: 1544, byte_end: 1551, column_start: 17, column_end: 24, line_start: 41, line_end: 41 }: without
Token { kind: Space, char_start: 1551, char_end: 1552, byte_start: 1551, byte_end: 1552, column_start: 24, column_end: 25, line_start: 41, line_end: 41 }: " "
Token { kind: Text, char_start: 1552, char_end: 1560, byte_start: 1552, byte_end: 1560, column_start: 25, column_end: 33, line_start: 41, line_end: 41 }: blocking
Token { kind: Space, char_start: 1560, char_end: 1561, byte_start: 1560, byte_end: 1561, column_start: 33, column_end: 34, line_start: 41, line_end: 41 }: " "
Token { kind: Text, char_start: 1561, char_end: 1564, byte_start: 1561, byte_end: 1564, column_start: 34, column_end: 37, line_start: 41, line_end: 41 }: the
Token { kind: Space, char_start: 1564, char_end: 1565, byte_start: 1564, byte_end: 1565, column_start: 37, column_end: 38, line_start: 41, line_end: 41 }: " "
Token { kind: Text, char_start: 1565, char_end: 1567, byte_start: 1565, byte_end: 1567, column_start: 38, column_end: 40, line_start: 41, line_end: 41 }: UI
Token { kind: Rparen, char_start: 1567, char_end: 1568, byte_start: 1567, byte_end: 1568, column_start: 40, column_end: 41, line_start: 41, line_end: 41 }: )
Token { kind: Text, char_start: 1568, char_end: 1569, byte_start: 1568, byte_end: 1569, column_start: 41, column_end: 42, line_start: 41, line_end: 41 }: .
Token { kind: Newline, char_start: 1569, char_end: 1570, byte_start: 1569, byte_end: 1570, column_start: 42, column_end: 1, line_start: 41, line_end: 42 }: "\n"
Token { kind: Newline, char_start: 1570, char_end: 1571, byte_start: 1570, byte_end: 1571, column_start: 1, column_end: 1, line_start: 42, line_end: 43 }: "\n"
Token { kind: Text, char_start: 1571, char_end: 1579, byte_start: 1571, byte_end: 1579, column_start: 1, column_end: 9, line_start: 43, line_end: 43 }: Shortcut
Token { kind: Space, char_start: 1579, char_end: 1580, byte_start: 1579, byte_end: 1580, column_start: 9, column_end: 10, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1580, char_end: 1588, byte_start: 1580, byte_end: 1588, column_start: 10, column_end: 18, line_start: 43, line_end: 43 }: mappings
Token { kind: Space, char_start: 1588, char_end: 1589, byte_start: 1588, byte_end: 1589, column_start: 18, column_end: 19, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1589, char_end: 1592, byte_start: 1589, byte_end: 1592, column_start: 19, column_end: 22, line_start: 43, line_end: 43 }: are
Token { kind: Space, char_start: 1592, char_end: 1593, byte_start: 1592, byte_end: 1593, column_start: 22, column_end: 23, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1593, char_end: 1601, byte_start: 1593, byte_end: 1601, column_start: 23, column_end: 31, line_start: 43, line_end: 43 }: provided
Token { kind: Space, char_start: 1601, char_end: 1602, byte_start: 1601, byte_end: 1602, column_start: 31, column_end: 32, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1602, char_end: 1604, byte_start: 1602, byte_end: 1604, column_start: 32, column_end: 34, line_start: 43, line_end: 43 }: to
Token { kind: Space, char_start: 1604, char_end: 1605, byte_start: 1604, byte_end: 1605, column_start: 34, column_end: 35, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1605, char_end: 1610, byte_start: 1605, byte_end: 1610, column_start: 35, column_end: 40, line_start: 43, line_end: 43 }: start
Token { kind: Space, char_start: 1610, char_end: 1611, byte_start: 1610, byte_end: 1611, column_start: 40, column_end: 41, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1611, char_end: 1613, byte_start: 1611, byte_end: 1613, column_start: 41, column_end: 43, line_start: 43, line_end: 43 }: an
Token { kind: Space, char_start: 1613, char_end: 1614, byte_start: 1613, byte_end: 1614, column_start: 43, column_end: 44, line_start: 43, line_end: 43 }: " "
Token { kind: Bar, char_start: 1614, char_end: 1615, byte_start: 1614, byte_end: 1615, column_start: 44, column_end: 45, line_start: 43, line_end: 43 }: |
Token { kind: Text, char_start: 1615, char_end: 1619, byte_start: 1615, byte_end: 1619, column_start: 45, column_end: 49, line_start: 43, line_end: 43 }: :Ack
Token { kind: Bar, char_start: 1619, char_end: 1620, byte_start: 1619, byte_end: 1620, column_start: 49, column_end: 50, line_start: 43, line_end: 43 }: |
Token { kind: Space, char_start: 1620, char_end: 1621, byte_start: 1620, byte_end: 1621, column_start: 50, column_end: 51, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1621, char_end: 1627, byte_start: 1621, byte_end: 1627, column_start: 51, column_end: 57, line_start: 43, line_end: 43 }: search
Token { kind: Space, char_start: 1627, char_end: 1628, byte_start: 1627, byte_end: 1628, column_start: 57, column_end: 58, line_start: 43, line_end: 43 }: " "
Token { kind: Lparen, char_start: 1628, char_end: 1629, byte_start: 1628, byte_end: 1629, column_start: 58, column_end: 59, line_start: 43, line_end: 43 }: (
Token { kind: Backtick, char_start: 1629, char_end: 1630, byte_start: 1629, byte_end: 1630, column_start: 59, column_end: 60, line_start: 43, line_end: 43 }: `
Token { kind: BlockQuote, char_start: 1630, char_end: 1631, byte_start: 1630, byte_end: 1631, column_start: 60, column_end: 61, line_start: 43, line_end: 43 }: <
Token { kind: Text, char_start: 1631, char_end: 1637, byte_start: 1631, byte_end: 1637, column_start: 61, column_end: 67, line_start: 43, line_end: 43 }: Leader
Token { kind: BlockQuote, char_start: 1637, char_end: 1638, byte_start: 1637, byte_end: 1638, column_start: 67, column_end: 68, line_start: 43, line_end: 43 }: >
Token { kind: Text, char_start: 1638, char_end: 1639, byte_start: 1638, byte_end: 1639, column_start: 68, column_end: 69, line_start: 43, line_end: 43 }: a
Token { kind: Backtick, char_start: 1639, char_end: 1640, byte_start: 1639, byte_end: 1640, column_start: 69, column_end: 70, line_start: 43, line_end: 43 }: `
Token { kind: Rparen, char_start: 1640, char_end: 1641, byte_start: 1640, byte_end: 1641, column_start: 70, column_end: 71, line_start: 43, line_end: 43 }: )
Token { kind: Space, char_start: 1641, char_end: 1642, byte_start: 1641, byte_end: 1642, column_start: 71, column_end: 72, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1642, char_end: 1644, byte_start: 1642, byte_end: 1644, column_start: 72, column_end: 74, line_start: 43, line_end: 43 }: or
Token { kind: Space, char_start: 1644, char_end: 1645, byte_start: 1644, byte_end: 1645, column_start: 74, column_end: 75, line_start: 43, line_end: 43 }: " "
Token { kind: Text, char_start: 1645, char_end: 1647, byte_start: 1645, byte_end: 1647, column_start: 75, column_end: 77, line_start: 43, line_end: 43 }: to
Token { kind: Newline, char_start: 1647, char_end: 1648, byte_start: 1647, byte_end: 1648, column_start: 77, column_end: 1, line_start: 43, line_end: 44 }: "\n"
Token { kind: Text, char_start: 1648, char_end: 1654, byte_start: 1648, byte_end: 1654, column_start: 1, column_end: 7, line_start: 44, line_end: 44 }: search
Token { kind: Space, char_start: 1654, char_end: 1655, byte_start: 1654, byte_end: 1655, column_start: 7, column_end: 8, line_start: 44, line_end: 44 }: " "
Token { kind: Text, char_start: 1655, char_end: 1658, byte_start: 1655, byte_end: 1658, column_start: 8, column_end: 11, line_start: 44, line_end: 44 }: for
Token { kind: Space, char_start: 1658, char_end: 1659, byte_start: 1658, byte_end: 1659, column_start: 11, column_end: 12, line_start: 44, line_end: 44 }: " "
Token { kind: Text, char_start: 1659, char_end: 1662, byte_start: 1659, byte_end: 1662, column_start: 12, column_end: 15, line_start: 44, line_end: 44 }: the
Token { kind: Space, char_start: 1662, char_end: 1663, byte_start: 1662, byte_end: 1663, column_start: 15, column_end: 16, line_start: 44, line_end: 44 }: " "
Token { kind: Text, char_start: 1663, char_end: 1667, byte_start: 1663, byte_end: 1667, column_start: 16, column_end: 20, line_start: 44, line_end: 44 }: word
Token { kind: Space, char_start: 1667, char_end: 1668, byte_start: 1667, byte_end: 1668, column_start: 20, column_end: 21, line_start: 44, line_end: 44 }: " "
Token { kind: Text, char_start: 1668, char_end: 1677, byte_start: 1668, byte_end: 1677, column_start: 21, column_end: 30, line_start: 44, line_end: 44 }: currently
Token { kind: Space, char_start: 1677, char_end: 1678, byte_start: 1677, byte_end: 1678, column_start: 30, column_end: 31, line_start: 44, line_end: 44 }: " "
Token { kind: Text, char_start: 1678, char_end: 1683, byte_start: 1678, byte_end: 1683, column_start: 31, column_end: 36, line_start: 44, line_end: 44 }: under
Token { kind: Space, char_start: 1683, char_end: 1684, byte_start: 1683, byte_end: 1684, column_start: 36, column_end: 37, line_start: 44, line_end: 44 }: " "
Token { kind: Text, char_start: 1684, char_end: 1687, byte_start: 1684, byte_end: 1687, column_start: 37, column_end: 40, line_start: 44, line_end: 44 }: the
Token { kind: Space, char_start: 1687, char_end: 1688, byte_start: 1687, byte_end: 1688, column_start: 40, column_end: 41, line_start: 44, line_end: 44 }: " "
Token { kind: Text, char_start: 1688, char_end: 1694, byte_start: 1688, byte_end: 1694, column_start: 41, column_end: 47, line_start: 44, line_end: 44 }: cursor
Token { kind: Space, char_start: 1694, char_end: 1695, byte_start: 1694, byte_end: 1695, column_start: 47, column_end: 48, line_start: 44, line_end: 44 }: " "
Token { kind: Lparen, char_start: 1695, char_end: 1696, byte_start: 1695, byte_end: 1696, column_start: 48, column_end: 49, line_start: 44, line_end: 44 }: (
Token { kind: Backtick, char_start: 1696, char_end: 1697, byte_start: 1696, byte_end: 1697, column_start: 49, column_end: 50, line_start: 44, line_end: 44 }: `
Token { kind: BlockQuote, char_start: 1697, char_end: 1698, byte_start: 1697, byte_end: 1698, column_start: 50, column_end: 51, line_start: 44, line_end: 44 }: <
Token { kind: Text, char_start: 1698, char_end: 1704, byte_start: 1698, byte_end: 1704, column_start: 51, column_end: 57, line_start: 44, line_end: 44 }: Leader
Token { kind: BlockQuote, char_start: 1704, char_end: 1705, byte_start: 1704, byte_end: 1705, column_start: 57, column_end: 58, line_start: 44, line_end: 44 }: >
Token { kind: Text, char_start: 1705, char_end: 1706, byte_start: 1705, byte_end: 1706, column_start: 58, column_end: 59, line_start: 44, line_end: 44 }: s
Token { kind: Backtick, char_start: 1706, char_end: 1707, byte_start: 1706, byte_end: 1707, column_start: 59, column_end: 60, line_start: 44, line_end: 44 }: `
Token { kind: Rparen, char_start: 1707, char_end: 1708, byte_start: 1707, byte_end: 1708, column_start: 60, column_end: 61, line_start: 44, line_end: 44 }: )
Token { kind: Text, char_start: 1708, char_end: 1709, byte_start: 1708, byte_end: 1709, column_start: 61, column_end: 62, line_start: 44, line_end: 44 }: .
Token { kind: Newline, char_start: 1709, char_end: 1710, byte_start: 1709, byte_end: 1710, column_start: 62, column_end: 1, line_start: 44, line_end: 45 }: "\n"
Token { kind: Newline, char_start: 1710, char_end: 1711, byte_start: 1710, byte_end: 1711, column_start: 1, column_end: 1, line_start: 45, line_end: 46 }: "\n"
Token { kind: Text, char_start: 1711, char_end: 1718, byte_start: 1711, byte_end: 1718, column_start: 1, column_end: 8, line_start: 46, line_end: 46 }: Results
Token { kind: Space, char_start: 1718, char_end: 1719, byte_start: 1718, byte_end: 1719, column_start: 8, column_end: 9, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1719, char_end: 1722, byte_start: 1719, byte_end: 1722, column_start: 9, column_end: 12, line_start: 46, line_end: 46 }: are
Token { kind: Space, char_start: 1722, char_end: 1723, byte_start: 1722, byte_end: 1723, column_start: 12, column_end: 13, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1723, char_end: 1731, byte_start: 1723, byte_end: 1731, column_start: 13, column_end: 21, line_start: 46, line_end: 46 }: normally
Token { kind: Space, char_start: 1731, char_end: 1732, byte_start: 1731, byte_end: 1732, column_start: 21, column_end: 22, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1732, char_end: 1741, byte_start: 1732, byte_end: 1741, column_start: 22, column_end: 31, line_start: 46, line_end: 46 }: displayed
Token { kind: Space, char_start: 1741, char_end: 1742, byte_start: 1741, byte_end: 1742, column_start: 31, column_end: 32, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1742, char_end: 1744, byte_start: 1742, byte_end: 1744, column_start: 32, column_end: 34, line_start: 46, line_end: 46 }: in
Token { kind: Space, char_start: 1744, char_end: 1745, byte_start: 1744, byte_end: 1745, column_start: 34, column_end: 35, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1745, char_end: 1748, byte_start: 1745, byte_end: 1748, column_start: 35, column_end: 38, line_start: 46, line_end: 46 }: the
Token { kind: Space, char_start: 1748, char_end: 1749, byte_start: 1748, byte_end: 1749, column_start: 38, column_end: 39, line_start: 46, line_end: 46 }: " "
Token { kind: Bar, char_start: 1749, char_end: 1750, byte_start: 1749, byte_end: 1750, column_start: 39, column_end: 40, line_start: 46, line_end: 46 }: |
Token { kind: Text, char_start: 1750, char_end: 1758, byte_start: 1750, byte_end: 1758, column_start: 40, column_end: 48, line_start: 46, line_end: 46 }: quickfix
Token { kind: Bar, char_start: 1758, char_end: 1759, byte_start: 1758, byte_end: 1759, column_start: 48, column_end: 49, line_start: 46, line_end: 46 }: |
Token { kind: Space, char_start: 1759, char_end: 1760, byte_start: 1759, byte_end: 1760, column_start: 49, column_end: 50, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1760, char_end: 1767, byte_start: 1760, byte_end: 1767, column_start: 50, column_end: 57, line_start: 46, line_end: 46 }: window,
Token { kind: Space, char_start: 1767, char_end: 1768, byte_start: 1767, byte_end: 1768, column_start: 57, column_end: 58, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1768, char_end: 1771, byte_start: 1768, byte_end: 1771, column_start: 58, column_end: 61, line_start: 46, line_end: 46 }: but
Token { kind: Space, char_start: 1771, char_end: 1772, byte_start: 1771, byte_end: 1772, column_start: 61, column_end: 62, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1772, char_end: 1778, byte_start: 1772, byte_end: 1778, column_start: 62, column_end: 68, line_start: 46, line_end: 46 }: Ferret
Token { kind: Space, char_start: 1778, char_end: 1779, byte_start: 1778, byte_end: 1779, column_start: 68, column_end: 69, line_start: 46, line_end: 46 }: " "
Token { kind: Text, char_start: 1779, char_end: 1783, byte_start: 1779, byte_end: 1783, column_start: 69, column_end: 73, line_start: 46, line_end: 46 }: also
Token { kind: Newline, char_start: 1783, char_end: 1784, byte_start: 1783, byte_end: 1784, column_start: 73, column_end: 1, line_start: 46, line_end: 47 }: "\n"
Token { kind: Text, char_start: 1784, char_end: 1792, byte_start: 1784, byte_end: 1792, column_start: 1, column_end: 9, line_start: 47, line_end: 47 }: provides
Token { kind: Space, char_start: 1792, char_end: 1793, byte_start: 1792, byte_end: 1793, column_start: 9, column_end: 10, line_start: 47, line_end: 47 }: " "
Token { kind: Text, char_start: 1793, char_end: 1794, byte_start: 1793, byte_end: 1794, column_start: 10, column_end: 11, line_start: 47, line_end: 47 }: a
Token { kind: Space, char_start: 1794, char_end: 1795, byte_start: 1794, byte_end: 1795, column_start: 11, column_end: 12, line_start: 47, line_end: 47 }: " "
Token { kind: Bar, char_start: 1795, char_end: 1796, byte_start: 1795, byte_end: 1796, column_start: 12, column_end: 13, line_start: 47, line_end: 47 }: |
Token { kind: Text, char_start: 1796, char_end: 1801, byte_start: 1796, byte_end: 1801, column_start: 13, column_end: 18, line_start: 47, line_end: 47 }: :Lack
Token { kind: Bar, char_start: 1801, char_end: 1802, byte_start: 1801, byte_end: 1802, column_start: 18, column_end: 19, line_start: 47, line_end: 47 }: |
Token { kind: Space, char_start: 1802, char_end: 1803, byte_start: 1802, byte_end: 1803, column_start: 19, column_end: 20, line_start: 47, line_end: 47 }: " "
Token { kind: Text, char_start: 1803, char_end: 1810, byte_start: 1803, byte_end: 1810, column_start: 20, column_end: 27, line_start: 47, line_end: 47 }: command
Token { kind: Space, char_start: 1810, char_end: 1811, byte_start: 1810, byte_end: 1811, column_start: 27, column_end: 28, line_start: 47, line_end: 47 }: " "
Token { kind: Text, char_start: 1811, char_end: 1815, byte_start: 1811, byte_end: 1815, column_start: 28, column_end: 32, line_start: 47, line_end: 47 }: that
Token { kind: Space, char_start: 1815, char_end: 1816, byte_start: 1815, byte_end: 1816, column_start: 32, column_end: 33, line_start: 47, line_end: 47 }: " "
Token { kind: Text, char_start: 1816, char_end: 1823, byte_start: 1816, byte_end: 1823, column_start: 33, column_end: 40, line_start: 47, line_end: 47 }: behaves
Token { kind: Space, char_start: 1823, char_end: 1824, byte_start: 1823, byte_end: 1824, column_start: 40, column_end: 41, line_start: 47, line_end: 47 }: " "
Token { kind: Text, char_start: 1824, char_end: 1828, byte_start: 1824, byte_end: 1828, column_start: 41, column_end: 45, line_start: 47, line_end: 47 }: like
Token { kind: Space, char_start: 1828, char_end: 1829, byte_start: 1828, byte_end: 1829, column_start: 45, column_end: 46, line_start: 47, line_end: 47 }: " "
Token { kind: Bar, char_start: 1829, char_end: 1830, byte_start: 1829, byte_end: 1830, column_start: 46, column_end: 47, line_start: 47, line_end: 47 }: |
Token { kind: Text, char_start: 1830, char_end: 1834, byte_start: 1830, byte_end: 1834, column_start: 47, column_end: 51, line_start: 47, line_end: 47 }: :Ack
Token { kind: Bar, char_start: 1834, char_end: 1835, byte_start: 1834, byte_end: 1835, column_start: 51, column_end: 52, line_start: 47, line_end: 47 }: |
Token { kind: Space, char_start: 1835, char_end: 1836, byte_start: 1835, byte_end: 1836, column_start: 52, column_end: 53, line_start: 47, line_end: 47 }: " "
Token { kind: Text, char_start: 1836, char_end: 1839, byte_start: 1836, byte_end: 1839, column_start: 53, column_end: 56, line_start: 47, line_end: 47 }: but
Token { kind: Space, char_start: 1839, char_end: 1840, byte_start: 1839, byte_end: 1840, column_start: 56, column_end: 57, line_start: 47, line_end: 47 }: " "
Token { kind: Text, char_start: 1840, char_end: 1844, byte_start: 1840, byte_end: 1844, column_start: 57, column_end: 61, line_start: 47, line_end: 47 }: uses
Token { kind: Space, char_start: 1844, char_end: 1845, byte_start: 1844, byte_end: 1845, column_start: 61, column_end: 62, line_start: 47, line_end: 47 }: " "
Token { kind: Text, char_start: 1845, char_end: 1848, byte_start: 1845, byte_end: 1848, column_start: 62, column_end: 65, line_start: 47, line_end: 47 }: the
Token { kind: Newline, char_start: 1848, char_end: 1849, byte_start: 1848, byte_end: 1849, column_start: 65, column_end: 1, line_start: 47, line_end: 48 }: "\n"
Token { kind: Bar, char_start: 1849, char_end: 1850, byte_start: 1849, byte_end: 1850, column_start: 1, column_end: 2, line_start: 48, line_end: 48 }: |
Token { kind: Text, char_start: 1850, char_end: 1858, byte_start: 1850, byte_end: 1858, column_start: 2, column_end: 10, line_start: 48, line_end: 48 }: location
Token { kind: Hyphen, char_start: 1858, char_end: 1859, byte_start: 1858, byte_end: 1859, column_start: 10, column_end: 11, line_start: 48, line_end: 48 }: -
Token { kind: Text, char_start: 1859, char_end: 1863, byte_start: 1859, byte_end: 1863, column_start: 11, column_end: 15, line_start: 48, line_end: 48 }: list
Token { kind: Bar, char_start: 1863, char_end: 1864, byte_start: 1863, byte_end: 1864, column_start: 15, column_end: 16, line_start: 48, line_end: 48 }: |
Token { kind: Space, char_start: 1864, char_end: 1865, byte_start: 1864, byte_end: 1865, column_start: 16, column_end: 17, line_start: 48, line_end: 48 }: " "
Token { kind: Text, char_start: 1865, char_end: 1873, byte_start: 1865, byte_end: 1873, column_start: 17, column_end: 25, line_start: 48, line_end: 48 }: instead,
Token { kind: Space, char_start: 1873, char_end: 1874, byte_start: 1873, byte_end: 1874, column_start: 25, column_end: 26, line_start: 48, line_end: 48 }: " "
Token { kind: Text, char_start: 1874, char_end: 1877, byte_start: 1874, byte_end: 1877, column_start: 26, column_end: 29, line_start: 48, line_end: 48 }: and
Token { kind: Space, char_start: 1877, char_end: 1878, byte_start: 1877, byte_end: 1878, column_start: 29, column_end: 30, line_start: 48, line_end: 48 }: " "
Token { kind: Text, char_start: 1878, char_end: 1879, byte_start: 1878, byte_end: 1879, column_start: 30, column_end: 31, line_start: 48, line_end: 48 }: a
Token { kind: Space, char_start: 1879, char_end: 1880, byte_start: 1879, byte_end: 1880, column_start: 31, column_end: 32, line_start: 48, line_end: 48 }: " "
Token { kind: Backtick, char_start: 1880, char_end: 1881, byte_start: 1880, byte_end: 1881, column_start: 32, column_end: 33, line_start: 48, line_end: 48 }: `
Token { kind: BlockQuote, char_start: 1881, char_end: 1882, byte_start: 1881, byte_end: 1882, column_start: 33, column_end: 34, line_start: 48, line_end: 48 }: <
Token { kind: Text, char_start: 1882, char_end: 1888, byte_start: 1882, byte_end: 1888, column_start: 34, column_end: 40, line_start: 48, line_end: 48 }: Leader
Token { kind: BlockQuote, char_start: 1888, char_end: 1889, byte_start: 1888, byte_end: 1889, column_start: 40, column_end: 41, line_start: 48, line_end: 48 }: >
Token { kind: Text, char_start: 1889, char_end: 1890, byte_start: 1889, byte_end: 1890, column_start: 41, column_end: 42, line_start: 48, line_end: 48 }: l
Token { kind: Backtick, char_start: 1890, char_end: 1891, byte_start: 1890, byte_end: 1891, column_start: 42, column_end: 43, line_start: 48, line_end: 48 }: `
Token { kind: Space, char_start: 1891, char_end: 1892, byte_start: 1891, byte_end: 1892, column_start: 43, column_end: 44, line_start: 48, line_end: 48 }: " "
Token { kind: Text, char_start: 1892, char_end: 1899, byte_start: 1892, byte_end: 1899, column_start: 44, column_end: 51, line_start: 48, line_end: 48 }: mapping
Token { kind: Space, char_start: 1899, char_end: 1900, byte_start: 1899, byte_end: 1900, column_start: 51, column_end: 52, line_start: 48, line_end: 48 }: " "
Token { kind: Text, char_start: 1900, char_end: 1902, byte_start: 1900, byte_end: 1902, column_start: 52, column_end: 54, line_start: 48, line_end: 48 }: as
Token { kind: Space, char_start: 1902, char_end: 1903, byte_start: 1902, byte_end: 1903, column_start: 54, column_end: 55, line_start: 48, line_end: 48 }: " "
Token { kind: Text, char_start: 1903, char_end: 1904, byte_start: 1903, byte_end: 1904, column_start: 55, column_end: 56, line_start: 48, line_end: 48 }: a
Token { kind: Space, char_start: 1904, char_end: 1905, byte_start: 1904, byte_end: 1905, column_start: 56, column_end: 57, line_start: 48, line_end: 48 }: " "
Token { kind: Text, char_start: 1905, char_end: 1913, byte_start: 1905, byte_end: 1913, column_start: 57, column_end: 65, line_start: 48, line_end: 48 }: shortcut
Token { kind: Space, char_start: 1913, char_end: 1914, byte_start: 1913, byte_end: 1914, column_start: 65, column_end: 66, line_start: 48, line_end: 48 }: " "
Token { kind: Text, char_start: 1914, char_end: 1916, byte_start: 1914, byte_end: 1916, column_start: 66, column_end: 68, line_start: 48, line_end: 48 }: to
Token { kind: Space, char_start: 1916, char_end: 1917, byte_start: 1916, byte_end: 1917, column_start: 68, column_end: 69, line_start: 48, line_end: 48 }: " "
Token { kind: Bar, char_start: 1917, char_end: 1918, byte_start: 1917, byte_end: 1918, column_start: 69, column_end: 70, line_start: 48, line_end: 48 }: |
Token { kind: Text, char_start: 1918, char_end: 1923, byte_start: 1918, byte_end: 1923, column_start: 70, column_end: 75, line_start: 48, line_end: 48 }: :Lack
Token { kind: Bar, char_start: 1923, char_end: 1924, byte_start: 1923, byte_end: 1924, column_start: 75, column_end: 76, line_start: 48, line_end: 48 }: |
Token { kind: Text, char_start: 1924, char_end: 1925, byte_start: 1924, byte_end: 1925, column_start: 76, column_end: 77, line_start: 48, line_end: 48 }: .
Token { kind: Newline, char_start: 1925, char_end: 1926, byte_start: 1925, byte_end: 1926, column_start: 77, column_end: 1, line_start: 48, line_end: 49 }: "\n"
Token { kind: Newline, char_start: 1926, char_end: 1927, byte_start: 1926, byte_end: 1927, column_start: 1, column_end: 1, line_start: 49, line_end: 50 }: "\n"
Token { kind: Bar, char_start: 1927, char_end: 1928, byte_start: 1927, byte_end: 1928, column_start: 1, column_end: 2, line_start: 50, line_end: 50 }: |
Token { kind: Text, char_start: 1928, char_end: 1933, byte_start: 1928, byte_end: 1933, column_start: 2, column_end: 7, line_start: 50, line_end: 50 }: :Back
Token { kind: Bar, char_start: 1933, char_end: 1934, byte_start: 1933, byte_end: 1934, column_start: 7, column_end: 8, line_start: 50, line_end: 50 }: |
Token { kind: Space, char_start: 1934, char_end: 1935, byte_start: 1934, byte_end: 1935, column_start: 8, column_end: 9, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1935, char_end: 1938, byte_start: 1935, byte_end: 1938, column_start: 9, column_end: 12, line_start: 50, line_end: 50 }: and
Token { kind: Space, char_start: 1938, char_end: 1939, byte_start: 1938, byte_end: 1939, column_start: 12, column_end: 13, line_start: 50, line_end: 50 }: " "
Token { kind: Bar, char_start: 1939, char_end: 1940, byte_start: 1939, byte_end: 1940, column_start: 13, column_end: 14, line_start: 50, line_end: 50 }: |
Token { kind: Text, char_start: 1940, char_end: 1946, byte_start: 1940, byte_end: 1946, column_start: 14, column_end: 20, line_start: 50, line_end: 50 }: :Black
Token { kind: Bar, char_start: 1946, char_end: 1947, byte_start: 1946, byte_end: 1947, column_start: 20, column_end: 21, line_start: 50, line_end: 50 }: |
Token { kind: Space, char_start: 1947, char_end: 1948, byte_start: 1947, byte_end: 1948, column_start: 21, column_end: 22, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1948, char_end: 1951, byte_start: 1948, byte_end: 1951, column_start: 22, column_end: 25, line_start: 50, line_end: 50 }: are
Token { kind: Space, char_start: 1951, char_end: 1952, byte_start: 1951, byte_end: 1952, column_start: 25, column_end: 26, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1952, char_end: 1961, byte_start: 1952, byte_end: 1961, column_start: 26, column_end: 35, line_start: 50, line_end: 50 }: analogous
Token { kind: Space, char_start: 1961, char_end: 1962, byte_start: 1961, byte_end: 1962, column_start: 35, column_end: 36, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1962, char_end: 1964, byte_start: 1962, byte_end: 1964, column_start: 36, column_end: 38, line_start: 50, line_end: 50 }: to
Token { kind: Space, char_start: 1964, char_end: 1965, byte_start: 1964, byte_end: 1965, column_start: 38, column_end: 39, line_start: 50, line_end: 50 }: " "
Token { kind: Bar, char_start: 1965, char_end: 1966, byte_start: 1965, byte_end: 1966, column_start: 39, column_end: 40, line_start: 50, line_end: 50 }: |
Token { kind: Text, char_start: 1966, char_end: 1970, byte_start: 1966, byte_end: 1970, column_start: 40, column_end: 44, line_start: 50, line_end: 50 }: :Ack
Token { kind: Bar, char_start: 1970, char_end: 1971, byte_start: 1970, byte_end: 1971, column_start: 44, column_end: 45, line_start: 50, line_end: 50 }: |
Token { kind: Space, char_start: 1971, char_end: 1972, byte_start: 1971, byte_end: 1972, column_start: 45, column_end: 46, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1972, char_end: 1975, byte_start: 1972, byte_end: 1975, column_start: 46, column_end: 49, line_start: 50, line_end: 50 }: and
Token { kind: Space, char_start: 1975, char_end: 1976, byte_start: 1975, byte_end: 1976, column_start: 49, column_end: 50, line_start: 50, line_end: 50 }: " "
Token { kind: Bar, char_start: 1976, char_end: 1977, byte_start: 1976, byte_end: 1977, column_start: 50, column_end: 51, line_start: 50, line_end: 50 }: |
Token { kind: Text, char_start: 1977, char_end: 1982, byte_start: 1977, byte_end: 1982, column_start: 51, column_end: 56, line_start: 50, line_end: 50 }: :Lack
Token { kind: Bar, char_start: 1982, char_end: 1983, byte_start: 1982, byte_end: 1983, column_start: 56, column_end: 57, line_start: 50, line_end: 50 }: |
Token { kind: Text, char_start: 1983, char_end: 1984, byte_start: 1983, byte_end: 1984, column_start: 57, column_end: 58, line_start: 50, line_end: 50 }: ,
Token { kind: Space, char_start: 1984, char_end: 1985, byte_start: 1984, byte_end: 1985, column_start: 58, column_end: 59, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1985, char_end: 1988, byte_start: 1985, byte_end: 1988, column_start: 59, column_end: 62, line_start: 50, line_end: 50 }: but
Token { kind: Space, char_start: 1988, char_end: 1989, byte_start: 1988, byte_end: 1989, column_start: 62, column_end: 63, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1989, char_end: 1995, byte_start: 1989, byte_end: 1995, column_start: 63, column_end: 69, line_start: 50, line_end: 50 }: scoped
Token { kind: Space, char_start: 1995, char_end: 1996, byte_start: 1995, byte_end: 1996, column_start: 69, column_end: 70, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1996, char_end: 1998, byte_start: 1996, byte_end: 1998, column_start: 70, column_end: 72, line_start: 50, line_end: 50 }: to
Token { kind: Space, char_start: 1998, char_end: 1999, byte_start: 1998, byte_end: 1999, column_start: 72, column_end: 73, line_start: 50, line_end: 50 }: " "
Token { kind: Text, char_start: 1999, char_end: 2005, byte_start: 1999, byte_end: 2005, column_start: 73, column_end: 79, line_start: 50, line_end: 50 }: search
Token { kind: Newline, char_start: 2005, char_end: 2006, byte_start: 2005, byte_end: 2006, column_start: 79, column_end: 1, line_start: 50, line_end: 51 }: "\n"
Token { kind: Text, char_start: 2006, char_end: 2012, byte_start: 2006, byte_end: 2012, column_start: 1, column_end: 7, line_start: 51, line_end: 51 }: within
Token { kind: Space, char_start: 2012, char_end: 2013, byte_start: 2012, byte_end: 2013, column_start: 7, column_end: 8, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2013, char_end: 2022, byte_start: 2013, byte_end: 2022, column_start: 8, column_end: 17, line_start: 51, line_end: 51 }: currently
Token { kind: Space, char_start: 2022, char_end: 2023, byte_start: 2022, byte_end: 2023, column_start: 17, column_end: 18, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2023, char_end: 2027, byte_start: 2023, byte_end: 2027, column_start: 18, column_end: 22, line_start: 51, line_end: 51 }: open
Token { kind: Space, char_start: 2027, char_end: 2028, byte_start: 2027, byte_end: 2028, column_start: 22, column_end: 23, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2028, char_end: 2035, byte_start: 2028, byte_end: 2035, column_start: 23, column_end: 30, line_start: 51, line_end: 51 }: buffers
Token { kind: Space, char_start: 2035, char_end: 2036, byte_start: 2035, byte_end: 2036, column_start: 30, column_end: 31, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2036, char_end: 2041, byte_start: 2036, byte_end: 2041, column_start: 31, column_end: 36, line_start: 51, line_end: 51 }: only.
Token { kind: Space, char_start: 2041, char_end: 2042, byte_start: 2041, byte_end: 2042, column_start: 36, column_end: 37, line_start: 51, line_end: 51 }: " "
Token { kind: Bar, char_start: 2042, char_end: 2043, byte_start: 2042, byte_end: 2043, column_start: 37, column_end: 38, line_start: 51, line_end: 51 }: |
Token { kind: Text, char_start: 2043, char_end: 2049, byte_start: 2043, byte_end: 2049, column_start: 38, column_end: 44, line_start: 51, line_end: 51 }: :Quack
Token { kind: Bar, char_start: 2049, char_end: 2050, byte_start: 2049, byte_end: 2050, column_start: 44, column_end: 45, line_start: 51, line_end: 51 }: |
Token { kind: Space, char_start: 2050, char_end: 2051, byte_start: 2050, byte_end: 2051, column_start: 45, column_end: 46, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2051, char_end: 2053, byte_start: 2051, byte_end: 2053, column_start: 46, column_end: 48, line_start: 51, line_end: 51 }: is
Token { kind: Space, char_start: 2053, char_end: 2054, byte_start: 2053, byte_end: 2054, column_start: 48, column_end: 49, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2054, char_end: 2060, byte_start: 2054, byte_end: 2060, column_start: 49, column_end: 55, line_start: 51, line_end: 51 }: scoped
Token { kind: Space, char_start: 2060, char_end: 2061, byte_start: 2060, byte_end: 2061, column_start: 55, column_end: 56, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2061, char_end: 2063, byte_start: 2061, byte_end: 2063, column_start: 56, column_end: 58, line_start: 51, line_end: 51 }: to
Token { kind: Space, char_start: 2063, char_end: 2064, byte_start: 2063, byte_end: 2064, column_start: 58, column_end: 59, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2064, char_end: 2070, byte_start: 2064, byte_end: 2070, column_start: 59, column_end: 65, line_start: 51, line_end: 51 }: search
Token { kind: Space, char_start: 2070, char_end: 2071, byte_start: 2070, byte_end: 2071, column_start: 65, column_end: 66, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2071, char_end: 2076, byte_start: 2071, byte_end: 2076, column_start: 66, column_end: 71, line_start: 51, line_end: 51 }: among
Token { kind: Space, char_start: 2076, char_end: 2077, byte_start: 2076, byte_end: 2077, column_start: 71, column_end: 72, line_start: 51, line_end: 51 }: " "
Token { kind: Text, char_start: 2077, char_end: 2080, byte_start: 2077, byte_end: 2080, column_start: 72, column_end: 75, line_start: 51, line_end: 51 }: the
Token { kind: Newline, char_start: 2080, char_end: 2081, byte_start: 2080, byte_end: 2081, column_start: 75, column_end: 1, line_start: 51, line_end: 52 }: "\n"
Token { kind: Text, char_start: 2081, char_end: 2086, byte_start: 2081, byte_end: 2086, column_start: 1, column_end: 6, line_start: 52, line_end: 52 }: files
Token { kind: Space, char_start: 2086, char_end: 2087, byte_start: 2086, byte_end: 2087, column_start: 6, column_end: 7, line_start: 52, line_end: 52 }: " "
Token { kind: Text, char_start: 2087, char_end: 2096, byte_start: 2087, byte_end: 2096, column_start: 7, column_end: 16, line_start: 52, line_end: 52 }: currently
Token { kind: Space, char_start: 2096, char_end: 2097, byte_start: 2096, byte_end: 2097, column_start: 16, column_end: 17, line_start: 52, line_end: 52 }: " "
Token { kind: Text, char_start: 2097, char_end: 2099, byte_start: 2097, byte_end: 2099, column_start: 17, column_end: 19, line_start: 52, line_end: 52 }: in
Token { kind: Space, char_start: 2099, char_end: 2100, byte_start: 2099, byte_end: 2100, column_start: 19, column_end: 20, line_start: 52, line_end: 52 }: " "
Token { kind: Text, char_start: 2100, char_end: 2103, byte_start: 2100, byte_end: 2103, column_start: 20, column_end: 23, line_start: 52, line_end: 52 }: the
Token { kind: Space, char_start: 2103, char_end: 2104, byte_start: 2103, byte_end: 2104, column_start: 23, column_end: 24, line_start: 52, line_end: 52 }: " "
Token { kind: Bar, char_start: 2104, char_end: 2105, byte_start: 2104, byte_end: 2105, column_start: 24, column_end: 25, line_start: 52, line_end: 52 }: |
Token { kind: Text, char_start: 2105, char_end: 2113, byte_start: 2105, byte_end: 2113, column_start: 25, column_end: 33, line_start: 52, line_end: 52 }: quickfix
Token { kind: Bar, char_start: 2113, char_end: 2114, byte_start: 2113, byte_end: 2114, column_start: 33, column_end: 34, line_start: 52, line_end: 52 }: |
Token { kind: Space, char_start: 2114, char_end: 2115, byte_start: 2114, byte_end: 2115, column_start: 34, column_end: 35, line_start: 52, line_end: 52 }: " "
Token { kind: Text, char_start: 2115, char_end: 2120, byte_start: 2115, byte_end: 2120, column_start: 35, column_end: 40, line_start: 52, line_end: 52 }: list.
Token { kind: Newline, char_start: 2120, char_end: 2121, byte_start: 2120, byte_end: 2121, column_start: 40, column_end: 1, line_start: 52, line_end: 53 }: "\n"
Token { kind: Newline, char_start: 2121, char_end: 2122, byte_start: 2121, byte_end: 2122, column_start: 1, column_end: 1, line_start: 53, line_end: 54 }: "\n"
Token { kind: Heading(Heading2), char_start: 2122, char_end: 2124, byte_start: 2122, byte_end: 2124, column_start: 1, column_end: 3, line_start: 54, line_end: 54 }: ##
Token { kind: Space, char_start: 2124, char_end: 2125, byte_start: 2124, byte_end: 2125, column_start: 3, column_end: 4, line_start: 54, line_end: 54 }: " "
Token { kind: Text, char_start: 2125, char_end: 2127, byte_start: 2125, byte_end: 2127, column_start: 4, column_end: 6, line_start: 54, line_end: 54 }: 2.
Token { kind: Space, char_start: 2127, char_end: 2128, byte_start: 2127, byte_end: 2128, column_start: 6, column_end: 7, line_start: 54, line_end: 54 }: " "
Token { kind: Text, char_start: 2128, char_end: 2139, byte_start: 2128, byte_end: 2139, column_start: 7, column_end: 18, line_start: 54, line_end: 54 }: Streamlined
Token { kind: Space, char_start: 2139, char_end: 2140, byte_start: 2139, byte_end: 2140, column_start: 18, column_end: 19, line_start: 54, line_end: 54 }: " "
Token { kind: Text, char_start: 2140, char_end: 2145, byte_start: 2140, byte_end: 2145, column_start: 19, column_end: 24, line_start: 54, line_end: 54 }: multi
Token { kind: Hyphen, char_start: 2145, char_end: 2146, byte_start: 2145, byte_end: 2146, column_start: 24, column_end: 25, line_start: 54, line_end: 54 }: -
Token { kind: Text, char_start: 2146, char_end: 2150, byte_start: 2146, byte_end: 2150, column_start: 25, column_end: 29, line_start: 54, line_end: 54 }: file
Token { kind: Space, char_start: 2150, char_end: 2151, byte_start: 2150, byte_end: 2151, column_start: 29, column_end: 30, line_start: 54, line_end: 54 }: " "
Token { kind: Text, char_start: 2151, char_end: 2158, byte_start: 2151, byte_end: 2158, column_start: 30, column_end: 37, line_start: 54, line_end: 54 }: replace
Token { kind: Newline, char_start: 2158, char_end: 2159, byte_start: 2158, byte_end: 2159, column_start: 37, column_end: 1, line_start: 54, line_end: 55 }: "\n"
Token { kind: Newline, char_start: 2159, char_end: 2160, byte_start: 2159, byte_end: 2160, column_start: 1, column_end: 1, line_start: 55, line_end: 56 }: "\n"
Token { kind: Text, char_start: 2160, char_end: 2163, byte_start: 2160, byte_end: 2163, column_start: 1, column_end: 4, line_start: 56, line_end: 56 }: The
Token { kind: Space, char_start: 2163, char_end: 2164, byte_start: 2163, byte_end: 2164, column_start: 4, column_end: 5, line_start: 56, line_end: 56 }: " "
Token { kind: Text, char_start: 2164, char_end: 2173, byte_start: 2164, byte_end: 2173, column_start: 5, column_end: 14, line_start: 56, line_end: 56 }: companion
Token { kind: Space, char_start: 2173, char_end: 2174, byte_start: 2173, byte_end: 2174, column_start: 14, column_end: 15, line_start: 56, line_end: 56 }: " "
Token { kind: Text, char_start: 2174, char_end: 2176, byte_start: 2174, byte_end: 2176, column_start: 15, column_end: 17, line_start: 56, line_end: 56 }: to
Token { kind: Space, char_start: 2176, char_end: 2177, byte_start: 2176, byte_end: 2177, column_start: 17, column_end: 18, line_start: 56, line_end: 56 }: " "
Token { kind: Bar, char_start: 2177, char_end: 2178, byte_start: 2177, byte_end: 2178, column_start: 18, column_end: 19, line_start: 56, line_end: 56 }: |
Token { kind: Text, char_start: 2178, char_end: 2182, byte_start: 2178, byte_end: 2182, column_start: 19, column_end: 23, line_start: 56, line_end: 56 }: :Ack
Token { kind: Bar, char_start: 2182, char_end: 2183, byte_start: 2182, byte_end: 2183, column_start: 23, column_end: 24, line_start: 56, line_end: 56 }: |
Token { kind: Space, char_start: 2183, char_end: 2184, byte_start: 2183, byte_end: 2184, column_start: 24, column_end: 25, line_start: 56, line_end: 56 }: " "
Token { kind: Text, char_start: 2184, char_end: 2186, byte_start: 2184, byte_end: 2186, column_start: 25, column_end: 27, line_start: 56, line_end: 56 }: is
Token { kind: Space, char_start: 2186, char_end: 2187, byte_start: 2186, byte_end: 2187, column_start: 27, column_end: 28, line_start: 56, line_end: 56 }: " "
Token { kind: Bar, char_start: 2187, char_end: 2188, byte_start: 2187, byte_end: 2188, column_start: 28, column_end: 29, line_start: 56, line_end: 56 }: |
Token { kind: Text, char_start: 2188, char_end: 2193, byte_start: 2188, byte_end: 2193, column_start: 29, column_end: 34, line_start: 56, line_end: 56 }: :Acks
Token { kind: Bar, char_start: 2193, char_end: 2194, byte_start: 2193, byte_end: 2194, column_start: 34, column_end: 35, line_start: 56, line_end: 56 }: |
Token { kind: Space, char_start: 2194, char_end: 2195, byte_start: 2194, byte_end: 2195, column_start: 35, column_end: 36, line_start: 56, line_end: 56 }: " "
Token { kind: Lparen, char_start: 2195, char_end: 2196, byte_start: 2195, byte_end: 2196, column_start: 36, column_end: 37, line_start: 56, line_end: 56 }: (
Token { kind: Text, char_start: 2196, char_end: 2205, byte_start: 2196, byte_end: 2205, column_start: 37, column_end: 46, line_start: 56, line_end: 56 }: mnemonic:
Token { kind: Space, char_start: 2205, char_end: 2206, byte_start: 2205, byte_end: 2206, column_start: 46, column_end: 47, line_start: 56, line_end: 56 }: " "
Token { kind: Text, char_start: 2206, char_end: 2210, byte_start: 2206, byte_end: 2210, column_start: 47, column_end: 51, line_start: 56, line_end: 56 }: "Ack
Token { kind: Space, char_start: 2210, char_end: 2211, byte_start: 2210, byte_end: 2211, column_start: 51, column_end: 52, line_start: 56, line_end: 56 }: " "
Token { kind: Text, char_start: 2211, char_end: 2223, byte_start: 2211, byte_end: 2223, column_start: 52, column_end: 64, line_start: 56, line_end: 56 }: substitute",
Token { kind: Space, char_start: 2223, char_end: 2224, byte_start: 2223, byte_end: 2224, column_start: 64, column_end: 65, line_start: 56, line_end: 56 }: " "
Token { kind: Text, char_start: 2224, char_end: 2234, byte_start: 2224, byte_end: 2234, column_start: 65, column_end: 75, line_start: 56, line_end: 56 }: accessible
Token { kind: Space, char_start: 2234, char_end: 2235, byte_start: 2234, byte_end: 2235, column_start: 75, column_end: 76, line_start: 56, line_end: 56 }: " "
Token { kind: Text, char_start: 2235, char_end: 2238, byte_start: 2235, byte_end: 2238, column_start: 76, column_end: 79, line_start: 56, line_end: 56 }: via
Token { kind: Newline, char_start: 2238, char_end: 2239, byte_start: 2238, byte_end: 2239, column_start: 79, column_end: 1, line_start: 56, line_end: 57 }: "\n"
Token { kind: Text, char_start: 2239, char_end: 2247, byte_start: 2239, byte_end: 2247, column_start: 1, column_end: 9, line_start: 57, line_end: 57 }: shortcut
Token { kind: Space, char_start: 2247, char_end: 2248, byte_start: 2247, byte_end: 2248, column_start: 9, column_end: 10, line_start: 57, line_end: 57 }: " "
Token { kind: Backtick, char_start: 2248, char_end: 2249, byte_start: 2248, byte_end: 2249, column_start: 10, column_end: 11, line_start: 57, line_end: 57 }: `
Token { kind: BlockQuote, char_start: 2249, char_end: 2250, byte_start: 2249, byte_end: 2250, column_start: 11, column_end: 12, line_start: 57, line_end: 57 }: <
Token { kind: Text, char_start: 2250, char_end: 2256, byte_start: 2250, byte_end: 2256, column_start: 12, column_end: 18, line_start: 57, line_end: 57 }: Leader
Token { kind: BlockQuote, char_start: 2256, char_end: 2257, byte_start: 2256, byte_end: 2257, column_start: 18, column_end: 19, line_start: 57, line_end: 57 }: >
Token { kind: Text, char_start: 2257, char_end: 2258, byte_start: 2257, byte_end: 2258, column_start: 19, column_end: 20, line_start: 57, line_end: 57 }: r
Token { kind: Backtick, char_start: 2258, char_end: 2259, byte_start: 2258, byte_end: 2259, column_start: 20, column_end: 21, line_start: 57, line_end: 57 }: `
Token { kind: Rparen, char_start: 2259, char_end: 2260, byte_start: 2259, byte_end: 2260, column_start: 21, column_end: 22, line_start: 57, line_end: 57 }: )
Token { kind: Text, char_start: 2260, char_end: 2261, byte_start: 2260, byte_end: 2261, column_start: 22, column_end: 23, line_start: 57, line_end: 57 }: ,
Token { kind: Space, char_start: 2261, char_end: 2262, byte_start: 2261, byte_end: 2262, column_start: 23, column_end: 24, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2262, char_end: 2267, byte_start: 2262, byte_end: 2267, column_start: 24, column_end: 29, line_start: 57, line_end: 57 }: which
Token { kind: Space, char_start: 2267, char_end: 2268, byte_start: 2267, byte_end: 2268, column_start: 29, column_end: 30, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2268, char_end: 2274, byte_start: 2268, byte_end: 2274, column_start: 30, column_end: 36, line_start: 57, line_end: 57 }: allows
Token { kind: Space, char_start: 2274, char_end: 2275, byte_start: 2274, byte_end: 2275, column_start: 36, column_end: 37, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2275, char_end: 2278, byte_start: 2275, byte_end: 2278, column_start: 37, column_end: 40, line_start: 57, line_end: 57 }: you
Token { kind: Space, char_start: 2278, char_end: 2279, byte_start: 2278, byte_end: 2279, column_start: 40, column_end: 41, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2279, char_end: 2281, byte_start: 2279, byte_end: 2281, column_start: 41, column_end: 43, line_start: 57, line_end: 57 }: to
Token { kind: Space, char_start: 2281, char_end: 2282, byte_start: 2281, byte_end: 2282, column_start: 43, column_end: 44, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2282, char_end: 2285, byte_start: 2282, byte_end: 2285, column_start: 44, column_end: 47, line_start: 57, line_end: 57 }: run
Token { kind: Space, char_start: 2285, char_end: 2286, byte_start: 2285, byte_end: 2286, column_start: 47, column_end: 48, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2286, char_end: 2287, byte_start: 2286, byte_end: 2287, column_start: 48, column_end: 49, line_start: 57, line_end: 57 }: a
Token { kind: Space, char_start: 2287, char_end: 2288, byte_start: 2287, byte_end: 2288, column_start: 49, column_end: 50, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2288, char_end: 2293, byte_start: 2288, byte_end: 2293, column_start: 50, column_end: 55, line_start: 57, line_end: 57 }: multi
Token { kind: Hyphen, char_start: 2293, char_end: 2294, byte_start: 2293, byte_end: 2294, column_start: 55, column_end: 56, line_start: 57, line_end: 57 }: -
Token { kind: Text, char_start: 2294, char_end: 2298, byte_start: 2294, byte_end: 2298, column_start: 56, column_end: 60, line_start: 57, line_end: 57 }: file
Token { kind: Space, char_start: 2298, char_end: 2299, byte_start: 2298, byte_end: 2299, column_start: 60, column_end: 61, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2299, char_end: 2306, byte_start: 2299, byte_end: 2306, column_start: 61, column_end: 68, line_start: 57, line_end: 57 }: replace
Token { kind: Space, char_start: 2306, char_end: 2307, byte_start: 2306, byte_end: 2307, column_start: 68, column_end: 69, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2307, char_end: 2313, byte_start: 2307, byte_end: 2313, column_start: 69, column_end: 75, line_start: 57, line_end: 57 }: across
Token { kind: Space, char_start: 2313, char_end: 2314, byte_start: 2313, byte_end: 2314, column_start: 75, column_end: 76, line_start: 57, line_end: 57 }: " "
Token { kind: Text, char_start: 2314, char_end: 2317, byte_start: 2314, byte_end: 2317, column_start: 76, column_end: 79, line_start: 57, line_end: 57 }: all
Token { kind: Newline, char_start: 2317, char_end: 2318, byte_start: 2317, byte_end: 2318, column_start: 79, column_end: 1, line_start: 57, line_end: 58 }: "\n"
Token { kind: Text, char_start: 2318, char_end: 2321, byte_start: 2318, byte_end: 2321, column_start: 1, column_end: 4, line_start: 58, line_end: 58 }: the
Token { kind: Space, char_start: 2321, char_end: 2322, byte_start: 2321, byte_end: 2322, column_start: 4, column_end: 5, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2322, char_end: 2327, byte_start: 2322, byte_end: 2327, column_start: 5, column_end: 10, line_start: 58, line_end: 58 }: files
Token { kind: Space, char_start: 2327, char_end: 2328, byte_start: 2327, byte_end: 2328, column_start: 10, column_end: 11, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2328, char_end: 2334, byte_start: 2328, byte_end: 2334, column_start: 11, column_end: 17, line_start: 58, line_end: 58 }: placed
Token { kind: Space, char_start: 2334, char_end: 2335, byte_start: 2334, byte_end: 2335, column_start: 17, column_end: 18, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2335, char_end: 2337, byte_start: 2335, byte_end: 2337, column_start: 18, column_end: 20, line_start: 58, line_end: 58 }: in
Token { kind: Space, char_start: 2337, char_end: 2338, byte_start: 2337, byte_end: 2338, column_start: 20, column_end: 21, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2338, char_end: 2341, byte_start: 2338, byte_end: 2341, column_start: 21, column_end: 24, line_start: 58, line_end: 58 }: the
Token { kind: Space, char_start: 2341, char_end: 2342, byte_start: 2341, byte_end: 2342, column_start: 24, column_end: 25, line_start: 58, line_end: 58 }: " "
Token { kind: Bar, char_start: 2342, char_end: 2343, byte_start: 2342, byte_end: 2343, column_start: 25, column_end: 26, line_start: 58, line_end: 58 }: |
Token { kind: Text, char_start: 2343, char_end: 2351, byte_start: 2343, byte_end: 2351, column_start: 26, column_end: 34, line_start: 58, line_end: 58 }: quickfix
Token { kind: Bar, char_start: 2351, char_end: 2352, byte_start: 2351, byte_end: 2352, column_start: 34, column_end: 35, line_start: 58, line_end: 58 }: |
Token { kind: Space, char_start: 2352, char_end: 2353, byte_start: 2352, byte_end: 2353, column_start: 35, column_end: 36, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2353, char_end: 2359, byte_start: 2353, byte_end: 2359, column_start: 36, column_end: 42, line_start: 58, line_end: 58 }: window
Token { kind: Space, char_start: 2359, char_end: 2360, byte_start: 2359, byte_end: 2360, column_start: 42, column_end: 43, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2360, char_end: 2362, byte_start: 2360, byte_end: 2362, column_start: 43, column_end: 45, line_start: 58, line_end: 58 }: by
Token { kind: Space, char_start: 2362, char_end: 2363, byte_start: 2362, byte_end: 2363, column_start: 45, column_end: 46, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2363, char_end: 2364, byte_start: 2363, byte_end: 2364, column_start: 46, column_end: 47, line_start: 58, line_end: 58 }: a
Token { kind: Space, char_start: 2364, char_end: 2365, byte_start: 2364, byte_end: 2365, column_start: 47, column_end: 48, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2365, char_end: 2373, byte_start: 2365, byte_end: 2373, column_start: 48, column_end: 56, line_start: 58, line_end: 58 }: previous
Token { kind: Space, char_start: 2373, char_end: 2374, byte_start: 2373, byte_end: 2374, column_start: 56, column_end: 57, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2374, char_end: 2384, byte_start: 2374, byte_end: 2384, column_start: 57, column_end: 67, line_start: 58, line_end: 58 }: invocation
Token { kind: Space, char_start: 2384, char_end: 2385, byte_start: 2384, byte_end: 2385, column_start: 67, column_end: 68, line_start: 58, line_end: 58 }: " "
Token { kind: Text, char_start: 2385, char_end: 2387, byte_start: 2385, byte_end: 2387, column_start: 68, column_end: 70, line_start: 58, line_end: 58 }: of
Token { kind: Space, char_start: 2387, char_end: 2388, byte_start: 2387, byte_end: 2388, column_start: 70, column_end: 71, line_start: 58, line_end: 58 }: " "
Token { kind: Bar, char_start: 2388, char_end: 2389, byte_start: 2388, byte_end: 2389, column_start: 71, column_end: 72, line_start: 58, line_end: 58 }: |
Token { kind: Text, char_start: 2389, char_end: 2393, byte_start: 2389, byte_end: 2393, column_start: 72, column_end: 76, line_start: 58, line_end: 58 }: :Ack
Token { kind: Bar, char_start: 2393, char_end: 2394, byte_start: 2393, byte_end: 2394, column_start: 76, column_end: 77, line_start: 58, line_end: 58 }: |
Token { kind: Newline, char_start: 2394, char_end: 2395, byte_start: 2394, byte_end: 2395, column_start: 77, column_end: 1, line_start: 58, line_end: 59 }: "\n"
Token { kind: Lparen, char_start: 2395, char_end: 2396, byte_start: 2395, byte_end: 2396, column_start: 1, column_end: 2, line_start: 59, line_end: 59 }: (
Token { kind: Text, char_start: 2396, char_end: 2398, byte_start: 2396, byte_end: 2398, column_start: 2, column_end: 4, line_start: 59, line_end: 59 }: or
Token { kind: Space, char_start: 2398, char_end: 2399, byte_start: 2398, byte_end: 2399, column_start: 4, column_end: 5, line_start: 59, line_end: 59 }: " "
Token { kind: Bar, char_start: 2399, char_end: 2400, byte_start: 2399, byte_end: 2400, column_start: 5, column_end: 6, line_start: 59, line_end: 59 }: |
Token { kind: Text, char_start: 2400, char_end: 2405, byte_start: 2400, byte_end: 2405, column_start: 6, column_end: 11, line_start: 59, line_end: 59 }: :Back
Token { kind: Bar, char_start: 2405, char_end: 2406, byte_start: 2405, byte_end: 2406, column_start: 11, column_end: 12, line_start: 59, line_end: 59 }: |
Token { kind: Text, char_start: 2406, char_end: 2407, byte_start: 2406, byte_end: 2407, column_start: 12, column_end: 13, line_start: 59, line_end: 59 }: ,
Token { kind: Space, char_start: 2407, char_end: 2408, byte_start: 2407, byte_end: 2408, column_start: 13, column_end: 14, line_start: 59, line_end: 59 }: " "
Token { kind: Text, char_start: 2408, char_end: 2410, byte_start: 2408, byte_end: 2410, column_start: 14, column_end: 16, line_start: 59, line_end: 59 }: or
Token { kind: Space, char_start: 2410, char_end: 2411, byte_start: 2410, byte_end: 2411, column_start: 16, column_end: 17, line_start: 59, line_end: 59 }: " "
Token { kind: Bar, char_start: 2411, char_end: 2412, byte_start: 2411, byte_end: 2412, column_start: 17, column_end: 18, line_start: 59, line_end: 59 }: |
Token { kind: Text, char_start: 2412, char_end: 2418, byte_start: 2412, byte_end: 2418, column_start: 18, column_end: 24, line_start: 59, line_end: 59 }: :Quack
Token { kind: Bar, char_start: 2418, char_end: 2419, byte_start: 2418, byte_end: 2419, column_start: 24, column_end: 25, line_start: 59, line_end: 59 }: |
Token { kind: Rparen, char_start: 2419, char_end: 2420, byte_start: 2419, byte_end: 2420, column_start: 25, column_end: 26, line_start: 59, line_end: 59 }: )
Token { kind: Text, char_start: 2420, char_end: 2421, byte_start: 2420, byte_end: 2421, column_start: 26, column_end: 27, line_start: 59, line_end: 59 }: .
Token { kind: Newline, char_start: 2421, char_end: 2422, byte_start: 2421, byte_end: 2422, column_start: 27, column_end: 1, line_start: 59, line_end: 60 }: "\n"
Token { kind: Newline, char_start: 2422, char_end: 2423, byte_start: 2422, byte_end: 2423, column_start: 1, column_end: 1, line_start: 60, line_end: 61 }: "\n"
Token { kind: Text, char_start: 2423, char_end: 2439, byte_start: 2423, byte_end: 2439, column_start: 1, column_end: 17, line_start: 61, line_end: 61 }: Correspondingly,
Token { kind: Space, char_start: 2439, char_end: 2440, byte_start: 2439, byte_end: 2440, column_start: 17, column_end: 18, line_start: 61, line_end: 61 }: " "
Token { kind: Text, char_start: 2440, char_end: 2447, byte_start: 2440, byte_end: 2447, column_start: 18, column_end: 25, line_start: 61, line_end: 61 }: results
Token { kind: Space, char_start: 2447, char_end: 2448, byte_start: 2447, byte_end: 2448, column_start: 25, column_end: 26, line_start: 61, line_end: 61 }: " "
Token { kind: Text, char_start: 2448, char_end: 2456, byte_start: 2448, byte_end: 2456, column_start: 26, column_end: 34, line_start: 61, line_end: 61 }: obtained
Token { kind: Space, char_start: 2456, char_end: 2457, byte_start: 2456, byte_end: 2457, column_start: 34, column_end: 35, line_start: 61, line_end: 61 }: " "
Token { kind: Text, char_start: 2457, char_end: 2459, byte_start: 2457, byte_end: 2459, column_start: 35, column_end: 37, line_start: 61, line_end: 61 }: by
Token { kind: Space, char_start: 2459, char_end: 2460, byte_start: 2459, byte_end: 2460, column_start: 37, column_end: 38, line_start: 61, line_end: 61 }: " "
Token { kind: Bar, char_start: 2460, char_end: 2461, byte_start: 2460, byte_end: 2461, column_start: 38, column_end: 39, line_start: 61, line_end: 61 }: |
Token { kind: Text, char_start: 2461, char_end: 2466, byte_start: 2461, byte_end: 2466, column_start: 39, column_end: 44, line_start: 61, line_end: 61 }: :Lack
Token { kind: Bar, char_start: 2466, char_end: 2467, byte_start: 2466, byte_end: 2467, column_start: 44, column_end: 45, line_start: 61, line_end: 61 }: |
Token { kind: Space, char_start: 2467, char_end: 2468, byte_start: 2467, byte_end: 2468, column_start: 45, column_end: 46, line_start: 61, line_end: 61 }: " "
Token { kind: Text, char_start: 2468, char_end: 2471, byte_start: 2468, byte_end: 2471, column_start: 46, column_end: 49, line_start: 61, line_end: 61 }: can
Token { kind: Space, char_start: 2471, char_end: 2472, byte_start: 2471, byte_end: 2472, column_start: 49, column_end: 50, line_start: 61, line_end: 61 }: " "
Token { kind: Text, char_start: 2472, char_end: 2474, byte_start: 2472, byte_end: 2474, column_start: 50, column_end: 52, line_start: 61, line_end: 61 }: be
Token { kind: Space, char_start: 2474, char_end: 2475, byte_start: 2474, byte_end: 2475, column_start: 52, column_end: 53, line_start: 61, line_end: 61 }: " "
Token { kind: Text, char_start: 2475, char_end: 2483, byte_start: 2475, byte_end: 2483, column_start: 53, column_end: 61, line_start: 61, line_end: 61 }: targeted
Token { kind: Space, char_start: 2483, char_end: 2484, byte_start: 2483, byte_end: 2484, column_start: 61, column_end: 62, line_start: 61, line_end: 61 }: " "
Token { kind: Text, char_start: 2484, char_end: 2487, byte_start: 2484, byte_end: 2487, column_start: 62, column_end: 65, line_start: 61, line_end: 61 }: for
Token { kind: Space, char_start: 2487, char_end: 2488, byte_start: 2487, byte_end: 2488, column_start: 65, column_end: 66, line_start: 61, line_end: 61 }: " "
Token { kind: Text, char_start: 2488, char_end: 2499, byte_start: 2488, byte_end: 2499, column_start: 66, column_end: 77, line_start: 61, line_end: 61 }: replacement
Token { kind: Newline, char_start: 2499, char_end: 2500, byte_start: 2499, byte_end: 2500, column_start: 77, column_end: 1, line_start: 61, line_end: 62 }: "\n"
Token { kind: Text, char_start: 2500, char_end: 2504, byte_start: 2500, byte_end: 2504, column_start: 1, column_end: 5, line_start: 62, line_end: 62 }: with
Token { kind: Space, char_start: 2504, char_end: 2505, byte_start: 2504, byte_end: 2505, column_start: 5, column_end: 6, line_start: 62, line_end: 62 }: " "
Token { kind: Bar, char_start: 2505, char_end: 2506, byte_start: 2505, byte_end: 2506, column_start: 6, column_end: 7, line_start: 62, line_end: 62 }: |
Token { kind: Text, char_start: 2506, char_end: 2512, byte_start: 2506, byte_end: 2512, column_start: 7, column_end: 13, line_start: 62, line_end: 62 }: :Lacks
Token { kind: Bar, char_start: 2512, char_end: 2513, byte_start: 2512, byte_end: 2513, column_start: 13, column_end: 14, line_start: 62, line_end: 62 }: |
Token { kind: Text, char_start: 2513, char_end: 2514, byte_start: 2513, byte_end: 2514, column_start: 14, column_end: 15, line_start: 62, line_end: 62 }: .
Token { kind: Newline, char_start: 2514, char_end: 2515, byte_start: 2514, byte_end: 2515, column_start: 15, column_end: 1, line_start: 62, line_end: 63 }: "\n"
Token { kind: Newline, char_start: 2515, char_end: 2516, byte_start: 2515, byte_end: 2516, column_start: 1, column_end: 1, line_start: 63, line_end: 64 }: "\n"
Token { kind: Heading(Heading2), char_start: 2516, char_end: 2518, byte_start: 2516, byte_end: 2518, column_start: 1, column_end: 3, line_start: 64, line_end: 64 }: ##
Token { kind: Space, char_start: 2518, char_end: 2519, byte_start: 2518, byte_end: 2519, column_start: 3, column_end: 4, line_start: 64, line_end: 64 }: " "
Token { kind: Text, char_start: 2519, char_end: 2521, byte_start: 2519, byte_end: 2521, column_start: 4, column_end: 6, line_start: 64, line_end: 64 }: 3.
Token { kind: Space, char_start: 2521, char_end: 2522, byte_start: 2521, byte_end: 2522, column_start: 6, column_end: 7, line_start: 64, line_end: 64 }: " "
Token { kind: Text, char_start: 2522, char_end: 2530, byte_start: 2522, byte_end: 2530, column_start: 7, column_end: 15, line_start: 64, line_end: 64 }: Quickfix
Token { kind: Space, char_start: 2530, char_end: 2531, byte_start: 2530, byte_end: 2531, column_start: 15, column_end: 16, line_start: 64, line_end: 64 }: " "
Token { kind: Text, char_start: 2531, char_end: 2538, byte_start: 2531, byte_end: 2538, column_start: 16, column_end: 23, line_start: 64, line_end: 64 }: listing
Token { kind: Space, char_start: 2538, char_end: 2539, byte_start: 2538, byte_end: 2539, column_start: 23, column_end: 24, line_start: 64, line_end: 64 }: " "
Token { kind: Text, char_start: 2539, char_end: 2551, byte_start: 2539, byte_end: 2551, column_start: 24, column_end: 36, line_start: 64, line_end: 64 }: enhancements
Token { kind: Newline, char_start: 2551, char_end: 2552, byte_start: 2551, byte_end: 2552, column_start: 36, column_end: 1, line_start: 64, line_end: 65 }: "\n"
Token { kind: Newline, char_start: 2552, char_end: 2553, byte_start: 2552, byte_end: 2553, column_start: 1, column_end: 1, line_start: 65, line_end: 66 }: "\n"
Token { kind: Text, char_start: 2553, char_end: 2556, byte_start: 2553, byte_end: 2556, column_start: 1, column_end: 4, line_start: 66, line_end: 66 }: The
Token { kind: Space, char_start: 2556, char_end: 2557, byte_start: 2556, byte_end: 2557, column_start: 4, column_end: 5, line_start: 66, line_end: 66 }: " "
Token { kind: Bar, char_start: 2557, char_end: 2558, byte_start: 2557, byte_end: 2558, column_start: 5, column_end: 6, line_start: 66, line_end: 66 }: |
Token { kind: Text, char_start: 2558, char_end: 2566, byte_start: 2558, byte_end: 2566, column_start: 6, column_end: 14, line_start: 66, line_end: 66 }: quickfix
Token { kind: Bar, char_start: 2566, char_end: 2567, byte_start: 2566, byte_end: 2567, column_start: 14, column_end: 15, line_start: 66, line_end: 66 }: |
Token { kind: Space, char_start: 2567, char_end: 2568, byte_start: 2567, byte_end: 2568, column_start: 15, column_end: 16, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2568, char_end: 2575, byte_start: 2568, byte_end: 2575, column_start: 16, column_end: 23, line_start: 66, line_end: 66 }: listing
Token { kind: Space, char_start: 2575, char_end: 2576, byte_start: 2575, byte_end: 2576, column_start: 23, column_end: 24, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2576, char_end: 2582, byte_start: 2576, byte_end: 2582, column_start: 24, column_end: 30, line_start: 66, line_end: 66 }: itself
Token { kind: Space, char_start: 2582, char_end: 2583, byte_start: 2582, byte_end: 2583, column_start: 30, column_end: 31, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2583, char_end: 2585, byte_start: 2583, byte_end: 2585, column_start: 31, column_end: 33, line_start: 66, line_end: 66 }: is
Token { kind: Space, char_start: 2585, char_end: 2586, byte_start: 2585, byte_end: 2586, column_start: 33, column_end: 34, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2586, char_end: 2594, byte_start: 2586, byte_end: 2594, column_start: 34, column_end: 42, line_start: 66, line_end: 66 }: enhanced
Token { kind: Space, char_start: 2594, char_end: 2595, byte_start: 2594, byte_end: 2595, column_start: 42, column_end: 43, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2595, char_end: 2599, byte_start: 2595, byte_end: 2599, column_start: 43, column_end: 47, line_start: 66, line_end: 66 }: with
Token { kind: Space, char_start: 2599, char_end: 2600, byte_start: 2599, byte_end: 2600, column_start: 47, column_end: 48, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2600, char_end: 2608, byte_start: 2600, byte_end: 2608, column_start: 48, column_end: 56, line_start: 66, line_end: 66 }: settings
Token { kind: Space, char_start: 2608, char_end: 2609, byte_start: 2608, byte_end: 2609, column_start: 56, column_end: 57, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2609, char_end: 2611, byte_start: 2609, byte_end: 2611, column_start: 57, column_end: 59, line_start: 66, line_end: 66 }: to
Token { kind: Space, char_start: 2611, char_end: 2612, byte_start: 2611, byte_end: 2612, column_start: 59, column_end: 60, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2612, char_end: 2619, byte_start: 2612, byte_end: 2619, column_start: 60, column_end: 67, line_start: 66, line_end: 66 }: improve
Token { kind: Space, char_start: 2619, char_end: 2620, byte_start: 2619, byte_end: 2620, column_start: 67, column_end: 68, line_start: 66, line_end: 66 }: " "
Token { kind: Text, char_start: 2620, char_end: 2623, byte_start: 2620, byte_end: 2623, column_start: 68, column_end: 71, line_start: 66, line_end: 66 }: its
Token { kind: Newline, char_start: 2623, char_end: 2624, byte_start: 2623, byte_end: 2624, column_start: 71, column_end: 1, line_start: 66, line_end: 67 }: "\n"
Token { kind: Text, char_start: 2624, char_end: 2634, byte_start: 2624, byte_end: 2634, column_start: 1, column_end: 11, line_start: 67, line_end: 67 }: usability,
Token { kind: Space, char_start: 2634, char_end: 2635, byte_start: 2634, byte_end: 2635, column_start: 11, column_end: 12, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2635, char_end: 2638, byte_start: 2635, byte_end: 2638, column_start: 12, column_end: 15, line_start: 67, line_end: 67 }: and
Token { kind: Space, char_start: 2638, char_end: 2639, byte_start: 2638, byte_end: 2639, column_start: 15, column_end: 16, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2639, char_end: 2646, byte_start: 2639, byte_end: 2646, column_start: 16, column_end: 23, line_start: 67, line_end: 67 }: natural
Token { kind: Space, char_start: 2646, char_end: 2647, byte_start: 2646, byte_end: 2647, column_start: 23, column_end: 24, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2647, char_end: 2655, byte_start: 2647, byte_end: 2655, column_start: 24, column_end: 32, line_start: 67, line_end: 67 }: mappings
Token { kind: Space, char_start: 2655, char_end: 2656, byte_start: 2655, byte_end: 2656, column_start: 32, column_end: 33, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2656, char_end: 2660, byte_start: 2656, byte_end: 2660, column_start: 33, column_end: 37, line_start: 67, line_end: 67 }: that
Token { kind: Space, char_start: 2660, char_end: 2661, byte_start: 2660, byte_end: 2661, column_start: 37, column_end: 38, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2661, char_end: 2666, byte_start: 2661, byte_end: 2666, column_start: 38, column_end: 43, line_start: 67, line_end: 67 }: allow
Token { kind: Space, char_start: 2666, char_end: 2667, byte_start: 2666, byte_end: 2667, column_start: 43, column_end: 44, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2667, char_end: 2672, byte_start: 2667, byte_end: 2672, column_start: 44, column_end: 49, line_start: 67, line_end: 67 }: quick
Token { kind: Space, char_start: 2672, char_end: 2673, byte_start: 2672, byte_end: 2673, column_start: 49, column_end: 50, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2673, char_end: 2680, byte_start: 2673, byte_end: 2680, column_start: 50, column_end: 57, line_start: 67, line_end: 67 }: removal
Token { kind: Space, char_start: 2680, char_end: 2681, byte_start: 2680, byte_end: 2681, column_start: 57, column_end: 58, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2681, char_end: 2683, byte_start: 2681, byte_end: 2683, column_start: 58, column_end: 60, line_start: 67, line_end: 67 }: of
Token { kind: Space, char_start: 2683, char_end: 2684, byte_start: 2683, byte_end: 2684, column_start: 60, column_end: 61, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2684, char_end: 2689, byte_start: 2684, byte_end: 2689, column_start: 61, column_end: 66, line_start: 67, line_end: 67 }: items
Token { kind: Space, char_start: 2689, char_end: 2690, byte_start: 2689, byte_end: 2690, column_start: 66, column_end: 67, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2690, char_end: 2694, byte_start: 2690, byte_end: 2694, column_start: 67, column_end: 71, line_start: 67, line_end: 67 }: from
Token { kind: Space, char_start: 2694, char_end: 2695, byte_start: 2694, byte_end: 2695, column_start: 71, column_end: 72, line_start: 67, line_end: 67 }: " "
Token { kind: Text, char_start: 2695, char_end: 2698, byte_start: 2695, byte_end: 2698, column_start: 72, column_end: 75, line_start: 67, line_end: 67 }: the
Token { kind: Newline, char_start: 2698, char_end: 2699, byte_start: 2698, byte_end: 2699, column_start: 75, column_end: 1, line_start: 67, line_end: 68 }: "\n"
Token { kind: Text, char_start: 2699, char_end: 2703, byte_start: 2699, byte_end: 2703, column_start: 1, column_end: 5, line_start: 68, line_end: 68 }: list
Token { kind: Space, char_start: 2703, char_end: 2704, byte_start: 2703, byte_end: 2704, column_start: 5, column_end: 6, line_start: 68, line_end: 68 }: " "
Token { kind: Lparen, char_start: 2704, char_end: 2705, byte_start: 2704, byte_end: 2705, column_start: 6, column_end: 7, line_start: 68, line_end: 68 }: (
Token { kind: Text, char_start: 2705, char_end: 2708, byte_start: 2705, byte_end: 2708, column_start: 7, column_end: 10, line_start: 68, line_end: 68 }: for
Token { kind: Space, char_start: 2708, char_end: 2709, byte_start: 2708, byte_end: 2709, column_start: 10, column_end: 11, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2709, char_end: 2717, byte_start: 2709, byte_end: 2717, column_start: 11, column_end: 19, line_start: 68, line_end: 68 }: example,
Token { kind: Space, char_start: 2717, char_end: 2718, byte_start: 2717, byte_end: 2718, column_start: 19, column_end: 20, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2718, char_end: 2721, byte_start: 2718, byte_end: 2721, column_start: 20, column_end: 23, line_start: 68, line_end: 68 }: you
Token { kind: Space, char_start: 2721, char_end: 2722, byte_start: 2721, byte_end: 2722, column_start: 23, column_end: 24, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2722, char_end: 2725, byte_start: 2722, byte_end: 2725, column_start: 24, column_end: 27, line_start: 68, line_end: 68 }: can
Token { kind: Space, char_start: 2725, char_end: 2726, byte_start: 2725, byte_end: 2726, column_start: 27, column_end: 28, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2726, char_end: 2732, byte_start: 2726, byte_end: 2732, column_start: 28, column_end: 34, line_start: 68, line_end: 68 }: reduce
Token { kind: Space, char_start: 2732, char_end: 2733, byte_start: 2732, byte_end: 2733, column_start: 34, column_end: 35, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2733, char_end: 2740, byte_start: 2733, byte_end: 2740, column_start: 35, column_end: 42, line_start: 68, line_end: 68 }: clutter
Token { kind: Space, char_start: 2740, char_end: 2741, byte_start: 2740, byte_end: 2741, column_start: 42, column_end: 43, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2741, char_end: 2743, byte_start: 2741, byte_end: 2743, column_start: 43, column_end: 45, line_start: 68, line_end: 68 }: in
Token { kind: Space, char_start: 2743, char_end: 2744, byte_start: 2743, byte_end: 2744, column_start: 45, column_end: 46, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2744, char_end: 2747, byte_start: 2744, byte_end: 2747, column_start: 46, column_end: 49, line_start: 68, line_end: 68 }: the
Token { kind: Space, char_start: 2747, char_end: 2748, byte_start: 2747, byte_end: 2748, column_start: 49, column_end: 50, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2748, char_end: 2755, byte_start: 2748, byte_end: 2755, column_start: 50, column_end: 57, line_start: 68, line_end: 68 }: listing
Token { kind: Space, char_start: 2755, char_end: 2756, byte_start: 2755, byte_end: 2756, column_start: 57, column_end: 58, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2756, char_end: 2758, byte_start: 2756, byte_end: 2758, column_start: 58, column_end: 60, line_start: 68, line_end: 68 }: by
Token { kind: Space, char_start: 2758, char_end: 2759, byte_start: 2758, byte_end: 2759, column_start: 60, column_end: 61, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2759, char_end: 2767, byte_start: 2759, byte_end: 2767, column_start: 61, column_end: 69, line_start: 68, line_end: 68 }: removing
Token { kind: Space, char_start: 2767, char_end: 2768, byte_start: 2767, byte_end: 2768, column_start: 69, column_end: 70, line_start: 68, line_end: 68 }: " "
Token { kind: Text, char_start: 2768, char_end: 2773, byte_start: 2768, byte_end: 2773, column_start: 70, column_end: 75, line_start: 68, line_end: 68 }: lines
Token { kind: Newline, char_start: 2773, char_end: 2774, byte_start: 2773, byte_end: 2774, column_start: 75, column_end: 1, line_start: 68, line_end: 69 }: "\n"
Token { kind: Text, char_start: 2774, char_end: 2778, byte_start: 2774, byte_end: 2778, column_start: 1, column_end: 5, line_start: 69, line_end: 69 }: that
Token { kind: Space, char_start: 2778, char_end: 2779, byte_start: 2778, byte_end: 2779, column_start: 5, column_end: 6, line_start: 69, line_end: 69 }: " "
Token { kind: Text, char_start: 2779, char_end: 2782, byte_start: 2779, byte_end: 2782, column_start: 6, column_end: 9, line_start: 69, line_end: 69 }: you
Token { kind: Space, char_start: 2782, char_end: 2783, byte_start: 2782, byte_end: 2783, column_start: 9, column_end: 10, line_start: 69, line_end: 69 }: " "
Token { kind: Text, char_start: 2783, char_end: 2788, byte_start: 2783, byte_end: 2788, column_start: 10, column_end: 15, line_start: 69, line_end: 69 }: don't
Token { kind: Space, char_start: 2788, char_end: 2789, byte_start: 2788, byte_end: 2789, column_start: 15, column_end: 16, line_start: 69, line_end: 69 }: " "
Token { kind: Text, char_start: 2789, char_end: 2795, byte_start: 2789, byte_end: 2795, column_start: 16, column_end: 22, line_start: 69, line_end: 69 }: intend
Token { kind: Space, char_start: 2795, char_end: 2796, byte_start: 2795, byte_end: 2796, column_start: 22, column_end: 23, line_start: 69, line_end: 69 }: " "
Token { kind: Text, char_start: 2796, char_end: 2798, byte_start: 2796, byte_end: 2798, column_start: 23, column_end: 25, line_start: 69, line_end: 69 }: to
Token { kind: Space, char_start: 2798, char_end: 2799, byte_start: 2798, byte_end: 2799, column_start: 25, column_end: 26, line_start: 69, line_end: 69 }: " "
Token { kind: Text, char_start: 2799, char_end: 2803, byte_start: 2799, byte_end: 2803, column_start: 26, column_end: 30, line_start: 69, line_end: 69 }: make
Token { kind: Space, char_start: 2803, char_end: 2804, byte_start: 2803, byte_end: 2804, column_start: 30, column_end: 31, line_start: 69, line_end: 69 }: " "
Token { kind: Text, char_start: 2804, char_end: 2811, byte_start: 2804, byte_end: 2811, column_start: 31, column_end: 38, line_start: 69, line_end: 69 }: changes
Token { kind: Space, char_start: 2811, char_end: 2812, byte_start: 2811, byte_end: 2812, column_start: 38, column_end: 39, line_start: 69, line_end: 69 }: " "
Token { kind: Text, char_start: 2812, char_end: 2814, byte_start: 2812, byte_end: 2814, column_start: 39, column_end: 41, line_start: 69, line_end: 69 }: to
Token { kind: Rparen, char_start: 2814, char_end: 2815, byte_start: 2814, byte_end: 2815, column_start: 41, column_end: 42, line_start: 69, line_end: 69 }: )
Token { kind: Text, char_start: 2815, char_end: 2816, byte_start: 2815, byte_end: 2816, column_start: 42, column_end: 43, line_start: 69, line_end: 69 }: .
Token { kind: Newline, char_start: 2816, char_end: 2817, byte_start: 2816, byte_end: 2817, column_start: 43, column_end: 1, line_start: 69, line_end: 70 }: "\n"
Token { kind: Newline, char_start: 2817, char_end: 2818, byte_start: 2817, byte_end: 2818, column_start: 1, column_end: 1, line_start: 70, line_end: 71 }: "\n"
Token { kind: Text, char_start: 2818, char_end: 2831, byte_start: 2818, byte_end: 2831, column_start: 1, column_end: 14, line_start: 71, line_end: 71 }: Additionally,
Token { kind: Space, char_start: 2831, char_end: 2832, byte_start: 2831, byte_end: 2832, column_start: 14, column_end: 15, line_start: 71, line_end: 71 }: " "
Token { kind: Text, char_start: 2832, char_end: 2837, byte_start: 2832, byte_end: 2837, column_start: 15, column_end: 20, line_start: 71, line_end: 71 }: Vim's
Token { kind: Space, char_start: 2837, char_end: 2838, byte_start: 2837, byte_end: 2838, column_start: 20, column_end: 21, line_start: 71, line_end: 71 }: " "
Token { kind: Bar, char_start: 2838, char_end: 2839, byte_start: 2838, byte_end: 2839, column_start: 21, column_end: 22, line_start: 71, line_end: 71 }: |
Token { kind: Text, char_start: 2839, char_end: 2842, byte_start: 2839, byte_end: 2842, column_start: 22, column_end: 25, line_start: 71, line_end: 71 }: :cn
Token { kind: Bar, char_start: 2842, char_end: 2843, byte_start: 2842, byte_end: 2843, column_start: 25, column_end: 26, line_start: 71, line_end: 71 }: |
Token { kind: Text, char_start: 2843, char_end: 2844, byte_start: 2843, byte_end: 2844, column_start: 26, column_end: 27, line_start: 71, line_end: 71 }: ,
Token { kind: Space, char_start: 2844, char_end: 2845, byte_start: 2844, byte_end: 2845, column_start: 27, column_end: 28, line_start: 71, line_end: 71 }: " "
Token { kind: Bar, char_start: 2845, char_end: 2846, byte_start: 2845, byte_end: 2846, column_start: 28, column_end: 29, line_start: 71, line_end: 71 }: |
Token { kind: Text, char_start: 2846, char_end: 2849, byte_start: 2846, byte_end: 2849, column_start: 29, column_end: 32, line_start: 71, line_end: 71 }: :cp
Token { kind: Bar, char_start: 2849, char_end: 2850, byte_start: 2849, byte_end: 2850, column_start: 32, column_end: 33, line_start: 71, line_end: 71 }: |
Token { kind: Text, char_start: 2850, char_end: 2851, byte_start: 2850, byte_end: 2851, column_start: 33, column_end: 34, line_start: 71, line_end: 71 }: ,
Token { kind: Space, char_start: 2851, char_end: 2852, byte_start: 2851, byte_end: 2852, column_start: 34, column_end: 35, line_start: 71, line_end: 71 }: " "
Token { kind: Bar, char_start: 2852, char_end: 2853, byte_start: 2852, byte_end: 2853, column_start: 35, column_end: 36, line_start: 71, line_end: 71 }: |
Token { kind: Text, char_start: 2853, char_end: 2857, byte_start: 2853, byte_end: 2857, column_start: 36, column_end: 40, line_start: 71, line_end: 71 }: :cnf
Token { kind: Bar, char_start: 2857, char_end: 2858, byte_start: 2857, byte_end: 2858, column_start: 40, column_end: 41, line_start: 71, line_end: 71 }: |
Token { kind: Space, char_start: 2858, char_end: 2859, byte_start: 2858, byte_end: 2859, column_start: 41, column_end: 42, line_start: 71, line_end: 71 }: " "
Token { kind: Text, char_start: 2859, char_end: 2862, byte_start: 2859, byte_end: 2862, column_start: 42, column_end: 45, line_start: 71, line_end: 71 }: and
Token { kind: Space, char_start: 2862, char_end: 2863, byte_start: 2862, byte_end: 2863, column_start: 45, column_end: 46, line_start: 71, line_end: 71 }: " "
Token { kind: Bar, char_start: 2863, char_end: 2864, byte_start: 2863, byte_end: 2864, column_start: 46, column_end: 47, line_start: 71, line_end: 71 }: |
Token { kind: Text, char_start: 2864, char_end: 2868, byte_start: 2864, byte_end: 2868, column_start: 47, column_end: 51, line_start: 71, line_end: 71 }: :cpf
Token { kind: Bar, char_start: 2868, char_end: 2869, byte_start: 2868, byte_end: 2869, column_start: 51, column_end: 52, line_start: 71, line_end: 71 }: |
Token { kind: Space, char_start: 2869, char_end: 2870, byte_start: 2869, byte_end: 2870, column_start: 52, column_end: 53, line_start: 71, line_end: 71 }: " "
Token { kind: Text, char_start: 2870, char_end: 2878, byte_start: 2870, byte_end: 2878, column_start: 53, column_end: 61, line_start: 71, line_end: 71 }: commands
Token { kind: Space, char_start: 2878, char_end: 2879, byte_start: 2878, byte_end: 2879, column_start: 61, column_end: 62, line_start: 71, line_end: 71 }: " "
Token { kind: Text, char_start: 2879, char_end: 2882, byte_start: 2879, byte_end: 2882, column_start: 62, column_end: 65, line_start: 71, line_end: 71 }: are
Token { kind: Space, char_start: 2882, char_end: 2883, byte_start: 2882, byte_end: 2883, column_start: 65, column_end: 66, line_start: 71, line_end: 71 }: " "
Token { kind: Text, char_start: 2883, char_end: 2890, byte_start: 2883, byte_end: 2890, column_start: 66, column_end: 73, line_start: 71, line_end: 71 }: tweaked
Token { kind: Space, char_start: 2890, char_end: 2891, byte_start: 2890, byte_end: 2891, column_start: 73, column_end: 74, line_start: 71, line_end: 71 }: " "
Token { kind: Text, char_start: 2891, char_end: 2893, byte_start: 2891, byte_end: 2893, column_start: 74, column_end: 76, line_start: 71, line_end: 71 }: to
Token { kind: Newline, char_start: 2893, char_end: 2894, byte_start: 2893, byte_end: 2894, column_start: 76, column_end: 1, line_start: 71, line_end: 72 }: "\n"
Token { kind: Text, char_start: 2894, char_end: 2898, byte_start: 2894, byte_end: 2898, column_start: 1, column_end: 5, line_start: 72, line_end: 72 }: make
Token { kind: Space, char_start: 2898, char_end: 2899, byte_start: 2898, byte_end: 2899, column_start: 5, column_end: 6, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2899, char_end: 2901, byte_start: 2899, byte_end: 2901, column_start: 6, column_end: 8, line_start: 72, line_end: 72 }: it
Token { kind: Space, char_start: 2901, char_end: 2902, byte_start: 2901, byte_end: 2902, column_start: 8, column_end: 9, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2902, char_end: 2908, byte_start: 2902, byte_end: 2908, column_start: 9, column_end: 15, line_start: 72, line_end: 72 }: easier
Token { kind: Space, char_start: 2908, char_end: 2909, byte_start: 2908, byte_end: 2909, column_start: 15, column_end: 16, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2909, char_end: 2911, byte_start: 2909, byte_end: 2911, column_start: 16, column_end: 18, line_start: 72, line_end: 72 }: to
Token { kind: Space, char_start: 2911, char_end: 2912, byte_start: 2911, byte_end: 2912, column_start: 18, column_end: 19, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2912, char_end: 2923, byte_start: 2912, byte_end: 2923, column_start: 19, column_end: 30, line_start: 72, line_end: 72 }: immediately
Token { kind: Space, char_start: 2923, char_end: 2924, byte_start: 2923, byte_end: 2924, column_start: 30, column_end: 31, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2924, char_end: 2932, byte_start: 2924, byte_end: 2932, column_start: 31, column_end: 39, line_start: 72, line_end: 72 }: identify
Token { kind: Space, char_start: 2932, char_end: 2933, byte_start: 2932, byte_end: 2933, column_start: 39, column_end: 40, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2933, char_end: 2940, byte_start: 2933, byte_end: 2940, column_start: 40, column_end: 47, line_start: 72, line_end: 72 }: matches
Token { kind: Space, char_start: 2940, char_end: 2941, byte_start: 2940, byte_end: 2941, column_start: 47, column_end: 48, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2941, char_end: 2943, byte_start: 2941, byte_end: 2943, column_start: 48, column_end: 50, line_start: 72, line_end: 72 }: by
Token { kind: Space, char_start: 2943, char_end: 2944, byte_start: 2943, byte_end: 2944, column_start: 50, column_end: 51, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2944, char_end: 2953, byte_start: 2944, byte_end: 2953, column_start: 51, column_end: 60, line_start: 72, line_end: 72 }: centering
Token { kind: Space, char_start: 2953, char_end: 2954, byte_start: 2953, byte_end: 2954, column_start: 60, column_end: 61, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2954, char_end: 2958, byte_start: 2954, byte_end: 2958, column_start: 61, column_end: 65, line_start: 72, line_end: 72 }: them
Token { kind: Space, char_start: 2958, char_end: 2959, byte_start: 2958, byte_end: 2959, column_start: 65, column_end: 66, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2959, char_end: 2965, byte_start: 2959, byte_end: 2965, column_start: 66, column_end: 72, line_start: 72, line_end: 72 }: within
Token { kind: Space, char_start: 2965, char_end: 2966, byte_start: 2965, byte_end: 2966, column_start: 72, column_end: 73, line_start: 72, line_end: 72 }: " "
Token { kind: Text, char_start: 2966, char_end: 2969, byte_start: 2966, byte_end: 2969, column_start: 73, column_end: 76, line_start: 72, line_end: 72 }: the
Token { kind: Newline, char_start: 2969, char_end: 2970, byte_start: 2969, byte_end: 2970, column_start: 76, column_end: 1, line_start: 72, line_end: 73 }: "\n"
Token { kind: Text, char_start: 2970, char_end: 2979, byte_start: 2970, byte_end: 2979, column_start: 1, column_end: 10, line_start: 73, line_end: 73 }: viewport.
Token { kind: Newline, char_start: 2979, char_end: 2980, byte_start: 2979, byte_end: 2980, column_start: 10, column_end: 1, line_start: 73, line_end: 74 }: "\n"
Token { kind: Newline, char_start: 2980, char_end: 2981, byte_start: 2980, byte_end: 2981, column_start: 1, column_end: 1, line_start: 74, line_end: 75 }: "\n"
Token { kind: Heading(Heading2), char_start: 2981, char_end: 2983, byte_start: 2981, byte_end: 2983, column_start: 1, column_end: 3, line_start: 75, line_end: 75 }: ##
Token { kind: Space, char_start: 2983, char_end: 2984, byte_start: 2983, byte_end: 2984, column_start: 3, column_end: 4, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 2984, char_end: 2986, byte_start: 2984, byte_end: 2986, column_start: 4, column_end: 6, line_start: 75, line_end: 75 }: 4.
Token { kind: Space, char_start: 2986, char_end: 2987, byte_start: 2986, byte_end: 2987, column_start: 6, column_end: 7, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 2987, char_end: 2991, byte_start: 2987, byte_end: 2991, column_start: 7, column_end: 11, line_start: 75, line_end: 75 }: Easy
Token { kind: Space, char_start: 2991, char_end: 2992, byte_start: 2991, byte_end: 2992, column_start: 11, column_end: 12, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 2992, char_end: 3002, byte_start: 2992, byte_end: 3002, column_start: 12, column_end: 22, line_start: 75, line_end: 75 }: operations
Token { kind: Space, char_start: 3002, char_end: 3003, byte_start: 3002, byte_end: 3003, column_start: 22, column_end: 23, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 3003, char_end: 3005, byte_start: 3003, byte_end: 3005, column_start: 23, column_end: 25, line_start: 75, line_end: 75 }: on
Token { kind: Space, char_start: 3005, char_end: 3006, byte_start: 3005, byte_end: 3006, column_start: 25, column_end: 26, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 3006, char_end: 3011, byte_start: 3006, byte_end: 3011, column_start: 26, column_end: 31, line_start: 75, line_end: 75 }: files
Token { kind: Space, char_start: 3011, char_end: 3012, byte_start: 3011, byte_end: 3012, column_start: 31, column_end: 32, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 3012, char_end: 3014, byte_start: 3012, byte_end: 3014, column_start: 32, column_end: 34, line_start: 75, line_end: 75 }: in
Token { kind: Space, char_start: 3014, char_end: 3015, byte_start: 3014, byte_end: 3015, column_start: 34, column_end: 35, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 3015, char_end: 3018, byte_start: 3015, byte_end: 3018, column_start: 35, column_end: 38, line_start: 75, line_end: 75 }: the
Token { kind: Space, char_start: 3018, char_end: 3019, byte_start: 3018, byte_end: 3019, column_start: 38, column_end: 39, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 3019, char_end: 3027, byte_start: 3019, byte_end: 3027, column_start: 39, column_end: 47, line_start: 75, line_end: 75 }: quickfix
Token { kind: Space, char_start: 3027, char_end: 3028, byte_start: 3027, byte_end: 3028, column_start: 47, column_end: 48, line_start: 75, line_end: 75 }: " "
Token { kind: Text, char_start: 3028, char_end: 3035, byte_start: 3028, byte_end: 3035, column_start: 48, column_end: 55, line_start: 75, line_end: 75 }: listing
Token { kind: Newline, char_start: 3035, char_end: 3036, byte_start: 3035, byte_end: 3036, column_start: 55, column_end: 1, line_start: 75, line_end: 76 }: "\n"
Token { kind: Newline, char_start: 3036, char_end: 3037, byte_start: 3036, byte_end: 3037, column_start: 1, column_end: 1, line_start: 76, line_end: 77 }: "\n"
Token { kind: Text, char_start: 3037, char_end: 3045, byte_start: 3037, byte_end: 3045, column_start: 1, column_end: 9, line_start: 77, line_end: 77 }: Finally,
Token { kind: Space, char_start: 3045, char_end: 3046, byte_start: 3045, byte_end: 3046, column_start: 9, column_end: 10, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3046, char_end: 3052, byte_start: 3046, byte_end: 3052, column_start: 10, column_end: 16, line_start: 77, line_end: 77 }: Ferret
Token { kind: Space, char_start: 3052, char_end: 3053, byte_start: 3052, byte_end: 3053, column_start: 16, column_end: 17, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3053, char_end: 3061, byte_start: 3053, byte_end: 3061, column_start: 17, column_end: 25, line_start: 77, line_end: 77 }: provides
Token { kind: Space, char_start: 3061, char_end: 3062, byte_start: 3061, byte_end: 3062, column_start: 25, column_end: 26, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3062, char_end: 3063, byte_start: 3062, byte_end: 3063, column_start: 26, column_end: 27, line_start: 77, line_end: 77 }: a
Token { kind: Space, char_start: 3063, char_end: 3064, byte_start: 3063, byte_end: 3064, column_start: 27, column_end: 28, line_start: 77, line_end: 77 }: " "
Token { kind: Bar, char_start: 3064, char_end: 3065, byte_start: 3064, byte_end: 3065, column_start: 28, column_end: 29, line_start: 77, line_end: 77 }: |
Token { kind: Text, char_start: 3065, char_end: 3071, byte_start: 3065, byte_end: 3071, column_start: 29, column_end: 35, line_start: 77, line_end: 77 }: :Qargs
Token { kind: Bar, char_start: 3071, char_end: 3072, byte_start: 3071, byte_end: 3072, column_start: 35, column_end: 36, line_start: 77, line_end: 77 }: |
Token { kind: Space, char_start: 3072, char_end: 3073, byte_start: 3072, byte_end: 3073, column_start: 36, column_end: 37, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3073, char_end: 3080, byte_start: 3073, byte_end: 3080, column_start: 37, column_end: 44, line_start: 77, line_end: 77 }: command
Token { kind: Space, char_start: 3080, char_end: 3081, byte_start: 3080, byte_end: 3081, column_start: 44, column_end: 45, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3081, char_end: 3085, byte_start: 3081, byte_end: 3085, column_start: 45, column_end: 49, line_start: 77, line_end: 77 }: that
Token { kind: Space, char_start: 3085, char_end: 3086, byte_start: 3085, byte_end: 3086, column_start: 49, column_end: 50, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3086, char_end: 3090, byte_start: 3086, byte_end: 3090, column_start: 50, column_end: 54, line_start: 77, line_end: 77 }: puts
Token { kind: Space, char_start: 3090, char_end: 3091, byte_start: 3090, byte_end: 3091, column_start: 54, column_end: 55, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3091, char_end: 3094, byte_start: 3091, byte_end: 3094, column_start: 55, column_end: 58, line_start: 77, line_end: 77 }: the
Token { kind: Space, char_start: 3094, char_end: 3095, byte_start: 3094, byte_end: 3095, column_start: 58, column_end: 59, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3095, char_end: 3100, byte_start: 3095, byte_end: 3100, column_start: 59, column_end: 64, line_start: 77, line_end: 77 }: files
Token { kind: Space, char_start: 3100, char_end: 3101, byte_start: 3100, byte_end: 3101, column_start: 64, column_end: 65, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3101, char_end: 3110, byte_start: 3101, byte_end: 3110, column_start: 65, column_end: 74, line_start: 77, line_end: 77 }: currently
Token { kind: Space, char_start: 3110, char_end: 3111, byte_start: 3110, byte_end: 3111, column_start: 74, column_end: 75, line_start: 77, line_end: 77 }: " "
Token { kind: Text, char_start: 3111, char_end: 3113, byte_start: 3111, byte_end: 3113, column_start: 75, column_end: 77, line_start: 77, line_end: 77 }: in
Token { kind: Newline, char_start: 3113, char_end: 3114, byte_start: 3113, byte_end: 3114, column_start: 77, column_end: 1, line_start: 77, line_end: 78 }: "\n"
Token { kind: Text, char_start: 3114, char_end: 3117, byte_start: 3114, byte_end: 3117, column_start: 1, column_end: 4, line_start: 78, line_end: 78 }: the
Token { kind: Space, char_start: 3117, char_end: 3118, byte_start: 3117, byte_end: 3118, column_start: 4, column_end: 5, line_start: 78, line_end: 78 }: " "
Token { kind: Bar, char_start: 3118, char_end: 3119, byte_start: 3118, byte_end: 3119, column_start: 5, column_end: 6, line_start: 78, line_end: 78 }: |
Token { kind: Text, char_start: 3119, char_end: 3127, byte_start: 3119, byte_end: 3127, column_start: 6, column_end: 14, line_start: 78, line_end: 78 }: quickfix
Token { kind: Bar, char_start: 3127, char_end: 3128, byte_start: 3127, byte_end: 3128, column_start: 14, column_end: 15, line_start: 78, line_end: 78 }: |
Token { kind: Space, char_start: 3128, char_end: 3129, byte_start: 3128, byte_end: 3129, column_start: 15, column_end: 16, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3129, char_end: 3136, byte_start: 3129, byte_end: 3136, column_start: 16, column_end: 23, line_start: 78, line_end: 78 }: listing
Token { kind: Space, char_start: 3136, char_end: 3137, byte_start: 3136, byte_end: 3137, column_start: 23, column_end: 24, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3137, char_end: 3141, byte_start: 3137, byte_end: 3141, column_start: 24, column_end: 28, line_start: 78, line_end: 78 }: into
Token { kind: Space, char_start: 3141, char_end: 3142, byte_start: 3141, byte_end: 3142, column_start: 28, column_end: 29, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3142, char_end: 3145, byte_start: 3142, byte_end: 3145, column_start: 29, column_end: 32, line_start: 78, line_end: 78 }: the
Token { kind: Space, char_start: 3145, char_end: 3146, byte_start: 3145, byte_end: 3146, column_start: 32, column_end: 33, line_start: 78, line_end: 78 }: " "
Token { kind: Bar, char_start: 3146, char_end: 3147, byte_start: 3146, byte_end: 3147, column_start: 33, column_end: 34, line_start: 78, line_end: 78 }: |
Token { kind: Text, char_start: 3147, char_end: 3152, byte_start: 3147, byte_end: 3152, column_start: 34, column_end: 39, line_start: 78, line_end: 78 }: :args
Token { kind: Bar, char_start: 3152, char_end: 3153, byte_start: 3152, byte_end: 3153, column_start: 39, column_end: 40, line_start: 78, line_end: 78 }: |
Token { kind: Space, char_start: 3153, char_end: 3154, byte_start: 3153, byte_end: 3154, column_start: 40, column_end: 41, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3154, char_end: 3159, byte_start: 3154, byte_end: 3159, column_start: 41, column_end: 46, line_start: 78, line_end: 78 }: list,
Token { kind: Space, char_start: 3159, char_end: 3160, byte_start: 3159, byte_end: 3160, column_start: 46, column_end: 47, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3160, char_end: 3165, byte_start: 3160, byte_end: 3165, column_start: 47, column_end: 52, line_start: 78, line_end: 78 }: where
Token { kind: Space, char_start: 3165, char_end: 3166, byte_start: 3165, byte_end: 3166, column_start: 52, column_end: 53, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3166, char_end: 3170, byte_start: 3166, byte_end: 3170, column_start: 53, column_end: 57, line_start: 78, line_end: 78 }: they
Token { kind: Space, char_start: 3170, char_end: 3171, byte_start: 3170, byte_end: 3171, column_start: 57, column_end: 58, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3171, char_end: 3174, byte_start: 3171, byte_end: 3174, column_start: 58, column_end: 61, line_start: 78, line_end: 78 }: can
Token { kind: Space, char_start: 3174, char_end: 3175, byte_start: 3174, byte_end: 3175, column_start: 61, column_end: 62, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3175, char_end: 3177, byte_start: 3175, byte_end: 3177, column_start: 62, column_end: 64, line_start: 78, line_end: 78 }: be
Token { kind: Space, char_start: 3177, char_end: 3178, byte_start: 3177, byte_end: 3178, column_start: 64, column_end: 65, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3178, char_end: 3186, byte_start: 3178, byte_end: 3186, column_start: 65, column_end: 73, line_start: 78, line_end: 78 }: operated
Token { kind: Space, char_start: 3186, char_end: 3187, byte_start: 3186, byte_end: 3187, column_start: 73, column_end: 74, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3187, char_end: 3189, byte_start: 3187, byte_end: 3189, column_start: 74, column_end: 76, line_start: 78, line_end: 78 }: on
Token { kind: Space, char_start: 3189, char_end: 3190, byte_start: 3189, byte_end: 3190, column_start: 76, column_end: 77, line_start: 78, line_end: 78 }: " "
Token { kind: Text, char_start: 3190, char_end: 3192, byte_start: 3190, byte_end: 3192, column_start: 77, column_end: 79, line_start: 78, line_end: 78 }: in
Token { kind: Newline, char_start: 3192, char_end: 3193, byte_start: 3192, byte_end: 3193, column_start: 79, column_end: 1, line_start: 78, line_end: 79 }: "\n"
Token { kind: Text, char_start: 3193, char_end: 3197, byte_start: 3193, byte_end: 3197, column_start: 1, column_end: 5, line_start: 79, line_end: 79 }: bulk
Token { kind: Space, char_start: 3197, char_end: 3198, byte_start: 3197, byte_end: 3198, column_start: 5, column_end: 6, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3198, char_end: 3201, byte_start: 3198, byte_end: 3201, column_start: 6, column_end: 9, line_start: 79, line_end: 79 }: via
Token { kind: Space, char_start: 3201, char_end: 3202, byte_start: 3201, byte_end: 3202, column_start: 9, column_end: 10, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3202, char_end: 3205, byte_start: 3202, byte_end: 3205, column_start: 10, column_end: 13, line_start: 79, line_end: 79 }: the
Token { kind: Space, char_start: 3205, char_end: 3206, byte_start: 3205, byte_end: 3206, column_start: 13, column_end: 14, line_start: 79, line_end: 79 }: " "
Token { kind: Bar, char_start: 3206, char_end: 3207, byte_start: 3206, byte_end: 3207, column_start: 14, column_end: 15, line_start: 79, line_end: 79 }: |
Token { kind: Text, char_start: 3207, char_end: 3213, byte_start: 3207, byte_end: 3213, column_start: 15, column_end: 21, line_start: 79, line_end: 79 }: :argdo
Token { kind: Bar, char_start: 3213, char_end: 3214, byte_start: 3213, byte_end: 3214, column_start: 21, column_end: 22, line_start: 79, line_end: 79 }: |
Token { kind: Space, char_start: 3214, char_end: 3215, byte_start: 3214, byte_end: 3215, column_start: 22, column_end: 23, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3215, char_end: 3223, byte_start: 3215, byte_end: 3223, column_start: 23, column_end: 31, line_start: 79, line_end: 79 }: command.
Token { kind: Space, char_start: 3223, char_end: 3224, byte_start: 3223, byte_end: 3224, column_start: 31, column_end: 32, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3224, char_end: 3228, byte_start: 3224, byte_end: 3228, column_start: 32, column_end: 36, line_start: 79, line_end: 79 }: This
Token { kind: Space, char_start: 3228, char_end: 3229, byte_start: 3228, byte_end: 3229, column_start: 36, column_end: 37, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3229, char_end: 3231, byte_start: 3229, byte_end: 3231, column_start: 37, column_end: 39, line_start: 79, line_end: 79 }: is
Token { kind: Space, char_start: 3231, char_end: 3232, byte_start: 3231, byte_end: 3232, column_start: 39, column_end: 40, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3232, char_end: 3238, byte_start: 3232, byte_end: 3238, column_start: 40, column_end: 46, line_start: 79, line_end: 79 }: what's
Token { kind: Space, char_start: 3238, char_end: 3239, byte_start: 3238, byte_end: 3239, column_start: 46, column_end: 47, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3239, char_end: 3243, byte_start: 3239, byte_end: 3243, column_start: 47, column_end: 51, line_start: 79, line_end: 79 }: used
Token { kind: Space, char_start: 3243, char_end: 3244, byte_start: 3243, byte_end: 3244, column_start: 51, column_end: 52, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3244, char_end: 3249, byte_start: 3244, byte_end: 3249, column_start: 52, column_end: 57, line_start: 79, line_end: 79 }: under
Token { kind: Space, char_start: 3249, char_end: 3250, byte_start: 3249, byte_end: 3250, column_start: 57, column_end: 58, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3250, char_end: 3253, byte_start: 3250, byte_end: 3253, column_start: 58, column_end: 61, line_start: 79, line_end: 79 }: the
Token { kind: Space, char_start: 3253, char_end: 3254, byte_start: 3253, byte_end: 3254, column_start: 61, column_end: 62, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3254, char_end: 3260, byte_start: 3254, byte_end: 3260, column_start: 62, column_end: 68, line_start: 79, line_end: 79 }: covers
Token { kind: Space, char_start: 3260, char_end: 3261, byte_start: 3260, byte_end: 3261, column_start: 68, column_end: 69, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3261, char_end: 3263, byte_start: 3261, byte_end: 3263, column_start: 69, column_end: 71, line_start: 79, line_end: 79 }: on
Token { kind: Space, char_start: 3263, char_end: 3264, byte_start: 3263, byte_end: 3264, column_start: 71, column_end: 72, line_start: 79, line_end: 79 }: " "
Token { kind: Text, char_start: 3264, char_end: 3269, byte_start: 3264, byte_end: 3269, column_start: 72, column_end: 77, line_start: 79, line_end: 79 }: older
Token { kind: Newline, char_start: 3269, char_end: 3270, byte_start: 3269, byte_end: 3270, column_start: 77, column_end: 1, line_start: 79, line_end: 80 }: "\n"
Token { kind: Text, char_start: 3270, char_end: 3278, byte_start: 3270, byte_end: 3278, column_start: 1, column_end: 9, line_start: 80, line_end: 80 }: versions
Token { kind: Space, char_start: 3278, char_end: 3279, byte_start: 3278, byte_end: 3279, column_start: 9, column_end: 10, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3279, char_end: 3281, byte_start: 3279, byte_end: 3281, column_start: 10, column_end: 12, line_start: 80, line_end: 80 }: of
Token { kind: Space, char_start: 3281, char_end: 3282, byte_start: 3281, byte_end: 3282, column_start: 12, column_end: 13, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3282, char_end: 3285, byte_start: 3282, byte_end: 3285, column_start: 13, column_end: 16, line_start: 80, line_end: 80 }: Vim
Token { kind: Space, char_start: 3285, char_end: 3286, byte_start: 3285, byte_end: 3286, column_start: 16, column_end: 17, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3286, char_end: 3288, byte_start: 3286, byte_end: 3288, column_start: 17, column_end: 19, line_start: 80, line_end: 80 }: by
Token { kind: Space, char_start: 3288, char_end: 3289, byte_start: 3288, byte_end: 3289, column_start: 19, column_end: 20, line_start: 80, line_end: 80 }: " "
Token { kind: Bar, char_start: 3289, char_end: 3290, byte_start: 3289, byte_end: 3290, column_start: 20, column_end: 21, line_start: 80, line_end: 80 }: |
Token { kind: Text, char_start: 3290, char_end: 3295, byte_start: 3290, byte_end: 3295, column_start: 21, column_end: 26, line_start: 80, line_end: 80 }: :Acks
Token { kind: Bar, char_start: 3295, char_end: 3296, byte_start: 3295, byte_end: 3296, column_start: 26, column_end: 27, line_start: 80, line_end: 80 }: |
Token { kind: Space, char_start: 3296, char_end: 3297, byte_start: 3296, byte_end: 3297, column_start: 27, column_end: 28, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3297, char_end: 3299, byte_start: 3297, byte_end: 3299, column_start: 28, column_end: 30, line_start: 80, line_end: 80 }: to
Token { kind: Space, char_start: 3299, char_end: 3300, byte_start: 3299, byte_end: 3300, column_start: 30, column_end: 31, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3300, char_end: 3302, byte_start: 3300, byte_end: 3302, column_start: 31, column_end: 33, line_start: 80, line_end: 80 }: do
Token { kind: Space, char_start: 3302, char_end: 3303, byte_start: 3302, byte_end: 3303, column_start: 33, column_end: 34, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3303, char_end: 3306, byte_start: 3303, byte_end: 3306, column_start: 34, column_end: 37, line_start: 80, line_end: 80 }: its
Token { kind: Space, char_start: 3306, char_end: 3307, byte_start: 3306, byte_end: 3307, column_start: 37, column_end: 38, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3307, char_end: 3311, byte_start: 3307, byte_end: 3311, column_start: 38, column_end: 42, line_start: 80, line_end: 80 }: work
Token { kind: Space, char_start: 3311, char_end: 3312, byte_start: 3311, byte_end: 3312, column_start: 42, column_end: 43, line_start: 80, line_end: 80 }: " "
Token { kind: Lparen, char_start: 3312, char_end: 3313, byte_start: 3312, byte_end: 3313, column_start: 43, column_end: 44, line_start: 80, line_end: 80 }: (
Token { kind: Text, char_start: 3313, char_end: 3315, byte_start: 3313, byte_end: 3315, column_start: 44, column_end: 46, line_start: 80, line_end: 80 }: on
Token { kind: Space, char_start: 3315, char_end: 3316, byte_start: 3315, byte_end: 3316, column_start: 46, column_end: 47, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3316, char_end: 3321, byte_start: 3316, byte_end: 3321, column_start: 47, column_end: 52, line_start: 80, line_end: 80 }: newer
Token { kind: Space, char_start: 3321, char_end: 3322, byte_start: 3321, byte_end: 3322, column_start: 52, column_end: 53, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3322, char_end: 3330, byte_start: 3322, byte_end: 3330, column_start: 53, column_end: 61, line_start: 80, line_end: 80 }: versions
Token { kind: Space, char_start: 3330, char_end: 3331, byte_start: 3330, byte_end: 3331, column_start: 61, column_end: 62, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3331, char_end: 3334, byte_start: 3331, byte_end: 3334, column_start: 62, column_end: 65, line_start: 80, line_end: 80 }: the
Token { kind: Space, char_start: 3334, char_end: 3335, byte_start: 3334, byte_end: 3335, column_start: 65, column_end: 66, line_start: 80, line_end: 80 }: " "
Token { kind: Text, char_start: 3335, char_end: 3340, byte_start: 3335, byte_end: 3340, column_start: 66, column_end: 71, line_start: 80, line_end: 80 }: built
Token { kind: Hyphen, char_start: 3340, char_end: 3341, byte_start: 3340, byte_end: 3341, column_start: 71, column_end: 72, line_start: 80, line_end: 80 }: -
Token { kind: Text, char_start: 3341, char_end: 3343, byte_start: 3341, byte_end: 3343, column_start: 72, column_end: 74, line_start: 80, line_end: 80 }: in
Token { kind: Newline, char_start: 3343, char_end: 3344, byte_start: 3343, byte_end: 3344, column_start: 74, column_end: 1, line_start: 80, line_end: 81 }: "\n"
Token { kind: Bar, char_start: 3344, char_end: 3345, byte_start: 3344, byte_end: 3345, column_start: 1, column_end: 2, line_start: 81, line_end: 81 }: |
Token { kind: Text, char_start: 3345, char_end: 3349, byte_start: 3345, byte_end: 3349, column_start: 2, column_end: 6, line_start: 81, line_end: 81 }: :cdo
Token { kind: Bar, char_start: 3349, char_end: 3350, byte_start: 3349, byte_end: 3350, column_start: 6, column_end: 7, line_start: 81, line_end: 81 }: |
Token { kind: Space, char_start: 3350, char_end: 3351, byte_start: 3350, byte_end: 3351, column_start: 7, column_end: 8, line_start: 81, line_end: 81 }: " "
Token { kind: Text, char_start: 3351, char_end: 3353, byte_start: 3351, byte_end: 3353, column_start: 8, column_end: 10, line_start: 81, line_end: 81 }: or
Token { kind: Space, char_start: 3353, char_end: 3354, byte_start: 3353, byte_end: 3354, column_start: 10, column_end: 11, line_start: 81, line_end: 81 }: " "
Token { kind: Bar, char_start: 3354, char_end: 3355, byte_start: 3354, byte_end: 3355, column_start: 11, column_end: 12, line_start: 81, line_end: 81 }: |
Token { kind: Text, char_start: 3355, char_end: 3360, byte_start: 3355, byte_end: 3360, column_start: 12, column_end: 17, line_start: 81, line_end: 81 }: :cfdo
Token { kind: Bar, char_start: 3360, char_end: 3361, byte_start: 3360, byte_end: 3361, column_start: 17, column_end: 18, line_start: 81, line_end: 81 }: |
Token { kind: Space, char_start: 3361, char_end: 3362, byte_start: 3361, byte_end: 3362, column_start: 18, column_end: 19, line_start: 81, line_end: 81 }: " "
Token { kind: Text, char_start: 3362, char_end: 3365, byte_start: 3362, byte_end: 3365, column_start: 19, column_end: 22, line_start: 81, line_end: 81 }: are
Token { kind: Space, char_start: 3365, char_end: 3366, byte_start: 3365, byte_end: 3366, column_start: 22, column_end: 23, line_start: 81, line_end: 81 }: " "
Token { kind: Text, char_start: 3366, char_end: 3370, byte_start: 3366, byte_end: 3370, column_start: 23, column_end: 27, line_start: 81, line_end: 81 }: used
Token { kind: Space, char_start: 3370, char_end: 3371, byte_start: 3370, byte_end: 3371, column_start: 27, column_end: 28, line_start: 81, line_end: 81 }: " "
Token { kind: Text, char_start: 3371, char_end: 3378, byte_start: 3371, byte_end: 3378, column_start: 28, column_end: 35, line_start: 81, line_end: 81 }: instead
Token { kind: Rparen, char_start: 3378, char_end: 3379, byte_start: 3378, byte_end: 3379, column_start: 35, column_end: 36, line_start: 81, line_end: 81 }: )
Token { kind: Text, char_start: 3379, char_end: 3380, byte_start: 3379, byte_end: 3380, column_start: 36, column_end: 37, line_start: 81, line_end: 81 }: .
Token { kind: Newline, char_start: 3380, char_end: 3381, byte_start: 3380, byte_end: 3381, column_start: 37, column_end: 1, line_start: 81, line_end: 82 }: "\n"
Token { kind: Newline, char_start: 3381, char_end: 3382, byte_start: 3381, byte_end: 3382, column_start: 1, column_end: 1, line_start: 82, line_end: 83 }: "\n"
Token { kind: Text, char_start: 3382, char_end: 3388, byte_start: 3382, byte_end: 3388, column_start: 1, column_end: 7, line_start: 83, line_end: 83 }: Ferret
Token { kind: Space, char_start: 3388, char_end: 3389, byte_start: 3388, byte_end: 3389, column_start: 7, column_end: 8, line_start: 83, line_end: 83 }: " "
Token { kind: Text, char_start: 3389, char_end: 3393, byte_start: 3389, byte_end: 3393, column_start: 8, column_end: 12, line_start: 83, line_end: 83 }: also
Token { kind: Space, char_start: 3393, char_end: 3394, byte_start: 3393, byte_end: 3394, column_start: 12, column_end: 13, line_start: 83, line_end: 83 }: " "
Token { kind: Text, char_start: 3394, char_end: 3402, byte_start: 3394, byte_end: 3402, column_start: 13, column_end: 21, line_start: 83, line_end: 83 }: provides
Token { kind: Space, char_start: 3402, char_end: 3403, byte_start: 3402, byte_end: 3403, column_start: 21, column_end: 22, line_start: 83, line_end: 83 }: " "
Token { kind: Text, char_start: 3403, char_end: 3404, byte_start: 3403, byte_end: 3404, column_start: 22, column_end: 23, line_start: 83, line_end: 83 }: a
Token { kind: Space, char_start: 3404, char_end: 3405, byte_start: 3404, byte_end: 3405, column_start: 23, column_end: 24, line_start: 83, line_end: 83 }: " "
Token { kind: Bar, char_start: 3405, char_end: 3406, byte_start: 3405, byte_end: 3406, column_start: 24, column_end: 25, line_start: 83, line_end: 83 }: |
Token { kind: Text, char_start: 3406, char_end: 3412, byte_start: 3406, byte_end: 3412, column_start: 25, column_end: 31, line_start: 83, line_end: 83 }: :Largs
Token { kind: Bar, char_start: 3412, char_end: 3413, byte_start: 3412, byte_end: 3413, column_start: 31, column_end: 32, line_start: 83, line_end: 83 }: |
Token { kind: Space, char_start: 3413, char_end: 3414, byte_start: 3413, byte_end: 3414, column_start: 32, column_end: 33, line_start: 83, line_end: 83 }: " "
Token { kind: Text, char_start: 3414, char_end: 3422, byte_start: 3414, byte_end: 3422, column_start: 33, column_end: 41, line_start: 83, line_end: 83 }: command,
Token { kind: Space, char_start: 3422, char_end: 3423, byte_start: 3422, byte_end: 3423, column_start: 41, column_end: 42, line_start: 83, line_end: 83 }: " "
Token { kind: Text, char_start: 3423, char_end: 3428, byte_start: 3423, byte_end: 3428, column_start: 42, column_end: 47, line_start: 83, line_end: 83 }: which
Token { kind: Space, char_start: 3428, char_end: 3429, byte_start: 3428, byte_end: 3429, column_start: 47, column_end: 48, line_start: 83, line_end: 83 }: " "
Token { kind: Text, char_start: 3429, char_end: 3431, byte_start: 3429, byte_end: 3431, column_start: 48, column_end: 50, line_start: 83, line_end: 83 }: is
Token { kind: Space, char_start: 3431, char_end: 3432, byte_start: 3431, byte_end: 3432, column_start: 50, column_end: 51, line_start: 83, line_end: 83 }: " "
Token { kind: Text, char_start: 3432, char_end: 3433, byte_start: 3432, byte_end: 3433, column_start: 51, column_end: 52, line_start: 83, line_end: 83 }: a
Token { kind: Space, char_start: 3433, char_end: 3434, byte_start: 3433, byte_end: 3434, column_start: 52, column_end: 53, line_start: 83, line_end: 83 }: " "
Token { kind: Bar, char_start: 3434, char_end: 3435, byte_start: 3434, byte_end: 3435, column_start: 53, column_end: 54, line_start: 83, line_end: 83 }: |
Token { kind: Text, char_start: 3435, char_end: 3443, byte_start: 3435, byte_end: 3443, column_start: 54, column_end: 62, line_start: 83, line_end: 83 }: location
Token { kind: Hyphen, char_start: 3443, char_end: 3444, byte_start: 3443, byte_end: 3444, column_start: 62, column_end: 63, line_start: 83, line_end: 83 }: -
Token { kind: Text, char_start: 3444, char_end: 3448, byte_start: 3444, byte_end: 3448, column_start: 63, column_end: 67, line_start: 83, line_end: 83 }: list
Token { kind: Bar, char_start: 3448, char_end: 3449, byte_start: 3448, byte_end: 3449, column_start: 67, column_end: 68, line_start: 83, line_end: 83 }: |
Token { kind: Space, char_start: 3449, char_end: 3450, byte_start: 3449, byte_end: 3450, column_start: 68, column_end: 69, line_start: 83, line_end: 83 }: " "
Token { kind: Text, char_start: 3450, char_end: 3456, byte_start: 3450, byte_end: 3456, column_start: 69, column_end: 75, line_start: 83, line_end: 83 }: analog
Token { kind: Newline, char_start: 3456, char_end: 3457, byte_start: 3456, byte_end: 3457, column_start: 75, column_end: 1, line_start: 83, line_end: 84 }: "\n"
Token { kind: Text, char_start: 3457, char_end: 3460, byte_start: 3457, byte_end: 3460, column_start: 1, column_end: 4, line_start: 84, line_end: 84 }: for
Token { kind: Space, char_start: 3460, char_end: 3461, byte_start: 3460, byte_end: 3461, column_start: 4, column_end: 5, line_start: 84, line_end: 84 }: " "
Token { kind: Bar, char_start: 3461, char_end: 3462, byte_start: 3461, byte_end: 3462, column_start: 5, column_end: 6, line_start: 84, line_end: 84 }: |
Token { kind: Text, char_start: 3462, char_end: 3468, byte_start: 3462, byte_end: 3468, column_start: 6, column_end: 12, line_start: 84, line_end: 84 }: :Qargs
Token { kind: Bar, char_start: 3468, char_end: 3469, byte_start: 3468, byte_end: 3469, column_start: 12, column_end: 13, line_start: 84, line_end: 84 }: |
Token { kind: Text, char_start: 3469, char_end: 3470, byte_start: 3469, byte_end: 3470, column_start: 13, column_end: 14, line_start: 84, line_end: 84 }: .
Token { kind: Newline, char_start: 3470, char_end: 3471, byte_start: 3470, byte_end: 3471, column_start: 14, column_end: 1, line_start: 84, line_end: 85 }: "\n"
Token { kind: Newline, char_start: 3471, char_end: 3472, byte_start: 3471, byte_end: 3472, column_start: 1, column_end: 1, line_start: 85, line_end: 86 }: "\n"
Token { kind: Heading(Heading1), char_start: 3472, char_end: 3473, byte_start: 3472, byte_end: 3473, column_start: 1, column_end: 2, line_start: 86, line_end: 86 }: #
Token { kind: Space, char_start: 3473, char_end: 3474, byte_start: 3473, byte_end: 3474, column_start: 2, column_end: 3, line_start: 86, line_end: 86 }: " "
Token { kind: Text, char_start: 3474, char_end: 3486, byte_start: 3474, byte_end: 3486, column_start: 3, column_end: 15, line_start: 86, line_end: 86 }: Installation
Token { kind: Newline, char_start: 3486, char_end: 3487, byte_start: 3486, byte_end: 3487, column_start: 15, column_end: 1, line_start: 86, line_end: 87 }: "\n"
Token { kind: Newline, char_start: 3487, char_end: 3488, byte_start: 3487, byte_end: 3488, column_start: 1, column_end: 1, line_start: 87, line_end: 88 }: "\n"
Token { kind: Text, char_start: 3488, char_end: 3490, byte_start: 3488, byte_end: 3490, column_start: 1, column_end: 3, line_start: 88, line_end: 88 }: To
Token { kind: Space, char_start: 3490, char_end: 3491, byte_start: 3490, byte_end: 3491, column_start: 3, column_end: 4, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3491, char_end: 3498, byte_start: 3491, byte_end: 3498, column_start: 4, column_end: 11, line_start: 88, line_end: 88 }: install
Token { kind: Space, char_start: 3498, char_end: 3499, byte_start: 3498, byte_end: 3499, column_start: 11, column_end: 12, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3499, char_end: 3506, byte_start: 3499, byte_end: 3506, column_start: 12, column_end: 19, line_start: 88, line_end: 88 }: Ferret,
Token { kind: Space, char_start: 3506, char_end: 3507, byte_start: 3506, byte_end: 3507, column_start: 19, column_end: 20, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3507, char_end: 3510, byte_start: 3507, byte_end: 3510, column_start: 20, column_end: 23, line_start: 88, line_end: 88 }: use
Token { kind: Space, char_start: 3510, char_end: 3511, byte_start: 3510, byte_end: 3511, column_start: 23, column_end: 24, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3511, char_end: 3515, byte_start: 3511, byte_end: 3515, column_start: 24, column_end: 28, line_start: 88, line_end: 88 }: your
Token { kind: Space, char_start: 3515, char_end: 3516, byte_start: 3515, byte_end: 3516, column_start: 28, column_end: 29, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3516, char_end: 3520, byte_start: 3516, byte_end: 3520, column_start: 29, column_end: 33, line_start: 88, line_end: 88 }: plug
Token { kind: Hyphen, char_start: 3520, char_end: 3521, byte_start: 3520, byte_end: 3521, column_start: 33, column_end: 34, line_start: 88, line_end: 88 }: -
Token { kind: Text, char_start: 3521, char_end: 3523, byte_start: 3521, byte_end: 3523, column_start: 34, column_end: 36, line_start: 88, line_end: 88 }: in
Token { kind: Space, char_start: 3523, char_end: 3524, byte_start: 3523, byte_end: 3524, column_start: 36, column_end: 37, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3524, char_end: 3534, byte_start: 3524, byte_end: 3534, column_start: 37, column_end: 47, line_start: 88, line_end: 88 }: management
Token { kind: Space, char_start: 3534, char_end: 3535, byte_start: 3534, byte_end: 3535, column_start: 47, column_end: 48, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3535, char_end: 3541, byte_start: 3535, byte_end: 3541, column_start: 48, column_end: 54, line_start: 88, line_end: 88 }: system
Token { kind: Space, char_start: 3541, char_end: 3542, byte_start: 3541, byte_end: 3542, column_start: 54, column_end: 55, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3542, char_end: 3544, byte_start: 3542, byte_end: 3544, column_start: 55, column_end: 57, line_start: 88, line_end: 88 }: of
Token { kind: Space, char_start: 3544, char_end: 3545, byte_start: 3544, byte_end: 3545, column_start: 57, column_end: 58, line_start: 88, line_end: 88 }: " "
Token { kind: Text, char_start: 3545, char_end: 3552, byte_start: 3545, byte_end: 3552, column_start: 58, column_end: 65, line_start: 88, line_end: 88 }: choice.
Token { kind: Newline, char_start: 3552, char_end: 3553, byte_start: 3552, byte_end: 3553, column_start: 65, column_end: 1, line_start: 88, line_end: 89 }: "\n"
Token { kind: Newline, char_start: 3553, char_end: 3554, byte_start: 3553, byte_end: 3554, column_start: 1, column_end: 1, line_start: 89, line_end: 90 }: "\n"
Token { kind: Text, char_start: 3554, char_end: 3556, byte_start: 3554, byte_end: 3556, column_start: 1, column_end: 3, line_start: 90, line_end: 90 }: If
Token { kind: Space, char_start: 3556, char_end: 3557, byte_start: 3556, byte_end: 3557, column_start: 3, column_end: 4, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3557, char_end: 3560, byte_start: 3557, byte_end: 3560, column_start: 4, column_end: 7, line_start: 90, line_end: 90 }: you
Token { kind: Space, char_start: 3560, char_end: 3561, byte_start: 3560, byte_end: 3561, column_start: 7, column_end: 8, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3561, char_end: 3566, byte_start: 3561, byte_end: 3566, column_start: 8, column_end: 13, line_start: 90, line_end: 90 }: don't
Token { kind: Space, char_start: 3566, char_end: 3567, byte_start: 3566, byte_end: 3567, column_start: 13, column_end: 14, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3567, char_end: 3571, byte_start: 3567, byte_end: 3571, column_start: 14, column_end: 18, line_start: 90, line_end: 90 }: have
Token { kind: Space, char_start: 3571, char_end: 3572, byte_start: 3571, byte_end: 3572, column_start: 18, column_end: 19, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3572, char_end: 3573, byte_start: 3572, byte_end: 3573, column_start: 19, column_end: 20, line_start: 90, line_end: 90 }: a
Token { kind: Space, char_start: 3573, char_end: 3574, byte_start: 3573, byte_end: 3574, column_start: 20, column_end: 21, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3574, char_end: 3579, byte_start: 3574, byte_end: 3579, column_start: 21, column_end: 26, line_start: 90, line_end: 90 }: "plug
Token { kind: Hyphen, char_start: 3579, char_end: 3580, byte_start: 3579, byte_end: 3580, column_start: 26, column_end: 27, line_start: 90, line_end: 90 }: -
Token { kind: Text, char_start: 3580, char_end: 3582, byte_start: 3580, byte_end: 3582, column_start: 27, column_end: 29, line_start: 90, line_end: 90 }: in
Token { kind: Space, char_start: 3582, char_end: 3583, byte_start: 3582, byte_end: 3583, column_start: 29, column_end: 30, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3583, char_end: 3593, byte_start: 3583, byte_end: 3593, column_start: 30, column_end: 40, line_start: 90, line_end: 90 }: management
Token { kind: Space, char_start: 3593, char_end: 3594, byte_start: 3593, byte_end: 3594, column_start: 40, column_end: 41, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3594, char_end: 3600, byte_start: 3594, byte_end: 3600, column_start: 41, column_end: 47, line_start: 90, line_end: 90 }: system
Token { kind: Space, char_start: 3600, char_end: 3601, byte_start: 3600, byte_end: 3601, column_start: 47, column_end: 48, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3601, char_end: 3603, byte_start: 3601, byte_end: 3603, column_start: 48, column_end: 50, line_start: 90, line_end: 90 }: of
Token { kind: Space, char_start: 3603, char_end: 3604, byte_start: 3603, byte_end: 3604, column_start: 50, column_end: 51, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3604, char_end: 3612, byte_start: 3604, byte_end: 3612, column_start: 51, column_end: 59, line_start: 90, line_end: 90 }: choice",
Token { kind: Space, char_start: 3612, char_end: 3613, byte_start: 3612, byte_end: 3613, column_start: 59, column_end: 60, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3613, char_end: 3614, byte_start: 3613, byte_end: 3614, column_start: 60, column_end: 61, line_start: 90, line_end: 90 }: I
Token { kind: Space, char_start: 3614, char_end: 3615, byte_start: 3614, byte_end: 3615, column_start: 61, column_end: 62, line_start: 90, line_end: 90 }: " "
Token { kind: Text, char_start: 3615, char_end: 3624, byte_start: 3615, byte_end: 3624, column_start: 62, column_end: 71, line_start: 90, line_end: 90 }: recommend
Token { kind: Newline, char_start: 3624, char_end: 3625, byte_start: 3624, byte_end: 3625, column_start: 71, column_end: 1, line_start: 90, line_end: 91 }: "\n"
Token { kind: Text, char_start: 3625, char_end: 3633, byte_start: 3625, byte_end: 3633, column_start: 1, column_end: 9, line_start: 91, line_end: 91 }: Pathogen
Token { kind: Space, char_start: 3633, char_end: 3634, byte_start: 3633, byte_end: 3634, column_start: 9, column_end: 10, line_start: 91, line_end: 91 }: " "
Token { kind: Lparen, char_start: 3634, char_end: 3635, byte_start: 3634, byte_end: 3635, column_start: 10, column_end: 11, line_start: 91, line_end: 91 }: (
Token { kind: Text, char_start: 3635, char_end: 3663, byte_start: 3635, byte_end: 3663, column_start: 11, column_end: 39, line_start: 91, line_end: 91 }: https://github.com/tpope/vim
Token { kind: Hyphen, char_start: 3663, char_end: 3664, byte_start: 3663, byte_end: 3664, column_start: 39, column_end: 40, line_start: 91, line_end: 91 }: -
Token { kind: Text, char_start: 3664, char_end: 3672, byte_start: 3664, byte_end: 3672, column_start: 40, column_end: 48, line_start: 91, line_end: 91 }: pathogen
Token { kind: Rparen, char_start: 3672, char_end: 3673, byte_start: 3672, byte_end: 3673, column_start: 48, column_end: 49, line_start: 91, line_end: 91 }: )
Token { kind: Space, char_start: 3673, char_end: 3674, byte_start: 3673, byte_end: 3674, column_start: 49, column_end: 50, line_start: 91, line_end: 91 }: " "
Token { kind: Text, char_start: 3674, char_end: 3677, byte_start: 3674, byte_end: 3677, column_start: 50, column_end: 53, line_start: 91, line_end: 91 }: due
Token { kind: Space, char_start: 3677, char_end: 3678, byte_start: 3677, byte_end: 3678, column_start: 53, column_end: 54, line_start: 91, line_end: 91 }: " "
Token { kind: Text, char_start: 3678, char_end: 3680, byte_start: 3678, byte_end: 3680, column_start: 54, column_end: 56, line_start: 91, line_end: 91 }: to
Token { kind: Space, char_start: 3680, char_end: 3681, byte_start: 3680, byte_end: 3681, column_start: 56, column_end: 57, line_start: 91, line_end: 91 }: " "
Token { kind: Text, char_start: 3681, char_end: 3684, byte_start: 3681, byte_end: 3684, column_start: 57, column_end: 60, line_start: 91, line_end: 91 }: its
Token { kind: Space, char_start: 3684, char_end: 3685, byte_start: 3684, byte_end: 3685, column_start: 60, column_end: 61, line_start: 91, line_end: 91 }: " "
Token { kind: Text, char_start: 3685, char_end: 3695, byte_start: 3685, byte_end: 3695, column_start: 61, column_end: 71, line_start: 91, line_end: 91 }: simplicity
Token { kind: Space, char_start: 3695, char_end: 3696, byte_start: 3695, byte_end: 3696, column_start: 71, column_end: 72, line_start: 91, line_end: 91 }: " "
Token { kind: Text, char_start: 3696, char_end: 3699, byte_start: 3696, byte_end: 3699, column_start: 72, column_end: 75, line_start: 91, line_end: 91 }: and
Token { kind: Newline, char_start: 3699, char_end: 3700, byte_start: 3699, byte_end: 3700, column_start: 75, column_end: 1, line_start: 91, line_end: 92 }: "\n"
Token { kind: Text, char_start: 3700, char_end: 3711, byte_start: 3700, byte_end: 3711, column_start: 1, column_end: 12, line_start: 92, line_end: 92 }: robustness.
Token { kind: Space, char_start: 3711, char_end: 3712, byte_start: 3711, byte_end: 3712, column_start: 12, column_end: 13, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3712, char_end: 3720, byte_start: 3712, byte_end: 3720, column_start: 13, column_end: 21, line_start: 92, line_end: 92 }: Assuming
Token { kind: Space, char_start: 3720, char_end: 3721, byte_start: 3720, byte_end: 3721, column_start: 21, column_end: 22, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3721, char_end: 3725, byte_start: 3721, byte_end: 3725, column_start: 22, column_end: 26, line_start: 92, line_end: 92 }: that
Token { kind: Space, char_start: 3725, char_end: 3726, byte_start: 3725, byte_end: 3726, column_start: 26, column_end: 27, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3726, char_end: 3729, byte_start: 3726, byte_end: 3729, column_start: 27, column_end: 30, line_start: 92, line_end: 92 }: you
Token { kind: Space, char_start: 3729, char_end: 3730, byte_start: 3729, byte_end: 3730, column_start: 30, column_end: 31, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3730, char_end: 3734, byte_start: 3730, byte_end: 3734, column_start: 31, column_end: 35, line_start: 92, line_end: 92 }: have
Token { kind: Space, char_start: 3734, char_end: 3735, byte_start: 3734, byte_end: 3735, column_start: 35, column_end: 36, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3735, char_end: 3743, byte_start: 3735, byte_end: 3743, column_start: 36, column_end: 44, line_start: 92, line_end: 92 }: Pathogen
Token { kind: Space, char_start: 3743, char_end: 3744, byte_start: 3743, byte_end: 3744, column_start: 44, column_end: 45, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3744, char_end: 3753, byte_start: 3744, byte_end: 3753, column_start: 45, column_end: 54, line_start: 92, line_end: 92 }: installed
Token { kind: Space, char_start: 3753, char_end: 3754, byte_start: 3753, byte_end: 3754, column_start: 54, column_end: 55, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3754, char_end: 3757, byte_start: 3754, byte_end: 3757, column_start: 55, column_end: 58, line_start: 92, line_end: 92 }: and
Token { kind: Space, char_start: 3757, char_end: 3758, byte_start: 3757, byte_end: 3758, column_start: 58, column_end: 59, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3758, char_end: 3769, byte_start: 3758, byte_end: 3769, column_start: 59, column_end: 70, line_start: 92, line_end: 92 }: configured,
Token { kind: Space, char_start: 3769, char_end: 3770, byte_start: 3769, byte_end: 3770, column_start: 70, column_end: 71, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3770, char_end: 3773, byte_start: 3770, byte_end: 3773, column_start: 71, column_end: 74, line_start: 92, line_end: 92 }: and
Token { kind: Space, char_start: 3773, char_end: 3774, byte_start: 3773, byte_end: 3774, column_start: 74, column_end: 75, line_start: 92, line_end: 92 }: " "
Token { kind: Text, char_start: 3774, char_end: 3778, byte_start: 3774, byte_end: 3778, column_start: 75, column_end: 79, line_start: 92, line_end: 92 }: that
Token { kind: Newline, char_start: 3778, char_end: 3779, byte_start: 3778, byte_end: 3779, column_start: 79, column_end: 1, line_start: 92, line_end: 93 }: "\n"
Token { kind: Text, char_start: 3779, char_end: 3782, byte_start: 3779, byte_end: 3782, column_start: 1, column_end: 4, line_start: 93, line_end: 93 }: you
Token { kind: Space, char_start: 3782, char_end: 3783, byte_start: 3782, byte_end: 3783, column_start: 4, column_end: 5, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3783, char_end: 3787, byte_start: 3783, byte_end: 3787, column_start: 5, column_end: 9, line_start: 93, line_end: 93 }: want
Token { kind: Space, char_start: 3787, char_end: 3788, byte_start: 3787, byte_end: 3788, column_start: 9, column_end: 10, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3788, char_end: 3790, byte_start: 3788, byte_end: 3790, column_start: 10, column_end: 12, line_start: 93, line_end: 93 }: to
Token { kind: Space, char_start: 3790, char_end: 3791, byte_start: 3790, byte_end: 3791, column_start: 12, column_end: 13, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3791, char_end: 3798, byte_start: 3791, byte_end: 3798, column_start: 13, column_end: 20, line_start: 93, line_end: 93 }: install
Token { kind: Space, char_start: 3798, char_end: 3799, byte_start: 3798, byte_end: 3799, column_start: 20, column_end: 21, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3799, char_end: 3805, byte_start: 3799, byte_end: 3805, column_start: 21, column_end: 27, line_start: 93, line_end: 93 }: Ferret
Token { kind: Space, char_start: 3805, char_end: 3806, byte_start: 3805, byte_end: 3806, column_start: 27, column_end: 28, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3806, char_end: 3810, byte_start: 3806, byte_end: 3810, column_start: 28, column_end: 32, line_start: 93, line_end: 93 }: into
Token { kind: Space, char_start: 3810, char_end: 3811, byte_start: 3810, byte_end: 3811, column_start: 32, column_end: 33, line_start: 93, line_end: 93 }: " "
Token { kind: Backtick, char_start: 3811, char_end: 3812, byte_start: 3811, byte_end: 3812, column_start: 33, column_end: 34, line_start: 93, line_end: 93 }: `
Token { kind: Text, char_start: 3812, char_end: 3825, byte_start: 3812, byte_end: 3825, column_start: 34, column_end: 47, line_start: 93, line_end: 93 }: ~/.vim/bundle
Token { kind: Backtick, char_start: 3825, char_end: 3826, byte_start: 3825, byte_end: 3826, column_start: 47, column_end: 48, line_start: 93, line_end: 93 }: `
Token { kind: Text, char_start: 3826, char_end: 3827, byte_start: 3826, byte_end: 3827, column_start: 48, column_end: 49, line_start: 93, line_end: 93 }: ,
Token { kind: Space, char_start: 3827, char_end: 3828, byte_start: 3827, byte_end: 3828, column_start: 49, column_end: 50, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3828, char_end: 3831, byte_start: 3828, byte_end: 3831, column_start: 50, column_end: 53, line_start: 93, line_end: 93 }: you
Token { kind: Space, char_start: 3831, char_end: 3832, byte_start: 3831, byte_end: 3832, column_start: 53, column_end: 54, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3832, char_end: 3835, byte_start: 3832, byte_end: 3835, column_start: 54, column_end: 57, line_start: 93, line_end: 93 }: can
Token { kind: Space, char_start: 3835, char_end: 3836, byte_start: 3835, byte_end: 3836, column_start: 57, column_end: 58, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3836, char_end: 3838, byte_start: 3836, byte_end: 3838, column_start: 58, column_end: 60, line_start: 93, line_end: 93 }: do
Token { kind: Space, char_start: 3838, char_end: 3839, byte_start: 3838, byte_end: 3839, column_start: 60, column_end: 61, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3839, char_end: 3841, byte_start: 3839, byte_end: 3841, column_start: 61, column_end: 63, line_start: 93, line_end: 93 }: so
Token { kind: Space, char_start: 3841, char_end: 3842, byte_start: 3841, byte_end: 3842, column_start: 63, column_end: 64, line_start: 93, line_end: 93 }: " "
Token { kind: Text, char_start: 3842, char_end: 3847, byte_start: 3842, byte_end: 3847, column_start: 64, column_end: 69, line_start: 93, line_end: 93 }: with:
Token { kind: Newline, char_start: 3847, char_end: 3848, byte_start: 3847, byte_end: 3848, column_start: 69, column_end: 1, line_start: 93, line_end: 94 }: "\n"
Token { kind: Newline, char_start: 3848, char_end: 3849, byte_start: 3848, byte_end: 3849, column_start: 1, column_end: 1, line_start: 94, line_end: 95 }: "\n"
Token { kind: CodeFence, char_start: 3849, char_end: 3852, byte_start: 3849, byte_end: 3852, column_start: 1, column_end: 4, line_start: 95, line_end: 95 }: ```
Token { kind: Newline, char_start: 3852, char_end: 3853, byte_start: 3852, byte_end: 3853, column_start: 4, column_end: 1, line_start: 95, line_end: 96 }: "\n"
Token { kind: Text, char_start: 3853, char_end: 3856, byte_start: 3853, byte_end: 3856, column_start: 1, column_end: 4, line_start: 96, line_end: 96 }: git
Token { kind: Space, char_start: 3856, char_end: 3857, byte_start: 3856, byte_end: 3857, column_start: 4, column_end: 5, line_start: 96, line_end: 96 }: " "
Token { kind: Text, char_start: 3857, char_end: 3862, byte_start: 3857, byte_end: 3862, column_start: 5, column_end: 10, line_start: 96, line_end: 96 }: clone
Token { kind: Space, char_start: 3862, char_end: 3863, byte_start: 3862, byte_end: 3863, column_start: 10, column_end: 11, line_start: 96, line_end: 96 }: " "
Token { kind: Text, char_start: 3863, char_end: 3900, byte_start: 3863, byte_end: 3900, column_start: 11, column_end: 48, line_start: 96, line_end: 96 }: https://github.com/wincent/ferret.git
Token { kind: Space, char_start: 3900, char_end: 3901, byte_start: 3900, byte_end: 3901, column_start: 48, column_end: 49, line_start: 96, line_end: 96 }: " "
Token { kind: Text, char_start: 3901, char_end: 3921, byte_start: 3901, byte_end: 3921, column_start: 49, column_end: 69, line_start: 96, line_end: 96 }: ~/.vim/bundle/ferret
Token { kind: Newline, char_start: 3921, char_end: 3922, byte_start: 3921, byte_end: 3922, column_start: 69, column_end: 1, line_start: 96, line_end: 97 }: "\n"
Token { kind: CodeFence, char_start: 3922, char_end: 3925, byte_start: 3922, byte_end: 3925, column_start: 1, column_end: 4, line_start: 97, line_end: 97 }: ```
Token { kind: Newline, char_start: 3925, char_end: 3926, byte_start: 3925, byte_end: 3926, column_start: 4, column_end: 1, line_start: 97, line_end: 98 }: "\n"
Token { kind: Newline, char_start: 3926, char_end: 3927, byte_start: 3926, byte_end: 3927, column_start: 1, column_end: 1, line_start: 98, line_end: 99 }: "\n"
Token { kind: Text, char_start: 3927, char_end: 3941, byte_start: 3927, byte_end: 3941, column_start: 1, column_end: 15, line_start: 99, line_end: 99 }: Alternatively,
Token { kind: Space, char_start: 3941, char_end: 3942, byte_start: 3941, byte_end: 3942, column_start: 15, column_end: 16, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3942, char_end: 3944, byte_start: 3942, byte_end: 3944, column_start: 16, column_end: 18, line_start: 99, line_end: 99 }: if
Token { kind: Space, char_start: 3944, char_end: 3945, byte_start: 3944, byte_end: 3945, column_start: 18, column_end: 19, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3945, char_end: 3948, byte_start: 3945, byte_end: 3948, column_start: 19, column_end: 22, line_start: 99, line_end: 99 }: you
Token { kind: Space, char_start: 3948, char_end: 3949, byte_start: 3948, byte_end: 3949, column_start: 22, column_end: 23, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3949, char_end: 3952, byte_start: 3949, byte_end: 3952, column_start: 23, column_end: 26, line_start: 99, line_end: 99 }: use
Token { kind: Space, char_start: 3952, char_end: 3953, byte_start: 3952, byte_end: 3953, column_start: 26, column_end: 27, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3953, char_end: 3954, byte_start: 3953, byte_end: 3954, column_start: 27, column_end: 28, line_start: 99, line_end: 99 }: a
Token { kind: Space, char_start: 3954, char_end: 3955, byte_start: 3954, byte_end: 3955, column_start: 28, column_end: 29, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3955, char_end: 3958, byte_start: 3955, byte_end: 3958, column_start: 29, column_end: 32, line_start: 99, line_end: 99 }: Git
Token { kind: Space, char_start: 3958, char_end: 3959, byte_start: 3958, byte_end: 3959, column_start: 32, column_end: 33, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3959, char_end: 3968, byte_start: 3959, byte_end: 3968, column_start: 33, column_end: 42, line_start: 99, line_end: 99 }: submodule
Token { kind: Space, char_start: 3968, char_end: 3969, byte_start: 3968, byte_end: 3969, column_start: 42, column_end: 43, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3969, char_end: 3972, byte_start: 3969, byte_end: 3972, column_start: 43, column_end: 46, line_start: 99, line_end: 99 }: for
Token { kind: Space, char_start: 3972, char_end: 3973, byte_start: 3972, byte_end: 3973, column_start: 46, column_end: 47, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3973, char_end: 3977, byte_start: 3973, byte_end: 3977, column_start: 47, column_end: 51, line_start: 99, line_end: 99 }: each
Token { kind: Space, char_start: 3977, char_end: 3978, byte_start: 3977, byte_end: 3978, column_start: 51, column_end: 52, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3978, char_end: 3981, byte_start: 3978, byte_end: 3981, column_start: 52, column_end: 55, line_start: 99, line_end: 99 }: Vim
Token { kind: Space, char_start: 3981, char_end: 3982, byte_start: 3981, byte_end: 3982, column_start: 55, column_end: 56, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3982, char_end: 3986, byte_start: 3982, byte_end: 3986, column_start: 56, column_end: 60, line_start: 99, line_end: 99 }: plug
Token { kind: Hyphen, char_start: 3986, char_end: 3987, byte_start: 3986, byte_end: 3987, column_start: 60, column_end: 61, line_start: 99, line_end: 99 }: -
Token { kind: Text, char_start: 3987, char_end: 3990, byte_start: 3987, byte_end: 3990, column_start: 61, column_end: 64, line_start: 99, line_end: 99 }: in,
Token { kind: Space, char_start: 3990, char_end: 3991, byte_start: 3990, byte_end: 3991, column_start: 64, column_end: 65, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3991, char_end: 3994, byte_start: 3991, byte_end: 3994, column_start: 65, column_end: 68, line_start: 99, line_end: 99 }: you
Token { kind: Space, char_start: 3994, char_end: 3995, byte_start: 3994, byte_end: 3995, column_start: 68, column_end: 69, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 3995, char_end: 4000, byte_start: 3995, byte_end: 4000, column_start: 69, column_end: 74, line_start: 99, line_end: 99 }: could
Token { kind: Space, char_start: 4000, char_end: 4001, byte_start: 4000, byte_end: 4001, column_start: 74, column_end: 75, line_start: 99, line_end: 99 }: " "
Token { kind: Text, char_start: 4001, char_end: 4003, byte_start: 4001, byte_end: 4003, column_start: 75, column_end: 77, line_start: 99, line_end: 99 }: do
Token { kind: Newline, char_start: 4003, char_end: 4004, byte_start: 4003, byte_end: 4004, column_start: 77, column_end: 1, line_start: 99, line_end: 100 }: "\n"
Token { kind: Text, char_start: 4004, char_end: 4007, byte_start: 4004, byte_end: 4007, column_start: 1, column_end: 4, line_start: 100, line_end: 100 }: the
Token { kind: Space, char_start: 4007, char_end: 4008, byte_start: 4007, byte_end: 4008, column_start: 4, column_end: 5, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4008, char_end: 4017, byte_start: 4008, byte_end: 4017, column_start: 5, column_end: 14, line_start: 100, line_end: 100 }: following
Token { kind: Space, char_start: 4017, char_end: 4018, byte_start: 4017, byte_end: 4018, column_start: 14, column_end: 15, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4018, char_end: 4023, byte_start: 4018, byte_end: 4023, column_start: 15, column_end: 20, line_start: 100, line_end: 100 }: after
Token { kind: Space, char_start: 4023, char_end: 4024, byte_start: 4023, byte_end: 4024, column_start: 20, column_end: 21, line_start: 100, line_end: 100 }: " "
Token { kind: Backtick, char_start: 4024, char_end: 4025, byte_start: 4024, byte_end: 4025, column_start: 21, column_end: 22, line_start: 100, line_end: 100 }: `
Token { kind: Text, char_start: 4025, char_end: 4027, byte_start: 4025, byte_end: 4027, column_start: 22, column_end: 24, line_start: 100, line_end: 100 }: cd
Token { kind: Backtick, char_start: 4027, char_end: 4028, byte_start: 4027, byte_end: 4028, column_start: 24, column_end: 25, line_start: 100, line_end: 100 }: `
Token { kind: Hyphen, char_start: 4028, char_end: 4029, byte_start: 4028, byte_end: 4029, column_start: 25, column_end: 26, line_start: 100, line_end: 100 }: -
Token { kind: Text, char_start: 4029, char_end: 4032, byte_start: 4029, byte_end: 4032, column_start: 26, column_end: 29, line_start: 100, line_end: 100 }: ing
Token { kind: Space, char_start: 4032, char_end: 4033, byte_start: 4032, byte_end: 4033, column_start: 29, column_end: 30, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4033, char_end: 4037, byte_start: 4033, byte_end: 4037, column_start: 30, column_end: 34, line_start: 100, line_end: 100 }: into
Token { kind: Space, char_start: 4037, char_end: 4038, byte_start: 4037, byte_end: 4038, column_start: 34, column_end: 35, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4038, char_end: 4041, byte_start: 4038, byte_end: 4041, column_start: 35, column_end: 38, line_start: 100, line_end: 100 }: the
Token { kind: Space, char_start: 4041, char_end: 4042, byte_start: 4041, byte_end: 4042, column_start: 38, column_end: 39, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4042, char_end: 4045, byte_start: 4042, byte_end: 4045, column_start: 39, column_end: 42, line_start: 100, line_end: 100 }: top
Token { kind: Hyphen, char_start: 4045, char_end: 4046, byte_start: 4045, byte_end: 4046, column_start: 42, column_end: 43, line_start: 100, line_end: 100 }: -
Token { kind: Text, char_start: 4046, char_end: 4051, byte_start: 4046, byte_end: 4051, column_start: 43, column_end: 48, line_start: 100, line_end: 100 }: level
Token { kind: Space, char_start: 4051, char_end: 4052, byte_start: 4051, byte_end: 4052, column_start: 48, column_end: 49, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4052, char_end: 4054, byte_start: 4052, byte_end: 4054, column_start: 49, column_end: 51, line_start: 100, line_end: 100 }: of
Token { kind: Space, char_start: 4054, char_end: 4055, byte_start: 4054, byte_end: 4055, column_start: 51, column_end: 52, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4055, char_end: 4059, byte_start: 4055, byte_end: 4059, column_start: 52, column_end: 56, line_start: 100, line_end: 100 }: your
Token { kind: Space, char_start: 4059, char_end: 4060, byte_start: 4059, byte_end: 4060, column_start: 56, column_end: 57, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4060, char_end: 4063, byte_start: 4060, byte_end: 4063, column_start: 57, column_end: 60, line_start: 100, line_end: 100 }: Git
Token { kind: Space, char_start: 4063, char_end: 4064, byte_start: 4063, byte_end: 4064, column_start: 60, column_end: 61, line_start: 100, line_end: 100 }: " "
Token { kind: Text, char_start: 4064, char_end: 4077, byte_start: 4064, byte_end: 4077, column_start: 61, column_end: 74, line_start: 100, line_end: 100 }: superproject:
Token { kind: Newline, char_start: 4077, char_end: 4078, byte_start: 4077, byte_end: 4078, column_start: 74, column_end: 1, line_start: 100, line_end: 101 }: "\n"
Token { kind: Newline, char_start: 4078, char_end: 4079, byte_start: 4078, byte_end: 4079, column_start: 1, column_end: 1, line_start: 101, line_end: 102 }: "\n"
Token { kind: CodeFence, char_start: 4079, char_end: 4082, byte_start: 4079, byte_end: 4082, column_start: 1, column_end: 4, line_start: 102, line_end: 102 }: ```
Token { kind: Newline, char_start: 4082, char_end: 4083, byte_start: 4082, byte_end: 4083, column_start: 4, column_end: 1, line_start: 102, line_end: 103 }: "\n"
Token { kind: Text, char_start: 4083, char_end: 4086, byte_start: 4083, byte_end: 4086, column_start: 1, column_end: 4, line_start: 103, line_end: 103 }: git
Token { kind: Space, char_start: 4086, char_end: 4087, byte_start: 4086, byte_end: 4087, column_start: 4, column_end: 5, line_start: 103, line_end: 103 }: " "
Token { kind: Text, char_start: 4087, char_end: 4096, byte_start: 4087, byte_end: 4096, column_start: 5, column_end: 14, line_start: 103, line_end: 103 }: submodule
Token { kind: Space, char_start: 4096, char_end: 4097, byte_start: 4096, byte_end: 4097, column_start: 14, column_end: 15, line_start: 103, line_end: 103 }: " "
Token { kind: Text, char_start: 4097, char_end: 4100, byte_start: 4097, byte_end: 4100, column_start: 15, column_end: 18, line_start: 103, line_end: 103 }: add
Token { kind: Space, char_start: 4100, char_end: 4101, byte_start: 4100, byte_end: 4101, column_start: 18, column_end: 19, line_start: 103, line_end: 103 }: " "
Token { kind: Text, char_start: 4101, char_end: 4138, byte_start: 4101, byte_end: 4138, column_start: 19, column_end: 56, line_start: 103, line_end: 103 }: https://github.com/wincent/ferret.git
Token { kind: Space, char_start: 4138, char_end: 4139, byte_start: 4138, byte_end: 4139, column_start: 56, column_end: 57, line_start: 103, line_end: 103 }: " "
Token { kind: Text, char_start: 4139, char_end: 4158, byte_start: 4139, byte_end: 4158, column_start: 57, column_end: 76, line_start: 103, line_end: 103 }: ~/vim/bundle/ferret
Token { kind: Newline, char_start: 4158, char_end: 4159, byte_start: 4158, byte_end: 4159, column_start: 76, column_end: 1, line_start: 103, line_end: 104 }: "\n"
Token { kind: Text, char_start: 4159, char_end: 4162, byte_start: 4159, byte_end: 4162, column_start: 1, column_end: 4, line_start: 104, line_end: 104 }: git
Token { kind: Space, char_start: 4162, char_end: 4163, byte_start: 4162, byte_end: 4163, column_start: 4, column_end: 5, line_start: 104, line_end: 104 }: " "
Token { kind: Text, char_start: 4163, char_end: 4172, byte_start: 4163, byte_end: 4172, column_start: 5, column_end: 14, line_start: 104, line_end: 104 }: submodule
Token { kind: Space, char_start: 4172, char_end: 4173, byte_start: 4172, byte_end: 4173, column_start: 14, column_end: 15, line_start: 104, line_end: 104 }: " "
Token { kind: Text, char_start: 4173, char_end: 4177, byte_start: 4173, byte_end: 4177, column_start: 15, column_end: 19, line_start: 104, line_end: 104 }: init
Token { kind: Newline, char_start: 4177, char_end: 4178, byte_start: 4177, byte_end: 4178, column_start: 19, column_end: 1, line_start: 104, line_end: 105 }: "\n"
Token { kind: CodeFence, char_start: 4178, char_end: 4181, byte_start: 4178, byte_end: 4181, column_start: 1, column_end: 4, line_start: 105, line_end: 105 }: ```
Token { kind: Newline, char_start: 4181, char_end: 4182, byte_start: 4181, byte_end: 4182, column_start: 4, column_end: 1, line_start: 105, line_end: 106 }: "\n"
Token { kind: Newline, char_start: 4182, char_end: 4183, byte_start: 4182, byte_end: 4183, column_start: 1, column_end: 1, line_start: 106, line_end: 107 }: "\n"
Token { kind: Text, char_start: 4183, char_end: 4185, byte_start: 4183, byte_end: 4185, column_start: 1, column_end: 3, line_start: 107, line_end: 107 }: To
Token { kind: Space, char_start: 4185, char_end: 4186, byte_start: 4185, byte_end: 4186, column_start: 3, column_end: 4, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4186, char_end: 4194, byte_start: 4186, byte_end: 4194, column_start: 4, column_end: 12, line_start: 107, line_end: 107 }: generate
Token { kind: Space, char_start: 4194, char_end: 4195, byte_start: 4194, byte_end: 4195, column_start: 12, column_end: 13, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4195, char_end: 4199, byte_start: 4195, byte_end: 4199, column_start: 13, column_end: 17, line_start: 107, line_end: 107 }: help
Token { kind: Space, char_start: 4199, char_end: 4200, byte_start: 4199, byte_end: 4200, column_start: 17, column_end: 18, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4200, char_end: 4204, byte_start: 4200, byte_end: 4204, column_start: 18, column_end: 22, line_start: 107, line_end: 107 }: tags
Token { kind: Space, char_start: 4204, char_end: 4205, byte_start: 4204, byte_end: 4205, column_start: 22, column_end: 23, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4205, char_end: 4210, byte_start: 4205, byte_end: 4210, column_start: 23, column_end: 28, line_start: 107, line_end: 107 }: under
Token { kind: Space, char_start: 4210, char_end: 4211, byte_start: 4210, byte_end: 4211, column_start: 28, column_end: 29, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4211, char_end: 4220, byte_start: 4211, byte_end: 4220, column_start: 29, column_end: 38, line_start: 107, line_end: 107 }: Pathogen,
Token { kind: Space, char_start: 4220, char_end: 4221, byte_start: 4220, byte_end: 4221, column_start: 38, column_end: 39, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4221, char_end: 4224, byte_start: 4221, byte_end: 4224, column_start: 39, column_end: 42, line_start: 107, line_end: 107 }: you
Token { kind: Space, char_start: 4224, char_end: 4225, byte_start: 4224, byte_end: 4225, column_start: 42, column_end: 43, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4225, char_end: 4228, byte_start: 4225, byte_end: 4228, column_start: 43, column_end: 46, line_start: 107, line_end: 107 }: can
Token { kind: Space, char_start: 4228, char_end: 4229, byte_start: 4228, byte_end: 4229, column_start: 46, column_end: 47, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4229, char_end: 4231, byte_start: 4229, byte_end: 4231, column_start: 47, column_end: 49, line_start: 107, line_end: 107 }: do
Token { kind: Space, char_start: 4231, char_end: 4232, byte_start: 4231, byte_end: 4232, column_start: 49, column_end: 50, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4232, char_end: 4234, byte_start: 4232, byte_end: 4234, column_start: 50, column_end: 52, line_start: 107, line_end: 107 }: so
Token { kind: Space, char_start: 4234, char_end: 4235, byte_start: 4234, byte_end: 4235, column_start: 52, column_end: 53, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4235, char_end: 4239, byte_start: 4235, byte_end: 4239, column_start: 53, column_end: 57, line_start: 107, line_end: 107 }: from
Token { kind: Space, char_start: 4239, char_end: 4240, byte_start: 4239, byte_end: 4240, column_start: 57, column_end: 58, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4240, char_end: 4246, byte_start: 4240, byte_end: 4246, column_start: 58, column_end: 64, line_start: 107, line_end: 107 }: inside
Token { kind: Space, char_start: 4246, char_end: 4247, byte_start: 4246, byte_end: 4247, column_start: 64, column_end: 65, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4247, char_end: 4250, byte_start: 4247, byte_end: 4250, column_start: 65, column_end: 68, line_start: 107, line_end: 107 }: Vim
Token { kind: Space, char_start: 4250, char_end: 4251, byte_start: 4250, byte_end: 4251, column_start: 68, column_end: 69, line_start: 107, line_end: 107 }: " "
Token { kind: Text, char_start: 4251, char_end: 4256, byte_start: 4251, byte_end: 4256, column_start: 69, column_end: 74, line_start: 107, line_end: 107 }: with:
Token { kind: Newline, char_start: 4256, char_end: 4257, byte_start: 4256, byte_end: 4257, column_start: 74, column_end: 1, line_start: 107, line_end: 108 }: "\n"
Token { kind: Newline, char_start: 4257, char_end: 4258, byte_start: 4257, byte_end: 4258, column_start: 1, column_end: 1, line_start: 108, line_end: 109 }: "\n"
Token { kind: CodeFence, char_start: 4258, char_end: 4261, byte_start: 4258, byte_end: 4261, column_start: 1, column_end: 4, line_start: 109, line_end: 109 }: ```
Token { kind: Newline, char_start: 4261, char_end: 4262, byte_start: 4261, byte_end: 4262, column_start: 4, column_end: 1, line_start: 109, line_end: 110 }: "\n"
Token { kind: Text, char_start: 4262, char_end: 4267, byte_start: 4262, byte_end: 4267, column_start: 1, column_end: 6, line_start: 110, line_end: 110 }: :call
Token { kind: Space, char_start: 4267, char_end: 4268, byte_start: 4267, byte_end: 4268, column_start: 6, column_end: 7, line_start: 110, line_end: 110 }: " "
Token { kind: Text, char_start: 4268, char_end: 4276, byte_start: 4268, byte_end: 4276, column_start: 7, column_end: 15, line_start: 110, line_end: 110 }: pathogen
Token { kind: Heading(Heading1), char_start: 4276, char_end: 4277, byte_start: 4276, byte_end: 4277, column_start: 15, column_end: 16, line_start: 110, line_end: 110 }: #
Token { kind: Text, char_start: 4277, char_end: 4285, byte_start: 4277, byte_end: 4285, column_start: 16, column_end: 24, line_start: 110, line_end: 110 }: helptags
Token { kind: Lparen, char_start: 4285, char_end: 4286, byte_start: 4285, byte_end: 4286, column_start: 24, column_end: 25, line_start: 110, line_end: 110 }: (
Token { kind: Rparen, char_start: 4286, char_end: 4287, byte_start: 4286, byte_end: 4287, column_start: 25, column_end: 26, line_start: 110, line_end: 110 }: )
Token { kind: Newline, char_start: 4287, char_end: 4288, byte_start: 4287, byte_end: 4288, column_start: 26, column_end: 1, line_start: 110, line_end: 111 }: "\n"
Token { kind: CodeFence, char_start: 4288, char_end: 4291, byte_start: 4288, byte_end: 4291, column_start: 1, column_end: 4, line_start: 111, line_end: 111 }: ```
Token { kind: Newline, char_start: 4291, char_end: 4292, byte_start: 4291, byte_end: 4292, column_start: 4, column_end: 1, line_start: 111, line_end: 112 }: "\n"
Token { kind: Newline, char_start: 4292, char_end: 4293, byte_start: 4292, byte_end: 4293, column_start: 1, column_end: 1, line_start: 112, line_end: 113 }: "\n"
Token { kind: At, char_start: 4293, char_end: 4294, byte_start: 4293, byte_end: 4294, column_start: 1, column_end: 2, line_start: 113, line_end: 113 }: @
Token { kind: Text, char_start: 4294, char_end: 4302, byte_start: 4294, byte_end: 4302, column_start: 2, column_end: 10, line_start: 113, line_end: 113 }: mappings
Token { kind: Newline, char_start: 4302, char_end: 4303, byte_start: 4302, byte_end: 4303, column_start: 10, column_end: 1, line_start: 113, line_end: 114 }: "\n"
Token { kind: Newline, char_start: 4303, char_end: 4304, byte_start: 4303, byte_end: 4304, column_start: 1, column_end: 1, line_start: 114, line_end: 115 }: "\n"
Token { kind: Heading(Heading2), char_start: 4304, char_end: 4306, byte_start: 4304, byte_end: 4306, column_start: 1, column_end: 3, line_start: 115, line_end: 115 }: ##
Token { kind: Space, char_start: 4306, char_end: 4307, byte_start: 4306, byte_end: 4307, column_start: 3, column_end: 4, line_start: 115, line_end: 115 }: " "
Token { kind: Text, char_start: 4307, char_end: 4320, byte_start: 4307, byte_end: 4320, column_start: 4, column_end: 17, line_start: 115, line_end: 115 }: Circumstances
Token { kind: Space, char_start: 4320, char_end: 4321, byte_start: 4320, byte_end: 4321, column_start: 17, column_end: 18, line_start: 115, line_end: 115 }: " "
Token { kind: Text, char_start: 4321, char_end: 4326, byte_start: 4321, byte_end: 4326, column_start: 18, column_end: 23, line_start: 115, line_end: 115 }: where
Token { kind: Space, char_start: 4326, char_end: 4327, byte_start: 4326, byte_end: 4327, column_start: 23, column_end: 24, line_start: 115, line_end: 115 }: " "
Token { kind: Text, char_start: 4327, char_end: 4335, byte_start: 4327, byte_end: 4335, column_start: 24, column_end: 32, line_start: 115, line_end: 115 }: mappings
Token { kind: Space, char_start: 4335, char_end: 4336, byte_start: 4335, byte_end: 4336, column_start: 32, column_end: 33, line_start: 115, line_end: 115 }: " "
Token { kind: Text, char_start: 4336, char_end: 4338, byte_start: 4336, byte_end: 4338, column_start: 33, column_end: 35, line_start: 115, line_end: 115 }: do
Token { kind: Space, char_start: 4338, char_end: 4339, byte_start: 4338, byte_end: 4339, column_start: 35, column_end: 36, line_start: 115, line_end: 115 }: " "
Token { kind: Text, char_start: 4339, char_end: 4342, byte_start: 4339, byte_end: 4342, column_start: 36, column_end: 39, line_start: 115, line_end: 115 }: not
Token { kind: Space, char_start: 4342, char_end: 4343, byte_start: 4342, byte_end: 4343, column_start: 39, column_end: 40, line_start: 115, line_end: 115 }: " "
Token { kind: Text, char_start: 4343, char_end: 4346, byte_start: 4343, byte_end: 4346, column_start: 40, column_end: 43, line_start: 115, line_end: 115 }: get
Token { kind: Space, char_start: 4346, char_end: 4347, byte_start: 4346, byte_end: 4347, column_start: 43, column_end: 44, line_start: 115, line_end: 115 }: " "
Token { kind: Text, char_start: 4347, char_end: 4350, byte_start: 4347, byte_end: 4350, column_start: 44, column_end: 47, line_start: 115, line_end: 115 }: set
Token { kind: Space, char_start: 4350, char_end: 4351, byte_start: 4350, byte_end: 4351, column_start: 47, column_end: 48, line_start: 115, line_end: 115 }: " "
Token { kind: Text, char_start: 4351, char_end: 4353, byte_start: 4351, byte_end: 4353, column_start: 48, column_end: 50, line_start: 115, line_end: 115 }: up
Token { kind: Newline, char_start: 4353, char_end: 4354, byte_start: 4353, byte_end: 4354, column_start: 50, column_end: 1, line_start: 115, line_end: 116 }: "\n"
Token { kind: Newline, char_start: 4354, char_end: 4355, byte_start: 4354, byte_end: 4355, column_start: 1, column_end: 1, line_start: 116, line_end: 117 }: "\n"
Token { kind: Text, char_start: 4355, char_end: 4359, byte_start: 4355, byte_end: 4359, column_start: 1, column_end: 5, line_start: 117, line_end: 117 }: Note
Token { kind: Space, char_start: 4359, char_end: 4360, byte_start: 4359, byte_end: 4360, column_start: 5, column_end: 6, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4360, char_end: 4364, byte_start: 4360, byte_end: 4364, column_start: 6, column_end: 10, line_start: 117, line_end: 117 }: that
Token { kind: Space, char_start: 4364, char_end: 4365, byte_start: 4364, byte_end: 4365, column_start: 10, column_end: 11, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4365, char_end: 4371, byte_start: 4365, byte_end: 4371, column_start: 11, column_end: 17, line_start: 117, line_end: 117 }: Ferret
Token { kind: Space, char_start: 4371, char_end: 4372, byte_start: 4371, byte_end: 4372, column_start: 17, column_end: 18, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4372, char_end: 4376, byte_start: 4372, byte_end: 4376, column_start: 18, column_end: 22, line_start: 117, line_end: 117 }: will
Token { kind: Space, char_start: 4376, char_end: 4377, byte_start: 4376, byte_end: 4377, column_start: 22, column_end: 23, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4377, char_end: 4380, byte_start: 4377, byte_end: 4380, column_start: 23, column_end: 26, line_start: 117, line_end: 117 }: not
Token { kind: Space, char_start: 4380, char_end: 4381, byte_start: 4380, byte_end: 4381, column_start: 26, column_end: 27, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4381, char_end: 4384, byte_start: 4381, byte_end: 4384, column_start: 27, column_end: 30, line_start: 117, line_end: 117 }: try
Token { kind: Space, char_start: 4384, char_end: 4385, byte_start: 4384, byte_end: 4385, column_start: 30, column_end: 31, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4385, char_end: 4387, byte_start: 4385, byte_end: 4387, column_start: 31, column_end: 33, line_start: 117, line_end: 117 }: to
Token { kind: Space, char_start: 4387, char_end: 4388, byte_start: 4387, byte_end: 4388, column_start: 33, column_end: 34, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4388, char_end: 4391, byte_start: 4388, byte_end: 4391, column_start: 34, column_end: 37, line_start: 117, line_end: 117 }: set
Token { kind: Space, char_start: 4391, char_end: 4392, byte_start: 4391, byte_end: 4392, column_start: 37, column_end: 38, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4392, char_end: 4394, byte_start: 4392, byte_end: 4394, column_start: 38, column_end: 40, line_start: 117, line_end: 117 }: up
Token { kind: Space, char_start: 4394, char_end: 4395, byte_start: 4394, byte_end: 4395, column_start: 40, column_end: 41, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4395, char_end: 4398, byte_start: 4395, byte_end: 4398, column_start: 41, column_end: 44, line_start: 117, line_end: 117 }: the
Token { kind: Space, char_start: 4398, char_end: 4399, byte_start: 4398, byte_end: 4399, column_start: 44, column_end: 45, line_start: 117, line_end: 117 }: " "
Token { kind: Bar, char_start: 4399, char_end: 4400, byte_start: 4399, byte_end: 4400, column_start: 45, column_end: 46, line_start: 117, line_end: 117 }: |
Token { kind: BlockQuote, char_start: 4400, char_end: 4401, byte_start: 4400, byte_end: 4401, column_start: 46, column_end: 47, line_start: 117, line_end: 117 }: <
Token { kind: Text, char_start: 4401, char_end: 4407, byte_start: 4401, byte_end: 4407, column_start: 47, column_end: 53, line_start: 117, line_end: 117 }: Leader
Token { kind: BlockQuote, char_start: 4407, char_end: 4408, byte_start: 4407, byte_end: 4408, column_start: 53, column_end: 54, line_start: 117, line_end: 117 }: >
Token { kind: Bar, char_start: 4408, char_end: 4409, byte_start: 4408, byte_end: 4409, column_start: 54, column_end: 55, line_start: 117, line_end: 117 }: |
Token { kind: Space, char_start: 4409, char_end: 4410, byte_start: 4409, byte_end: 4410, column_start: 55, column_end: 56, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4410, char_end: 4418, byte_start: 4410, byte_end: 4418, column_start: 56, column_end: 64, line_start: 117, line_end: 117 }: mappings
Token { kind: Space, char_start: 4418, char_end: 4419, byte_start: 4418, byte_end: 4419, column_start: 64, column_end: 65, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4419, char_end: 4421, byte_start: 4419, byte_end: 4421, column_start: 65, column_end: 67, line_start: 117, line_end: 117 }: if
Token { kind: Space, char_start: 4421, char_end: 4422, byte_start: 4421, byte_end: 4422, column_start: 67, column_end: 68, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4422, char_end: 4425, byte_start: 4422, byte_end: 4425, column_start: 68, column_end: 71, line_start: 117, line_end: 117 }: any
Token { kind: Space, char_start: 4425, char_end: 4426, byte_start: 4425, byte_end: 4426, column_start: 71, column_end: 72, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4426, char_end: 4428, byte_start: 4426, byte_end: 4428, column_start: 72, column_end: 74, line_start: 117, line_end: 117 }: of
Token { kind: Space, char_start: 4428, char_end: 4429, byte_start: 4428, byte_end: 4429, column_start: 74, column_end: 75, line_start: 117, line_end: 117 }: " "
Token { kind: Text, char_start: 4429, char_end: 4432, byte_start: 4429, byte_end: 4432, column_start: 75, column_end: 78, line_start: 117, line_end: 117 }: the
Token { kind: Newline, char_start: 4432, char_end: 4433, byte_start: 4432, byte_end: 4433, column_start: 78, column_end: 1, line_start: 117, line_end: 118 }: "\n"
Token { kind: Text, char_start: 4433, char_end: 4442, byte_start: 4433, byte_end: 4442, column_start: 1, column_end: 10, line_start: 118, line_end: 118 }: following
Token { kind: Space, char_start: 4442, char_end: 4443, byte_start: 4442, byte_end: 4443, column_start: 10, column_end: 11, line_start: 118, line_end: 118 }: " "
Token { kind: Text, char_start: 4443, char_end: 4446, byte_start: 4443, byte_end: 4446, column_start: 11, column_end: 14, line_start: 118, line_end: 118 }: are
Token { kind: Space, char_start: 4446, char_end: 4447, byte_start: 4446, byte_end: 4447, column_start: 14, column_end: 15, line_start: 118, line_end: 118 }: " "
Token { kind: Text, char_start: 4447, char_end: 4452, byte_start: 4447, byte_end: 4452, column_start: 15, column_end: 20, line_start: 118, line_end: 118 }: true:
Token { kind: Newline, char_start: 4452, char_end: 4453, byte_start: 4452, byte_end: 4453, column_start: 20, column_end: 1, line_start: 118, line_end: 119 }: "\n"
Token { kind: Newline, char_start: 4453, char_end: 4454, byte_start: 4453, byte_end: 4454, column_start: 1, column_end: 1, line_start: 119, line_end: 120 }: "\n"
Token { kind: Hyphen, char_start: 4454, char_end: 4455, byte_start: 4454, byte_end: 4455, column_start: 1, column_end: 2, line_start: 120, line_end: 120 }: -
Token { kind: Space, char_start: 4455, char_end: 4456, byte_start: 4455, byte_end: 4456, column_start: 2, column_end: 3, line_start: 120, line_end: 120 }: " "
Token { kind: Text, char_start: 4456, char_end: 4457, byte_start: 4456, byte_end: 4457, column_start: 3, column_end: 4, line_start: 120, line_end: 120 }: A
Token { kind: Space, char_start: 4457, char_end: 4458, byte_start: 4457, byte_end: 4458, column_start: 4, column_end: 5, line_start: 120, line_end: 120 }: " "
Token { kind: Text, char_start: 4458, char_end: 4465, byte_start: 4458, byte_end: 4465, column_start: 5, column_end: 12, line_start: 120, line_end: 120 }: mapping
Token { kind: Space, char_start: 4465, char_end: 4466, byte_start: 4465, byte_end: 4466, column_start: 12, column_end: 13, line_start: 120, line_end: 120 }: " "
Token { kind: Text, char_start: 4466, char_end: 4470, byte_start: 4466, byte_end: 4470, column_start: 13, column_end: 17, line_start: 120, line_end: 120 }: with
Token { kind: Space, char_start: 4470, char_end: 4471, byte_start: 4470, byte_end: 4471, column_start: 17, column_end: 18, line_start: 120, line_end: 120 }: " "
Token { kind: Text, char_start: 4471, char_end: 4474, byte_start: 4471, byte_end: 4474, column_start: 18, column_end: 21, line_start: 120, line_end: 120 }: the
Token { kind: Space, char_start: 4474, char_end: 4475, byte_start: 4474, byte_end: 4475, column_start: 21, column_end: 22, line_start: 120, line_end: 120 }: " "
Token { kind: Text, char_start: 4475, char_end: 4479, byte_start: 4475, byte_end: 4479, column_start: 22, column_end: 26, line_start: 120, line_end: 120 }: same
Token { kind: Space, char_start: 4479, char_end: 4480, byte_start: 4479, byte_end: 4480, column_start: 26, column_end: 27, line_start: 120, line_end: 120 }: " "
Token { kind: Bar, char_start: 4480, char_end: 4481, byte_start: 4480, byte_end: 4481, column_start: 27, column_end: 28, line_start: 120, line_end: 120 }: |
Token { kind: Text, char_start: 4481, char_end: 4486, byte_start: 4481, byte_end: 4486, column_start: 28, column_end: 33, line_start: 120, line_end: 120 }: {lhs}
Token { kind: Bar, char_start: 4486, char_end: 4487, byte_start: 4486, byte_end: 4487, column_start: 33, column_end: 34, line_start: 120, line_end: 120 }: |
Token { kind: Space, char_start: 4487, char_end: 4488, byte_start: 4487, byte_end: 4488, column_start: 34, column_end: 35, line_start: 120, line_end: 120 }: " "
Token { kind: Text, char_start: 4488, char_end: 4495, byte_start: 4488, byte_end: 4495, column_start: 35, column_end: 42, line_start: 120, line_end: 120 }: already
Token { kind: Space, char_start: 4495, char_end: 4496, byte_start: 4495, byte_end: 4496, column_start: 42, column_end: 43, line_start: 120, line_end: 120 }: " "
Token { kind: Text, char_start: 4496, char_end: 4503, byte_start: 4496, byte_end: 4503, column_start: 43, column_end: 50, line_start: 120, line_end: 120 }: exists.
Token { kind: Newline, char_start: 4503, char_end: 4504, byte_start: 4503, byte_end: 4504, column_start: 50, column_end: 1, line_start: 120, line_end: 121 }: "\n"
Token { kind: Hyphen, char_start: 4504, char_end: 4505, byte_start: 4504, byte_end: 4505, column_start: 1, column_end: 2, line_start: 121, line_end: 121 }: -
Token { kind: Space, char_start: 4505, char_end: 4506, byte_start: 4505, byte_end: 4506, column_start: 2, column_end: 3, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4506, char_end: 4508, byte_start: 4506, byte_end: 4508, column_start: 3, column_end: 5, line_start: 121, line_end: 121 }: An
Token { kind: Space, char_start: 4508, char_end: 4509, byte_start: 4508, byte_end: 4509, column_start: 5, column_end: 6, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4509, char_end: 4520, byte_start: 4509, byte_end: 4520, column_start: 6, column_end: 17, line_start: 121, line_end: 121 }: alternative
Token { kind: Space, char_start: 4520, char_end: 4521, byte_start: 4520, byte_end: 4521, column_start: 17, column_end: 18, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4521, char_end: 4528, byte_start: 4521, byte_end: 4528, column_start: 18, column_end: 25, line_start: 121, line_end: 121 }: mapping
Token { kind: Space, char_start: 4528, char_end: 4529, byte_start: 4528, byte_end: 4529, column_start: 25, column_end: 26, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4529, char_end: 4532, byte_start: 4529, byte_end: 4532, column_start: 26, column_end: 29, line_start: 121, line_end: 121 }: for
Token { kind: Space, char_start: 4532, char_end: 4533, byte_start: 4532, byte_end: 4533, column_start: 29, column_end: 30, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4533, char_end: 4536, byte_start: 4533, byte_end: 4536, column_start: 30, column_end: 33, line_start: 121, line_end: 121 }: the
Token { kind: Space, char_start: 4536, char_end: 4537, byte_start: 4536, byte_end: 4537, column_start: 33, column_end: 34, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4537, char_end: 4541, byte_start: 4537, byte_end: 4541, column_start: 34, column_end: 38, line_start: 121, line_end: 121 }: same
Token { kind: Space, char_start: 4541, char_end: 4542, byte_start: 4541, byte_end: 4542, column_start: 38, column_end: 39, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4542, char_end: 4555, byte_start: 4542, byte_end: 4555, column_start: 39, column_end: 52, line_start: 121, line_end: 121 }: functionality
Token { kind: Space, char_start: 4555, char_end: 4556, byte_start: 4555, byte_end: 4556, column_start: 52, column_end: 53, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4556, char_end: 4559, byte_start: 4556, byte_end: 4559, column_start: 53, column_end: 56, line_start: 121, line_end: 121 }: has
Token { kind: Space, char_start: 4559, char_end: 4560, byte_start: 4559, byte_end: 4560, column_start: 56, column_end: 57, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4560, char_end: 4567, byte_start: 4560, byte_end: 4567, column_start: 57, column_end: 64, line_start: 121, line_end: 121 }: already
Token { kind: Space, char_start: 4567, char_end: 4568, byte_start: 4567, byte_end: 4568, column_start: 64, column_end: 65, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4568, char_end: 4572, byte_start: 4568, byte_end: 4572, column_start: 65, column_end: 69, line_start: 121, line_end: 121 }: been
Token { kind: Space, char_start: 4572, char_end: 4573, byte_start: 4572, byte_end: 4573, column_start: 69, column_end: 70, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4573, char_end: 4576, byte_start: 4573, byte_end: 4576, column_start: 70, column_end: 73, line_start: 121, line_end: 121 }: set
Token { kind: Space, char_start: 4576, char_end: 4577, byte_start: 4576, byte_end: 4577, column_start: 73, column_end: 74, line_start: 121, line_end: 121 }: " "
Token { kind: Text, char_start: 4577, char_end: 4579, byte_start: 4577, byte_end: 4579, column_start: 74, column_end: 76, line_start: 121, line_end: 121 }: up
Token { kind: Newline, char_start: 4579, char_end: 4580, byte_start: 4579, byte_end: 4580, column_start: 76, column_end: 1, line_start: 121, line_end: 122 }: "\n"
Token { kind: Space, char_start: 4580, char_end: 4582, byte_start: 4580, byte_end: 4582, column_start: 1, column_end: 3, line_start: 122, line_end: 122 }: "  "
Token { kind: Text, char_start: 4582, char_end: 4586, byte_start: 4582, byte_end: 4586, column_start: 3, column_end: 7, line_start: 122, line_end: 122 }: from
Token { kind: Space, char_start: 4586, char_end: 4587, byte_start: 4586, byte_end: 4587, column_start: 7, column_end: 8, line_start: 122, line_end: 122 }: " "
Token { kind: Text, char_start: 4587, char_end: 4588, byte_start: 4587, byte_end: 4588, column_start: 8, column_end: 9, line_start: 122, line_end: 122 }: a
Token { kind: Space, char_start: 4588, char_end: 4589, byte_start: 4588, byte_end: 4589, column_start: 9, column_end: 10, line_start: 122, line_end: 122 }: " "
Token { kind: Bar, char_start: 4589, char_end: 4590, byte_start: 4589, byte_end: 4590, column_start: 10, column_end: 11, line_start: 122, line_end: 122 }: |
Token { kind: Text, char_start: 4590, char_end: 4596, byte_start: 4590, byte_end: 4596, column_start: 11, column_end: 17, line_start: 122, line_end: 122 }: .vimrc
Token { kind: Bar, char_start: 4596, char_end: 4597, byte_start: 4596, byte_end: 4597, column_start: 17, column_end: 18, line_start: 122, line_end: 122 }: |
Token { kind: Text, char_start: 4597, char_end: 4598, byte_start: 4597, byte_end: 4598, column_start: 18, column_end: 19, line_start: 122, line_end: 122 }: .
Token { kind: Newline, char_start: 4598, char_end: 4599, byte_start: 4598, byte_end: 4599, column_start: 19, column_end: 1, line_start: 122, line_end: 123 }: "\n"
Token { kind: Hyphen, char_start: 4599, char_end: 4600, byte_start: 4599, byte_end: 4600, column_start: 1, column_end: 2, line_start: 123, line_end: 123 }: -
Token { kind: Space, char_start: 4600, char_end: 4601, byte_start: 4600, byte_end: 4601, column_start: 2, column_end: 3, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4601, char_end: 4604, byte_start: 4601, byte_end: 4604, column_start: 3, column_end: 6, line_start: 123, line_end: 123 }: The
Token { kind: Space, char_start: 4604, char_end: 4605, byte_start: 4604, byte_end: 4605, column_start: 6, column_end: 7, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4605, char_end: 4612, byte_start: 4605, byte_end: 4612, column_start: 7, column_end: 14, line_start: 123, line_end: 123 }: mapping
Token { kind: Space, char_start: 4612, char_end: 4613, byte_start: 4612, byte_end: 4613, column_start: 14, column_end: 15, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4613, char_end: 4616, byte_start: 4613, byte_end: 4616, column_start: 15, column_end: 18, line_start: 123, line_end: 123 }: has
Token { kind: Space, char_start: 4616, char_end: 4617, byte_start: 4616, byte_end: 4617, column_start: 18, column_end: 19, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4617, char_end: 4621, byte_start: 4617, byte_end: 4621, column_start: 19, column_end: 23, line_start: 123, line_end: 123 }: been
Token { kind: Space, char_start: 4621, char_end: 4622, byte_start: 4621, byte_end: 4622, column_start: 23, column_end: 24, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4622, char_end: 4632, byte_start: 4622, byte_end: 4632, column_start: 24, column_end: 34, line_start: 123, line_end: 123 }: suppressed
Token { kind: Space, char_start: 4632, char_end: 4633, byte_start: 4632, byte_end: 4633, column_start: 34, column_end: 35, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4633, char_end: 4635, byte_start: 4633, byte_end: 4635, column_start: 35, column_end: 37, line_start: 123, line_end: 123 }: by
Token { kind: Space, char_start: 4635, char_end: 4636, byte_start: 4635, byte_end: 4636, column_start: 37, column_end: 38, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4636, char_end: 4643, byte_start: 4636, byte_end: 4643, column_start: 38, column_end: 45, line_start: 123, line_end: 123 }: setting
Token { kind: Space, char_start: 4643, char_end: 4644, byte_start: 4643, byte_end: 4644, column_start: 45, column_end: 46, line_start: 123, line_end: 123 }: " "
Token { kind: Bar, char_start: 4644, char_end: 4645, byte_start: 4644, byte_end: 4645, column_start: 46, column_end: 47, line_start: 123, line_end: 123 }: |
Token { kind: Text, char_start: 4645, char_end: 4656, byte_start: 4645, byte_end: 4656, column_start: 47, column_end: 58, line_start: 123, line_end: 123 }: g:FerretMap
Token { kind: Bar, char_start: 4656, char_end: 4657, byte_start: 4656, byte_end: 4657, column_start: 58, column_end: 59, line_start: 123, line_end: 123 }: |
Token { kind: Space, char_start: 4657, char_end: 4658, byte_start: 4657, byte_end: 4658, column_start: 59, column_end: 60, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4658, char_end: 4660, byte_start: 4658, byte_end: 4660, column_start: 60, column_end: 62, line_start: 123, line_end: 123 }: to
Token { kind: Space, char_start: 4660, char_end: 4661, byte_start: 4660, byte_end: 4661, column_start: 62, column_end: 63, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4661, char_end: 4662, byte_start: 4661, byte_end: 4662, column_start: 63, column_end: 64, line_start: 123, line_end: 123 }: 0
Token { kind: Space, char_start: 4662, char_end: 4663, byte_start: 4662, byte_end: 4663, column_start: 64, column_end: 65, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4663, char_end: 4665, byte_start: 4663, byte_end: 4665, column_start: 65, column_end: 67, line_start: 123, line_end: 123 }: in
Token { kind: Space, char_start: 4665, char_end: 4666, byte_start: 4665, byte_end: 4666, column_start: 67, column_end: 68, line_start: 123, line_end: 123 }: " "
Token { kind: Text, char_start: 4666, char_end: 4670, byte_start: 4666, byte_end: 4670, column_start: 68, column_end: 72, line_start: 123, line_end: 123 }: your
Token { kind: Newline, char_start: 4670, char_end: 4671, byte_start: 4670, byte_end: 4671, column_start: 72, column_end: 1, line_start: 123, line_end: 124 }: "\n"
Token { kind: Space, char_start: 4671, char_end: 4673, byte_start: 4671, byte_end: 4673, column_start: 1, column_end: 3, line_start: 124, line_end: 124 }: "  "
Token { kind: Bar, char_start: 4673, char_end: 4674, byte_start: 4673, byte_end: 4674, column_start: 3, column_end: 4, line_start: 124, line_end: 124 }: |
Token { kind: Text, char_start: 4674, char_end: 4680, byte_start: 4674, byte_end: 4680, column_start: 4, column_end: 10, line_start: 124, line_end: 124 }: .vimrc
Token { kind: Bar, char_start: 4680, char_end: 4681, byte_start: 4680, byte_end: 4681, column_start: 10, column_end: 11, line_start: 124, line_end: 124 }: |
Token { kind: Text, char_start: 4681, char_end: 4682, byte_start: 4681, byte_end: 4682, column_start: 11, column_end: 12, line_start: 124, line_end: 124 }: .
Token { kind: Newline, char_start: 4682, char_end: 4683, byte_start: 4682, byte_end: 4683, column_start: 12, column_end: 1, line_start: 124, line_end: 125 }: "\n"
Token { kind: Newline, char_start: 4683, char_end: 4684, byte_start: 4683, byte_end: 4684, column_start: 1, column_end: 1, line_start: 125, line_end: 126 }: "\n"
Token { kind: Heading(Heading2), char_start: 4684, char_end: 4686, byte_start: 4684, byte_end: 4686, column_start: 1, column_end: 3, line_start: 126, line_end: 126 }: ##
Token { kind: Space, char_start: 4686, char_end: 4687, byte_start: 4686, byte_end: 4687, column_start: 3, column_end: 4, line_start: 126, line_end: 126 }: " "
Token { kind: Text, char_start: 4687, char_end: 4695, byte_start: 4687, byte_end: 4695, column_start: 4, column_end: 12, line_start: 126, line_end: 126 }: Mappings
Token { kind: Space, char_start: 4695, char_end: 4696, byte_start: 4695, byte_end: 4696, column_start: 12, column_end: 13, line_start: 126, line_end: 126 }: " "
Token { kind: Text, char_start: 4696, char_end: 4704, byte_start: 4696, byte_end: 4704, column_start: 13, column_end: 21, line_start: 126, line_end: 126 }: specific
Token { kind: Space, char_start: 4704, char_end: 4705, byte_start: 4704, byte_end: 4705, column_start: 21, column_end: 22, line_start: 126, line_end: 126 }: " "
Token { kind: Text, char_start: 4705, char_end: 4707, byte_start: 4705, byte_end: 4707, column_start: 22, column_end: 24, line_start: 126, line_end: 126 }: to
Token { kind: Space, char_start: 4707, char_end: 4708, byte_start: 4707, byte_end: 4708, column_start: 24, column_end: 25, line_start: 126, line_end: 126 }: " "
Token { kind: Text, char_start: 4708, char_end: 4711, byte_start: 4708, byte_end: 4711, column_start: 25, column_end: 28, line_start: 126, line_end: 126 }: the
Token { kind: Space, char_start: 4711, char_end: 4712, byte_start: 4711, byte_end: 4712, column_start: 28, column_end: 29, line_start: 126, line_end: 126 }: " "
Token { kind: Text, char_start: 4712, char_end: 4720, byte_start: 4712, byte_end: 4720, column_start: 29, column_end: 37, line_start: 126, line_end: 126 }: quickfix
Token { kind: Space, char_start: 4720, char_end: 4721, byte_start: 4720, byte_end: 4721, column_start: 37, column_end: 38, line_start: 126, line_end: 126 }: " "
Token { kind: Text, char_start: 4721, char_end: 4727, byte_start: 4721, byte_end: 4727, column_start: 38, column_end: 44, line_start: 126, line_end: 126 }: window
Token { kind: Newline, char_start: 4727, char_end: 4728, byte_start: 4727, byte_end: 4728, column_start: 44, column_end: 1, line_start: 126, line_end: 127 }: "\n"
Token { kind: Newline, char_start: 4728, char_end: 4729, byte_start: 4728, byte_end: 4729, column_start: 1, column_end: 1, line_start: 127, line_end: 128 }: "\n"
Token { kind: Text, char_start: 4729, char_end: 4742, byte_start: 4729, byte_end: 4742, column_start: 1, column_end: 14, line_start: 128, line_end: 128 }: Additionally,
Token { kind: Space, char_start: 4742, char_end: 4743, byte_start: 4742, byte_end: 4743, column_start: 14, column_end: 15, line_start: 128, line_end: 128 }: " "
Token { kind: Text, char_start: 4743, char_end: 4749, byte_start: 4743, byte_end: 4749, column_start: 15, column_end: 21, line_start: 128, line_end: 128 }: Ferret
Token { kind: Space, char_start: 4749, char_end: 4750, byte_start: 4749, byte_end: 4750, column_start: 21, column_end: 22, line_start: 128, line_end: 128 }: " "
Token { kind: Text, char_start: 4750, char_end: 4754, byte_start: 4750, byte_end: 4754, column_start: 22, column_end: 26, line_start: 128, line_end: 128 }: will
Token { kind: Space, char_start: 4754, char_end: 4755, byte_start: 4754, byte_end: 4755, column_start: 26, column_end: 27, line_start: 128, line_end: 128 }: " "
Token { kind: Text, char_start: 4755, char_end: 4758, byte_start: 4755, byte_end: 4758, column_start: 27, column_end: 30, line_start: 128, line_end: 128 }: set
Token { kind: Space, char_start: 4758, char_end: 4759, byte_start: 4758, byte_end: 4759, column_start: 30, column_end: 31, line_start: 128, line_end: 128 }: " "
Token { kind: Text, char_start: 4759, char_end: 4761, byte_start: 4759, byte_end: 4761, column_start: 31, column_end: 33, line_start: 128, line_end: 128 }: up
Token { kind: Space, char_start: 4761, char_end: 4762, byte_start: 4761, byte_end: 4762, column_start: 33, column_end: 34, line_start: 128, line_end: 128 }: " "
Token { kind: Text, char_start: 4762, char_end: 4769, byte_start: 4762, byte_end: 4769, column_start: 34, column_end: 41, line_start: 128, line_end: 128 }: special
Token { kind: Space, char_start: 4769, char_end: 4770, byte_start: 4769, byte_end: 4770, column_start: 41, column_end: 42, line_start: 128, line_end: 128 }: " "
Token { kind: Text, char_start: 4770, char_end: 4778, byte_start: 4770, byte_end: 4778, column_start: 42, column_end: 50, line_start: 128, line_end: 128 }: mappings
Token { kind: Space, char_start: 4778, char_end: 4779, byte_start: 4778, byte_end: 4779, column_start: 50, column_end: 51, line_start: 128, line_end: 128 }: " "
Token { kind: Text, char_start: 4779, char_end: 4781, byte_start: 4779, byte_end: 4781, column_start: 51, column_end: 53, line_start: 128, line_end: 128 }: in
Token { kind: Space, char_start: 4781, char_end: 4782, byte_start: 4781, byte_end: 4782, column_start: 53, column_end: 54, line_start: 128, line_end: 128 }: " "
Token { kind: Bar, char_start: 4782, char_end: 4783, byte_start: 4782, byte_end: 4783, column_start: 54, column_end: 55, line_start: 128, line_end: 128 }: |
Token { kind: Text, char_start: 4783, char_end: 4791, byte_start: 4783, byte_end: 4791, column_start: 55, column_end: 63, line_start: 128, line_end: 128 }: quickfix
Token { kind: Bar, char_start: 4791, char_end: 4792, byte_start: 4791, byte_end: 4792, column_start: 63, column_end: 64, line_start: 128, line_end: 128 }: |
Token { kind: Space, char_start: 4792, char_end: 4793, byte_start: 4792, byte_end: 4793, column_start: 64, column_end: 65, line_start: 128, line_end: 128 }: " "
Token { kind: Text, char_start: 4793, char_end: 4802, byte_start: 4793, byte_end: 4802, column_start: 65, column_end: 74, line_start: 128, line_end: 128 }: listings,
Token { kind: Newline, char_start: 4802, char_end: 4803, byte_start: 4802, byte_end: 4803, column_start: 74, column_end: 1, line_start: 128, line_end: 129 }: "\n"
Token { kind: Text, char_start: 4803, char_end: 4809, byte_start: 4803, byte_end: 4809, column_start: 1, column_end: 7, line_start: 129, line_end: 129 }: unless
Token { kind: Space, char_start: 4809, char_end: 4810, byte_start: 4809, byte_end: 4810, column_start: 7, column_end: 8, line_start: 129, line_end: 129 }: " "
Token { kind: Text, char_start: 4810, char_end: 4819, byte_start: 4810, byte_end: 4819, column_start: 8, column_end: 17, line_start: 129, line_end: 129 }: prevented
Token { kind: Space, char_start: 4819, char_end: 4820, byte_start: 4819, byte_end: 4820, column_start: 17, column_end: 18, line_start: 129, line_end: 129 }: " "
Token { kind: Text, char_start: 4820, char_end: 4824, byte_start: 4820, byte_end: 4824, column_start: 18, column_end: 22, line_start: 129, line_end: 129 }: from
Token { kind: Space, char_start: 4824, char_end: 4825, byte_start: 4824, byte_end: 4825, column_start: 22, column_end: 23, line_start: 129, line_end: 129 }: " "
Token { kind: Text, char_start: 4825, char_end: 4830, byte_start: 4825, byte_end: 4830, column_start: 23, column_end: 28, line_start: 129, line_end: 129 }: doing
Token { kind: Space, char_start: 4830, char_end: 4831, byte_start: 4830, byte_end: 4831, column_start: 28, column_end: 29, line_start: 129, line_end: 129 }: " "
Token { kind: Text, char_start: 4831, char_end: 4833, byte_start: 4831, byte_end: 4833, column_start: 29, column_end: 31, line_start: 129, line_end: 129 }: so
Token { kind: Space, char_start: 4833, char_end: 4834, byte_start: 4833, byte_end: 4834, column_start: 31, column_end: 32, line_start: 129, line_end: 129 }: " "
Token { kind: Text, char_start: 4834, char_end: 4836, byte_start: 4834, byte_end: 4836, column_start: 32, column_end: 34, line_start: 129, line_end: 129 }: by
Token { kind: Space, char_start: 4836, char_end: 4837, byte_start: 4836, byte_end: 4837, column_start: 34, column_end: 35, line_start: 129, line_end: 129 }: " "
Token { kind: Bar, char_start: 4837, char_end: 4838, byte_start: 4837, byte_end: 4838, column_start: 35, column_end: 36, line_start: 129, line_end: 129 }: |
Token { kind: Text, char_start: 4838, char_end: 4851, byte_start: 4838, byte_end: 4851, column_start: 36, column_end: 49, line_start: 129, line_end: 129 }: g:FerretQFMap
Token { kind: Bar, char_start: 4851, char_end: 4852, byte_start: 4851, byte_end: 4852, column_start: 49, column_end: 50, line_start: 129, line_end: 129 }: |
Token { kind: Text, char_start: 4852, char_end: 4853, byte_start: 4852, byte_end: 4853, column_start: 50, column_end: 51, line_start: 129, line_end: 129 }: :
Token { kind: Newline, char_start: 4853, char_end: 4854, byte_start: 4853, byte_end: 4854, column_start: 51, column_end: 1, line_start: 129, line_end: 130 }: "\n"
Token { kind: Newline, char_start: 4854, char_end: 4855, byte_start: 4854, byte_end: 4855, column_start: 1, column_end: 1, line_start: 130, line_end: 131 }: "\n"
Token { kind: Hyphen, char_start: 4855, char_end: 4856, byte_start: 4855, byte_end: 4856, column_start: 1, column_end: 2, line_start: 131, line_end: 131 }: -
Token { kind: Space, char_start: 4856, char_end: 4857, byte_start: 4856, byte_end: 4857, column_start: 2, column_end: 3, line_start: 131, line_end: 131 }: " "
Token { kind: Backtick, char_start: 4857, char_end: 4858, byte_start: 4857, byte_end: 4858, column_start: 3, column_end: 4, line_start: 131, line_end: 131 }: `
Token { kind: Text, char_start: 4858, char_end: 4859, byte_start: 4858, byte_end: 4859, column_start: 4, column_end: 5, line_start: 131, line_end: 131 }: d
Token { kind: Backtick, char_start: 4859, char_end: 4860, byte_start: 4859, byte_end: 4860, column_start: 5, column_end: 6, line_start: 131, line_end: 131 }: `
Token { kind: Space, char_start: 4860, char_end: 4861, byte_start: 4860, byte_end: 4861, column_start: 6, column_end: 7, line_start: 131, line_end: 131 }: " "
Token { kind: Lparen, char_start: 4861, char_end: 4862, byte_start: 4861, byte_end: 4862, column_start: 7, column_end: 8, line_start: 131, line_end: 131 }: (
Token { kind: Bar, char_start: 4862, char_end: 4863, byte_start: 4862, byte_end: 4863, column_start: 8, column_end: 9, line_start: 131, line_end: 131 }: |
Token { kind: Text, char_start: 4863, char_end: 4869, byte_start: 4863, byte_end: 4869, column_start: 9, column_end: 15, line_start: 131, line_end: 131 }: visual
Token { kind: Hyphen, char_start: 4869, char_end: 4870, byte_start: 4869, byte_end: 4870, column_start: 15, column_end: 16, line_start: 131, line_end: 131 }: -
Token { kind: Text, char_start: 4870, char_end: 4874, byte_start: 4870, byte_end: 4874, column_start: 16, column_end: 20, line_start: 131, line_end: 131 }: mode
Token { kind: Bar, char_start: 4874, char_end: 4875, byte_start: 4874, byte_end: 4875, column_start: 20, column_end: 21, line_start: 131, line_end: 131 }: |
Token { kind: Rparen, char_start: 4875, char_end: 4876, byte_start: 4875, byte_end: 4876, column_start: 21, column_end: 22, line_start: 131, line_end: 131 }: )
Token { kind: Text, char_start: 4876, char_end: 4877, byte_start: 4876, byte_end: 4877, column_start: 22, column_end: 23, line_start: 131, line_end: 131 }: :
Token { kind: Space, char_start: 4877, char_end: 4878, byte_start: 4877, byte_end: 4878, column_start: 23, column_end: 24, line_start: 131, line_end: 131 }: " "
Token { kind: Text, char_start: 4878, char_end: 4884, byte_start: 4878, byte_end: 4884, column_start: 24, column_end: 30, line_start: 131, line_end: 131 }: delete
Token { kind: Space, char_start: 4884, char_end: 4885, byte_start: 4884, byte_end: 4885, column_start: 30, column_end: 31, line_start: 131, line_end: 131 }: " "
Token { kind: Text, char_start: 4885, char_end: 4891, byte_start: 4885, byte_end: 4891, column_start: 31, column_end: 37, line_start: 131, line_end: 131 }: visual
Token { kind: Space, char_start: 4891, char_end: 4892, byte_start: 4891, byte_end: 4892, column_start: 37, column_end: 38, line_start: 131, line_end: 131 }: " "
Token { kind: Text, char_start: 4892, char_end: 4901, byte_start: 4892, byte_end: 4901, column_start: 38, column_end: 47, line_start: 131, line_end: 131 }: selection
Token { kind: Newline, char_start: 4901, char_end: 4902, byte_start: 4901, byte_end: 4902, column_start: 47, column_end: 1, line_start: 131, line_end: 132 }: "\n"
Token { kind: Hyphen, char_start: 4902, char_end: 4903, byte_start: 4902, byte_end: 4903, column_start: 1, column_end: 2, line_start: 132, line_end: 132 }: -
Token { kind: Space, char_start: 4903, char_end: 4904, byte_start: 4903, byte_end: 4904, column_start: 2, column_end: 3, line_start: 132, line_end: 132 }: " "
Token { kind: Backtick, char_start: 4904, char_end: 4905, byte_start: 4904, byte_end: 4905, column_start: 3, column_end: 4, line_start: 132, line_end: 132 }: `
Token { kind: Text, char_start: 4905, char_end: 4907, byte_start: 4905, byte_end: 4907, column_start: 4, column_end: 6, line_start: 132, line_end: 132 }: dd
Token { kind: Backtick, char_start: 4907, char_end: 4908, byte_start: 4907, byte_end: 4908, column_start: 6, column_end: 7, line_start: 132, line_end: 132 }: `
Token { kind: Space, char_start: 4908, char_end: 4909, byte_start: 4908, byte_end: 4909, column_start: 7, column_end: 8, line_start: 132, line_end: 132 }: " "
Token { kind: Lparen, char_start: 4909, char_end: 4910, byte_start: 4909, byte_end: 4910, column_start: 8, column_end: 9, line_start: 132, line_end: 132 }: (
Token { kind: Bar, char_start: 4910, char_end: 4911, byte_start: 4910, byte_end: 4911, column_start: 9, column_end: 10, line_start: 132, line_end: 132 }: |
Token { kind: Text, char_start: 4911, char_end: 4917, byte_start: 4911, byte_end: 4917, column_start: 10, column_end: 16, line_start: 132, line_end: 132 }: Normal
Token { kind: Hyphen, char_start: 4917, char_end: 4918, byte_start: 4917, byte_end: 4918, column_start: 16, column_end: 17, line_start: 132, line_end: 132 }: -
Token { kind: Text, char_start: 4918, char_end: 4922, byte_start: 4918, byte_end: 4922, column_start: 17, column_end: 21, line_start: 132, line_end: 132 }: mode
Token { kind: Bar, char_start: 4922, char_end: 4923, byte_start: 4922, byte_end: 4923, column_start: 21, column_end: 22, line_start: 132, line_end: 132 }: |
Token { kind: Rparen, char_start: 4923, char_end: 4924, byte_start: 4923, byte_end: 4924, column_start: 22, column_end: 23, line_start: 132, line_end: 132 }: )
Token { kind: Text, char_start: 4924, char_end: 4925, byte_start: 4924, byte_end: 4925, column_start: 23, column_end: 24, line_start: 132, line_end: 132 }: :
Token { kind: Space, char_start: 4925, char_end: 4926, byte_start: 4925, byte_end: 4926, column_start: 24, column_end: 25, line_start: 132, line_end: 132 }: " "
Token { kind: Text, char_start: 4926, char_end: 4932, byte_start: 4926, byte_end: 4932, column_start: 25, column_end: 31, line_start: 132, line_end: 132 }: delete
Token { kind: Space, char_start: 4932, char_end: 4933, byte_start: 4932, byte_end: 4933, column_start: 31, column_end: 32, line_start: 132, line_end: 132 }: " "
Token { kind: Text, char_start: 4933, char_end: 4940, byte_start: 4933, byte_end: 4940, column_start: 32, column_end: 39, line_start: 132, line_end: 132 }: current
Token { kind: Space, char_start: 4940, char_end: 4941, byte_start: 4940, byte_end: 4941, column_start: 39, column_end: 40, line_start: 132, line_end: 132 }: " "
Token { kind: Text, char_start: 4941, char_end: 4945, byte_start: 4941, byte_end: 4945, column_start: 40, column_end: 44, line_start: 132, line_end: 132 }: line
Token { kind: Newline, char_start: 4945, char_end: 4946, byte_start: 4945, byte_end: 4946, column_start: 44, column_end: 1, line_start: 132, line_end: 133 }: "\n"
Token { kind: Hyphen, char_start: 4946, char_end: 4947, byte_start: 4946, byte_end: 4947, column_start: 1, column_end: 2, line_start: 133, line_end: 133 }: -
Token { kind: Space, char_start: 4947, char_end: 4948, byte_start: 4947, byte_end: 4948, column_start: 2, column_end: 3, line_start: 133, line_end: 133 }: " "
Token { kind: Backtick, char_start: 4948, char_end: 4949, byte_start: 4948, byte_end: 4949, column_start: 3, column_end: 4, line_start: 133, line_end: 133 }: `
Token { kind: Text, char_start: 4949, char_end: 4950, byte_start: 4949, byte_end: 4950, column_start: 4, column_end: 5, line_start: 133, line_end: 133 }: d
Token { kind: Backtick, char_start: 4950, char_end: 4951, byte_start: 4950, byte_end: 4951, column_start: 5, column_end: 6, line_start: 133, line_end: 133 }: `
Token { kind: Text, char_start: 4951, char_end: 4959, byte_start: 4951, byte_end: 4959, column_start: 6, column_end: 14, line_start: 133, line_end: 133 }: {motion}
Token { kind: Space, char_start: 4959, char_end: 4960, byte_start: 4959, byte_end: 4960, column_start: 14, column_end: 15, line_start: 133, line_end: 133 }: " "
Token { kind: Lparen, char_start: 4960, char_end: 4961, byte_start: 4960, byte_end: 4961, column_start: 15, column_end: 16, line_start: 133, line_end: 133 }: (
Token { kind: Bar, char_start: 4961, char_end: 4962, byte_start: 4961, byte_end: 4962, column_start: 16, column_end: 17, line_start: 133, line_end: 133 }: |
Token { kind: Text, char_start: 4962, char_end: 4968, byte_start: 4962, byte_end: 4968, column_start: 17, column_end: 23, line_start: 133, line_end: 133 }: Normal
Token { kind: Hyphen, char_start: 4968, char_end: 4969, byte_start: 4968, byte_end: 4969, column_start: 23, column_end: 24, line_start: 133, line_end: 133 }: -
Token { kind: Text, char_start: 4969, char_end: 4973, byte_start: 4969, byte_end: 4973, column_start: 24, column_end: 28, line_start: 133, line_end: 133 }: mode
Token { kind: Bar, char_start: 4973, char_end: 4974, byte_start: 4973, byte_end: 4974, column_start: 28, column_end: 29, line_start: 133, line_end: 133 }: |
Token { kind: Rparen, char_start: 4974, char_end: 4975, byte_start: 4974, byte_end: 4975, column_start: 29, column_end: 30, line_start: 133, line_end: 133 }: )
Token { kind: Text, char_start: 4975, char_end: 4976, byte_start: 4975, byte_end: 4976, column_start: 30, column_end: 31, line_start: 133, line_end: 133 }: :
Token { kind: Space, char_start: 4976, char_end: 4977, byte_start: 4976, byte_end: 4977, column_start: 31, column_end: 32, line_start: 133, line_end: 133 }: " "
Token { kind: Text, char_start: 4977, char_end: 4983, byte_start: 4977, byte_end: 4983, column_start: 32, column_end: 38, line_start: 133, line_end: 133 }: delete
Token { kind: Space, char_start: 4983, char_end: 4984, byte_start: 4983, byte_end: 4984, column_start: 38, column_end: 39, line_start: 133, line_end: 133 }: " "
Token { kind: Text, char_start: 4984, char_end: 4989, byte_start: 4984, byte_end: 4989, column_start: 39, column_end: 44, line_start: 133, line_end: 133 }: range
Token { kind: Space, char_start: 4989, char_end: 4990, byte_start: 4989, byte_end: 4990, column_start: 44, column_end: 45, line_start: 133, line_end: 133 }: " "
Token { kind: Text, char_start: 4990, char_end: 4999, byte_start: 4990, byte_end: 4999, column_start: 45, column_end: 54, line_start: 133, line_end: 133 }: indicated
Token { kind: Space, char_start: 4999, char_end: 5000, byte_start: 4999, byte_end: 5000, column_start: 54, column_end: 55, line_start: 133, line_end: 133 }: " "
Token { kind: Text, char_start: 5000, char_end: 5002, byte_start: 5000, byte_end: 5002, column_start: 55, column_end: 57, line_start: 133, line_end: 133 }: by
Token { kind: Space, char_start: 5002, char_end: 5003, byte_start: 5002, byte_end: 5003, column_start: 57, column_end: 58, line_start: 133, line_end: 133 }: " "
Token { kind: Text, char_start: 5003, char_end: 5011, byte_start: 5003, byte_end: 5011, column_start: 58, column_end: 66, line_start: 133, line_end: 133 }: {motion}
Token { kind: Newline, char_start: 5011, char_end: 5012, byte_start: 5011, byte_end: 5012, column_start: 66, column_end: 1, line_start: 133, line_end: 134 }: "\n"
Token { kind: Newline, char_start: 5012, char_end: 5013, byte_start: 5012, byte_end: 5013, column_start: 1, column_end: 1, line_start: 134, line_end: 135 }: "\n"
Token { kind: Newline, char_start: 5013, char_end: 5014, byte_start: 5013, byte_end: 5014, column_start: 1, column_end: 1, line_start: 135, line_end: 136 }: "\n"
Token { kind: At, char_start: 5014, char_end: 5015, byte_start: 5014, byte_end: 5015, column_start: 1, column_end: 2, line_start: 136, line_end: 136 }: @
Token { kind: Text, char_start: 5015, char_end: 5021, byte_start: 5015, byte_end: 5021, column_start: 2, column_end: 8, line_start: 136, line_end: 136 }: footer
Token { kind: Newline, char_start: 5021, char_end: 5022, byte_start: 5021, byte_end: 5022, column_start: 8, column_end: 1, line_start: 136, line_end: 137 }: "\n"
Token { kind: Newline, char_start: 5022, char_end: 5023, byte_start: 5022, byte_end: 5023, column_start: 1, column_end: 1, line_start: 137, line_end: 138 }: "\n"
Token { kind: Heading(Heading1), char_start: 5023, char_end: 5024, byte_start: 5023, byte_end: 5024, column_start: 1, column_end: 2, line_start: 138, line_end: 138 }: #
Token { kind: Space, char_start: 5024, char_end: 5025, byte_start: 5024, byte_end: 5025, column_start: 2, column_end: 3, line_start: 138, line_end: 138 }: " "
Token { kind: Text, char_start: 5025, char_end: 5031, byte_start: 5025, byte_end: 5031, column_start: 3, column_end: 9, line_start: 138, line_end: 138 }: Custom
Token { kind: Space, char_start: 5031, char_end: 5032, byte_start: 5031, byte_end: 5032, column_start: 9, column_end: 10, line_start: 138, line_end: 138 }: " "
Token { kind: Text, char_start: 5032, char_end: 5044, byte_start: 5032, byte_end: 5044, column_start: 10, column_end: 22, line_start: 138, line_end: 138 }: autocommands
Token { kind: Newline, char_start: 5044, char_end: 5045, byte_start: 5044, byte_end: 5045, column_start: 22, column_end: 1, line_start: 138, line_end: 139 }: "\n"
Token { kind: Newline, char_start: 5045, char_end: 5046, byte_start: 5045, byte_end: 5046, column_start: 1, column_end: 1, line_start: 139, line_end: 140 }: "\n"
Token { kind: Space, char_start: 5046, char_end: 5051, byte_start: 5046, byte_end: 5051, column_start: 1, column_end: 6, line_start: 140, line_end: 140 }: "     "
Token { kind: Star, char_start: 5051, char_end: 5052, byte_start: 5051, byte_end: 5052, column_start: 6, column_end: 7, line_start: 140, line_end: 140 }: *
Token { kind: Text, char_start: 5052, char_end: 5068, byte_start: 5052, byte_end: 5068, column_start: 7, column_end: 23, line_start: 140, line_end: 140 }: FerretAsyncStart
Token { kind: Star, char_start: 5068, char_end: 5069, byte_start: 5068, byte_end: 5069, column_start: 23, column_end: 24, line_start: 140, line_end: 140 }: *
Token { kind: Space, char_start: 5069, char_end: 5070, byte_start: 5069, byte_end: 5070, column_start: 24, column_end: 25, line_start: 140, line_end: 140 }: " "
Token { kind: Star, char_start: 5070, char_end: 5071, byte_start: 5070, byte_end: 5071, column_start: 25, column_end: 26, line_start: 140, line_end: 140 }: *
Token { kind: Text, char_start: 5071, char_end: 5088, byte_start: 5071, byte_end: 5088, column_start: 26, column_end: 43, line_start: 140, line_end: 140 }: FerretAsyncFinish
Token { kind: Star, char_start: 5088, char_end: 5089, byte_start: 5088, byte_end: 5089, column_start: 43, column_end: 44, line_start: 140, line_end: 140 }: *
Token { kind: Space, char_start: 5089, char_end: 5090, byte_start: 5089, byte_end: 5090, column_start: 44, column_end: 45, line_start: 140, line_end: 140 }: " "
Token { kind: Star, char_start: 5090, char_end: 5091, byte_start: 5090, byte_end: 5091, column_start: 45, column_end: 46, line_start: 140, line_end: 140 }: *
Token { kind: Text, char_start: 5091, char_end: 5106, byte_start: 5091, byte_end: 5106, column_start: 46, column_end: 61, line_start: 140, line_end: 140 }: FerretWillWrite
Token { kind: Star, char_start: 5106, char_end: 5107, byte_start: 5106, byte_end: 5107, column_start: 61, column_end: 62, line_start: 140, line_end: 140 }: *
Token { kind: Space, char_start: 5107, char_end: 5108, byte_start: 5107, byte_end: 5108, column_start: 62, column_end: 63, line_start: 140, line_end: 140 }: " "
Token { kind: Star, char_start: 5108, char_end: 5109, byte_start: 5108, byte_end: 5109, column_start: 63, column_end: 64, line_start: 140, line_end: 140 }: *
Token { kind: Text, char_start: 5109, char_end: 5123, byte_start: 5109, byte_end: 5123, column_start: 64, column_end: 78, line_start: 140, line_end: 140 }: FerretDidWrite
Token { kind: Star, char_start: 5123, char_end: 5124, byte_start: 5123, byte_end: 5124, column_start: 78, column_end: 79, line_start: 140, line_end: 140 }: *
Token { kind: Newline, char_start: 5124, char_end: 5125, byte_start: 5124, byte_end: 5125, column_start: 79, column_end: 1, line_start: 140, line_end: 141 }: "\n"
Token { kind: Text, char_start: 5125, char_end: 5128, byte_start: 5125, byte_end: 5128, column_start: 1, column_end: 4, line_start: 141, line_end: 141 }: For
Token { kind: Space, char_start: 5128, char_end: 5129, byte_start: 5128, byte_end: 5129, column_start: 4, column_end: 5, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5129, char_end: 5136, byte_start: 5129, byte_end: 5136, column_start: 5, column_end: 12, line_start: 141, line_end: 141 }: maximum
Token { kind: Space, char_start: 5136, char_end: 5137, byte_start: 5136, byte_end: 5137, column_start: 12, column_end: 13, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5137, char_end: 5150, byte_start: 5137, byte_end: 5150, column_start: 13, column_end: 26, line_start: 141, line_end: 141 }: compatibility
Token { kind: Space, char_start: 5150, char_end: 5151, byte_start: 5150, byte_end: 5151, column_start: 26, column_end: 27, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5151, char_end: 5155, byte_start: 5151, byte_end: 5155, column_start: 27, column_end: 31, line_start: 141, line_end: 141 }: with
Token { kind: Space, char_start: 5155, char_end: 5156, byte_start: 5155, byte_end: 5156, column_start: 31, column_end: 32, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5156, char_end: 5161, byte_start: 5156, byte_end: 5161, column_start: 32, column_end: 37, line_start: 141, line_end: 141 }: other
Token { kind: Space, char_start: 5161, char_end: 5162, byte_start: 5161, byte_end: 5162, column_start: 37, column_end: 38, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5162, char_end: 5166, byte_start: 5162, byte_end: 5166, column_start: 38, column_end: 42, line_start: 141, line_end: 141 }: plug
Token { kind: Hyphen, char_start: 5166, char_end: 5167, byte_start: 5166, byte_end: 5167, column_start: 42, column_end: 43, line_start: 141, line_end: 141 }: -
Token { kind: Text, char_start: 5167, char_end: 5171, byte_start: 5167, byte_end: 5171, column_start: 43, column_end: 47, line_start: 141, line_end: 141 }: ins,
Token { kind: Space, char_start: 5171, char_end: 5172, byte_start: 5171, byte_end: 5172, column_start: 47, column_end: 48, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5172, char_end: 5178, byte_start: 5172, byte_end: 5178, column_start: 48, column_end: 54, line_start: 141, line_end: 141 }: Ferret
Token { kind: Space, char_start: 5178, char_end: 5179, byte_start: 5178, byte_end: 5179, column_start: 54, column_end: 55, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5179, char_end: 5183, byte_start: 5179, byte_end: 5183, column_start: 55, column_end: 59, line_start: 141, line_end: 141 }: runs
Token { kind: Space, char_start: 5183, char_end: 5184, byte_start: 5183, byte_end: 5184, column_start: 59, column_end: 60, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5184, char_end: 5187, byte_start: 5184, byte_end: 5187, column_start: 60, column_end: 63, line_start: 141, line_end: 141 }: the
Token { kind: Space, char_start: 5187, char_end: 5188, byte_start: 5187, byte_end: 5188, column_start: 63, column_end: 64, line_start: 141, line_end: 141 }: " "
Token { kind: Text, char_start: 5188, char_end: 5197, byte_start: 5188, byte_end: 5197, column_start: 64, column_end: 73, line_start: 141, line_end: 141 }: following
Token { kind: Newline, char_start: 5197, char_end: 5198, byte_start: 5197, byte_end: 5198, column_start: 73, column_end: 1, line_start: 141, line_end: 142 }: "\n"
Token { kind: Text, char_start: 5198, char_end: 5204, byte_start: 5198, byte_end: 5204, column_start: 1, column_end: 7, line_start: 142, line_end: 142 }: "User"
Token { kind: Space, char_start: 5204, char_end: 5205, byte_start: 5204, byte_end: 5205, column_start: 7, column_end: 8, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5205, char_end: 5217, byte_start: 5205, byte_end: 5217, column_start: 8, column_end: 20, line_start: 142, line_end: 142 }: autocommands
Token { kind: Space, char_start: 5217, char_end: 5218, byte_start: 5217, byte_end: 5218, column_start: 20, column_end: 21, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5218, char_end: 5224, byte_start: 5218, byte_end: 5224, column_start: 21, column_end: 27, line_start: 142, line_end: 142 }: before
Token { kind: Space, char_start: 5224, char_end: 5225, byte_start: 5224, byte_end: 5225, column_start: 27, column_end: 28, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5225, char_end: 5228, byte_start: 5225, byte_end: 5228, column_start: 28, column_end: 31, line_start: 142, line_end: 142 }: and
Token { kind: Space, char_start: 5228, char_end: 5229, byte_start: 5228, byte_end: 5229, column_start: 31, column_end: 32, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5229, char_end: 5234, byte_start: 5229, byte_end: 5234, column_start: 32, column_end: 37, line_start: 142, line_end: 142 }: after
Token { kind: Space, char_start: 5234, char_end: 5235, byte_start: 5234, byte_end: 5235, column_start: 37, column_end: 38, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5235, char_end: 5242, byte_start: 5235, byte_end: 5242, column_start: 38, column_end: 45, line_start: 142, line_end: 142 }: running
Token { kind: Space, char_start: 5242, char_end: 5243, byte_start: 5242, byte_end: 5243, column_start: 45, column_end: 46, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5243, char_end: 5246, byte_start: 5243, byte_end: 5246, column_start: 46, column_end: 49, line_start: 142, line_end: 142 }: the
Token { kind: Space, char_start: 5246, char_end: 5247, byte_start: 5246, byte_end: 5247, column_start: 49, column_end: 50, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5247, char_end: 5251, byte_start: 5247, byte_end: 5251, column_start: 50, column_end: 54, line_start: 142, line_end: 142 }: file
Token { kind: Space, char_start: 5251, char_end: 5252, byte_start: 5251, byte_end: 5252, column_start: 54, column_end: 55, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5252, char_end: 5259, byte_start: 5252, byte_end: 5259, column_start: 55, column_end: 62, line_start: 142, line_end: 142 }: writing
Token { kind: Space, char_start: 5259, char_end: 5260, byte_start: 5259, byte_end: 5260, column_start: 62, column_end: 63, line_start: 142, line_end: 142 }: " "
Token { kind: Text, char_start: 5260, char_end: 5270, byte_start: 5260, byte_end: 5270, column_start: 63, column_end: 73, line_start: 142, line_end: 142 }: operations
Token { kind: Newline, char_start: 5270, char_end: 5271, byte_start: 5270, byte_end: 5271, column_start: 73, column_end: 1, line_start: 142, line_end: 143 }: "\n"
Token { kind: Text, char_start: 5271, char_end: 5277, byte_start: 5271, byte_end: 5277, column_start: 1, column_end: 7, line_start: 143, line_end: 143 }: during
Token { kind: Space, char_start: 5277, char_end: 5278, byte_start: 5277, byte_end: 5278, column_start: 7, column_end: 8, line_start: 143, line_end: 143 }: " "
Token { kind: Bar, char_start: 5278, char_end: 5279, byte_start: 5278, byte_end: 5279, column_start: 8, column_end: 9, line_start: 143, line_end: 143 }: |
Token { kind: Text, char_start: 5279, char_end: 5284, byte_start: 5279, byte_end: 5284, column_start: 9, column_end: 14, line_start: 143, line_end: 143 }: :Acks
Token { kind: Bar, char_start: 5284, char_end: 5285, byte_start: 5284, byte_end: 5285, column_start: 14, column_end: 15, line_start: 143, line_end: 143 }: |
Token { kind: Space, char_start: 5285, char_end: 5286, byte_start: 5285, byte_end: 5286, column_start: 15, column_end: 16, line_start: 143, line_end: 143 }: " "
Token { kind: Text, char_start: 5286, char_end: 5288, byte_start: 5286, byte_end: 5288, column_start: 16, column_end: 18, line_start: 143, line_end: 143 }: or
Token { kind: Space, char_start: 5288, char_end: 5289, byte_start: 5288, byte_end: 5289, column_start: 18, column_end: 19, line_start: 143, line_end: 143 }: " "
Token { kind: Bar, char_start: 5289, char_end: 5290, byte_start: 5289, byte_end: 5290, column_start: 19, column_end: 20, line_start: 143, line_end: 143 }: |
Token { kind: Text, char_start: 5290, char_end: 5296, byte_start: 5290, byte_end: 5296, column_start: 20, column_end: 26, line_start: 143, line_end: 143 }: :Lacks
Token { kind: Bar, char_start: 5296, char_end: 5297, byte_start: 5296, byte_end: 5297, column_start: 26, column_end: 27, line_start: 143, line_end: 143 }: |
Token { kind: Text, char_start: 5297, char_end: 5298, byte_start: 5297, byte_end: 5298, column_start: 27, column_end: 28, line_start: 143, line_end: 143 }: :
Token { kind: Newline, char_start: 5298, char_end: 5299, byte_start: 5298, byte_end: 5299, column_start: 28, column_end: 1, line_start: 143, line_end: 144 }: "\n"
Token { kind: Newline, char_start: 5299, char_end: 5300, byte_start: 5299, byte_end: 5300, column_start: 1, column_end: 1, line_start: 144, line_end: 145 }: "\n"
Token { kind: Hyphen, char_start: 5300, char_end: 5301, byte_start: 5300, byte_end: 5301, column_start: 1, column_end: 2, line_start: 145, line_end: 145 }: -
Token { kind: Space, char_start: 5301, char_end: 5302, byte_start: 5301, byte_end: 5302, column_start: 2, column_end: 3, line_start: 145, line_end: 145 }: " "
Token { kind: Text, char_start: 5302, char_end: 5317, byte_start: 5302, byte_end: 5317, column_start: 3, column_end: 18, line_start: 145, line_end: 145 }: FerretWillWrite
Token { kind: Newline, char_start: 5317, char_end: 5318, byte_start: 5317, byte_end: 5318, column_start: 18, column_end: 1, line_start: 145, line_end: 146 }: "\n"
Token { kind: Hyphen, char_start: 5318, char_end: 5319, byte_start: 5318, byte_end: 5319, column_start: 1, column_end: 2, line_start: 146, line_end: 146 }: -
Token { kind: Space, char_start: 5319, char_end: 5320, byte_start: 5319, byte_end: 5320, column_start: 2, column_end: 3, line_start: 146, line_end: 146 }: " "
Token { kind: Text, char_start: 5320, char_end: 5334, byte_start: 5320, byte_end: 5334, column_start: 3, column_end: 17, line_start: 146, line_end: 146 }: FerretDidWrite
Token { kind: Newline, char_start: 5334, char_end: 5335, byte_start: 5334, byte_end: 5335, column_start: 17, column_end: 1, line_start: 146, line_end: 147 }: "\n"
Token { kind: Newline, char_start: 5335, char_end: 5336, byte_start: 5335, byte_end: 5336, column_start: 1, column_end: 1, line_start: 147, line_end: 148 }: "\n"
Token { kind: Text, char_start: 5336, char_end: 5339, byte_start: 5336, byte_end: 5339, column_start: 1, column_end: 4, line_start: 148, line_end: 148 }: For
Token { kind: Space, char_start: 5339, char_end: 5340, byte_start: 5339, byte_end: 5340, column_start: 4, column_end: 5, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5340, char_end: 5348, byte_start: 5340, byte_end: 5348, column_start: 5, column_end: 13, line_start: 148, line_end: 148 }: example,
Token { kind: Space, char_start: 5348, char_end: 5349, byte_start: 5348, byte_end: 5349, column_start: 13, column_end: 14, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5349, char_end: 5351, byte_start: 5349, byte_end: 5351, column_start: 14, column_end: 16, line_start: 148, line_end: 148 }: to
Token { kind: Space, char_start: 5351, char_end: 5352, byte_start: 5351, byte_end: 5352, column_start: 16, column_end: 17, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5352, char_end: 5356, byte_start: 5352, byte_end: 5356, column_start: 17, column_end: 21, line_start: 148, line_end: 148 }: call
Token { kind: Space, char_start: 5356, char_end: 5357, byte_start: 5356, byte_end: 5357, column_start: 21, column_end: 22, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5357, char_end: 5358, byte_start: 5357, byte_end: 5358, column_start: 22, column_end: 23, line_start: 148, line_end: 148 }: a
Token { kind: Space, char_start: 5358, char_end: 5359, byte_start: 5358, byte_end: 5359, column_start: 23, column_end: 24, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5359, char_end: 5363, byte_start: 5359, byte_end: 5363, column_start: 24, column_end: 28, line_start: 148, line_end: 148 }: pair
Token { kind: Space, char_start: 5363, char_end: 5364, byte_start: 5363, byte_end: 5364, column_start: 28, column_end: 29, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5364, char_end: 5366, byte_start: 5364, byte_end: 5366, column_start: 29, column_end: 31, line_start: 148, line_end: 148 }: of
Token { kind: Space, char_start: 5366, char_end: 5367, byte_start: 5366, byte_end: 5367, column_start: 31, column_end: 32, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5367, char_end: 5373, byte_start: 5367, byte_end: 5373, column_start: 32, column_end: 38, line_start: 148, line_end: 148 }: custom
Token { kind: Space, char_start: 5373, char_end: 5374, byte_start: 5373, byte_end: 5374, column_start: 38, column_end: 39, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5374, char_end: 5383, byte_start: 5374, byte_end: 5383, column_start: 39, column_end: 48, line_start: 148, line_end: 148 }: functions
Token { kind: Space, char_start: 5383, char_end: 5384, byte_start: 5383, byte_end: 5384, column_start: 48, column_end: 49, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5384, char_end: 5386, byte_start: 5384, byte_end: 5386, column_start: 49, column_end: 51, line_start: 148, line_end: 148 }: in
Token { kind: Space, char_start: 5386, char_end: 5387, byte_start: 5386, byte_end: 5387, column_start: 51, column_end: 52, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5387, char_end: 5395, byte_start: 5387, byte_end: 5395, column_start: 52, column_end: 60, line_start: 148, line_end: 148 }: response
Token { kind: Space, char_start: 5395, char_end: 5396, byte_start: 5395, byte_end: 5396, column_start: 60, column_end: 61, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5396, char_end: 5398, byte_start: 5396, byte_end: 5398, column_start: 61, column_end: 63, line_start: 148, line_end: 148 }: to
Token { kind: Space, char_start: 5398, char_end: 5399, byte_start: 5398, byte_end: 5399, column_start: 63, column_end: 64, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5399, char_end: 5404, byte_start: 5399, byte_end: 5404, column_start: 64, column_end: 69, line_start: 148, line_end: 148 }: these
Token { kind: Space, char_start: 5404, char_end: 5405, byte_start: 5404, byte_end: 5405, column_start: 69, column_end: 70, line_start: 148, line_end: 148 }: " "
Token { kind: Text, char_start: 5405, char_end: 5412, byte_start: 5405, byte_end: 5412, column_start: 70, column_end: 77, line_start: 148, line_end: 148 }: events,
Token { kind: Newline, char_start: 5412, char_end: 5413, byte_start: 5412, byte_end: 5413, column_start: 77, column_end: 1, line_start: 148, line_end: 149 }: "\n"
Token { kind: Text, char_start: 5413, char_end: 5416, byte_start: 5413, byte_end: 5416, column_start: 1, column_end: 4, line_start: 149, line_end: 149 }: you
Token { kind: Space, char_start: 5416, char_end: 5417, byte_start: 5416, byte_end: 5417, column_start: 4, column_end: 5, line_start: 149, line_end: 149 }: " "
Token { kind: Text, char_start: 5417, char_end: 5422, byte_start: 5417, byte_end: 5422, column_start: 5, column_end: 10, line_start: 149, line_end: 149 }: might
Token { kind: Space, char_start: 5422, char_end: 5423, byte_start: 5422, byte_end: 5423, column_start: 10, column_end: 11, line_start: 149, line_end: 149 }: " "
Token { kind: Text, char_start: 5423, char_end: 5426, byte_start: 5423, byte_end: 5426, column_start: 11, column_end: 14, line_start: 149, line_end: 149 }: do:
Token { kind: Newline, char_start: 5426, char_end: 5427, byte_start: 5426, byte_end: 5427, column_start: 14, column_end: 1, line_start: 149, line_end: 150 }: "\n"
Token { kind: Newline, char_start: 5427, char_end: 5428, byte_start: 5427, byte_end: 5428, column_start: 1, column_end: 1, line_start: 150, line_end: 151 }: "\n"
Token { kind: CodeFence, char_start: 5428, char_end: 5431, byte_start: 5428, byte_end: 5431, column_start: 1, column_end: 4, line_start: 151, line_end: 151 }: ```
Token { kind: Newline, char_start: 5431, char_end: 5432, byte_start: 5431, byte_end: 5432, column_start: 4, column_end: 1, line_start: 151, line_end: 152 }: "\n"
Token { kind: Text, char_start: 5432, char_end: 5439, byte_start: 5432, byte_end: 5439, column_start: 1, column_end: 8, line_start: 152, line_end: 152 }: autocmd
Token { kind: Bang, char_start: 5439, char_end: 5440, byte_start: 5439, byte_end: 5440, column_start: 8, column_end: 9, line_start: 152, line_end: 152 }: !
Token { kind: Space, char_start: 5440, char_end: 5441, byte_start: 5440, byte_end: 5441, column_start: 9, column_end: 10, line_start: 152, line_end: 152 }: " "
Token { kind: Text, char_start: 5441, char_end: 5445, byte_start: 5441, byte_end: 5445, column_start: 10, column_end: 14, line_start: 152, line_end: 152 }: User
Token { kind: Space, char_start: 5445, char_end: 5446, byte_start: 5445, byte_end: 5446, column_start: 14, column_end: 15, line_start: 152, line_end: 152 }: " "
Token { kind: Text, char_start: 5446, char_end: 5461, byte_start: 5446, byte_end: 5461, column_start: 15, column_end: 30, line_start: 152, line_end: 152 }: FerretWillWrite
Token { kind: Newline, char_start: 5461, char_end: 5462, byte_start: 5461, byte_end: 5462, column_start: 30, column_end: 1, line_start: 152, line_end: 153 }: "\n"
Token { kind: Text, char_start: 5462, char_end: 5469, byte_start: 5462, byte_end: 5469, column_start: 1, column_end: 8, line_start: 153, line_end: 153 }: autocmd
Token { kind: Space, char_start: 5469, char_end: 5470, byte_start: 5469, byte_end: 5470, column_start: 8, column_end: 9, line_start: 153, line_end: 153 }: " "
Token { kind: Text, char_start: 5470, char_end: 5474, byte_start: 5470, byte_end: 5474, column_start: 9, column_end: 13, line_start: 153, line_end: 153 }: User
Token { kind: Space, char_start: 5474, char_end: 5475, byte_start: 5474, byte_end: 5475, column_start: 13, column_end: 14, line_start: 153, line_end: 153 }: " "
Token { kind: Text, char_start: 5475, char_end: 5490, byte_start: 5475, byte_end: 5490, column_start: 14, column_end: 29, line_start: 153, line_end: 153 }: FerretWillWrite
Token { kind: Space, char_start: 5490, char_end: 5491, byte_start: 5490, byte_end: 5491, column_start: 29, column_end: 30, line_start: 153, line_end: 153 }: " "
Token { kind: Text, char_start: 5491, char_end: 5495, byte_start: 5491, byte_end: 5495, column_start: 30, column_end: 34, line_start: 153, line_end: 153 }: call
Token { kind: Space, char_start: 5495, char_end: 5496, byte_start: 5495, byte_end: 5496, column_start: 34, column_end: 35, line_start: 153, line_end: 153 }: " "
Token { kind: Text, char_start: 5496, char_end: 5511, byte_start: 5496, byte_end: 5511, column_start: 35, column_end: 50, line_start: 153, line_end: 153 }: CustomWillWrite
Token { kind: Lparen, char_start: 5511, char_end: 5512, byte_start: 5511, byte_end: 5512, column_start: 50, column_end: 51, line_start: 153, line_end: 153 }: (
Token { kind: Rparen, char_start: 5512, char_end: 5513, byte_start: 5512, byte_end: 5513, column_start: 51, column_end: 52, line_start: 153, line_end: 153 }: )
Token { kind: Newline, char_start: 5513, char_end: 5514, byte_start: 5513, byte_end: 5514, column_start: 52, column_end: 1, line_start: 153, line_end: 154 }: "\n"
Token { kind: Text, char_start: 5514, char_end: 5521, byte_start: 5514, byte_end: 5521, column_start: 1, column_end: 8, line_start: 154, line_end: 154 }: autocmd
Token { kind: Bang, char_start: 5521, char_end: 5522, byte_start: 5521, byte_end: 5522, column_start: 8, column_end: 9, line_start: 154, line_end: 154 }: !
Token { kind: Space, char_start: 5522, char_end: 5523, byte_start: 5522, byte_end: 5523, column_start: 9, column_end: 10, line_start: 154, line_end: 154 }: " "
Token { kind: Text, char_start: 5523, char_end: 5527, byte_start: 5523, byte_end: 5527, column_start: 10, column_end: 14, line_start: 154, line_end: 154 }: User
Token { kind: Space, char_start: 5527, char_end: 5528, byte_start: 5527, byte_end: 5528, column_start: 14, column_end: 15, line_start: 154, line_end: 154 }: " "
Token { kind: Text, char_start: 5528, char_end: 5542, byte_start: 5528, byte_end: 5542, column_start: 15, column_end: 29, line_start: 154, line_end: 154 }: FerretDidWrite
Token { kind: Newline, char_start: 5542, char_end: 5543, byte_start: 5542, byte_end: 5543, column_start: 29, column_end: 1, line_start: 154, line_end: 155 }: "\n"
Token { kind: Text, char_start: 5543, char_end: 5550, byte_start: 5543, byte_end: 5550, column_start: 1, column_end: 8, line_start: 155, line_end: 155 }: autocmd
Token { kind: Space, char_start: 5550, char_end: 5551, byte_start: 5550, byte_end: 5551, column_start: 8, column_end: 9, line_start: 155, line_end: 155 }: " "
Token { kind: Text, char_start: 5551, char_end: 5555, byte_start: 5551, byte_end: 5555, column_start: 9, column_end: 13, line_start: 155, line_end: 155 }: User
Token { kind: Space, char_start: 5555, char_end: 5556, byte_start: 5555, byte_end: 5556, column_start: 13, column_end: 14, line_start: 155, line_end: 155 }: " "
Token { kind: Text, char_start: 5556, char_end: 5570, byte_start: 5556, byte_end: 5570, column_start: 14, column_end: 28, line_start: 155, line_end: 155 }: FerretDidWrite
Token { kind: Space, char_start: 5570, char_end: 5571, byte_start: 5570, byte_end: 5571, column_start: 28, column_end: 29, line_start: 155, line_end: 155 }: " "
Token { kind: Text, char_start: 5571, char_end: 5575, byte_start: 5571, byte_end: 5575, column_start: 29, column_end: 33, line_start: 155, line_end: 155 }: call
Token { kind: Space, char_start: 5575, char_end: 5576, byte_start: 5575, byte_end: 5576, column_start: 33, column_end: 34, line_start: 155, line_end: 155 }: " "
Token { kind: Text, char_start: 5576, char_end: 5590, byte_start: 5576, byte_end: 5590, column_start: 34, column_end: 48, line_start: 155, line_end: 155 }: CustomDidWrite
Token { kind: Lparen, char_start: 5590, char_end: 5591, byte_start: 5590, byte_end: 5591, column_start: 48, column_end: 49, line_start: 155, line_end: 155 }: (
Token { kind: Rparen, char_start: 5591, char_end: 5592, byte_start: 5591, byte_end: 5592, column_start: 49, column_end: 50, line_start: 155, line_end: 155 }: )
Token { kind: Newline, char_start: 5592, char_end: 5593, byte_start: 5592, byte_end: 5593, column_start: 50, column_end: 1, line_start: 155, line_end: 156 }: "\n"
Token { kind: CodeFence, char_start: 5593, char_end: 5596, byte_start: 5593, byte_end: 5596, column_start: 1, column_end: 4, line_start: 156, line_end: 156 }: ```
Token { kind: Newline, char_start: 5596, char_end: 5597, byte_start: 5596, byte_end: 5597, column_start: 4, column_end: 1, line_start: 156, line_end: 157 }: "\n"
Token { kind: Newline, char_start: 5597, char_end: 5598, byte_start: 5597, byte_end: 5598, column_start: 1, column_end: 1, line_start: 157, line_end: 158 }: "\n"
Token { kind: Text, char_start: 5598, char_end: 5611, byte_start: 5598, byte_end: 5611, column_start: 1, column_end: 14, line_start: 158, line_end: 158 }: Additionally,
Token { kind: Space, char_start: 5611, char_end: 5612, byte_start: 5611, byte_end: 5612, column_start: 14, column_end: 15, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5612, char_end: 5618, byte_start: 5612, byte_end: 5618, column_start: 15, column_end: 21, line_start: 158, line_end: 158 }: Ferret
Token { kind: Space, char_start: 5618, char_end: 5619, byte_start: 5618, byte_end: 5619, column_start: 21, column_end: 22, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5619, char_end: 5623, byte_start: 5619, byte_end: 5623, column_start: 22, column_end: 26, line_start: 158, line_end: 158 }: runs
Token { kind: Space, char_start: 5623, char_end: 5624, byte_start: 5623, byte_end: 5624, column_start: 26, column_end: 27, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5624, char_end: 5629, byte_start: 5624, byte_end: 5629, column_start: 27, column_end: 32, line_start: 158, line_end: 158 }: these
Token { kind: Space, char_start: 5629, char_end: 5630, byte_start: 5629, byte_end: 5630, column_start: 32, column_end: 33, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5630, char_end: 5642, byte_start: 5630, byte_end: 5642, column_start: 33, column_end: 45, line_start: 158, line_end: 158 }: autocommands
Token { kind: Space, char_start: 5642, char_end: 5643, byte_start: 5642, byte_end: 5643, column_start: 45, column_end: 46, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5643, char_end: 5647, byte_start: 5643, byte_end: 5647, column_start: 46, column_end: 50, line_start: 158, line_end: 158 }: when
Token { kind: Space, char_start: 5647, char_end: 5648, byte_start: 5647, byte_end: 5648, column_start: 50, column_end: 51, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5648, char_end: 5650, byte_start: 5648, byte_end: 5650, column_start: 51, column_end: 53, line_start: 158, line_end: 158 }: an
Token { kind: Space, char_start: 5650, char_end: 5651, byte_start: 5650, byte_end: 5651, column_start: 53, column_end: 54, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5651, char_end: 5656, byte_start: 5651, byte_end: 5656, column_start: 54, column_end: 59, line_start: 158, line_end: 158 }: async
Token { kind: Space, char_start: 5656, char_end: 5657, byte_start: 5656, byte_end: 5657, column_start: 59, column_end: 60, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5657, char_end: 5663, byte_start: 5657, byte_end: 5663, column_start: 60, column_end: 66, line_start: 158, line_end: 158 }: search
Token { kind: Space, char_start: 5663, char_end: 5664, byte_start: 5663, byte_end: 5664, column_start: 66, column_end: 67, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5664, char_end: 5670, byte_start: 5664, byte_end: 5670, column_start: 67, column_end: 73, line_start: 158, line_end: 158 }: begins
Token { kind: Space, char_start: 5670, char_end: 5671, byte_start: 5670, byte_end: 5671, column_start: 73, column_end: 74, line_start: 158, line_end: 158 }: " "
Token { kind: Text, char_start: 5671, char_end: 5674, byte_start: 5671, byte_end: 5674, column_start: 74, column_end: 77, line_start: 158, line_end: 158 }: and
Token { kind: Newline, char_start: 5674, char_end: 5675, byte_start: 5674, byte_end: 5675, column_start: 77, column_end: 1, line_start: 158, line_end: 159 }: "\n"
Token { kind: Text, char_start: 5675, char_end: 5680, byte_start: 5675, byte_end: 5680, column_start: 1, column_end: 6, line_start: 159, line_end: 159 }: ends:
Token { kind: Newline, char_start: 5680, char_end: 5681, byte_start: 5680, byte_end: 5681, column_start: 6, column_end: 1, line_start: 159, line_end: 160 }: "\n"
Token { kind: Newline, char_start: 5681, char_end: 5682, byte_start: 5681, byte_end: 5682, column_start: 1, column_end: 1, line_start: 160, line_end: 161 }: "\n"
Token { kind: Hyphen, char_start: 5682, char_end: 5683, byte_start: 5682, byte_end: 5683, column_start: 1, column_end: 2, line_start: 161, line_end: 161 }: -
Token { kind: Space, char_start: 5683, char_end: 5684, byte_start: 5683, byte_end: 5684, column_start: 2, column_end: 3, line_start: 161, line_end: 161 }: " "
Token { kind: Text, char_start: 5684, char_end: 5700, byte_start: 5684, byte_end: 5700, column_start: 3, column_end: 19, line_start: 161, line_end: 161 }: FerretAsyncStart
Token { kind: Newline, char_start: 5700, char_end: 5701, byte_start: 5700, byte_end: 5701, column_start: 19, column_end: 1, line_start: 161, line_end: 162 }: "\n"
Token { kind: Hyphen, char_start: 5701, char_end: 5702, byte_start: 5701, byte_end: 5702, column_start: 1, column_end: 2, line_start: 162, line_end: 162 }: -
Token { kind: Space, char_start: 5702, char_end: 5703, byte_start: 5702, byte_end: 5703, column_start: 2, column_end: 3, line_start: 162, line_end: 162 }: " "
Token { kind: Text, char_start: 5703, char_end: 5720, byte_start: 5703, byte_end: 5720, column_start: 3, column_end: 20, line_start: 162, line_end: 162 }: FerretAsyncFinish
Token { kind: Newline, char_start: 5720, char_end: 5721, byte_start: 5720, byte_end: 5721, column_start: 20, column_end: 1, line_start: 162, line_end: 163 }: "\n"
Token { kind: Newline, char_start: 5721, char_end: 5722, byte_start: 5721, byte_end: 5722, column_start: 1, column_end: 1, line_start: 163, line_end: 164 }: "\n"
Token { kind: Heading(Heading1), char_start: 5722, char_end: 5723, byte_start: 5722, byte_end: 5723, column_start: 1, column_end: 2, line_start: 164, line_end: 164 }: #
Token { kind: Space, char_start: 5723, char_end: 5724, byte_start: 5723, byte_end: 5724, column_start: 2, column_end: 3, line_start: 164, line_end: 164 }: " "
Token { kind: Text, char_start: 5724, char_end: 5733, byte_start: 5724, byte_end: 5733, column_start: 3, column_end: 12, line_start: 164, line_end: 164 }: Overrides
Token { kind: Newline, char_start: 5733, char_end: 5734, byte_start: 5733, byte_end: 5734, column_start: 12, column_end: 1, line_start: 164, line_end: 165 }: "\n"
Token { kind: Newline, char_start: 5734, char_end: 5735, byte_start: 5734, byte_end: 5735, column_start: 1, column_end: 1, line_start: 165, line_end: 166 }: "\n"
Token { kind: Text, char_start: 5735, char_end: 5741, byte_start: 5735, byte_end: 5741, column_start: 1, column_end: 7, line_start: 166, line_end: 166 }: Ferret
Token { kind: Space, char_start: 5741, char_end: 5742, byte_start: 5741, byte_end: 5742, column_start: 7, column_end: 8, line_start: 166, line_end: 166 }: " "
Token { kind: Text, char_start: 5742, char_end: 5751, byte_start: 5742, byte_end: 5751, column_start: 8, column_end: 17, line_start: 166, line_end: 166 }: overrides
Token { kind: Space, char_start: 5751, char_end: 5752, byte_start: 5751, byte_end: 5752, column_start: 17, column_end: 18, line_start: 166, line_end: 166 }: " "
Token { kind: Text, char_start: 5752, char_end: 5755, byte_start: 5752, byte_end: 5755, column_start: 18, column_end: 21, line_start: 166, line_end: 166 }: the
Token { kind: Space, char_start: 5755, char_end: 5756, byte_start: 5755, byte_end: 5756, column_start: 21, column_end: 22, line_start: 166, line_end: 166 }: " "
Token { kind: Text, char_start: 5756, char_end: 5768, byte_start: 5756, byte_end: 5768, column_start: 22, column_end: 34, line_start: 166, line_end: 166 }: 'grepformat'
Token { kind: Space, char_start: 5768, char_end: 5769, byte_start: 5768, byte_end: 5769, column_start: 34, column_end: 35, line_start: 166, line_end: 166 }: " "
Token { kind: Text, char_start: 5769, char_end: 5772, byte_start: 5769, byte_end: 5772, column_start: 35, column_end: 38, line_start: 166, line_end: 166 }: and
Token { kind: Space, char_start: 5772, char_end: 5773, byte_start: 5772, byte_end: 5773, column_start: 38, column_end: 39, line_start: 166, line_end: 166 }: " "
Token { kind: Text, char_start: 5773, char_end: 5782, byte_start: 5773, byte_end: 5782, column_start: 39, column_end: 48, line_start: 166, line_end: 166 }: 'grepprg'
Token { kind: Space, char_start: 5782, char_end: 5783, byte_start: 5782, byte_end: 5783, column_start: 48, column_end: 49, line_start: 166, line_end: 166 }: " "
Token { kind: Text, char_start: 5783, char_end: 5792, byte_start: 5783, byte_end: 5792, column_start: 49, column_end: 58, line_start: 166, line_end: 166 }: settings,
Token { kind: Space, char_start: 5792, char_end: 5793, byte_start: 5792, byte_end: 5793, column_start: 58, column_end: 59, line_start: 166, line_end: 166 }: " "
Token { kind: Text, char_start: 5793, char_end: 5807, byte_start: 5793, byte_end: 5807, column_start: 59, column_end: 73, line_start: 166, line_end: 166 }: preferentially
Token { kind: Newline, char_start: 5807, char_end: 5808, byte_start: 5807, byte_end: 5808, column_start: 73, column_end: 1, line_start: 166, line_end: 167 }: "\n"
Token { kind: Text, char_start: 5808, char_end: 5815, byte_start: 5808, byte_end: 5815, column_start: 1, column_end: 8, line_start: 167, line_end: 167 }: setting
Token { kind: Space, char_start: 5815, char_end: 5816, byte_start: 5815, byte_end: 5816, column_start: 8, column_end: 9, line_start: 167, line_end: 167 }: " "
Token { kind: Backtick, char_start: 5816, char_end: 5817, byte_start: 5816, byte_end: 5817, column_start: 9, column_end: 10, line_start: 167, line_end: 167 }: `
Token { kind: Text, char_start: 5817, char_end: 5819, byte_start: 5817, byte_end: 5819, column_start: 10, column_end: 12, line_start: 167, line_end: 167 }: rg
Token { kind: Backtick, char_start: 5819, char_end: 5820, byte_start: 5819, byte_end: 5820, column_start: 12, column_end: 13, line_start: 167, line_end: 167 }: `
Token { kind: Text, char_start: 5820, char_end: 5821, byte_start: 5820, byte_end: 5821, column_start: 13, column_end: 14, line_start: 167, line_end: 167 }: ,
Token { kind: Space, char_start: 5821, char_end: 5822, byte_start: 5821, byte_end: 5822, column_start: 14, column_end: 15, line_start: 167, line_end: 167 }: " "
Token { kind: Backtick, char_start: 5822, char_end: 5823, byte_start: 5822, byte_end: 5823, column_start: 15, column_end: 16, line_start: 167, line_end: 167 }: `
Token { kind: Text, char_start: 5823, char_end: 5825, byte_start: 5823, byte_end: 5825, column_start: 16, column_end: 18, line_start: 167, line_end: 167 }: ag
Token { kind: Backtick, char_start: 5825, char_end: 5826, byte_start: 5825, byte_end: 5826, column_start: 18, column_end: 19, line_start: 167, line_end: 167 }: `
Token { kind: Text, char_start: 5826, char_end: 5827, byte_start: 5826, byte_end: 5827, column_start: 19, column_end: 20, line_start: 167, line_end: 167 }: ,
Token { kind: Space, char_start: 5827, char_end: 5828, byte_start: 5827, byte_end: 5828, column_start: 20, column_end: 21, line_start: 167, line_end: 167 }: " "
Token { kind: Backtick, char_start: 5828, char_end: 5829, byte_start: 5828, byte_end: 5829, column_start: 21, column_end: 22, line_start: 167, line_end: 167 }: `
Token { kind: Text, char_start: 5829, char_end: 5832, byte_start: 5829, byte_end: 5832, column_start: 22, column_end: 25, line_start: 167, line_end: 167 }: ack
Token { kind: Backtick, char_start: 5832, char_end: 5833, byte_start: 5832, byte_end: 5833, column_start: 25, column_end: 26, line_start: 167, line_end: 167 }: `
Token { kind: Space, char_start: 5833, char_end: 5834, byte_start: 5833, byte_end: 5834, column_start: 26, column_end: 27, line_start: 167, line_end: 167 }: " "
Token { kind: Text, char_start: 5834, char_end: 5836, byte_start: 5834, byte_end: 5836, column_start: 27, column_end: 29, line_start: 167, line_end: 167 }: or
Token { kind: Space, char_start: 5836, char_end: 5837, byte_start: 5836, byte_end: 5837, column_start: 29, column_end: 30, line_start: 167, line_end: 167 }: " "
Token { kind: Backtick, char_start: 5837, char_end: 5838, byte_start: 5837, byte_end: 5838, column_start: 30, column_end: 31, line_start: 167, line_end: 167 }: `
Token { kind: Text, char_start: 5838, char_end: 5841, byte_start: 5838, byte_end: 5841, column_start: 31, column_end: 34, line_start: 167, line_end: 167 }: ack
Token { kind: Hyphen, char_start: 5841, char_end: 5842, byte_start: 5841, byte_end: 5842, column_start: 34, column_end: 35, line_start: 167, line_end: 167 }: -
Token { kind: Text, char_start: 5842, char_end: 5846, byte_start: 5842, byte_end: 5846, column_start: 35, column_end: 39, line_start: 167, line_end: 167 }: grep
Token { kind: Backtick, char_start: 5846, char_end: 5847, byte_start: 5846, byte_end: 5847, column_start: 39, column_end: 40, line_start: 167, line_end: 167 }: `
Token { kind: Space, char_start: 5847, char_end: 5848, byte_start: 5847, byte_end: 5848, column_start: 40, column_end: 41, line_start: 167, line_end: 167 }: " "
Token { kind: Text, char_start: 5848, char_end: 5850, byte_start: 5848, byte_end: 5850, column_start: 41, column_end: 43, line_start: 167, line_end: 167 }: as
Token { kind: Space, char_start: 5850, char_end: 5851, byte_start: 5850, byte_end: 5851, column_start: 43, column_end: 44, line_start: 167, line_end: 167 }: " "
Token { kind: Text, char_start: 5851, char_end: 5854, byte_start: 5851, byte_end: 5854, column_start: 44, column_end: 47, line_start: 167, line_end: 167 }: the
Token { kind: Space, char_start: 5854, char_end: 5855, byte_start: 5854, byte_end: 5855, column_start: 47, column_end: 48, line_start: 167, line_end: 167 }: " "
Token { kind: Text, char_start: 5855, char_end: 5864, byte_start: 5855, byte_end: 5864, column_start: 48, column_end: 57, line_start: 167, line_end: 167 }: 'grepprg'
Token { kind: Space, char_start: 5864, char_end: 5865, byte_start: 5864, byte_end: 5865, column_start: 57, column_end: 58, line_start: 167, line_end: 167 }: " "
Token { kind: Lparen, char_start: 5865, char_end: 5866, byte_start: 5865, byte_end: 5866, column_start: 58, column_end: 59, line_start: 167, line_end: 167 }: (
Token { kind: Text, char_start: 5866, char_end: 5868, byte_start: 5866, byte_end: 5868, column_start: 59, column_end: 61, line_start: 167, line_end: 167 }: in
Token { kind: Space, char_start: 5868, char_end: 5869, byte_start: 5868, byte_end: 5869, column_start: 61, column_end: 62, line_start: 167, line_end: 167 }: " "
Token { kind: Text, char_start: 5869, char_end: 5873, byte_start: 5869, byte_end: 5873, column_start: 62, column_end: 66, line_start: 167, line_end: 167 }: that
Token { kind: Space, char_start: 5873, char_end: 5874, byte_start: 5873, byte_end: 5874, column_start: 66, column_end: 67, line_start: 167, line_end: 167 }: " "
Token { kind: Text, char_start: 5874, char_end: 5879, byte_start: 5874, byte_end: 5879, column_start: 67, column_end: 72, line_start: 167, line_end: 167 }: order
Token { kind: Rparen, char_start: 5879, char_end: 5880, byte_start: 5879, byte_end: 5880, column_start: 72, column_end: 73, line_start: 167, line_end: 167 }: )
Token { kind: Space, char_start: 5880, char_end: 5881, byte_start: 5880, byte_end: 5881, column_start: 73, column_end: 74, line_start: 167, line_end: 167 }: " "
Token { kind: Text, char_start: 5881, char_end: 5884, byte_start: 5881, byte_end: 5884, column_start: 74, column_end: 77, line_start: 167, line_end: 167 }: and
Token { kind: Newline, char_start: 5884, char_end: 5885, byte_start: 5884, byte_end: 5885, column_start: 77, column_end: 1, line_start: 167, line_end: 168 }: "\n"
Token { kind: Text, char_start: 5885, char_end: 5896, byte_start: 5885, byte_end: 5896, column_start: 1, column_end: 12, line_start: 168, line_end: 168 }: configuring
Token { kind: Space, char_start: 5896, char_end: 5897, byte_start: 5896, byte_end: 5897, column_start: 12, column_end: 13, line_start: 168, line_end: 168 }: " "
Token { kind: Text, char_start: 5897, char_end: 5898, byte_start: 5897, byte_end: 5898, column_start: 13, column_end: 14, line_start: 168, line_end: 168 }: a
Token { kind: Space, char_start: 5898, char_end: 5899, byte_start: 5898, byte_end: 5899, column_start: 14, column_end: 15, line_start: 168, line_end: 168 }: " "
Token { kind: Text, char_start: 5899, char_end: 5907, byte_start: 5899, byte_end: 5907, column_start: 15, column_end: 23, line_start: 168, line_end: 168 }: suitable
Token { kind: Space, char_start: 5907, char_end: 5908, byte_start: 5907, byte_end: 5908, column_start: 23, column_end: 24, line_start: 168, line_end: 168 }: " "
Token { kind: Text, char_start: 5908, char_end: 5921, byte_start: 5908, byte_end: 5921, column_start: 24, column_end: 37, line_start: 168, line_end: 168 }: 'grepformat'.
Token { kind: Newline, char_start: 5921, char_end: 5922, byte_start: 5921, byte_end: 5922, column_start: 37, column_end: 1, line_start: 168, line_end: 169 }: "\n"
Token { kind: Newline, char_start: 5922, char_end: 5923, byte_start: 5922, byte_end: 5923, column_start: 1, column_end: 1, line_start: 169, line_end: 170 }: "\n"
Token { kind: Text, char_start: 5923, char_end: 5936, byte_start: 5923, byte_end: 5936, column_start: 1, column_end: 14, line_start: 170, line_end: 170 }: Additionally,
Token { kind: Space, char_start: 5936, char_end: 5937, byte_start: 5936, byte_end: 5937, column_start: 14, column_end: 15, line_start: 170, line_end: 170 }: " "
Token { kind: Text, char_start: 5937, char_end: 5943, byte_start: 5937, byte_end: 5943, column_start: 15, column_end: 21, line_start: 170, line_end: 170 }: Ferret
Token { kind: Space, char_start: 5943, char_end: 5944, byte_start: 5943, byte_end: 5944, column_start: 21, column_end: 22, line_start: 170, line_end: 170 }: " "
Token { kind: Text, char_start: 5944, char_end: 5952, byte_start: 5944, byte_end: 5952, column_start: 22, column_end: 30, line_start: 170, line_end: 170 }: includes
Token { kind: Space, char_start: 5952, char_end: 5953, byte_start: 5952, byte_end: 5953, column_start: 30, column_end: 31, line_start: 170, line_end: 170 }: " "
Token { kind: Text, char_start: 5953, char_end: 5955, byte_start: 5953, byte_end: 5955, column_start: 31, column_end: 33, line_start: 170, line_end: 170 }: an
Token { kind: Space, char_start: 5955, char_end: 5956, byte_start: 5955, byte_end: 5956, column_start: 33, column_end: 34, line_start: 170, line_end: 170 }: " "
Token { kind: Bar, char_start: 5956, char_end: 5957, byte_start: 5956, byte_end: 5957, column_start: 34, column_end: 35, line_start: 170, line_end: 170 }: |
Token { kind: Text, char_start: 5957, char_end: 5965, byte_start: 5957, byte_end: 5965, column_start: 35, column_end: 43, line_start: 170, line_end: 170 }: ftplugin
Token { kind: Bar, char_start: 5965, char_end: 5966, byte_start: 5965, byte_end: 5966, column_start: 43, column_end: 44, line_start: 170, line_end: 170 }: |
Token { kind: Space, char_start: 5966, char_end: 5967, byte_start: 5966, byte_end: 5967, column_start: 44, column_end: 45, line_start: 170, line_end: 170 }: " "
Token { kind: Text, char_start: 5967, char_end: 5970, byte_start: 5967, byte_end: 5970, column_start: 45, column_end: 48, line_start: 170, line_end: 170 }: for
Token { kind: Space, char_start: 5970, char_end: 5971, byte_start: 5970, byte_end: 5971, column_start: 48, column_end: 49, line_start: 170, line_end: 170 }: " "
Token { kind: Text, char_start: 5971, char_end: 5974, byte_start: 5971, byte_end: 5974, column_start: 49, column_end: 52, line_start: 170, line_end: 170 }: the
Token { kind: Space, char_start: 5974, char_end: 5975, byte_start: 5974, byte_end: 5975, column_start: 52, column_end: 53, line_start: 170, line_end: 170 }: " "
Token { kind: Bar, char_start: 5975, char_end: 5976, byte_start: 5975, byte_end: 5976, column_start: 53, column_end: 54, line_start: 170, line_end: 170 }: |
Token { kind: Text, char_start: 5976, char_end: 5984, byte_start: 5976, byte_end: 5984, column_start: 54, column_end: 62, line_start: 170, line_end: 170 }: quickfix
Token { kind: Bar, char_start: 5984, char_end: 5985, byte_start: 5984, byte_end: 5985, column_start: 62, column_end: 63, line_start: 170, line_end: 170 }: |
Token { kind: Space, char_start: 5985, char_end: 5986, byte_start: 5985, byte_end: 5986, column_start: 63, column_end: 64, line_start: 170, line_end: 170 }: " "
Token { kind: Text, char_start: 5986, char_end: 5993, byte_start: 5986, byte_end: 5993, column_start: 64, column_end: 71, line_start: 170, line_end: 170 }: listing
Token { kind: Space, char_start: 5993, char_end: 5994, byte_start: 5993, byte_end: 5994, column_start: 71, column_end: 72, line_start: 170, line_end: 170 }: " "
Token { kind: Text, char_start: 5994, char_end: 5998, byte_start: 5994, byte_end: 5998, column_start: 72, column_end: 76, line_start: 170, line_end: 170 }: that
Token { kind: Newline, char_start: 5998, char_end: 5999, byte_start: 5998, byte_end: 5999, column_start: 76, column_end: 1, line_start: 170, line_end: 171 }: "\n"
Token { kind: Text, char_start: 5999, char_end: 6006, byte_start: 5999, byte_end: 6006, column_start: 1, column_end: 8, line_start: 171, line_end: 171 }: adjusts
Token { kind: Space, char_start: 6006, char_end: 6007, byte_start: 6006, byte_end: 6007, column_start: 8, column_end: 9, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6007, char_end: 6008, byte_start: 6007, byte_end: 6008, column_start: 9, column_end: 10, line_start: 171, line_end: 171 }: a
Token { kind: Space, char_start: 6008, char_end: 6009, byte_start: 6008, byte_end: 6009, column_start: 10, column_end: 11, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6009, char_end: 6015, byte_start: 6009, byte_end: 6015, column_start: 11, column_end: 17, line_start: 171, line_end: 171 }: number
Token { kind: Space, char_start: 6015, char_end: 6016, byte_start: 6015, byte_end: 6016, column_start: 17, column_end: 18, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6016, char_end: 6018, byte_start: 6016, byte_end: 6018, column_start: 18, column_end: 20, line_start: 171, line_end: 171 }: of
Token { kind: Space, char_start: 6018, char_end: 6019, byte_start: 6018, byte_end: 6019, column_start: 20, column_end: 21, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6019, char_end: 6027, byte_start: 6019, byte_end: 6027, column_start: 21, column_end: 29, line_start: 171, line_end: 171 }: settings
Token { kind: Space, char_start: 6027, char_end: 6028, byte_start: 6027, byte_end: 6028, column_start: 29, column_end: 30, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6028, char_end: 6030, byte_start: 6028, byte_end: 6030, column_start: 30, column_end: 32, line_start: 171, line_end: 171 }: to
Token { kind: Space, char_start: 6030, char_end: 6031, byte_start: 6030, byte_end: 6031, column_start: 32, column_end: 33, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6031, char_end: 6038, byte_start: 6031, byte_end: 6038, column_start: 33, column_end: 40, line_start: 171, line_end: 171 }: improve
Token { kind: Space, char_start: 6038, char_end: 6039, byte_start: 6038, byte_end: 6039, column_start: 40, column_end: 41, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6039, char_end: 6042, byte_start: 6039, byte_end: 6042, column_start: 41, column_end: 44, line_start: 171, line_end: 171 }: the
Token { kind: Space, char_start: 6042, char_end: 6043, byte_start: 6042, byte_end: 6043, column_start: 44, column_end: 45, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6043, char_end: 6052, byte_start: 6043, byte_end: 6052, column_start: 45, column_end: 54, line_start: 171, line_end: 171 }: usability
Token { kind: Space, char_start: 6052, char_end: 6053, byte_start: 6052, byte_end: 6053, column_start: 54, column_end: 55, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6053, char_end: 6055, byte_start: 6053, byte_end: 6055, column_start: 55, column_end: 57, line_start: 171, line_end: 171 }: of
Token { kind: Space, char_start: 6055, char_end: 6056, byte_start: 6055, byte_end: 6056, column_start: 57, column_end: 58, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6056, char_end: 6062, byte_start: 6056, byte_end: 6062, column_start: 58, column_end: 64, line_start: 171, line_end: 171 }: search
Token { kind: Space, char_start: 6062, char_end: 6063, byte_start: 6062, byte_end: 6063, column_start: 64, column_end: 65, line_start: 171, line_end: 171 }: " "
Token { kind: Text, char_start: 6063, char_end: 6071, byte_start: 6063, byte_end: 6071, column_start: 65, column_end: 73, line_start: 171, line_end: 171 }: results.
Token { kind: Newline, char_start: 6071, char_end: 6072, byte_start: 6071, byte_end: 6072, column_start: 73, column_end: 1, line_start: 171, line_end: 172 }: "\n"
Token { kind: Newline, char_start: 6072, char_end: 6073, byte_start: 6072, byte_end: 6073, column_start: 1, column_end: 1, line_start: 172, line_end: 173 }: "\n"
Token { kind: At, char_start: 6073, char_end: 6074, byte_start: 6073, byte_end: 6074, column_start: 1, column_end: 2, line_start: 173, line_end: 173 }: @
Token { kind: Text, char_start: 6074, char_end: 6080, byte_start: 6074, byte_end: 6080, column_start: 2, column_end: 8, line_start: 173, line_end: 173 }: indent
Token { kind: Newline, char_start: 6080, char_end: 6081, byte_start: 6080, byte_end: 6081, column_start: 8, column_end: 1, line_start: 173, line_end: 174 }: "\n"
Token { kind: Space, char_start: 6081, char_end: 6145, byte_start: 6081, byte_end: 6145, column_start: 1, column_end: 65, line_start: 174, line_end: 174 }: "                                                                "
Token { kind: Star, char_start: 6145, char_end: 6146, byte_start: 6145, byte_end: 6146, column_start: 65, column_end: 66, line_start: 174, line_end: 174 }: *
Token { kind: Text, char_start: 6146, char_end: 6152, byte_start: 6146, byte_end: 6152, column_start: 66, column_end: 72, line_start: 174, line_end: 174 }: ferret
Token { kind: Hyphen, char_start: 6152, char_end: 6153, byte_start: 6152, byte_end: 6153, column_start: 72, column_end: 73, line_start: 174, line_end: 174 }: -
Token { kind: Text, char_start: 6153, char_end: 6159, byte_start: 6153, byte_end: 6159, column_start: 73, column_end: 79, line_start: 174, line_end: 174 }: nolist
Token { kind: Star, char_start: 6159, char_end: 6160, byte_start: 6159, byte_end: 6160, column_start: 79, column_end: 80, line_start: 174, line_end: 174 }: *
Token { kind: Newline, char_start: 6160, char_end: 6161, byte_start: 6160, byte_end: 6161, column_start: 80, column_end: 1, line_start: 174, line_end: 175 }: "\n"
Token { kind: Heading(Heading2), char_start: 6161, char_end: 6163, byte_start: 6161, byte_end: 6163, column_start: 1, column_end: 3, line_start: 175, line_end: 175 }: ##
Token { kind: Space, char_start: 6163, char_end: 6164, byte_start: 6163, byte_end: 6164, column_start: 3, column_end: 4, line_start: 175, line_end: 175 }: " "
Token { kind: Text, char_start: 6164, char_end: 6172, byte_start: 6164, byte_end: 6172, column_start: 4, column_end: 12, line_start: 175, line_end: 175 }: 'nolist'
Token { kind: Newline, char_start: 6172, char_end: 6173, byte_start: 6172, byte_end: 6173, column_start: 12, column_end: 1, line_start: 175, line_end: 176 }: "\n"
Token { kind: Newline, char_start: 6173, char_end: 6174, byte_start: 6173, byte_end: 6174, column_start: 1, column_end: 1, line_start: 176, line_end: 177 }: "\n"
Token { kind: Text, char_start: 6174, char_end: 6180, byte_start: 6174, byte_end: 6180, column_start: 1, column_end: 7, line_start: 177, line_end: 177 }: Turned
Token { kind: Space, char_start: 6180, char_end: 6181, byte_start: 6180, byte_end: 6181, column_start: 7, column_end: 8, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6181, char_end: 6184, byte_start: 6181, byte_end: 6184, column_start: 8, column_end: 11, line_start: 177, line_end: 177 }: off
Token { kind: Space, char_start: 6184, char_end: 6185, byte_start: 6184, byte_end: 6185, column_start: 11, column_end: 12, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6185, char_end: 6187, byte_start: 6185, byte_end: 6187, column_start: 12, column_end: 14, line_start: 177, line_end: 177 }: to
Token { kind: Space, char_start: 6187, char_end: 6188, byte_start: 6187, byte_end: 6188, column_start: 14, column_end: 15, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6188, char_end: 6194, byte_start: 6188, byte_end: 6194, column_start: 15, column_end: 21, line_start: 177, line_end: 177 }: reduce
Token { kind: Space, char_start: 6194, char_end: 6195, byte_start: 6194, byte_end: 6195, column_start: 21, column_end: 22, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6195, char_end: 6201, byte_start: 6195, byte_end: 6201, column_start: 22, column_end: 28, line_start: 177, line_end: 177 }: visual
Token { kind: Space, char_start: 6201, char_end: 6202, byte_start: 6201, byte_end: 6202, column_start: 28, column_end: 29, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6202, char_end: 6209, byte_start: 6202, byte_end: 6209, column_start: 29, column_end: 36, line_start: 177, line_end: 177 }: clutter
Token { kind: Space, char_start: 6209, char_end: 6210, byte_start: 6209, byte_end: 6210, column_start: 36, column_end: 37, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6210, char_end: 6212, byte_start: 6210, byte_end: 6212, column_start: 37, column_end: 39, line_start: 177, line_end: 177 }: in
Token { kind: Space, char_start: 6212, char_end: 6213, byte_start: 6212, byte_end: 6213, column_start: 39, column_end: 40, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6213, char_end: 6216, byte_start: 6213, byte_end: 6216, column_start: 40, column_end: 43, line_start: 177, line_end: 177 }: the
Token { kind: Space, char_start: 6216, char_end: 6217, byte_start: 6216, byte_end: 6217, column_start: 43, column_end: 44, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6217, char_end: 6223, byte_start: 6217, byte_end: 6223, column_start: 44, column_end: 50, line_start: 177, line_end: 177 }: search
Token { kind: Space, char_start: 6223, char_end: 6224, byte_start: 6223, byte_end: 6224, column_start: 50, column_end: 51, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6224, char_end: 6232, byte_start: 6224, byte_end: 6232, column_start: 51, column_end: 59, line_start: 177, line_end: 177 }: results,
Token { kind: Space, char_start: 6232, char_end: 6233, byte_start: 6232, byte_end: 6233, column_start: 59, column_end: 60, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6233, char_end: 6236, byte_start: 6233, byte_end: 6236, column_start: 60, column_end: 63, line_start: 177, line_end: 177 }: and
Token { kind: Space, char_start: 6236, char_end: 6237, byte_start: 6236, byte_end: 6237, column_start: 63, column_end: 64, line_start: 177, line_end: 177 }: " "
Token { kind: Text, char_start: 6237, char_end: 6244, byte_start: 6237, byte_end: 6244, column_start: 64, column_end: 71, line_start: 177, line_end: 177 }: because
Token { kind: Newline, char_start: 6244, char_end: 6245, byte_start: 6244, byte_end: 6245, column_start: 71, column_end: 1, line_start: 177, line_end: 178 }: "\n"
Token { kind: Text, char_start: 6245, char_end: 6251, byte_start: 6245, byte_end: 6251, column_start: 1, column_end: 7, line_start: 178, line_end: 178 }: 'list'
Token { kind: Space, char_start: 6251, char_end: 6252, byte_start: 6251, byte_end: 6252, column_start: 7, column_end: 8, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6252, char_end: 6254, byte_start: 6252, byte_end: 6254, column_start: 8, column_end: 10, line_start: 178, line_end: 178 }: is
Token { kind: Space, char_start: 6254, char_end: 6255, byte_start: 6254, byte_end: 6255, column_start: 10, column_end: 11, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6255, char_end: 6259, byte_start: 6255, byte_end: 6259, column_start: 11, column_end: 15, line_start: 178, line_end: 178 }: most
Token { kind: Space, char_start: 6259, char_end: 6260, byte_start: 6259, byte_end: 6260, column_start: 15, column_end: 16, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6260, char_end: 6266, byte_start: 6260, byte_end: 6266, column_start: 16, column_end: 22, line_start: 178, line_end: 178 }: useful
Token { kind: Space, char_start: 6266, char_end: 6267, byte_start: 6266, byte_end: 6267, column_start: 22, column_end: 23, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6267, char_end: 6269, byte_start: 6267, byte_end: 6269, column_start: 23, column_end: 25, line_start: 178, line_end: 178 }: in
Token { kind: Space, char_start: 6269, char_end: 6270, byte_start: 6269, byte_end: 6270, column_start: 25, column_end: 26, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6270, char_end: 6275, byte_start: 6270, byte_end: 6275, column_start: 26, column_end: 31, line_start: 178, line_end: 178 }: files
Token { kind: Space, char_start: 6275, char_end: 6276, byte_start: 6275, byte_end: 6276, column_start: 31, column_end: 32, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6276, char_end: 6280, byte_start: 6276, byte_end: 6280, column_start: 32, column_end: 36, line_start: 178, line_end: 178 }: that
Token { kind: Space, char_start: 6280, char_end: 6281, byte_start: 6280, byte_end: 6281, column_start: 36, column_end: 37, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6281, char_end: 6284, byte_start: 6281, byte_end: 6284, column_start: 37, column_end: 40, line_start: 178, line_end: 178 }: are
Token { kind: Space, char_start: 6284, char_end: 6285, byte_start: 6284, byte_end: 6285, column_start: 40, column_end: 41, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6285, char_end: 6290, byte_start: 6285, byte_end: 6290, column_start: 41, column_end: 46, line_start: 178, line_end: 178 }: being
Token { kind: Space, char_start: 6290, char_end: 6291, byte_start: 6290, byte_end: 6291, column_start: 46, column_end: 47, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6291, char_end: 6299, byte_start: 6291, byte_end: 6299, column_start: 47, column_end: 55, line_start: 178, line_end: 178 }: actively
Token { kind: Space, char_start: 6299, char_end: 6300, byte_start: 6299, byte_end: 6300, column_start: 55, column_end: 56, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6300, char_end: 6307, byte_start: 6300, byte_end: 6307, column_start: 56, column_end: 63, line_start: 178, line_end: 178 }: edited,
Token { kind: Space, char_start: 6307, char_end: 6308, byte_start: 6307, byte_end: 6308, column_start: 63, column_end: 64, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6308, char_end: 6313, byte_start: 6308, byte_end: 6313, column_start: 64, column_end: 69, line_start: 178, line_end: 178 }: which
Token { kind: Space, char_start: 6313, char_end: 6314, byte_start: 6313, byte_end: 6314, column_start: 69, column_end: 70, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6314, char_end: 6316, byte_start: 6314, byte_end: 6316, column_start: 70, column_end: 72, line_start: 178, line_end: 178 }: is
Token { kind: Space, char_start: 6316, char_end: 6317, byte_start: 6316, byte_end: 6317, column_start: 72, column_end: 73, line_start: 178, line_end: 178 }: " "
Token { kind: Text, char_start: 6317, char_end: 6320, byte_start: 6317, byte_end: 6320, column_start: 73, column_end: 76, line_start: 178, line_end: 178 }: not
Token { kind: Newline, char_start: 6320, char_end: 6321, byte_start: 6320, byte_end: 6321, column_start: 76, column_end: 1, line_start: 178, line_end: 179 }: "\n"
Token { kind: Text, char_start: 6321, char_end: 6324, byte_start: 6321, byte_end: 6324, column_start: 1, column_end: 4, line_start: 179, line_end: 179 }: the
Token { kind: Space, char_start: 6324, char_end: 6325, byte_start: 6324, byte_end: 6325, column_start: 4, column_end: 5, line_start: 179, line_end: 179 }: " "
Token { kind: Text, char_start: 6325, char_end: 6329, byte_start: 6325, byte_end: 6329, column_start: 5, column_end: 9, line_start: 179, line_end: 179 }: case
Token { kind: Space, char_start: 6329, char_end: 6330, byte_start: 6329, byte_end: 6330, column_start: 9, column_end: 10, line_start: 179, line_end: 179 }: " "
Token { kind: Text, char_start: 6330, char_end: 6333, byte_start: 6330, byte_end: 6333, column_start: 10, column_end: 13, line_start: 179, line_end: 179 }: for
Token { kind: Space, char_start: 6333, char_end: 6334, byte_start: 6333, byte_end: 6334, column_start: 13, column_end: 14, line_start: 179, line_end: 179 }: " "
Token { kind: Bar, char_start: 6334, char_end: 6335, byte_start: 6334, byte_end: 6335, column_start: 14, column_end: 15, line_start: 179, line_end: 179 }: |
Token { kind: Text, char_start: 6335, char_end: 6343, byte_start: 6335, byte_end: 6343, column_start: 15, column_end: 23, line_start: 179, line_end: 179 }: quickfix
Token { kind: Bar, char_start: 6343, char_end: 6344, byte_start: 6343, byte_end: 6344, column_start: 23, column_end: 24, line_start: 179, line_end: 179 }: |
Token { kind: Space, char_start: 6344, char_end: 6345, byte_start: 6344, byte_end: 6345, column_start: 24, column_end: 25, line_start: 179, line_end: 179 }: " "
Token { kind: Text, char_start: 6345, char_end: 6353, byte_start: 6345, byte_end: 6353, column_start: 25, column_end: 33, line_start: 179, line_end: 179 }: results.
Token { kind: Newline, char_start: 6353, char_end: 6354, byte_start: 6353, byte_end: 6354, column_start: 33, column_end: 1, line_start: 179, line_end: 180 }: "\n"
Token { kind: Newline, char_start: 6354, char_end: 6355, byte_start: 6354, byte_end: 6355, column_start: 1, column_end: 1, line_start: 180, line_end: 181 }: "\n"
Token { kind: Space, char_start: 6355, char_end: 6409, byte_start: 6355, byte_end: 6409, column_start: 1, column_end: 55, line_start: 181, line_end: 181 }: "                                                      "
Token { kind: Star, char_start: 6409, char_end: 6410, byte_start: 6409, byte_end: 6410, column_start: 55, column_end: 56, line_start: 181, line_end: 181 }: *
Token { kind: Text, char_start: 6410, char_end: 6416, byte_start: 6410, byte_end: 6416, column_start: 56, column_end: 62, line_start: 181, line_end: 181 }: ferret
Token { kind: Hyphen, char_start: 6416, char_end: 6417, byte_start: 6416, byte_end: 6417, column_start: 62, column_end: 63, line_start: 181, line_end: 181 }: -
Token { kind: Text, char_start: 6417, char_end: 6433, byte_start: 6417, byte_end: 6433, column_start: 63, column_end: 79, line_start: 181, line_end: 181 }: norelativenumber
Token { kind: Star, char_start: 6433, char_end: 6434, byte_start: 6433, byte_end: 6434, column_start: 79, column_end: 80, line_start: 181, line_end: 181 }: *
Token { kind: Newline, char_start: 6434, char_end: 6435, byte_start: 6434, byte_end: 6435, column_start: 80, column_end: 1, line_start: 181, line_end: 182 }: "\n"
Token { kind: Heading(Heading2), char_start: 6435, char_end: 6437, byte_start: 6435, byte_end: 6437, column_start: 1, column_end: 3, line_start: 182, line_end: 182 }: ##
Token { kind: Space, char_start: 6437, char_end: 6438, byte_start: 6437, byte_end: 6438, column_start: 3, column_end: 4, line_start: 182, line_end: 182 }: " "
Token { kind: Text, char_start: 6438, char_end: 6456, byte_start: 6438, byte_end: 6456, column_start: 4, column_end: 22, line_start: 182, line_end: 182 }: 'norelativenumber'
Token { kind: Newline, char_start: 6456, char_end: 6457, byte_start: 6456, byte_end: 6457, column_start: 22, column_end: 1, line_start: 182, line_end: 183 }: "\n"
Token { kind: Newline, char_start: 6457, char_end: 6458, byte_start: 6457, byte_end: 6458, column_start: 1, column_end: 1, line_start: 183, line_end: 184 }: "\n"
Token { kind: Text, char_start: 6458, char_end: 6464, byte_start: 6458, byte_end: 6464, column_start: 1, column_end: 7, line_start: 184, line_end: 184 }: Turned
Token { kind: Space, char_start: 6464, char_end: 6465, byte_start: 6464, byte_end: 6465, column_start: 7, column_end: 8, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6465, char_end: 6469, byte_start: 6465, byte_end: 6469, column_start: 8, column_end: 12, line_start: 184, line_end: 184 }: off,
Token { kind: Space, char_start: 6469, char_end: 6470, byte_start: 6469, byte_end: 6470, column_start: 12, column_end: 13, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6470, char_end: 6477, byte_start: 6470, byte_end: 6477, column_start: 13, column_end: 20, line_start: 184, line_end: 184 }: because
Token { kind: Space, char_start: 6477, char_end: 6478, byte_start: 6477, byte_end: 6478, column_start: 20, column_end: 21, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6478, char_end: 6480, byte_start: 6478, byte_end: 6480, column_start: 21, column_end: 23, line_start: 184, line_end: 184 }: it
Token { kind: Space, char_start: 6480, char_end: 6481, byte_start: 6480, byte_end: 6481, column_start: 23, column_end: 24, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6481, char_end: 6483, byte_start: 6481, byte_end: 6483, column_start: 24, column_end: 26, line_start: 184, line_end: 184 }: is
Token { kind: Space, char_start: 6483, char_end: 6484, byte_start: 6483, byte_end: 6484, column_start: 26, column_end: 27, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6484, char_end: 6488, byte_start: 6484, byte_end: 6488, column_start: 27, column_end: 31, line_start: 184, line_end: 184 }: more
Token { kind: Space, char_start: 6488, char_end: 6489, byte_start: 6488, byte_end: 6489, column_start: 31, column_end: 32, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6489, char_end: 6495, byte_start: 6489, byte_end: 6495, column_start: 32, column_end: 38, line_start: 184, line_end: 184 }: useful
Token { kind: Space, char_start: 6495, char_end: 6496, byte_start: 6495, byte_end: 6496, column_start: 38, column_end: 39, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6496, char_end: 6498, byte_start: 6496, byte_end: 6498, column_start: 39, column_end: 41, line_start: 184, line_end: 184 }: to
Token { kind: Space, char_start: 6498, char_end: 6499, byte_start: 6498, byte_end: 6499, column_start: 41, column_end: 42, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6499, char_end: 6503, byte_start: 6499, byte_end: 6503, column_start: 42, column_end: 46, line_start: 184, line_end: 184 }: have
Token { kind: Space, char_start: 6503, char_end: 6504, byte_start: 6503, byte_end: 6504, column_start: 46, column_end: 47, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6504, char_end: 6505, byte_start: 6504, byte_end: 6505, column_start: 47, column_end: 48, line_start: 184, line_end: 184 }: a
Token { kind: Space, char_start: 6505, char_end: 6506, byte_start: 6505, byte_end: 6506, column_start: 48, column_end: 49, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6506, char_end: 6511, byte_start: 6506, byte_end: 6511, column_start: 49, column_end: 54, line_start: 184, line_end: 184 }: sense
Token { kind: Space, char_start: 6511, char_end: 6512, byte_start: 6511, byte_end: 6512, column_start: 54, column_end: 55, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6512, char_end: 6514, byte_start: 6512, byte_end: 6514, column_start: 55, column_end: 57, line_start: 184, line_end: 184 }: of
Token { kind: Space, char_start: 6514, char_end: 6515, byte_start: 6514, byte_end: 6515, column_start: 57, column_end: 58, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6515, char_end: 6523, byte_start: 6515, byte_end: 6523, column_start: 58, column_end: 66, line_start: 184, line_end: 184 }: absolute
Token { kind: Space, char_start: 6523, char_end: 6524, byte_start: 6523, byte_end: 6524, column_start: 66, column_end: 67, line_start: 184, line_end: 184 }: " "
Token { kind: Text, char_start: 6524, char_end: 6532, byte_start: 6524, byte_end: 6532, column_start: 67, column_end: 75, line_start: 184, line_end: 184 }: progress
Token { kind: Newline, char_start: 6532, char_end: 6533, byte_start: 6532, byte_end: 6533, column_start: 75, column_end: 1, line_start: 184, line_end: 185 }: "\n"
Token { kind: Text, char_start: 6533, char_end: 6540, byte_start: 6533, byte_end: 6540, column_start: 1, column_end: 8, line_start: 185, line_end: 185 }: through
Token { kind: Space, char_start: 6540, char_end: 6541, byte_start: 6540, byte_end: 6541, column_start: 8, column_end: 9, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6541, char_end: 6544, byte_start: 6541, byte_end: 6544, column_start: 9, column_end: 12, line_start: 185, line_end: 185 }: the
Token { kind: Space, char_start: 6544, char_end: 6545, byte_start: 6544, byte_end: 6545, column_start: 12, column_end: 13, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6545, char_end: 6552, byte_start: 6545, byte_end: 6552, column_start: 13, column_end: 20, line_start: 185, line_end: 185 }: results
Token { kind: Space, char_start: 6552, char_end: 6553, byte_start: 6552, byte_end: 6553, column_start: 20, column_end: 21, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6553, char_end: 6557, byte_start: 6553, byte_end: 6557, column_start: 21, column_end: 25, line_start: 185, line_end: 185 }: list
Token { kind: Space, char_start: 6557, char_end: 6558, byte_start: 6557, byte_end: 6558, column_start: 25, column_end: 26, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6558, char_end: 6562, byte_start: 6558, byte_end: 6562, column_start: 26, column_end: 30, line_start: 185, line_end: 185 }: than
Token { kind: Space, char_start: 6562, char_end: 6563, byte_start: 6562, byte_end: 6563, column_start: 30, column_end: 31, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6563, char_end: 6565, byte_start: 6563, byte_end: 6565, column_start: 31, column_end: 33, line_start: 185, line_end: 185 }: to
Token { kind: Space, char_start: 6565, char_end: 6566, byte_start: 6565, byte_end: 6566, column_start: 33, column_end: 34, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6566, char_end: 6570, byte_start: 6566, byte_end: 6570, column_start: 34, column_end: 38, line_start: 185, line_end: 185 }: have
Token { kind: Space, char_start: 6570, char_end: 6571, byte_start: 6570, byte_end: 6571, column_start: 38, column_end: 39, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6571, char_end: 6574, byte_start: 6571, byte_end: 6574, column_start: 39, column_end: 42, line_start: 185, line_end: 185 }: the
Token { kind: Space, char_start: 6574, char_end: 6575, byte_start: 6574, byte_end: 6575, column_start: 42, column_end: 43, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6575, char_end: 6582, byte_start: 6575, byte_end: 6582, column_start: 43, column_end: 50, line_start: 185, line_end: 185 }: ability
Token { kind: Space, char_start: 6582, char_end: 6583, byte_start: 6582, byte_end: 6583, column_start: 50, column_end: 51, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6583, char_end: 6585, byte_start: 6583, byte_end: 6585, column_start: 51, column_end: 53, line_start: 185, line_end: 185 }: to
Token { kind: Space, char_start: 6585, char_end: 6586, byte_start: 6585, byte_end: 6586, column_start: 53, column_end: 54, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6586, char_end: 6590, byte_start: 6586, byte_end: 6590, column_start: 54, column_end: 58, line_start: 185, line_end: 185 }: jump
Token { kind: Space, char_start: 6590, char_end: 6591, byte_start: 6590, byte_end: 6591, column_start: 58, column_end: 59, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6591, char_end: 6593, byte_start: 6591, byte_end: 6593, column_start: 59, column_end: 61, line_start: 185, line_end: 185 }: to
Token { kind: Space, char_start: 6593, char_end: 6594, byte_start: 6593, byte_end: 6594, column_start: 61, column_end: 62, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6594, char_end: 6600, byte_start: 6594, byte_end: 6600, column_start: 62, column_end: 68, line_start: 185, line_end: 185 }: nearby
Token { kind: Space, char_start: 6600, char_end: 6601, byte_start: 6600, byte_end: 6601, column_start: 68, column_end: 69, line_start: 185, line_end: 185 }: " "
Token { kind: Text, char_start: 6601, char_end: 6608, byte_start: 6601, byte_end: 6608, column_start: 69, column_end: 76, line_start: 185, line_end: 185 }: results
Token { kind: Newline, char_start: 6608, char_end: 6609, byte_start: 6608, byte_end: 6609, column_start: 76, column_end: 1, line_start: 185, line_end: 186 }: "\n"
Token { kind: Lparen, char_start: 6609, char_end: 6610, byte_start: 6609, byte_end: 6610, column_start: 1, column_end: 2, line_start: 186, line_end: 186 }: (
Token { kind: Text, char_start: 6610, char_end: 6620, byte_start: 6610, byte_end: 6620, column_start: 2, column_end: 12, line_start: 186, line_end: 186 }: especially
Token { kind: Space, char_start: 6620, char_end: 6621, byte_start: 6620, byte_end: 6621, column_start: 12, column_end: 13, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6621, char_end: 6627, byte_start: 6621, byte_end: 6627, column_start: 13, column_end: 19, line_start: 186, line_end: 186 }: seeing
Token { kind: Space, char_start: 6627, char_end: 6628, byte_start: 6627, byte_end: 6628, column_start: 19, column_end: 20, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6628, char_end: 6630, byte_start: 6628, byte_end: 6630, column_start: 20, column_end: 22, line_start: 186, line_end: 186 }: as
Token { kind: Space, char_start: 6630, char_end: 6631, byte_start: 6630, byte_end: 6631, column_start: 22, column_end: 23, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6631, char_end: 6634, byte_start: 6631, byte_end: 6634, column_start: 23, column_end: 26, line_start: 186, line_end: 186 }: the
Token { kind: Space, char_start: 6634, char_end: 6635, byte_start: 6634, byte_end: 6635, column_start: 26, column_end: 27, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6635, char_end: 6639, byte_start: 6635, byte_end: 6639, column_start: 27, column_end: 31, line_start: 186, line_end: 186 }: most
Token { kind: Space, char_start: 6639, char_end: 6640, byte_start: 6639, byte_end: 6640, column_start: 31, column_end: 32, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6640, char_end: 6646, byte_start: 6640, byte_end: 6646, column_start: 32, column_end: 38, line_start: 186, line_end: 186 }: common
Token { kind: Space, char_start: 6646, char_end: 6647, byte_start: 6646, byte_end: 6647, column_start: 38, column_end: 39, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6647, char_end: 6657, byte_start: 6647, byte_end: 6657, column_start: 39, column_end: 49, line_start: 186, line_end: 186 }: operations
Token { kind: Space, char_start: 6657, char_end: 6658, byte_start: 6657, byte_end: 6658, column_start: 49, column_end: 50, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6658, char_end: 6661, byte_start: 6658, byte_end: 6661, column_start: 50, column_end: 53, line_start: 186, line_end: 186 }: are
Token { kind: Space, char_start: 6661, char_end: 6662, byte_start: 6661, byte_end: 6662, column_start: 53, column_end: 54, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6662, char_end: 6668, byte_start: 6662, byte_end: 6668, column_start: 54, column_end: 60, line_start: 186, line_end: 186 }: moving
Token { kind: Space, char_start: 6668, char_end: 6669, byte_start: 6668, byte_end: 6669, column_start: 60, column_end: 61, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6669, char_end: 6671, byte_start: 6669, byte_end: 6671, column_start: 61, column_end: 63, line_start: 186, line_end: 186 }: to
Token { kind: Space, char_start: 6671, char_end: 6672, byte_start: 6671, byte_end: 6672, column_start: 63, column_end: 64, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6672, char_end: 6675, byte_start: 6672, byte_end: 6675, column_start: 64, column_end: 67, line_start: 186, line_end: 186 }: the
Token { kind: Space, char_start: 6675, char_end: 6676, byte_start: 6675, byte_end: 6676, column_start: 67, column_end: 68, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6676, char_end: 6680, byte_start: 6676, byte_end: 6680, column_start: 68, column_end: 72, line_start: 186, line_end: 186 }: next
Token { kind: Space, char_start: 6680, char_end: 6681, byte_start: 6680, byte_end: 6681, column_start: 72, column_end: 73, line_start: 186, line_end: 186 }: " "
Token { kind: Text, char_start: 6681, char_end: 6683, byte_start: 6681, byte_end: 6683, column_start: 73, column_end: 75, line_start: 186, line_end: 186 }: or
Token { kind: Newline, char_start: 6683, char_end: 6684, byte_start: 6683, byte_end: 6684, column_start: 75, column_end: 1, line_start: 186, line_end: 187 }: "\n"
Token { kind: Text, char_start: 6684, char_end: 6692, byte_start: 6684, byte_end: 6692, column_start: 1, column_end: 9, line_start: 187, line_end: 187 }: previous
Token { kind: Space, char_start: 6692, char_end: 6693, byte_start: 6692, byte_end: 6693, column_start: 9, column_end: 10, line_start: 187, line_end: 187 }: " "
Token { kind: Text, char_start: 6693, char_end: 6698, byte_start: 6693, byte_end: 6698, column_start: 10, column_end: 15, line_start: 187, line_end: 187 }: file,
Token { kind: Space, char_start: 6698, char_end: 6699, byte_start: 6698, byte_end: 6699, column_start: 15, column_end: 16, line_start: 187, line_end: 187 }: " "
Token { kind: Text, char_start: 6699, char_end: 6704, byte_start: 6699, byte_end: 6704, column_start: 16, column_end: 21, line_start: 187, line_end: 187 }: which
Token { kind: Space, char_start: 6704, char_end: 6705, byte_start: 6704, byte_end: 6705, column_start: 21, column_end: 22, line_start: 187, line_end: 187 }: " "
Token { kind: Text, char_start: 6705, char_end: 6708, byte_start: 6705, byte_end: 6708, column_start: 22, column_end: 25, line_start: 187, line_end: 187 }: are
Token { kind: Space, char_start: 6708, char_end: 6709, byte_start: 6708, byte_end: 6709, column_start: 25, column_end: 26, line_start: 187, line_end: 187 }: " "
Token { kind: Text, char_start: 6709, char_end: 6713, byte_start: 6709, byte_end: 6713, column_start: 26, column_end: 30, line_start: 187, line_end: 187 }: both
Token { kind: Space, char_start: 6713, char_end: 6714, byte_start: 6713, byte_end: 6714, column_start: 30, column_end: 31, line_start: 187, line_end: 187 }: " "
Token { kind: Text, char_start: 6714, char_end: 6721, byte_start: 6714, byte_end: 6721, column_start: 31, column_end: 38, line_start: 187, line_end: 187 }: handled
Token { kind: Space, char_start: 6721, char_end: 6722, byte_start: 6721, byte_end: 6722, column_start: 38, column_end: 39, line_start: 187, line_end: 187 }: " "
Token { kind: Text, char_start: 6722, char_end: 6728, byte_start: 6722, byte_end: 6728, column_start: 39, column_end: 45, line_start: 187, line_end: 187 }: nicely
Token { kind: Space, char_start: 6728, char_end: 6729, byte_start: 6728, byte_end: 6729, column_start: 45, column_end: 46, line_start: 187, line_end: 187 }: " "
Token { kind: Text, char_start: 6729, char_end: 6731, byte_start: 6729, byte_end: 6731, column_start: 46, column_end: 48, line_start: 187, line_end: 187 }: by
Token { kind: Space, char_start: 6731, char_end: 6732, byte_start: 6731, byte_end: 6732, column_start: 48, column_end: 49, line_start: 187, line_end: 187 }: " "
Token { kind: Bar, char_start: 6732, char_end: 6733, byte_start: 6732, byte_end: 6733, column_start: 49, column_end: 50, line_start: 187, line_end: 187 }: |
Token { kind: Text, char_start: 6733, char_end: 6737, byte_start: 6733, byte_end: 6737, column_start: 50, column_end: 54, line_start: 187, line_end: 187 }: :cnf
Token { kind: Bar, char_start: 6737, char_end: 6738, byte_start: 6737, byte_end: 6738, column_start: 54, column_end: 55, line_start: 187, line_end: 187 }: |
Token { kind: Space, char_start: 6738, char_end: 6739, byte_start: 6738, byte_end: 6739, column_start: 55, column_end: 56, line_start: 187, line_end: 187 }: " "
Token { kind: Text, char_start: 6739, char_end: 6742, byte_start: 6739, byte_end: 6742, column_start: 56, column_end: 59, line_start: 187, line_end: 187 }: and
Token { kind: Space, char_start: 6742, char_end: 6743, byte_start: 6742, byte_end: 6743, column_start: 59, column_end: 60, line_start: 187, line_end: 187 }: " "
Token { kind: Bar, char_start: 6743, char_end: 6744, byte_start: 6743, byte_end: 6744, column_start: 60, column_end: 61, line_start: 187, line_end: 187 }: |
Token { kind: Text, char_start: 6744, char_end: 6748, byte_start: 6744, byte_end: 6748, column_start: 61, column_end: 65, line_start: 187, line_end: 187 }: :cpf
Token { kind: Bar, char_start: 6748, char_end: 6749, byte_start: 6748, byte_end: 6749, column_start: 65, column_end: 66, line_start: 187, line_end: 187 }: |
Token { kind: Newline, char_start: 6749, char_end: 6750, byte_start: 6749, byte_end: 6750, column_start: 66, column_end: 1, line_start: 187, line_end: 188 }: "\n"
Token { kind: Text, char_start: 6750, char_end: 6762, byte_start: 6750, byte_end: 6762, column_start: 1, column_end: 13, line_start: 188, line_end: 188 }: respectively
Token { kind: Rparen, char_start: 6762, char_end: 6763, byte_start: 6762, byte_end: 6763, column_start: 13, column_end: 14, line_start: 188, line_end: 188 }: )
Token { kind: Text, char_start: 6763, char_end: 6764, byte_start: 6763, byte_end: 6764, column_start: 14, column_end: 15, line_start: 188, line_end: 188 }: .
Token { kind: Newline, char_start: 6764, char_end: 6765, byte_start: 6764, byte_end: 6765, column_start: 15, column_end: 1, line_start: 188, line_end: 189 }: "\n"
Token { kind: Newline, char_start: 6765, char_end: 6766, byte_start: 6765, byte_end: 6766, column_start: 1, column_end: 1, line_start: 189, line_end: 190 }: "\n"
Token { kind: Space, char_start: 6766, char_end: 6830, byte_start: 6766, byte_end: 6830, column_start: 1, column_end: 65, line_start: 190, line_end: 190 }: "                                                                "
Token { kind: Star, char_start: 6830, char_end: 6831, byte_start: 6830, byte_end: 6831, column_start: 65, column_end: 66, line_start: 190, line_end: 190 }: *
Token { kind: Text, char_start: 6831, char_end: 6837, byte_start: 6831, byte_end: 6837, column_start: 66, column_end: 72, line_start: 190, line_end: 190 }: ferret
Token { kind: Hyphen, char_start: 6837, char_end: 6838, byte_start: 6837, byte_end: 6838, column_start: 72, column_end: 73, line_start: 190, line_end: 190 }: -
Token { kind: Text, char_start: 6838, char_end: 6844, byte_start: 6838, byte_end: 6844, column_start: 73, column_end: 79, line_start: 190, line_end: 190 }: nowrap
Token { kind: Star, char_start: 6844, char_end: 6845, byte_start: 6844, byte_end: 6845, column_start: 79, column_end: 80, line_start: 190, line_end: 190 }: *
Token { kind: Newline, char_start: 6845, char_end: 6846, byte_start: 6845, byte_end: 6846, column_start: 80, column_end: 1, line_start: 190, line_end: 191 }: "\n"
Token { kind: Heading(Heading2), char_start: 6846, char_end: 6848, byte_start: 6846, byte_end: 6848, column_start: 1, column_end: 3, line_start: 191, line_end: 191 }: ##
Token { kind: Space, char_start: 6848, char_end: 6849, byte_start: 6848, byte_end: 6849, column_start: 3, column_end: 4, line_start: 191, line_end: 191 }: " "
Token { kind: Text, char_start: 6849, char_end: 6857, byte_start: 6849, byte_end: 6857, column_start: 4, column_end: 12, line_start: 191, line_end: 191 }: 'nowrap'
Token { kind: Newline, char_start: 6857, char_end: 6858, byte_start: 6857, byte_end: 6858, column_start: 12, column_end: 1, line_start: 191, line_end: 192 }: "\n"
Token { kind: Newline, char_start: 6858, char_end: 6859, byte_start: 6858, byte_end: 6859, column_start: 1, column_end: 1, line_start: 192, line_end: 193 }: "\n"
Token { kind: Text, char_start: 6859, char_end: 6865, byte_start: 6859, byte_end: 6865, column_start: 1, column_end: 7, line_start: 193, line_end: 193 }: Turned
Token { kind: Space, char_start: 6865, char_end: 6866, byte_start: 6865, byte_end: 6866, column_start: 7, column_end: 8, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6866, char_end: 6869, byte_start: 6866, byte_end: 6869, column_start: 8, column_end: 11, line_start: 193, line_end: 193 }: off
Token { kind: Space, char_start: 6869, char_end: 6870, byte_start: 6869, byte_end: 6870, column_start: 11, column_end: 12, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6870, char_end: 6872, byte_start: 6870, byte_end: 6872, column_start: 12, column_end: 14, line_start: 193, line_end: 193 }: to
Token { kind: Space, char_start: 6872, char_end: 6873, byte_start: 6872, byte_end: 6873, column_start: 14, column_end: 15, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6873, char_end: 6878, byte_start: 6873, byte_end: 6878, column_start: 15, column_end: 20, line_start: 193, line_end: 193 }: avoid
Token { kind: Space, char_start: 6878, char_end: 6879, byte_start: 6878, byte_end: 6879, column_start: 20, column_end: 21, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6879, char_end: 6883, byte_start: 6879, byte_end: 6883, column_start: 21, column_end: 25, line_start: 193, line_end: 193 }: ugly
Token { kind: Space, char_start: 6883, char_end: 6884, byte_start: 6883, byte_end: 6884, column_start: 25, column_end: 26, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6884, char_end: 6892, byte_start: 6884, byte_end: 6892, column_start: 26, column_end: 34, line_start: 193, line_end: 193 }: wrapping
Token { kind: Space, char_start: 6892, char_end: 6893, byte_start: 6892, byte_end: 6893, column_start: 34, column_end: 35, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6893, char_end: 6897, byte_start: 6893, byte_end: 6897, column_start: 35, column_end: 39, line_start: 193, line_end: 193 }: that
Token { kind: Space, char_start: 6897, char_end: 6898, byte_start: 6897, byte_end: 6898, column_start: 39, column_end: 40, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6898, char_end: 6903, byte_start: 6898, byte_end: 6903, column_start: 40, column_end: 45, line_start: 193, line_end: 193 }: makes
Token { kind: Space, char_start: 6903, char_end: 6904, byte_start: 6903, byte_end: 6904, column_start: 45, column_end: 46, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6904, char_end: 6907, byte_start: 6904, byte_end: 6907, column_start: 46, column_end: 49, line_start: 193, line_end: 193 }: the
Token { kind: Space, char_start: 6907, char_end: 6908, byte_start: 6907, byte_end: 6908, column_start: 49, column_end: 50, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6908, char_end: 6915, byte_start: 6908, byte_end: 6915, column_start: 50, column_end: 57, line_start: 193, line_end: 193 }: results
Token { kind: Space, char_start: 6915, char_end: 6916, byte_start: 6915, byte_end: 6916, column_start: 57, column_end: 58, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6916, char_end: 6920, byte_start: 6916, byte_end: 6920, column_start: 58, column_end: 62, line_start: 193, line_end: 193 }: list
Token { kind: Space, char_start: 6920, char_end: 6921, byte_start: 6920, byte_end: 6921, column_start: 62, column_end: 63, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6921, char_end: 6925, byte_start: 6921, byte_end: 6925, column_start: 63, column_end: 67, line_start: 193, line_end: 193 }: hard
Token { kind: Space, char_start: 6925, char_end: 6926, byte_start: 6925, byte_end: 6926, column_start: 67, column_end: 68, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6926, char_end: 6928, byte_start: 6926, byte_end: 6928, column_start: 68, column_end: 70, line_start: 193, line_end: 193 }: to
Token { kind: Space, char_start: 6928, char_end: 6929, byte_start: 6928, byte_end: 6929, column_start: 70, column_end: 71, line_start: 193, line_end: 193 }: " "
Token { kind: Text, char_start: 6929, char_end: 6934, byte_start: 6929, byte_end: 6934, column_start: 71, column_end: 76, line_start: 193, line_end: 193 }: read,
Token { kind: Newline, char_start: 6934, char_end: 6935, byte_start: 6934, byte_end: 6935, column_start: 76, column_end: 1, line_start: 193, line_end: 194 }: "\n"
Token { kind: Text, char_start: 6935, char_end: 6938, byte_start: 6935, byte_end: 6938, column_start: 1, column_end: 4, line_start: 194, line_end: 194 }: and
Token { kind: Space, char_start: 6938, char_end: 6939, byte_start: 6938, byte_end: 6939, column_start: 4, column_end: 5, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6939, char_end: 6946, byte_start: 6939, byte_end: 6946, column_start: 5, column_end: 12, line_start: 194, line_end: 194 }: because
Token { kind: Space, char_start: 6946, char_end: 6947, byte_start: 6946, byte_end: 6947, column_start: 12, column_end: 13, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6947, char_end: 6949, byte_start: 6947, byte_end: 6949, column_start: 13, column_end: 15, line_start: 194, line_end: 194 }: in
Token { kind: Space, char_start: 6949, char_end: 6950, byte_start: 6949, byte_end: 6950, column_start: 15, column_end: 16, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6950, char_end: 6956, byte_start: 6950, byte_end: 6956, column_start: 16, column_end: 22, line_start: 194, line_end: 194 }: search
Token { kind: Space, char_start: 6956, char_end: 6957, byte_start: 6956, byte_end: 6957, column_start: 22, column_end: 23, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6957, char_end: 6965, byte_start: 6957, byte_end: 6965, column_start: 23, column_end: 31, line_start: 194, line_end: 194 }: results,
Token { kind: Space, char_start: 6965, char_end: 6966, byte_start: 6965, byte_end: 6966, column_start: 31, column_end: 32, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6966, char_end: 6969, byte_start: 6966, byte_end: 6969, column_start: 32, column_end: 35, line_start: 194, line_end: 194 }: the
Token { kind: Space, char_start: 6969, char_end: 6970, byte_start: 6969, byte_end: 6970, column_start: 35, column_end: 36, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6970, char_end: 6974, byte_start: 6970, byte_end: 6974, column_start: 36, column_end: 40, line_start: 194, line_end: 194 }: most
Token { kind: Space, char_start: 6974, char_end: 6975, byte_start: 6974, byte_end: 6975, column_start: 40, column_end: 41, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6975, char_end: 6983, byte_start: 6975, byte_end: 6983, column_start: 41, column_end: 49, line_start: 194, line_end: 194 }: relevant
Token { kind: Space, char_start: 6983, char_end: 6984, byte_start: 6983, byte_end: 6984, column_start: 49, column_end: 50, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6984, char_end: 6995, byte_start: 6984, byte_end: 6995, column_start: 50, column_end: 61, line_start: 194, line_end: 194 }: information
Token { kind: Space, char_start: 6995, char_end: 6996, byte_start: 6995, byte_end: 6996, column_start: 61, column_end: 62, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6996, char_end: 6998, byte_start: 6996, byte_end: 6998, column_start: 62, column_end: 64, line_start: 194, line_end: 194 }: is
Token { kind: Space, char_start: 6998, char_end: 6999, byte_start: 6998, byte_end: 6999, column_start: 64, column_end: 65, line_start: 194, line_end: 194 }: " "
Token { kind: Text, char_start: 6999, char_end: 7002, byte_start: 6999, byte_end: 7002, column_start: 65, column_end: 68, line_start: 194, line_end: 194 }: the
Token { kind: Newline, char_start: 7002, char_end: 7003, byte_start: 7002, byte_end: 7003, column_start: 68, column_end: 1, line_start: 194, line_end: 195 }: "\n"
Token { kind: Text, char_start: 7003, char_end: 7012, byte_start: 7003, byte_end: 7012, column_start: 1, column_end: 10, line_start: 195, line_end: 195 }: filename,
Token { kind: Space, char_start: 7012, char_end: 7013, byte_start: 7012, byte_end: 7013, column_start: 10, column_end: 11, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7013, char_end: 7018, byte_start: 7013, byte_end: 7018, column_start: 11, column_end: 16, line_start: 195, line_end: 195 }: which
Token { kind: Space, char_start: 7018, char_end: 7019, byte_start: 7018, byte_end: 7019, column_start: 16, column_end: 17, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7019, char_end: 7021, byte_start: 7019, byte_end: 7021, column_start: 17, column_end: 19, line_start: 195, line_end: 195 }: is
Token { kind: Space, char_start: 7021, char_end: 7022, byte_start: 7021, byte_end: 7022, column_start: 19, column_end: 20, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7022, char_end: 7024, byte_start: 7022, byte_end: 7024, column_start: 20, column_end: 22, line_start: 195, line_end: 195 }: on
Token { kind: Space, char_start: 7024, char_end: 7025, byte_start: 7024, byte_end: 7025, column_start: 22, column_end: 23, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7025, char_end: 7028, byte_start: 7025, byte_end: 7028, column_start: 23, column_end: 26, line_start: 195, line_end: 195 }: the
Token { kind: Space, char_start: 7028, char_end: 7029, byte_start: 7028, byte_end: 7029, column_start: 26, column_end: 27, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7029, char_end: 7033, byte_start: 7029, byte_end: 7033, column_start: 27, column_end: 31, line_start: 195, line_end: 195 }: left
Token { kind: Space, char_start: 7033, char_end: 7034, byte_start: 7033, byte_end: 7034, column_start: 31, column_end: 32, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7034, char_end: 7037, byte_start: 7034, byte_end: 7037, column_start: 32, column_end: 35, line_start: 195, line_end: 195 }: and
Token { kind: Space, char_start: 7037, char_end: 7038, byte_start: 7037, byte_end: 7038, column_start: 35, column_end: 36, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7038, char_end: 7040, byte_start: 7038, byte_end: 7040, column_start: 36, column_end: 38, line_start: 195, line_end: 195 }: is
Token { kind: Space, char_start: 7040, char_end: 7041, byte_start: 7040, byte_end: 7041, column_start: 38, column_end: 39, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7041, char_end: 7048, byte_start: 7041, byte_end: 7048, column_start: 39, column_end: 46, line_start: 195, line_end: 195 }: usually
Token { kind: Space, char_start: 7048, char_end: 7049, byte_start: 7048, byte_end: 7049, column_start: 46, column_end: 47, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7049, char_end: 7056, byte_start: 7049, byte_end: 7056, column_start: 47, column_end: 54, line_start: 195, line_end: 195 }: visible
Token { kind: Space, char_start: 7056, char_end: 7057, byte_start: 7056, byte_end: 7057, column_start: 54, column_end: 55, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7057, char_end: 7061, byte_start: 7057, byte_end: 7061, column_start: 55, column_end: 59, line_start: 195, line_end: 195 }: even
Token { kind: Space, char_start: 7061, char_end: 7062, byte_start: 7061, byte_end: 7062, column_start: 59, column_end: 60, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7062, char_end: 7069, byte_start: 7062, byte_end: 7069, column_start: 60, column_end: 67, line_start: 195, line_end: 195 }: without
Token { kind: Space, char_start: 7069, char_end: 7070, byte_start: 7069, byte_end: 7070, column_start: 67, column_end: 68, line_start: 195, line_end: 195 }: " "
Token { kind: Text, char_start: 7070, char_end: 7079, byte_start: 7070, byte_end: 7079, column_start: 68, column_end: 77, line_start: 195, line_end: 195 }: wrapping.
Token { kind: Newline, char_start: 7079, char_end: 7080, byte_start: 7079, byte_end: 7080, column_start: 77, column_end: 1, line_start: 195, line_end: 196 }: "\n"
Token { kind: Newline, char_start: 7080, char_end: 7081, byte_start: 7080, byte_end: 7081, column_start: 1, column_end: 1, line_start: 196, line_end: 197 }: "\n"
Token { kind: Space, char_start: 7081, char_end: 7145, byte_start: 7081, byte_end: 7145, column_start: 1, column_end: 65, line_start: 197, line_end: 197 }: "                                                                "
Token { kind: Star, char_start: 7145, char_end: 7146, byte_start: 7145, byte_end: 7146, column_start: 65, column_end: 66, line_start: 197, line_end: 197 }: *
Token { kind: Text, char_start: 7146, char_end: 7152, byte_start: 7146, byte_end: 7152, column_start: 66, column_end: 72, line_start: 197, line_end: 197 }: ferret
Token { kind: Hyphen, char_start: 7152, char_end: 7153, byte_start: 7152, byte_end: 7153, column_start: 72, column_end: 73, line_start: 197, line_end: 197 }: -
Token { kind: Text, char_start: 7153, char_end: 7159, byte_start: 7153, byte_end: 7159, column_start: 73, column_end: 79, line_start: 197, line_end: 197 }: number
Token { kind: Star, char_start: 7159, char_end: 7160, byte_start: 7159, byte_end: 7160, column_start: 79, column_end: 80, line_start: 197, line_end: 197 }: *
Token { kind: Newline, char_start: 7160, char_end: 7161, byte_start: 7160, byte_end: 7161, column_start: 80, column_end: 1, line_start: 197, line_end: 198 }: "\n"
Token { kind: Heading(Heading2), char_start: 7161, char_end: 7163, byte_start: 7161, byte_end: 7163, column_start: 1, column_end: 3, line_start: 198, line_end: 198 }: ##
Token { kind: Space, char_start: 7163, char_end: 7164, byte_start: 7163, byte_end: 7164, column_start: 3, column_end: 4, line_start: 198, line_end: 198 }: " "
Token { kind: Text, char_start: 7164, char_end: 7172, byte_start: 7164, byte_end: 7172, column_start: 4, column_end: 12, line_start: 198, line_end: 198 }: 'number'
Token { kind: Newline, char_start: 7172, char_end: 7173, byte_start: 7172, byte_end: 7173, column_start: 12, column_end: 1, line_start: 198, line_end: 199 }: "\n"
Token { kind: Newline, char_start: 7173, char_end: 7174, byte_start: 7173, byte_end: 7174, column_start: 1, column_end: 1, line_start: 199, line_end: 200 }: "\n"
Token { kind: Text, char_start: 7174, char_end: 7180, byte_start: 7174, byte_end: 7180, column_start: 1, column_end: 7, line_start: 200, line_end: 200 }: Turned
Token { kind: Space, char_start: 7180, char_end: 7181, byte_start: 7180, byte_end: 7181, column_start: 7, column_end: 8, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7181, char_end: 7183, byte_start: 7181, byte_end: 7183, column_start: 8, column_end: 10, line_start: 200, line_end: 200 }: on
Token { kind: Space, char_start: 7183, char_end: 7184, byte_start: 7183, byte_end: 7184, column_start: 10, column_end: 11, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7184, char_end: 7186, byte_start: 7184, byte_end: 7186, column_start: 11, column_end: 13, line_start: 200, line_end: 200 }: to
Token { kind: Space, char_start: 7186, char_end: 7187, byte_start: 7186, byte_end: 7187, column_start: 13, column_end: 14, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7187, char_end: 7191, byte_start: 7187, byte_end: 7191, column_start: 14, column_end: 18, line_start: 200, line_end: 200 }: give
Token { kind: Space, char_start: 7191, char_end: 7192, byte_start: 7191, byte_end: 7192, column_start: 18, column_end: 19, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7192, char_end: 7193, byte_start: 7192, byte_end: 7193, column_start: 19, column_end: 20, line_start: 200, line_end: 200 }: a
Token { kind: Space, char_start: 7193, char_end: 7194, byte_start: 7193, byte_end: 7194, column_start: 20, column_end: 21, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7194, char_end: 7199, byte_start: 7194, byte_end: 7199, column_start: 21, column_end: 26, line_start: 200, line_end: 200 }: sense
Token { kind: Space, char_start: 7199, char_end: 7200, byte_start: 7199, byte_end: 7200, column_start: 26, column_end: 27, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7200, char_end: 7202, byte_start: 7200, byte_end: 7202, column_start: 27, column_end: 29, line_start: 200, line_end: 200 }: of
Token { kind: Space, char_start: 7202, char_end: 7203, byte_start: 7202, byte_end: 7203, column_start: 29, column_end: 30, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7203, char_end: 7211, byte_start: 7203, byte_end: 7211, column_start: 30, column_end: 38, line_start: 200, line_end: 200 }: absolute
Token { kind: Space, char_start: 7211, char_end: 7212, byte_start: 7211, byte_end: 7212, column_start: 38, column_end: 39, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7212, char_end: 7220, byte_start: 7212, byte_end: 7220, column_start: 39, column_end: 47, line_start: 200, line_end: 200 }: progress
Token { kind: Space, char_start: 7220, char_end: 7221, byte_start: 7220, byte_end: 7221, column_start: 47, column_end: 48, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7221, char_end: 7228, byte_start: 7221, byte_end: 7228, column_start: 48, column_end: 55, line_start: 200, line_end: 200 }: through
Token { kind: Space, char_start: 7228, char_end: 7229, byte_start: 7228, byte_end: 7229, column_start: 55, column_end: 56, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7229, char_end: 7232, byte_start: 7229, byte_end: 7232, column_start: 56, column_end: 59, line_start: 200, line_end: 200 }: the
Token { kind: Space, char_start: 7232, char_end: 7233, byte_start: 7232, byte_end: 7233, column_start: 59, column_end: 60, line_start: 200, line_end: 200 }: " "
Token { kind: Text, char_start: 7233, char_end: 7241, byte_start: 7233, byte_end: 7241, column_start: 60, column_end: 68, line_start: 200, line_end: 200 }: results.
Token { kind: Newline, char_start: 7241, char_end: 7242, byte_start: 7241, byte_end: 7242, column_start: 68, column_end: 1, line_start: 200, line_end: 201 }: "\n"
Token { kind: Newline, char_start: 7242, char_end: 7243, byte_start: 7242, byte_end: 7243, column_start: 1, column_end: 1, line_start: 201, line_end: 202 }: "\n"
Token { kind: Space, char_start: 7243, char_end: 7304, byte_start: 7243, byte_end: 7304, column_start: 1, column_end: 62, line_start: 202, line_end: 202 }: "                                                             "
Token { kind: Star, char_start: 7304, char_end: 7305, byte_start: 7304, byte_end: 7305, column_start: 62, column_end: 63, line_start: 202, line_end: 202 }: *
Token { kind: Text, char_start: 7305, char_end: 7311, byte_start: 7305, byte_end: 7311, column_start: 63, column_end: 69, line_start: 202, line_end: 202 }: ferret
Token { kind: Hyphen, char_start: 7311, char_end: 7312, byte_start: 7311, byte_end: 7312, column_start: 69, column_end: 70, line_start: 202, line_end: 202 }: -
Token { kind: Text, char_start: 7312, char_end: 7321, byte_start: 7312, byte_end: 7321, column_start: 70, column_end: 79, line_start: 202, line_end: 202 }: scrolloff
Token { kind: Star, char_start: 7321, char_end: 7322, byte_start: 7321, byte_end: 7322, column_start: 79, column_end: 80, line_start: 202, line_end: 202 }: *
Token { kind: Newline, char_start: 7322, char_end: 7323, byte_start: 7322, byte_end: 7323, column_start: 80, column_end: 1, line_start: 202, line_end: 203 }: "\n"
Token { kind: Heading(Heading2), char_start: 7323, char_end: 7325, byte_start: 7323, byte_end: 7325, column_start: 1, column_end: 3, line_start: 203, line_end: 203 }: ##
Token { kind: Space, char_start: 7325, char_end: 7326, byte_start: 7325, byte_end: 7326, column_start: 3, column_end: 4, line_start: 203, line_end: 203 }: " "
Token { kind: Text, char_start: 7326, char_end: 7337, byte_start: 7326, byte_end: 7337, column_start: 4, column_end: 15, line_start: 203, line_end: 203 }: 'scrolloff'
Token { kind: Newline, char_start: 7337, char_end: 7338, byte_start: 7337, byte_end: 7338, column_start: 15, column_end: 1, line_start: 203, line_end: 204 }: "\n"
Token { kind: Newline, char_start: 7338, char_end: 7339, byte_start: 7338, byte_end: 7339, column_start: 1, column_end: 1, line_start: 204, line_end: 205 }: "\n"
Token { kind: Text, char_start: 7339, char_end: 7342, byte_start: 7339, byte_end: 7342, column_start: 1, column_end: 4, line_start: 205, line_end: 205 }: Set
Token { kind: Space, char_start: 7342, char_end: 7343, byte_start: 7342, byte_end: 7343, column_start: 4, column_end: 5, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7343, char_end: 7345, byte_start: 7343, byte_end: 7345, column_start: 5, column_end: 7, line_start: 205, line_end: 205 }: to
Token { kind: Space, char_start: 7345, char_end: 7346, byte_start: 7345, byte_end: 7346, column_start: 7, column_end: 8, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7346, char_end: 7347, byte_start: 7346, byte_end: 7347, column_start: 8, column_end: 9, line_start: 205, line_end: 205 }: 0
Token { kind: Space, char_start: 7347, char_end: 7348, byte_start: 7347, byte_end: 7348, column_start: 9, column_end: 10, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7348, char_end: 7355, byte_start: 7348, byte_end: 7355, column_start: 10, column_end: 17, line_start: 205, line_end: 205 }: because
Token { kind: Space, char_start: 7355, char_end: 7356, byte_start: 7355, byte_end: 7356, column_start: 17, column_end: 18, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7356, char_end: 7359, byte_start: 7356, byte_end: 7359, column_start: 18, column_end: 21, line_start: 205, line_end: 205 }: the
Token { kind: Space, char_start: 7359, char_end: 7360, byte_start: 7359, byte_end: 7360, column_start: 21, column_end: 22, line_start: 205, line_end: 205 }: " "
Token { kind: Bar, char_start: 7360, char_end: 7361, byte_start: 7360, byte_end: 7361, column_start: 22, column_end: 23, line_start: 205, line_end: 205 }: |
Token { kind: Text, char_start: 7361, char_end: 7369, byte_start: 7361, byte_end: 7369, column_start: 23, column_end: 31, line_start: 205, line_end: 205 }: quickfix
Token { kind: Bar, char_start: 7369, char_end: 7370, byte_start: 7369, byte_end: 7370, column_start: 31, column_end: 32, line_start: 205, line_end: 205 }: |
Token { kind: Space, char_start: 7370, char_end: 7371, byte_start: 7370, byte_end: 7371, column_start: 32, column_end: 33, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7371, char_end: 7378, byte_start: 7371, byte_end: 7378, column_start: 33, column_end: 40, line_start: 205, line_end: 205 }: listing
Token { kind: Space, char_start: 7378, char_end: 7379, byte_start: 7378, byte_end: 7379, column_start: 40, column_end: 41, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7379, char_end: 7381, byte_start: 7379, byte_end: 7381, column_start: 41, column_end: 43, line_start: 205, line_end: 205 }: is
Token { kind: Space, char_start: 7381, char_end: 7382, byte_start: 7381, byte_end: 7382, column_start: 43, column_end: 44, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7382, char_end: 7389, byte_start: 7382, byte_end: 7389, column_start: 44, column_end: 51, line_start: 205, line_end: 205 }: usually
Token { kind: Space, char_start: 7389, char_end: 7390, byte_start: 7389, byte_end: 7390, column_start: 51, column_end: 52, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7390, char_end: 7395, byte_start: 7390, byte_end: 7395, column_start: 52, column_end: 57, line_start: 205, line_end: 205 }: small
Token { kind: Space, char_start: 7395, char_end: 7396, byte_start: 7395, byte_end: 7396, column_start: 57, column_end: 58, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7396, char_end: 7398, byte_start: 7396, byte_end: 7398, column_start: 58, column_end: 60, line_start: 205, line_end: 205 }: by
Token { kind: Space, char_start: 7398, char_end: 7399, byte_start: 7398, byte_end: 7399, column_start: 60, column_end: 61, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7399, char_end: 7407, byte_start: 7399, byte_end: 7407, column_start: 61, column_end: 69, line_start: 205, line_end: 205 }: default,
Token { kind: Space, char_start: 7407, char_end: 7408, byte_start: 7407, byte_end: 7408, column_start: 69, column_end: 70, line_start: 205, line_end: 205 }: " "
Token { kind: Text, char_start: 7408, char_end: 7410, byte_start: 7408, byte_end: 7410, column_start: 70, column_end: 72, line_start: 205, line_end: 205 }: so
Token { kind: Newline, char_start: 7410, char_end: 7411, byte_start: 7410, byte_end: 7411, column_start: 72, column_end: 1, line_start: 205, line_end: 206 }: "\n"
Token { kind: Text, char_start: 7411, char_end: 7417, byte_start: 7411, byte_end: 7417, column_start: 1, column_end: 7, line_start: 206, line_end: 206 }: trying
Token { kind: Space, char_start: 7417, char_end: 7418, byte_start: 7417, byte_end: 7418, column_start: 7, column_end: 8, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7418, char_end: 7420, byte_start: 7418, byte_end: 7420, column_start: 8, column_end: 10, line_start: 206, line_end: 206 }: to
Token { kind: Space, char_start: 7420, char_end: 7421, byte_start: 7420, byte_end: 7421, column_start: 10, column_end: 11, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7421, char_end: 7425, byte_start: 7421, byte_end: 7425, column_start: 11, column_end: 15, line_start: 206, line_end: 206 }: keep
Token { kind: Space, char_start: 7425, char_end: 7426, byte_start: 7425, byte_end: 7426, column_start: 15, column_end: 16, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7426, char_end: 7429, byte_start: 7426, byte_end: 7429, column_start: 16, column_end: 19, line_start: 206, line_end: 206 }: the
Token { kind: Space, char_start: 7429, char_end: 7430, byte_start: 7429, byte_end: 7430, column_start: 19, column_end: 20, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7430, char_end: 7437, byte_start: 7430, byte_end: 7437, column_start: 20, column_end: 27, line_start: 206, line_end: 206 }: current
Token { kind: Space, char_start: 7437, char_end: 7438, byte_start: 7437, byte_end: 7438, column_start: 27, column_end: 28, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7438, char_end: 7442, byte_start: 7438, byte_end: 7442, column_start: 28, column_end: 32, line_start: 206, line_end: 206 }: line
Token { kind: Space, char_start: 7442, char_end: 7443, byte_start: 7442, byte_end: 7443, column_start: 32, column_end: 33, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7443, char_end: 7447, byte_start: 7443, byte_end: 7447, column_start: 33, column_end: 37, line_start: 206, line_end: 206 }: away
Token { kind: Space, char_start: 7447, char_end: 7448, byte_start: 7447, byte_end: 7448, column_start: 37, column_end: 38, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7448, char_end: 7452, byte_start: 7448, byte_end: 7452, column_start: 38, column_end: 42, line_start: 206, line_end: 206 }: from
Token { kind: Space, char_start: 7452, char_end: 7453, byte_start: 7452, byte_end: 7453, column_start: 42, column_end: 43, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7453, char_end: 7456, byte_start: 7453, byte_end: 7456, column_start: 43, column_end: 46, line_start: 206, line_end: 206 }: the
Token { kind: Space, char_start: 7456, char_end: 7457, byte_start: 7456, byte_end: 7457, column_start: 46, column_end: 47, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7457, char_end: 7461, byte_start: 7457, byte_end: 7461, column_start: 47, column_end: 51, line_start: 206, line_end: 206 }: edge
Token { kind: Space, char_start: 7461, char_end: 7462, byte_start: 7461, byte_end: 7462, column_start: 51, column_end: 52, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7462, char_end: 7464, byte_start: 7462, byte_end: 7464, column_start: 52, column_end: 54, line_start: 206, line_end: 206 }: of
Token { kind: Space, char_start: 7464, char_end: 7465, byte_start: 7464, byte_end: 7465, column_start: 54, column_end: 55, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7465, char_end: 7468, byte_start: 7465, byte_end: 7468, column_start: 55, column_end: 58, line_start: 206, line_end: 206 }: the
Token { kind: Space, char_start: 7468, char_end: 7469, byte_start: 7468, byte_end: 7469, column_start: 58, column_end: 59, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7469, char_end: 7478, byte_start: 7469, byte_end: 7478, column_start: 59, column_end: 68, line_start: 206, line_end: 206 }: viewpoint
Token { kind: Space, char_start: 7478, char_end: 7479, byte_start: 7478, byte_end: 7479, column_start: 68, column_end: 69, line_start: 206, line_end: 206 }: " "
Token { kind: Text, char_start: 7479, char_end: 7481, byte_start: 7479, byte_end: 7481, column_start: 69, column_end: 71, line_start: 206, line_end: 206 }: is
Token { kind: Newline, char_start: 7481, char_end: 7482, byte_start: 7481, byte_end: 7482, column_start: 71, column_end: 1, line_start: 206, line_end: 207 }: "\n"
Token { kind: Text, char_start: 7482, char_end: 7489, byte_start: 7482, byte_end: 7489, column_start: 1, column_end: 8, line_start: 207, line_end: 207 }: futile;
Token { kind: Space, char_start: 7489, char_end: 7490, byte_start: 7489, byte_end: 7490, column_start: 8, column_end: 9, line_start: 207, line_end: 207 }: " "
Token { kind: Text, char_start: 7490, char_end: 7492, byte_start: 7490, byte_end: 7492, column_start: 9, column_end: 11, line_start: 207, line_end: 207 }: by
Token { kind: Space, char_start: 7492, char_end: 7493, byte_start: 7492, byte_end: 7493, column_start: 11, column_end: 12, line_start: 207, line_end: 207 }: " "
Token { kind: Text, char_start: 7493, char_end: 7503, byte_start: 7493, byte_end: 7503, column_start: 12, column_end: 22, line_start: 207, line_end: 207 }: definition
Token { kind: Space, char_start: 7503, char_end: 7504, byte_start: 7503, byte_end: 7504, column_start: 22, column_end: 23, line_start: 207, line_end: 207 }: " "
Token { kind: Text, char_start: 7504, char_end: 7506, byte_start: 7504, byte_end: 7506, column_start: 23, column_end: 25, line_start: 207, line_end: 207 }: it
Token { kind: Space, char_start: 7506, char_end: 7507, byte_start: 7506, byte_end: 7507, column_start: 25, column_end: 26, line_start: 207, line_end: 207 }: " "
Token { kind: Text, char_start: 7507, char_end: 7509, byte_start: 7507, byte_end: 7509, column_start: 26, column_end: 28, line_start: 207, line_end: 207 }: is
Token { kind: Space, char_start: 7509, char_end: 7510, byte_start: 7509, byte_end: 7510, column_start: 28, column_end: 29, line_start: 207, line_end: 207 }: " "
Token { kind: Text, char_start: 7510, char_end: 7517, byte_start: 7510, byte_end: 7517, column_start: 29, column_end: 36, line_start: 207, line_end: 207 }: usually
Token { kind: Space, char_start: 7517, char_end: 7518, byte_start: 7517, byte_end: 7518, column_start: 36, column_end: 37, line_start: 207, line_end: 207 }: " "
Token { kind: Text, char_start: 7518, char_end: 7522, byte_start: 7518, byte_end: 7522, column_start: 37, column_end: 41, line_start: 207, line_end: 207 }: near
Token { kind: Space, char_start: 7522, char_end: 7523, byte_start: 7522, byte_end: 7523, column_start: 41, column_end: 42, line_start: 207, line_end: 207 }: " "
Token { kind: Text, char_start: 7523, char_end: 7526, byte_start: 7523, byte_end: 7526, column_start: 42, column_end: 45, line_start: 207, line_end: 207 }: the
Token { kind: Space, char_start: 7526, char_end: 7527, byte_start: 7526, byte_end: 7527, column_start: 45, column_end: 46, line_start: 207, line_end: 207 }: " "
Token { kind: Text, char_start: 7527, char_end: 7532, byte_start: 7527, byte_end: 7532, column_start: 46, column_end: 51, line_start: 207, line_end: 207 }: edge.
Token { kind: Newline, char_start: 7532, char_end: 7533, byte_start: 7532, byte_end: 7533, column_start: 51, column_end: 1, line_start: 207, line_end: 208 }: "\n"
Token { kind: Newline, char_start: 7533, char_end: 7534, byte_start: 7533, byte_end: 7534, column_start: 1, column_end: 1, line_start: 208, line_end: 209 }: "\n"
Token { kind: Space, char_start: 7534, char_end: 7592, byte_start: 7534, byte_end: 7592, column_start: 1, column_end: 59, line_start: 209, line_end: 209 }: "                                                          "
Token { kind: Star, char_start: 7592, char_end: 7593, byte_start: 7592, byte_end: 7593, column_start: 59, column_end: 60, line_start: 209, line_end: 209 }: *
Token { kind: Text, char_start: 7593, char_end: 7599, byte_start: 7593, byte_end: 7599, column_start: 60, column_end: 66, line_start: 209, line_end: 209 }: ferret
Token { kind: Hyphen, char_start: 7599, char_end: 7600, byte_start: 7599, byte_end: 7600, column_start: 66, column_end: 67, line_start: 209, line_end: 209 }: -
Token { kind: Text, char_start: 7600, char_end: 7612, byte_start: 7600, byte_end: 7612, column_start: 67, column_end: 79, line_start: 209, line_end: 209 }: nocursorline
Token { kind: Star, char_start: 7612, char_end: 7613, byte_start: 7612, byte_end: 7613, column_start: 79, column_end: 80, line_start: 209, line_end: 209 }: *
Token { kind: Newline, char_start: 7613, char_end: 7614, byte_start: 7613, byte_end: 7614, column_start: 80, column_end: 1, line_start: 209, line_end: 210 }: "\n"
Token { kind: Heading(Heading2), char_start: 7614, char_end: 7616, byte_start: 7614, byte_end: 7616, column_start: 1, column_end: 3, line_start: 210, line_end: 210 }: ##
Token { kind: Space, char_start: 7616, char_end: 7617, byte_start: 7616, byte_end: 7617, column_start: 3, column_end: 4, line_start: 210, line_end: 210 }: " "
Token { kind: Text, char_start: 7617, char_end: 7631, byte_start: 7617, byte_end: 7631, column_start: 4, column_end: 18, line_start: 210, line_end: 210 }: 'nocursorline'
Token { kind: Newline, char_start: 7631, char_end: 7632, byte_start: 7631, byte_end: 7632, column_start: 18, column_end: 1, line_start: 210, line_end: 211 }: "\n"
Token { kind: Newline, char_start: 7632, char_end: 7633, byte_start: 7632, byte_end: 7633, column_start: 1, column_end: 1, line_start: 211, line_end: 212 }: "\n"
Token { kind: Text, char_start: 7633, char_end: 7639, byte_start: 7633, byte_end: 7639, column_start: 1, column_end: 7, line_start: 212, line_end: 212 }: Turned
Token { kind: Space, char_start: 7639, char_end: 7640, byte_start: 7639, byte_end: 7640, column_start: 7, column_end: 8, line_start: 212, line_end: 212 }: " "
Token { kind: Text, char_start: 7640, char_end: 7643, byte_start: 7640, byte_end: 7643, column_start: 8, column_end: 11, line_start: 212, line_end: 212 }: off
Token { kind: Space, char_start: 7643, char_end: 7644, byte_start: 7643, byte_end: 7644, column_start: 11, column_end: 12, line_start: 212, line_end: 212 }: " "
Token { kind: Text, char_start: 7644, char_end: 7646, byte_start: 7644, byte_end: 7646, column_start: 12, column_end: 14, line_start: 212, line_end: 212 }: to
Token { kind: Space, char_start: 7646, char_end: 7647, byte_start: 7646, byte_end: 7647, column_start: 14, column_end: 15, line_start: 212, line_end: 212 }: " "
Token { kind: Text, char_start: 7647, char_end: 7653, byte_start: 7647, byte_end: 7653, column_start: 15, column_end: 21, line_start: 212, line_end: 212 }: reduce
Token { kind: Space, char_start: 7653, char_end: 7654, byte_start: 7653, byte_end: 7654, column_start: 21, column_end: 22, line_start: 212, line_end: 212 }: " "
Token { kind: Text, char_start: 7654, char_end: 7660, byte_start: 7654, byte_end: 7660, column_start: 22, column_end: 28, line_start: 212, line_end: 212 }: visual
Token { kind: Space, char_start: 7660, char_end: 7661, byte_start: 7660, byte_end: 7661, column_start: 28, column_end: 29, line_start: 212, line_end: 212 }: " "
Token { kind: Text, char_start: 7661, char_end: 7669, byte_start: 7661, byte_end: 7669, column_start: 29, column_end: 37, line_start: 212, line_end: 212 }: clutter.
Token { kind: Newline, char_start: 7669, char_end: 7670, byte_start: 7669, byte_end: 7670, column_start: 37, column_end: 1, line_start: 212, line_end: 213 }: "\n"
Token { kind: Newline, char_start: 7670, char_end: 7671, byte_start: 7670, byte_end: 7671, column_start: 1, column_end: 1, line_start: 213, line_end: 214 }: "\n"
Token { kind: At, char_start: 7671, char_end: 7672, byte_start: 7671, byte_end: 7672, column_start: 1, column_end: 2, line_start: 214, line_end: 214 }: @
Token { kind: Text, char_start: 7672, char_end: 7678, byte_start: 7672, byte_end: 7678, column_start: 2, column_end: 8, line_start: 214, line_end: 214 }: dedent
Token { kind: Newline, char_start: 7678, char_end: 7679, byte_start: 7678, byte_end: 7679, column_start: 8, column_end: 1, line_start: 214, line_end: 215 }: "\n"
Token { kind: Newline, char_start: 7679, char_end: 7680, byte_start: 7679, byte_end: 7680, column_start: 1, column_end: 1, line_start: 215, line_end: 216 }: "\n"
Token { kind: Text, char_start: 7680, char_end: 7682, byte_start: 7680, byte_end: 7682, column_start: 1, column_end: 3, line_start: 216, line_end: 216 }: To
Token { kind: Space, char_start: 7682, char_end: 7683, byte_start: 7682, byte_end: 7683, column_start: 3, column_end: 4, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7683, char_end: 7690, byte_start: 7683, byte_end: 7690, column_start: 4, column_end: 11, line_start: 216, line_end: 216 }: prevent
Token { kind: Space, char_start: 7690, char_end: 7691, byte_start: 7690, byte_end: 7691, column_start: 11, column_end: 12, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7691, char_end: 7694, byte_start: 7691, byte_end: 7694, column_start: 12, column_end: 15, line_start: 216, line_end: 216 }: any
Token { kind: Space, char_start: 7694, char_end: 7695, byte_start: 7694, byte_end: 7695, column_start: 15, column_end: 16, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7695, char_end: 7697, byte_start: 7695, byte_end: 7697, column_start: 16, column_end: 18, line_start: 216, line_end: 216 }: of
Token { kind: Space, char_start: 7697, char_end: 7698, byte_start: 7697, byte_end: 7698, column_start: 18, column_end: 19, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7698, char_end: 7703, byte_start: 7698, byte_end: 7703, column_start: 19, column_end: 24, line_start: 216, line_end: 216 }: these
Token { kind: Space, char_start: 7703, char_end: 7704, byte_start: 7703, byte_end: 7704, column_start: 24, column_end: 25, line_start: 216, line_end: 216 }: " "
Token { kind: Bar, char_start: 7704, char_end: 7705, byte_start: 7704, byte_end: 7705, column_start: 25, column_end: 26, line_start: 216, line_end: 216 }: |
Token { kind: Text, char_start: 7705, char_end: 7713, byte_start: 7705, byte_end: 7713, column_start: 26, column_end: 34, line_start: 216, line_end: 216 }: quickfix
Token { kind: Bar, char_start: 7713, char_end: 7714, byte_start: 7713, byte_end: 7714, column_start: 34, column_end: 35, line_start: 216, line_end: 216 }: |
Token { kind: Hyphen, char_start: 7714, char_end: 7715, byte_start: 7714, byte_end: 7715, column_start: 35, column_end: 36, line_start: 216, line_end: 216 }: -
Token { kind: Text, char_start: 7715, char_end: 7723, byte_start: 7715, byte_end: 7723, column_start: 36, column_end: 44, line_start: 216, line_end: 216 }: specific
Token { kind: Space, char_start: 7723, char_end: 7724, byte_start: 7723, byte_end: 7724, column_start: 44, column_end: 45, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7724, char_end: 7733, byte_start: 7724, byte_end: 7733, column_start: 45, column_end: 54, line_start: 216, line_end: 216 }: overrides
Token { kind: Space, char_start: 7733, char_end: 7734, byte_start: 7733, byte_end: 7734, column_start: 54, column_end: 55, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7734, char_end: 7738, byte_start: 7734, byte_end: 7738, column_start: 55, column_end: 59, line_start: 216, line_end: 216 }: from
Token { kind: Space, char_start: 7738, char_end: 7739, byte_start: 7738, byte_end: 7739, column_start: 59, column_end: 60, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7739, char_end: 7744, byte_start: 7739, byte_end: 7744, column_start: 60, column_end: 65, line_start: 216, line_end: 216 }: being
Token { kind: Space, char_start: 7744, char_end: 7745, byte_start: 7744, byte_end: 7745, column_start: 65, column_end: 66, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7745, char_end: 7748, byte_start: 7745, byte_end: 7748, column_start: 66, column_end: 69, line_start: 216, line_end: 216 }: set
Token { kind: Space, char_start: 7748, char_end: 7749, byte_start: 7748, byte_end: 7749, column_start: 69, column_end: 70, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7749, char_end: 7752, byte_start: 7749, byte_end: 7752, column_start: 70, column_end: 73, line_start: 216, line_end: 216 }: up,
Token { kind: Space, char_start: 7752, char_end: 7753, byte_start: 7752, byte_end: 7753, column_start: 73, column_end: 74, line_start: 216, line_end: 216 }: " "
Token { kind: Text, char_start: 7753, char_end: 7756, byte_start: 7753, byte_end: 7756, column_start: 74, column_end: 77, line_start: 216, line_end: 216 }: you
Token { kind: Newline, char_start: 7756, char_end: 7757, byte_start: 7756, byte_end: 7757, column_start: 77, column_end: 1, line_start: 216, line_end: 217 }: "\n"
Token { kind: Text, char_start: 7757, char_end: 7760, byte_start: 7757, byte_end: 7760, column_start: 1, column_end: 4, line_start: 217, line_end: 217 }: can
Token { kind: Space, char_start: 7760, char_end: 7761, byte_start: 7760, byte_end: 7761, column_start: 4, column_end: 5, line_start: 217, line_end: 217 }: " "
Token { kind: Text, char_start: 7761, char_end: 7764, byte_start: 7761, byte_end: 7764, column_start: 5, column_end: 8, line_start: 217, line_end: 217 }: set
Token { kind: Space, char_start: 7764, char_end: 7765, byte_start: 7764, byte_end: 7765, column_start: 8, column_end: 9, line_start: 217, line_end: 217 }: " "
Token { kind: Bar, char_start: 7765, char_end: 7766, byte_start: 7765, byte_end: 7766, column_start: 9, column_end: 10, line_start: 217, line_end: 217 }: |
Token { kind: Text, char_start: 7766, char_end: 7783, byte_start: 7766, byte_end: 7783, column_start: 10, column_end: 27, line_start: 217, line_end: 217 }: g:FerretQFOptions
Token { kind: Bar, char_start: 7783, char_end: 7784, byte_start: 7783, byte_end: 7784, column_start: 27, column_end: 28, line_start: 217, line_end: 217 }: |
Token { kind: Space, char_start: 7784, char_end: 7785, byte_start: 7784, byte_end: 7785, column_start: 28, column_end: 29, line_start: 217, line_end: 217 }: " "
Token { kind: Text, char_start: 7785, char_end: 7787, byte_start: 7785, byte_end: 7787, column_start: 29, column_end: 31, line_start: 217, line_end: 217 }: to
Token { kind: Space, char_start: 7787, char_end: 7788, byte_start: 7787, byte_end: 7788, column_start: 31, column_end: 32, line_start: 217, line_end: 217 }: " "
Token { kind: Text, char_start: 7788, char_end: 7789, byte_start: 7788, byte_end: 7789, column_start: 32, column_end: 33, line_start: 217, line_end: 217 }: 0
Token { kind: Space, char_start: 7789, char_end: 7790, byte_start: 7789, byte_end: 7790, column_start: 33, column_end: 34, line_start: 217, line_end: 217 }: " "
Token { kind: Text, char_start: 7790, char_end: 7792, byte_start: 7790, byte_end: 7792, column_start: 34, column_end: 36, line_start: 217, line_end: 217 }: in
Token { kind: Space, char_start: 7792, char_end: 7793, byte_start: 7792, byte_end: 7793, column_start: 36, column_end: 37, line_start: 217, line_end: 217 }: " "
Token { kind: Text, char_start: 7793, char_end: 7797, byte_start: 7793, byte_end: 7797, column_start: 37, column_end: 41, line_start: 217, line_end: 217 }: your
Token { kind: Space, char_start: 7797, char_end: 7798, byte_start: 7797, byte_end: 7798, column_start: 41, column_end: 42, line_start: 217, line_end: 217 }: " "
Token { kind: Bar, char_start: 7798, char_end: 7799, byte_start: 7798, byte_end: 7799, column_start: 42, column_end: 43, line_start: 217, line_end: 217 }: |
Token { kind: Text, char_start: 7799, char_end: 7805, byte_start: 7799, byte_end: 7805, column_start: 43, column_end: 49, line_start: 217, line_end: 217 }: .vimrc
Token { kind: Bar, char_start: 7805, char_end: 7806, byte_start: 7805, byte_end: 7806, column_start: 49, column_end: 50, line_start: 217, line_end: 217 }: |
Token { kind: Text, char_start: 7806, char_end: 7807, byte_start: 7806, byte_end: 7807, column_start: 50, column_end: 51, line_start: 217, line_end: 217 }: :
Token { kind: Newline, char_start: 7807, char_end: 7808, byte_start: 7807, byte_end: 7808, column_start: 51, column_end: 1, line_start: 217, line_end: 218 }: "\n"
Token { kind: Newline, char_start: 7808, char_end: 7809, byte_start: 7808, byte_end: 7809, column_start: 1, column_end: 1, line_start: 218, line_end: 219 }: "\n"
Token { kind: CodeFence, char_start: 7809, char_end: 7812, byte_start: 7809, byte_end: 7812, column_start: 1, column_end: 4, line_start: 219, line_end: 219 }: ```
Token { kind: Newline, char_start: 7812, char_end: 7813, byte_start: 7812, byte_end: 7813, column_start: 4, column_end: 1, line_start: 219, line_end: 220 }: "\n"
Token { kind: Text, char_start: 7813, char_end: 7816, byte_start: 7813, byte_end: 7816, column_start: 1, column_end: 4, line_start: 220, line_end: 220 }: let
Token { kind: Space, char_start: 7816, char_end: 7817, byte_start: 7816, byte_end: 7817, column_start: 4, column_end: 5, line_start: 220, line_end: 220 }: " "
Token { kind: Text, char_start: 7817, char_end: 7836, byte_start: 7817, byte_end: 7836, column_start: 5, column_end: 24, line_start: 220, line_end: 220 }: g:FerretQFOptions=0
Token { kind: Newline, char_start: 7836, char_end: 7837, byte_start: 7836, byte_end: 7837, column_start: 24, column_end: 1, line_start: 220, line_end: 221 }: "\n"
Token { kind: CodeFence, char_start: 7837, char_end: 7840, byte_start: 7837, byte_end: 7840, column_start: 1, column_end: 4, line_start: 221, line_end: 221 }: ```
Token { kind: Newline, char_start: 7840, char_end: 7841, byte_start: 7840, byte_end: 7841, column_start: 4, column_end: 1, line_start: 221, line_end: 222 }: "\n"
Token { kind: Newline, char_start: 7841, char_end: 7842, byte_start: 7841, byte_end: 7842, column_start: 1, column_end: 1, line_start: 222, line_end: 223 }: "\n"
Token { kind: Heading(Heading1), char_start: 7842, char_end: 7843, byte_start: 7842, byte_end: 7843, column_start: 1, column_end: 2, line_start: 223, line_end: 223 }: #
Token { kind: Space, char_start: 7843, char_end: 7844, byte_start: 7843, byte_end: 7844, column_start: 2, column_end: 3, line_start: 223, line_end: 223 }: " "
Token { kind: Text, char_start: 7844, char_end: 7859, byte_start: 7844, byte_end: 7859, column_start: 3, column_end: 18, line_start: 223, line_end: 223 }: Troubleshooting
Token { kind: Newline, char_start: 7859, char_end: 7860, byte_start: 7859, byte_end: 7860, column_start: 18, column_end: 1, line_start: 223, line_end: 224 }: "\n"
Token { kind: Newline, char_start: 7860, char_end: 7861, byte_start: 7860, byte_end: 7861, column_start: 1, column_end: 1, line_start: 224, line_end: 225 }: "\n"
Token { kind: Space, char_start: 7861, char_end: 7925, byte_start: 7861, byte_end: 7925, column_start: 1, column_end: 65, line_start: 225, line_end: 225 }: "                                                                "
Token { kind: Star, char_start: 7925, char_end: 7926, byte_start: 7925, byte_end: 7926, column_start: 65, column_end: 66, line_start: 225, line_end: 225 }: *
Token { kind: Text, char_start: 7926, char_end: 7932, byte_start: 7926, byte_end: 7932, column_start: 66, column_end: 72, line_start: 225, line_end: 225 }: ferret
Token { kind: Hyphen, char_start: 7932, char_end: 7933, byte_start: 7932, byte_end: 7933, column_start: 72, column_end: 73, line_start: 225, line_end: 225 }: -
Token { kind: Text, char_start: 7933, char_end: 7939, byte_start: 7933, byte_end: 7939, column_start: 73, column_end: 79, line_start: 225, line_end: 225 }: quotes
Token { kind: Star, char_start: 7939, char_end: 7940, byte_start: 7939, byte_end: 7940, column_start: 79, column_end: 80, line_start: 225, line_end: 225 }: *
Token { kind: Newline, char_start: 7940, char_end: 7941, byte_start: 7940, byte_end: 7941, column_start: 80, column_end: 1, line_start: 225, line_end: 226 }: "\n"
Token { kind: Heading(Heading2), char_start: 7941, char_end: 7943, byte_start: 7941, byte_end: 7943, column_start: 1, column_end: 3, line_start: 226, line_end: 226 }: ##
Token { kind: Space, char_start: 7943, char_end: 7944, byte_start: 7943, byte_end: 7944, column_start: 3, column_end: 4, line_start: 226, line_end: 226 }: " "
Token { kind: Text, char_start: 7944, char_end: 7950, byte_start: 7944, byte_end: 7950, column_start: 4, column_end: 10, line_start: 226, line_end: 226 }: Ferret
Token { kind: Space, char_start: 7950, char_end: 7951, byte_start: 7950, byte_end: 7951, column_start: 10, column_end: 11, line_start: 226, line_end: 226 }: " "
Token { kind: Text, char_start: 7951, char_end: 7956, byte_start: 7951, byte_end: 7956, column_start: 11, column_end: 16, line_start: 226, line_end: 226 }: fails
Token { kind: Space, char_start: 7956, char_end: 7957, byte_start: 7956, byte_end: 7957, column_start: 16, column_end: 17, line_start: 226, line_end: 226 }: " "
Token { kind: Text, char_start: 7957, char_end: 7959, byte_start: 7957, byte_end: 7959, column_start: 17, column_end: 19, line_start: 226, line_end: 226 }: to
Token { kind: Space, char_start: 7959, char_end: 7960, byte_start: 7959, byte_end: 7960, column_start: 19, column_end: 20, line_start: 226, line_end: 226 }: " "
Token { kind: Text, char_start: 7960, char_end: 7964, byte_start: 7960, byte_end: 7964, column_start: 20, column_end: 24, line_start: 226, line_end: 226 }: find
Token { kind: Space, char_start: 7964, char_end: 7965, byte_start: 7964, byte_end: 7965, column_start: 24, column_end: 25, line_start: 226, line_end: 226 }: " "
Token { kind: Text, char_start: 7965, char_end: 7973, byte_start: 7965, byte_end: 7973, column_start: 25, column_end: 33, line_start: 226, line_end: 226 }: patterns
Token { kind: Space, char_start: 7973, char_end: 7974, byte_start: 7973, byte_end: 7974, column_start: 33, column_end: 34, line_start: 226, line_end: 226 }: " "
Token { kind: Text, char_start: 7974, char_end: 7984, byte_start: 7974, byte_end: 7984, column_start: 34, column_end: 44, line_start: 226, line_end: 226 }: containing
Token { kind: Space, char_start: 7984, char_end: 7985, byte_start: 7984, byte_end: 7985, column_start: 44, column_end: 45, line_start: 226, line_end: 226 }: " "
Token { kind: Text, char_start: 7985, char_end: 7991, byte_start: 7985, byte_end: 7991, column_start: 45, column_end: 51, line_start: 226, line_end: 226 }: spaces
Token { kind: Newline, char_start: 7991, char_end: 7992, byte_start: 7991, byte_end: 7992, column_start: 51, column_end: 1, line_start: 226, line_end: 227 }: "\n"
Token { kind: Newline, char_start: 7992, char_end: 7993, byte_start: 7992, byte_end: 7993, column_start: 1, column_end: 1, line_start: 227, line_end: 228 }: "\n"
Token { kind: Text, char_start: 7993, char_end: 7995, byte_start: 7993, byte_end: 7995, column_start: 1, column_end: 3, line_start: 228, line_end: 228 }: As
Token { kind: Space, char_start: 7995, char_end: 7996, byte_start: 7995, byte_end: 7996, column_start: 3, column_end: 4, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 7996, char_end: 8005, byte_start: 7996, byte_end: 8005, column_start: 4, column_end: 13, line_start: 228, line_end: 228 }: described
Token { kind: Space, char_start: 8005, char_end: 8006, byte_start: 8005, byte_end: 8006, column_start: 13, column_end: 14, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8006, char_end: 8008, byte_start: 8006, byte_end: 8008, column_start: 14, column_end: 16, line_start: 228, line_end: 228 }: in
Token { kind: Space, char_start: 8008, char_end: 8009, byte_start: 8008, byte_end: 8009, column_start: 16, column_end: 17, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8009, char_end: 8012, byte_start: 8009, byte_end: 8012, column_start: 17, column_end: 20, line_start: 228, line_end: 228 }: the
Token { kind: Space, char_start: 8012, char_end: 8013, byte_start: 8012, byte_end: 8013, column_start: 20, column_end: 21, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8013, char_end: 8026, byte_start: 8013, byte_end: 8026, column_start: 21, column_end: 34, line_start: 228, line_end: 228 }: documentation
Token { kind: Space, char_start: 8026, char_end: 8027, byte_start: 8026, byte_end: 8027, column_start: 34, column_end: 35, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8027, char_end: 8030, byte_start: 8027, byte_end: 8030, column_start: 35, column_end: 38, line_start: 228, line_end: 228 }: for
Token { kind: Space, char_start: 8030, char_end: 8031, byte_start: 8030, byte_end: 8031, column_start: 38, column_end: 39, line_start: 228, line_end: 228 }: " "
Token { kind: Bar, char_start: 8031, char_end: 8032, byte_start: 8031, byte_end: 8032, column_start: 39, column_end: 40, line_start: 228, line_end: 228 }: |
Token { kind: Text, char_start: 8032, char_end: 8036, byte_start: 8032, byte_end: 8036, column_start: 40, column_end: 44, line_start: 228, line_end: 228 }: :Ack
Token { kind: Bar, char_start: 8036, char_end: 8037, byte_start: 8036, byte_end: 8037, column_start: 44, column_end: 45, line_start: 228, line_end: 228 }: |
Token { kind: Text, char_start: 8037, char_end: 8038, byte_start: 8037, byte_end: 8038, column_start: 45, column_end: 46, line_start: 228, line_end: 228 }: ,
Token { kind: Space, char_start: 8038, char_end: 8039, byte_start: 8038, byte_end: 8039, column_start: 46, column_end: 47, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8039, char_end: 8042, byte_start: 8039, byte_end: 8042, column_start: 47, column_end: 50, line_start: 228, line_end: 228 }: the
Token { kind: Space, char_start: 8042, char_end: 8043, byte_start: 8042, byte_end: 8043, column_start: 50, column_end: 51, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8043, char_end: 8049, byte_start: 8043, byte_end: 8049, column_start: 51, column_end: 57, line_start: 228, line_end: 228 }: search
Token { kind: Space, char_start: 8049, char_end: 8050, byte_start: 8049, byte_end: 8050, column_start: 57, column_end: 58, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8050, char_end: 8057, byte_start: 8050, byte_end: 8057, column_start: 58, column_end: 65, line_start: 228, line_end: 228 }: pattern
Token { kind: Space, char_start: 8057, char_end: 8058, byte_start: 8057, byte_end: 8058, column_start: 65, column_end: 66, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8058, char_end: 8060, byte_start: 8058, byte_end: 8060, column_start: 66, column_end: 68, line_start: 228, line_end: 228 }: is
Token { kind: Space, char_start: 8060, char_end: 8061, byte_start: 8060, byte_end: 8061, column_start: 68, column_end: 69, line_start: 228, line_end: 228 }: " "
Token { kind: Text, char_start: 8061, char_end: 8067, byte_start: 8061, byte_end: 8067, column_start: 69, column_end: 75, line_start: 228, line_end: 228 }: passed
Token { kind: Newline, char_start: 8067, char_end: 8068, byte_start: 8067, byte_end: 8068, column_start: 75, column_end: 1, line_start: 228, line_end: 229 }: "\n"
Token { kind: Text, char_start: 8068, char_end: 8075, byte_start: 8068, byte_end: 8075, column_start: 1, column_end: 8, line_start: 229, line_end: 229 }: through
Token { kind: Space, char_start: 8075, char_end: 8076, byte_start: 8075, byte_end: 8076, column_start: 8, column_end: 9, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8076, char_end: 8078, byte_start: 8076, byte_end: 8078, column_start: 9, column_end: 11, line_start: 229, line_end: 229 }: as
Token { kind: Hyphen, char_start: 8078, char_end: 8079, byte_start: 8078, byte_end: 8079, column_start: 11, column_end: 12, line_start: 229, line_end: 229 }: -
Token { kind: Text, char_start: 8079, char_end: 8081, byte_start: 8079, byte_end: 8081, column_start: 12, column_end: 14, line_start: 229, line_end: 229 }: is
Token { kind: Space, char_start: 8081, char_end: 8082, byte_start: 8081, byte_end: 8082, column_start: 14, column_end: 15, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8082, char_end: 8084, byte_start: 8082, byte_end: 8084, column_start: 15, column_end: 17, line_start: 229, line_end: 229 }: to
Token { kind: Space, char_start: 8084, char_end: 8085, byte_start: 8084, byte_end: 8085, column_start: 17, column_end: 18, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8085, char_end: 8088, byte_start: 8085, byte_end: 8088, column_start: 18, column_end: 21, line_start: 229, line_end: 229 }: the
Token { kind: Space, char_start: 8088, char_end: 8089, byte_start: 8088, byte_end: 8089, column_start: 21, column_end: 22, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8089, char_end: 8099, byte_start: 8089, byte_end: 8099, column_start: 22, column_end: 32, line_start: 229, line_end: 229 }: underlying
Token { kind: Space, char_start: 8099, char_end: 8100, byte_start: 8099, byte_end: 8100, column_start: 32, column_end: 33, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8100, char_end: 8106, byte_start: 8100, byte_end: 8106, column_start: 33, column_end: 39, line_start: 229, line_end: 229 }: search
Token { kind: Space, char_start: 8106, char_end: 8107, byte_start: 8106, byte_end: 8107, column_start: 39, column_end: 40, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8107, char_end: 8115, byte_start: 8107, byte_end: 8115, column_start: 40, column_end: 48, line_start: 229, line_end: 229 }: command,
Token { kind: Space, char_start: 8115, char_end: 8116, byte_start: 8115, byte_end: 8116, column_start: 48, column_end: 49, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8116, char_end: 8119, byte_start: 8116, byte_end: 8119, column_start: 49, column_end: 52, line_start: 229, line_end: 229 }: and
Token { kind: Space, char_start: 8119, char_end: 8120, byte_start: 8119, byte_end: 8120, column_start: 52, column_end: 53, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8120, char_end: 8122, byte_start: 8120, byte_end: 8122, column_start: 53, column_end: 55, line_start: 229, line_end: 229 }: no
Token { kind: Space, char_start: 8122, char_end: 8123, byte_start: 8122, byte_end: 8123, column_start: 55, column_end: 56, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8123, char_end: 8131, byte_start: 8123, byte_end: 8131, column_start: 56, column_end: 64, line_start: 229, line_end: 229 }: escaping
Token { kind: Space, char_start: 8131, char_end: 8132, byte_start: 8131, byte_end: 8132, column_start: 64, column_end: 65, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8132, char_end: 8134, byte_start: 8132, byte_end: 8134, column_start: 65, column_end: 67, line_start: 229, line_end: 229 }: is
Token { kind: Space, char_start: 8134, char_end: 8135, byte_start: 8134, byte_end: 8135, column_start: 67, column_end: 68, line_start: 229, line_end: 229 }: " "
Token { kind: Text, char_start: 8135, char_end: 8143, byte_start: 8135, byte_end: 8143, column_start: 68, column_end: 76, line_start: 229, line_end: 229 }: required
Token { kind: Newline, char_start: 8143, char_end: 8144, byte_start: 8143, byte_end: 8144, column_start: 76, column_end: 1, line_start: 229, line_end: 230 }: "\n"
Token { kind: Text, char_start: 8144, char_end: 8149, byte_start: 8144, byte_end: 8149, column_start: 1, column_end: 6, line_start: 230, line_end: 230 }: other
Token { kind: Space, char_start: 8149, char_end: 8150, byte_start: 8149, byte_end: 8150, column_start: 6, column_end: 7, line_start: 230, line_end: 230 }: " "
Token { kind: Text, char_start: 8150, char_end: 8154, byte_start: 8150, byte_end: 8154, column_start: 7, column_end: 11, line_start: 230, line_end: 230 }: than
Token { kind: Space, char_start: 8154, char_end: 8155, byte_start: 8154, byte_end: 8155, column_start: 11, column_end: 12, line_start: 230, line_end: 230 }: " "
Token { kind: Text, char_start: 8155, char_end: 8164, byte_start: 8155, byte_end: 8164, column_start: 12, column_end: 21, line_start: 230, line_end: 230 }: preceding
Token { kind: Space, char_start: 8164, char_end: 8165, byte_start: 8164, byte_end: 8165, column_start: 21, column_end: 22, line_start: 230, line_end: 230 }: " "
Token { kind: Text, char_start: 8165, char_end: 8171, byte_start: 8165, byte_end: 8171, column_start: 22, column_end: 28, line_start: 230, line_end: 230 }: spaces
Token { kind: Space, char_start: 8171, char_end: 8172, byte_start: 8171, byte_end: 8172, column_start: 28, column_end: 29, line_start: 230, line_end: 230 }: " "
Token { kind: Text, char_start: 8172, char_end: 8174, byte_start: 8172, byte_end: 8174, column_start: 29, column_end: 31, line_start: 230, line_end: 230 }: by
Token { kind: Space, char_start: 8174, char_end: 8175, byte_start: 8174, byte_end: 8175, column_start: 31, column_end: 32, line_start: 230, line_end: 230 }: " "
Token { kind: Text, char_start: 8175, char_end: 8176, byte_start: 8175, byte_end: 8176, column_start: 32, column_end: 33, line_start: 230, line_end: 230 }: a
Token { kind: Space, char_start: 8176, char_end: 8177, byte_start: 8176, byte_end: 8177, column_start: 33, column_end: 34, line_start: 230, line_end: 230 }: " "
Token { kind: Text, char_start: 8177, char_end: 8183, byte_start: 8177, byte_end: 8183, column_start: 34, column_end: 40, line_start: 230, line_end: 230 }: single
Token { kind: Space, char_start: 8183, char_end: 8184, byte_start: 8183, byte_end: 8184, column_start: 40, column_end: 41, line_start: 230, line_end: 230 }: " "
Token { kind: Text, char_start: 8184, char_end: 8194, byte_start: 8184, byte_end: 8194, column_start: 41, column_end: 51, line_start: 230, line_end: 230 }: backslash.
Token { kind: Newline, char_start: 8194, char_end: 8195, byte_start: 8194, byte_end: 8195, column_start: 51, column_end: 1, line_start: 230, line_end: 231 }: "\n"
Token { kind: Newline, char_start: 8195, char_end: 8196, byte_start: 8195, byte_end: 8196, column_start: 1, column_end: 1, line_start: 231, line_end: 232 }: "\n"
Token { kind: Text, char_start: 8196, char_end: 8199, byte_start: 8196, byte_end: 8199, column_start: 1, column_end: 4, line_start: 232, line_end: 232 }: So,
Token { kind: Space, char_start: 8199, char_end: 8200, byte_start: 8199, byte_end: 8200, column_start: 4, column_end: 5, line_start: 232, line_end: 232 }: " "
Token { kind: Text, char_start: 8200, char_end: 8202, byte_start: 8200, byte_end: 8202, column_start: 5, column_end: 7, line_start: 232, line_end: 232 }: to
Token { kind: Space, char_start: 8202, char_end: 8203, byte_start: 8202, byte_end: 8203, column_start: 7, column_end: 8, line_start: 232, line_end: 232 }: " "
Token { kind: Text, char_start: 8203, char_end: 8207, byte_start: 8203, byte_end: 8207, column_start: 8, column_end: 12, line_start: 232, line_end: 232 }: find
Token { kind: Space, char_start: 8207, char_end: 8208, byte_start: 8207, byte_end: 8208, column_start: 12, column_end: 13, line_start: 232, line_end: 232 }: " "
Token { kind: Text, char_start: 8208, char_end: 8212, byte_start: 8208, byte_end: 8212, column_start: 13, column_end: 17, line_start: 232, line_end: 232 }: "foo
Token { kind: Space, char_start: 8212, char_end: 8213, byte_start: 8212, byte_end: 8213, column_start: 17, column_end: 18, line_start: 232, line_end: 232 }: " "
Token { kind: Text, char_start: 8213, char_end: 8218, byte_start: 8213, byte_end: 8218, column_start: 18, column_end: 23, line_start: 232, line_end: 232 }: bar",
Token { kind: Space, char_start: 8218, char_end: 8219, byte_start: 8218, byte_end: 8219, column_start: 23, column_end: 24, line_start: 232, line_end: 232 }: " "
Token { kind: Text, char_start: 8219, char_end: 8222, byte_start: 8219, byte_end: 8222, column_start: 24, column_end: 27, line_start: 232, line_end: 232 }: you
Token { kind: Space, char_start: 8222, char_end: 8223, byte_start: 8222, byte_end: 8223, column_start: 27, column_end: 28, line_start: 232, line_end: 232 }: " "
Token { kind: Text, char_start: 8223, char_end: 8228, byte_start: 8223, byte_end: 8228, column_start: 28, column_end: 33, line_start: 232, line_end: 232 }: would
Token { kind: Space, char_start: 8228, char_end: 8229, byte_start: 8228, byte_end: 8229, column_start: 33, column_end: 34, line_start: 232, line_end: 232 }: " "
Token { kind: Text, char_start: 8229, char_end: 8235, byte_start: 8229, byte_end: 8235, column_start: 34, column_end: 40, line_start: 232, line_end: 232 }: search
Token { kind: Space, char_start: 8235, char_end: 8236, byte_start: 8235, byte_end: 8236, column_start: 40, column_end: 41, line_start: 232, line_end: 232 }: " "
Token { kind: Text, char_start: 8236, char_end: 8241, byte_start: 8236, byte_end: 8241, column_start: 41, column_end: 46, line_start: 232, line_end: 232 }: like:
Token { kind: Newline, char_start: 8241, char_end: 8242, byte_start: 8241, byte_end: 8242, column_start: 46, column_end: 1, line_start: 232, line_end: 233 }: "\n"
Token { kind: Newline, char_start: 8242, char_end: 8243, byte_start: 8242, byte_end: 8243, column_start: 1, column_end: 1, line_start: 233, line_end: 234 }: "\n"
Token { kind: CodeFence, char_start: 8243, char_end: 8246, byte_start: 8243, byte_end: 8246, column_start: 1, column_end: 4, line_start: 234, line_end: 234 }: ```
Token { kind: Newline, char_start: 8246, char_end: 8247, byte_start: 8246, byte_end: 8247, column_start: 4, column_end: 1, line_start: 234, line_end: 235 }: "\n"
Token { kind: Text, char_start: 8247, char_end: 8251, byte_start: 8247, byte_end: 8251, column_start: 1, column_end: 5, line_start: 235, line_end: 235 }: :Ack
Token { kind: Space, char_start: 8251, char_end: 8252, byte_start: 8251, byte_end: 8252, column_start: 5, column_end: 6, line_start: 235, line_end: 235 }: " "
Token { kind: Text, char_start: 8252, char_end: 8256, byte_start: 8252, byte_end: 8256, column_start: 6, column_end: 10, line_start: 235, line_end: 235 }: foo\
Token { kind: Space, char_start: 8256, char_end: 8257, byte_start: 8256, byte_end: 8257, column_start: 10, column_end: 11, line_start: 235, line_end: 235 }: " "
Token { kind: Text, char_start: 8257, char_end: 8260, byte_start: 8257, byte_end: 8260, column_start: 11, column_end: 14, line_start: 235, line_end: 235 }: bar
Token { kind: Newline, char_start: 8260, char_end: 8261, byte_start: 8260, byte_end: 8261, column_start: 14, column_end: 1, line_start: 235, line_end: 236 }: "\n"
Token { kind: CodeFence, char_start: 8261, char_end: 8264, byte_start: 8261, byte_end: 8264, column_start: 1, column_end: 4, line_start: 236, line_end: 236 }: ```
Token { kind: Newline, char_start: 8264, char_end: 8265, byte_start: 8264, byte_end: 8265, column_start: 4, column_end: 1, line_start: 236, line_end: 237 }: "\n"
Token { kind: Newline, char_start: 8265, char_end: 8266, byte_start: 8265, byte_end: 8266, column_start: 1, column_end: 1, line_start: 237, line_end: 238 }: "\n"
Token { kind: Text, char_start: 8266, char_end: 8275, byte_start: 8266, byte_end: 8275, column_start: 1, column_end: 10, line_start: 238, line_end: 238 }: Unescaped
Token { kind: Space, char_start: 8275, char_end: 8276, byte_start: 8275, byte_end: 8276, column_start: 10, column_end: 11, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8276, char_end: 8282, byte_start: 8276, byte_end: 8282, column_start: 11, column_end: 17, line_start: 238, line_end: 238 }: spaces
Token { kind: Space, char_start: 8282, char_end: 8283, byte_start: 8282, byte_end: 8283, column_start: 17, column_end: 18, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8283, char_end: 8285, byte_start: 8283, byte_end: 8285, column_start: 18, column_end: 20, line_start: 238, line_end: 238 }: in
Token { kind: Space, char_start: 8285, char_end: 8286, byte_start: 8285, byte_end: 8286, column_start: 20, column_end: 21, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8286, char_end: 8289, byte_start: 8286, byte_end: 8289, column_start: 21, column_end: 24, line_start: 238, line_end: 238 }: the
Token { kind: Space, char_start: 8289, char_end: 8290, byte_start: 8289, byte_end: 8290, column_start: 24, column_end: 25, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8290, char_end: 8296, byte_start: 8290, byte_end: 8296, column_start: 25, column_end: 31, line_start: 238, line_end: 238 }: search
Token { kind: Space, char_start: 8296, char_end: 8297, byte_start: 8296, byte_end: 8297, column_start: 31, column_end: 32, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8297, char_end: 8300, byte_start: 8297, byte_end: 8300, column_start: 32, column_end: 35, line_start: 238, line_end: 238 }: are
Token { kind: Space, char_start: 8300, char_end: 8301, byte_start: 8300, byte_end: 8301, column_start: 35, column_end: 36, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8301, char_end: 8308, byte_start: 8301, byte_end: 8308, column_start: 36, column_end: 43, line_start: 238, line_end: 238 }: treated
Token { kind: Space, char_start: 8308, char_end: 8309, byte_start: 8308, byte_end: 8309, column_start: 43, column_end: 44, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8309, char_end: 8311, byte_start: 8309, byte_end: 8311, column_start: 44, column_end: 46, line_start: 238, line_end: 238 }: as
Token { kind: Space, char_start: 8311, char_end: 8312, byte_start: 8311, byte_end: 8312, column_start: 46, column_end: 47, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8312, char_end: 8320, byte_start: 8312, byte_end: 8320, column_start: 47, column_end: 55, line_start: 238, line_end: 238 }: argument
Token { kind: Space, char_start: 8320, char_end: 8321, byte_start: 8320, byte_end: 8321, column_start: 55, column_end: 56, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8321, char_end: 8332, byte_start: 8321, byte_end: 8332, column_start: 56, column_end: 67, line_start: 238, line_end: 238 }: separators,
Token { kind: Space, char_start: 8332, char_end: 8333, byte_start: 8332, byte_end: 8333, column_start: 67, column_end: 68, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8333, char_end: 8335, byte_start: 8333, byte_end: 8335, column_start: 68, column_end: 70, line_start: 238, line_end: 238 }: so
Token { kind: Space, char_start: 8335, char_end: 8336, byte_start: 8335, byte_end: 8336, column_start: 70, column_end: 71, line_start: 238, line_end: 238 }: " "
Token { kind: Text, char_start: 8336, char_end: 8337, byte_start: 8336, byte_end: 8337, column_start: 71, column_end: 72, line_start: 238, line_end: 238 }: a
Token { kind: Newline, char_start: 8337, char_end: 8338, byte_start: 8337, byte_end: 8338, column_start: 72, column_end: 1, line_start: 238, line_end: 239 }: "\n"
Token { kind: Text, char_start: 8338, char_end: 8345, byte_start: 8338, byte_end: 8345, column_start: 1, column_end: 8, line_start: 239, line_end: 239 }: command
Token { kind: Space, char_start: 8345, char_end: 8346, byte_start: 8345, byte_end: 8346, column_start: 8, column_end: 9, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8346, char_end: 8350, byte_start: 8346, byte_end: 8350, column_start: 9, column_end: 13, line_start: 239, line_end: 239 }: like
Token { kind: Space, char_start: 8350, char_end: 8351, byte_start: 8350, byte_end: 8351, column_start: 13, column_end: 14, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8351, char_end: 8354, byte_start: 8351, byte_end: 8354, column_start: 14, column_end: 17, line_start: 239, line_end: 239 }: the
Token { kind: Space, char_start: 8354, char_end: 8355, byte_start: 8354, byte_end: 8355, column_start: 17, column_end: 18, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8355, char_end: 8364, byte_start: 8355, byte_end: 8364, column_start: 18, column_end: 27, line_start: 239, line_end: 239 }: following
Token { kind: Space, char_start: 8364, char_end: 8365, byte_start: 8364, byte_end: 8365, column_start: 27, column_end: 28, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8365, char_end: 8370, byte_start: 8365, byte_end: 8370, column_start: 28, column_end: 33, line_start: 239, line_end: 239 }: means
Token { kind: Space, char_start: 8370, char_end: 8371, byte_start: 8370, byte_end: 8371, column_start: 33, column_end: 34, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8371, char_end: 8375, byte_start: 8371, byte_end: 8375, column_start: 34, column_end: 38, line_start: 239, line_end: 239 }: pass
Token { kind: Space, char_start: 8375, char_end: 8376, byte_start: 8375, byte_end: 8376, column_start: 38, column_end: 39, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8376, char_end: 8379, byte_start: 8376, byte_end: 8379, column_start: 39, column_end: 42, line_start: 239, line_end: 239 }: the
Token { kind: Space, char_start: 8379, char_end: 8380, byte_start: 8379, byte_end: 8380, column_start: 42, column_end: 43, line_start: 239, line_end: 239 }: " "
Token { kind: Backtick, char_start: 8380, char_end: 8381, byte_start: 8380, byte_end: 8381, column_start: 43, column_end: 44, line_start: 239, line_end: 239 }: `
Token { kind: Hyphen, char_start: 8381, char_end: 8382, byte_start: 8381, byte_end: 8382, column_start: 44, column_end: 45, line_start: 239, line_end: 239 }: -
Token { kind: Text, char_start: 8382, char_end: 8383, byte_start: 8382, byte_end: 8383, column_start: 45, column_end: 46, line_start: 239, line_end: 239 }: w
Token { kind: Backtick, char_start: 8383, char_end: 8384, byte_start: 8383, byte_end: 8384, column_start: 46, column_end: 47, line_start: 239, line_end: 239 }: `
Token { kind: Space, char_start: 8384, char_end: 8385, byte_start: 8384, byte_end: 8385, column_start: 47, column_end: 48, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8385, char_end: 8391, byte_start: 8385, byte_end: 8391, column_start: 48, column_end: 54, line_start: 239, line_end: 239 }: option
Token { kind: Space, char_start: 8391, char_end: 8392, byte_start: 8391, byte_end: 8392, column_start: 54, column_end: 55, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8392, char_end: 8400, byte_start: 8392, byte_end: 8400, column_start: 55, column_end: 63, line_start: 239, line_end: 239 }: through,
Token { kind: Space, char_start: 8400, char_end: 8401, byte_start: 8400, byte_end: 8401, column_start: 63, column_end: 64, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8401, char_end: 8407, byte_start: 8401, byte_end: 8407, column_start: 64, column_end: 70, line_start: 239, line_end: 239 }: search
Token { kind: Space, char_start: 8407, char_end: 8408, byte_start: 8407, byte_end: 8408, column_start: 70, column_end: 71, line_start: 239, line_end: 239 }: " "
Token { kind: Text, char_start: 8408, char_end: 8411, byte_start: 8408, byte_end: 8411, column_start: 71, column_end: 74, line_start: 239, line_end: 239 }: for
Token { kind: Newline, char_start: 8411, char_end: 8412, byte_start: 8411, byte_end: 8412, column_start: 74, column_end: 1, line_start: 239, line_end: 240 }: "\n"
Token { kind: Text, char_start: 8412, char_end: 8419, byte_start: 8412, byte_end: 8419, column_start: 1, column_end: 8, line_start: 240, line_end: 240 }: pattern
Token { kind: Space, char_start: 8419, char_end: 8420, byte_start: 8419, byte_end: 8420, column_start: 8, column_end: 9, line_start: 240, line_end: 240 }: " "
Token { kind: Text, char_start: 8420, char_end: 8426, byte_start: 8420, byte_end: 8426, column_start: 9, column_end: 15, line_start: 240, line_end: 240 }: "foo",
Token { kind: Space, char_start: 8426, char_end: 8427, byte_start: 8426, byte_end: 8427, column_start: 15, column_end: 16, line_start: 240, line_end: 240 }: " "
Token { kind: Text, char_start: 8427, char_end: 8430, byte_start: 8427, byte_end: 8430, column_start: 16, column_end: 19, line_start: 240, line_end: 240 }: and
Token { kind: Space, char_start: 8430, char_end: 8431, byte_start: 8430, byte_end: 8431, column_start: 19, column_end: 20, line_start: 240, line_end: 240 }: " "
Token { kind: Text, char_start: 8431, char_end: 8436, byte_start: 8431, byte_end: 8436, column_start: 20, column_end: 25, line_start: 240, line_end: 240 }: limit
Token { kind: Space, char_start: 8436, char_end: 8437, byte_start: 8436, byte_end: 8437, column_start: 25, column_end: 26, line_start: 240, line_end: 240 }: " "
Token { kind: Text, char_start: 8437, char_end: 8443, byte_start: 8437, byte_end: 8443, column_start: 26, column_end: 32, line_start: 240, line_end: 240 }: search
Token { kind: Space, char_start: 8443, char_end: 8444, byte_start: 8443, byte_end: 8444, column_start: 32, column_end: 33, line_start: 240, line_end: 240 }: " "
Token { kind: Text, char_start: 8444, char_end: 8446, byte_start: 8444, byte_end: 8446, column_start: 33, column_end: 35, line_start: 240, line_end: 240 }: to
Token { kind: Space, char_start: 8446, char_end: 8447, byte_start: 8446, byte_end: 8447, column_start: 35, column_end: 36, line_start: 240, line_end: 240 }: " "
Token { kind: Text, char_start: 8447, char_end: 8450, byte_start: 8447, byte_end: 8450, column_start: 36, column_end: 39, line_start: 240, line_end: 240 }: the
Token { kind: Space, char_start: 8450, char_end: 8451, byte_start: 8450, byte_end: 8451, column_start: 39, column_end: 40, line_start: 240, line_end: 240 }: " "
Token { kind: Text, char_start: 8451, char_end: 8456, byte_start: 8451, byte_end: 8456, column_start: 40, column_end: 45, line_start: 240, line_end: 240 }: "bar"
Token { kind: Space, char_start: 8456, char_end: 8457, byte_start: 8456, byte_end: 8457, column_start: 45, column_end: 46, line_start: 240, line_end: 240 }: " "
Token { kind: Text, char_start: 8457, char_end: 8467, byte_start: 8457, byte_end: 8467, column_start: 46, column_end: 56, line_start: 240, line_end: 240 }: directory:
Token { kind: Newline, char_start: 8467, char_end: 8468, byte_start: 8467, byte_end: 8468, column_start: 56, column_end: 1, line_start: 240, line_end: 241 }: "\n"
Token { kind: Newline, char_start: 8468, char_end: 8469, byte_start: 8468, byte_end: 8469, column_start: 1, column_end: 1, line_start: 241, line_end: 242 }: "\n"
Token { kind: CodeFence, char_start: 8469, char_end: 8472, byte_start: 8469, byte_end: 8472, column_start: 1, column_end: 4, line_start: 242, line_end: 242 }: ```
Token { kind: Newline, char_start: 8472, char_end: 8473, byte_start: 8472, byte_end: 8473, column_start: 4, column_end: 1, line_start: 242, line_end: 243 }: "\n"
Token { kind: Text, char_start: 8473, char_end: 8477, byte_start: 8473, byte_end: 8477, column_start: 1, column_end: 5, line_start: 243, line_end: 243 }: :Ack
Token { kind: Space, char_start: 8477, char_end: 8478, byte_start: 8477, byte_end: 8478, column_start: 5, column_end: 6, line_start: 243, line_end: 243 }: " "
Token { kind: Hyphen, char_start: 8478, char_end: 8479, byte_start: 8478, byte_end: 8479, column_start: 6, column_end: 7, line_start: 243, line_end: 243 }: -
Token { kind: Text, char_start: 8479, char_end: 8480, byte_start: 8479, byte_end: 8480, column_start: 7, column_end: 8, line_start: 243, line_end: 243 }: w
Token { kind: Space, char_start: 8480, char_end: 8481, byte_start: 8480, byte_end: 8481, column_start: 8, column_end: 9, line_start: 243, line_end: 243 }: " "
Token { kind: Text, char_start: 8481, char_end: 8484, byte_start: 8481, byte_end: 8484, column_start: 9, column_end: 12, line_start: 243, line_end: 243 }: foo
Token { kind: Space, char_start: 8484, char_end: 8485, byte_start: 8484, byte_end: 8485, column_start: 12, column_end: 13, line_start: 243, line_end: 243 }: " "
Token { kind: Text, char_start: 8485, char_end: 8488, byte_start: 8485, byte_end: 8488, column_start: 13, column_end: 16, line_start: 243, line_end: 243 }: bar
Token { kind: Newline, char_start: 8488, char_end: 8489, byte_start: 8488, byte_end: 8489, column_start: 16, column_end: 1, line_start: 243, line_end: 244 }: "\n"
Token { kind: CodeFence, char_start: 8489, char_end: 8492, byte_start: 8489, byte_end: 8492, column_start: 1, column_end: 4, line_start: 244, line_end: 244 }: ```
Token { kind: Newline, char_start: 8492, char_end: 8493, byte_start: 8492, byte_end: 8493, column_start: 4, column_end: 1, line_start: 244, line_end: 245 }: "\n"
Token { kind: Newline, char_start: 8493, char_end: 8494, byte_start: 8493, byte_end: 8494, column_start: 1, column_end: 1, line_start: 245, line_end: 246 }: "\n"
Token { kind: Text, char_start: 8494, char_end: 8498, byte_start: 8494, byte_end: 8498, column_start: 1, column_end: 5, line_start: 246, line_end: 246 }: Note
Token { kind: Space, char_start: 8498, char_end: 8499, byte_start: 8498, byte_end: 8499, column_start: 5, column_end: 6, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8499, char_end: 8503, byte_start: 8499, byte_end: 8503, column_start: 6, column_end: 10, line_start: 246, line_end: 246 }: that
Token { kind: Space, char_start: 8503, char_end: 8504, byte_start: 8503, byte_end: 8504, column_start: 10, column_end: 11, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8504, char_end: 8512, byte_start: 8504, byte_end: 8512, column_start: 11, column_end: 19, line_start: 246, line_end: 246 }: wrapping
Token { kind: Space, char_start: 8512, char_end: 8513, byte_start: 8512, byte_end: 8513, column_start: 19, column_end: 20, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8513, char_end: 8515, byte_start: 8513, byte_end: 8515, column_start: 20, column_end: 22, line_start: 246, line_end: 246 }: in
Token { kind: Space, char_start: 8515, char_end: 8516, byte_start: 8515, byte_end: 8516, column_start: 22, column_end: 23, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8516, char_end: 8522, byte_start: 8516, byte_end: 8522, column_start: 23, column_end: 29, line_start: 246, line_end: 246 }: quotes
Token { kind: Space, char_start: 8522, char_end: 8523, byte_start: 8522, byte_end: 8523, column_start: 29, column_end: 30, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8523, char_end: 8527, byte_start: 8523, byte_end: 8527, column_start: 30, column_end: 34, line_start: 246, line_end: 246 }: will
Token { kind: Space, char_start: 8527, char_end: 8528, byte_start: 8527, byte_end: 8528, column_start: 34, column_end: 35, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8528, char_end: 8536, byte_start: 8528, byte_end: 8536, column_start: 35, column_end: 43, line_start: 246, line_end: 246 }: probably
Token { kind: Space, char_start: 8536, char_end: 8537, byte_start: 8536, byte_end: 8537, column_start: 43, column_end: 44, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8537, char_end: 8540, byte_start: 8537, byte_end: 8540, column_start: 44, column_end: 47, line_start: 246, line_end: 246 }: not
Token { kind: Space, char_start: 8540, char_end: 8541, byte_start: 8540, byte_end: 8541, column_start: 47, column_end: 48, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8541, char_end: 8543, byte_start: 8541, byte_end: 8543, column_start: 48, column_end: 50, line_start: 246, line_end: 246 }: do
Token { kind: Space, char_start: 8543, char_end: 8544, byte_start: 8543, byte_end: 8544, column_start: 50, column_end: 51, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8544, char_end: 8548, byte_start: 8544, byte_end: 8548, column_start: 51, column_end: 55, line_start: 246, line_end: 246 }: what
Token { kind: Space, char_start: 8548, char_end: 8549, byte_start: 8548, byte_end: 8549, column_start: 55, column_end: 56, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8549, char_end: 8552, byte_start: 8549, byte_end: 8552, column_start: 56, column_end: 59, line_start: 246, line_end: 246 }: you
Token { kind: Space, char_start: 8552, char_end: 8553, byte_start: 8552, byte_end: 8553, column_start: 59, column_end: 60, line_start: 246, line_end: 246 }: " "
Token { kind: Text, char_start: 8553, char_end: 8558, byte_start: 8553, byte_end: 8558, column_start: 60, column_end: 65, line_start: 246, line_end: 246 }: want.
Token { kind: Newline, char_start: 8558, char_end: 8559, byte_start: 8558, byte_end: 8559, column_start: 65, column_end: 1, line_start: 246, line_end: 247 }: "\n"
Token { kind: Newline, char_start: 8559, char_end: 8560, byte_start: 8559, byte_end: 8560, column_start: 1, column_end: 1, line_start: 247, line_end: 248 }: "\n"
Token { kind: Text, char_start: 8560, char_end: 8565, byte_start: 8560, byte_end: 8565, column_start: 1, column_end: 6, line_start: 248, line_end: 248 }: This,
Token { kind: Space, char_start: 8565, char_end: 8566, byte_start: 8565, byte_end: 8566, column_start: 6, column_end: 7, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8566, char_end: 8569, byte_start: 8566, byte_end: 8569, column_start: 7, column_end: 10, line_start: 248, line_end: 248 }: for
Token { kind: Space, char_start: 8569, char_end: 8570, byte_start: 8569, byte_end: 8570, column_start: 10, column_end: 11, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8570, char_end: 8578, byte_start: 8570, byte_end: 8578, column_start: 11, column_end: 19, line_start: 248, line_end: 248 }: example,
Token { kind: Space, char_start: 8578, char_end: 8579, byte_start: 8578, byte_end: 8579, column_start: 19, column_end: 20, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8579, char_end: 8581, byte_start: 8579, byte_end: 8581, column_start: 20, column_end: 22, line_start: 248, line_end: 248 }: is
Token { kind: Space, char_start: 8581, char_end: 8582, byte_start: 8581, byte_end: 8582, column_start: 22, column_end: 23, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8582, char_end: 8583, byte_start: 8582, byte_end: 8583, column_start: 23, column_end: 24, line_start: 248, line_end: 248 }: a
Token { kind: Space, char_start: 8583, char_end: 8584, byte_start: 8583, byte_end: 8584, column_start: 24, column_end: 25, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8584, char_end: 8590, byte_start: 8584, byte_end: 8590, column_start: 25, column_end: 31, line_start: 248, line_end: 248 }: search
Token { kind: Space, char_start: 8590, char_end: 8591, byte_start: 8590, byte_end: 8591, column_start: 31, column_end: 32, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8591, char_end: 8594, byte_start: 8591, byte_end: 8594, column_start: 32, column_end: 35, line_start: 248, line_end: 248 }: for
Token { kind: Space, char_start: 8594, char_end: 8595, byte_start: 8594, byte_end: 8595, column_start: 35, column_end: 36, line_start: 248, line_end: 248 }: " "
Token { kind: Backtick, char_start: 8595, char_end: 8596, byte_start: 8595, byte_end: 8596, column_start: 36, column_end: 37, line_start: 248, line_end: 248 }: `
Token { kind: Text, char_start: 8596, char_end: 8600, byte_start: 8596, byte_end: 8600, column_start: 37, column_end: 41, line_start: 248, line_end: 248 }: "foo
Token { kind: Backtick, char_start: 8600, char_end: 8601, byte_start: 8600, byte_end: 8601, column_start: 41, column_end: 42, line_start: 248, line_end: 248 }: `
Token { kind: Space, char_start: 8601, char_end: 8602, byte_start: 8601, byte_end: 8602, column_start: 42, column_end: 43, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8602, char_end: 8604, byte_start: 8602, byte_end: 8604, column_start: 43, column_end: 45, line_start: 248, line_end: 248 }: in
Token { kind: Space, char_start: 8604, char_end: 8605, byte_start: 8604, byte_end: 8605, column_start: 45, column_end: 46, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8605, char_end: 8608, byte_start: 8605, byte_end: 8608, column_start: 46, column_end: 49, line_start: 248, line_end: 248 }: the
Token { kind: Space, char_start: 8608, char_end: 8609, byte_start: 8608, byte_end: 8609, column_start: 49, column_end: 50, line_start: 248, line_end: 248 }: " "
Token { kind: Backtick, char_start: 8609, char_end: 8610, byte_start: 8609, byte_end: 8610, column_start: 50, column_end: 51, line_start: 248, line_end: 248 }: `
Token { kind: Text, char_start: 8610, char_end: 8614, byte_start: 8610, byte_end: 8614, column_start: 51, column_end: 55, line_start: 248, line_end: 248 }: bar"
Token { kind: Backtick, char_start: 8614, char_end: 8615, byte_start: 8614, byte_end: 8615, column_start: 55, column_end: 56, line_start: 248, line_end: 248 }: `
Token { kind: Space, char_start: 8615, char_end: 8616, byte_start: 8615, byte_end: 8616, column_start: 56, column_end: 57, line_start: 248, line_end: 248 }: " "
Token { kind: Text, char_start: 8616, char_end: 8626, byte_start: 8616, byte_end: 8626, column_start: 57, column_end: 67, line_start: 248, line_end: 248 }: directory:
Token { kind: Newline, char_start: 8626, char_end: 8627, byte_start: 8626, byte_end: 8627, column_start: 67, column_end: 1, line_start: 248, line_end: 249 }: "\n"
Token { kind: Newline, char_start: 8627, char_end: 8628, byte_start: 8627, byte_end: 8628, column_start: 1, column_end: 1, line_start: 249, line_end: 250 }: "\n"
Token { kind: CodeFence, char_start: 8628, char_end: 8631, byte_start: 8628, byte_end: 8631, column_start: 1, column_end: 4, line_start: 250, line_end: 250 }: ```
Token { kind: Newline, char_start: 8631, char_end: 8632, byte_start: 8631, byte_end: 8632, column_start: 4, column_end: 1, line_start: 250, line_end: 251 }: "\n"
Token { kind: Text, char_start: 8632, char_end: 8636, byte_start: 8632, byte_end: 8636, column_start: 1, column_end: 5, line_start: 251, line_end: 251 }: :Ack
Token { kind: Space, char_start: 8636, char_end: 8637, byte_start: 8636, byte_end: 8637, column_start: 5, column_end: 6, line_start: 251, line_end: 251 }: " "
Token { kind: Text, char_start: 8637, char_end: 8641, byte_start: 8637, byte_end: 8641, column_start: 6, column_end: 10, line_start: 251, line_end: 251 }: "foo
Token { kind: Space, char_start: 8641, char_end: 8642, byte_start: 8641, byte_end: 8642, column_start: 10, column_end: 11, line_start: 251, line_end: 251 }: " "
Token { kind: Text, char_start: 8642, char_end: 8646, byte_start: 8642, byte_end: 8646, column_start: 11, column_end: 15, line_start: 251, line_end: 251 }: bar"
Token { kind: Newline, char_start: 8646, char_end: 8647, byte_start: 8646, byte_end: 8647, column_start: 15, column_end: 1, line_start: 251, line_end: 252 }: "\n"
Token { kind: CodeFence, char_start: 8647, char_end: 8650, byte_start: 8647, byte_end: 8650, column_start: 1, column_end: 4, line_start: 252, line_end: 252 }: ```
Token { kind: Newline, char_start: 8650, char_end: 8651, byte_start: 8650, byte_end: 8651, column_start: 4, column_end: 1, line_start: 252, line_end: 253 }: "\n"
Token { kind: Newline, char_start: 8651, char_end: 8652, byte_start: 8651, byte_end: 8652, column_start: 1, column_end: 1, line_start: 253, line_end: 254 }: "\n"
Token { kind: Text, char_start: 8652, char_end: 8655, byte_start: 8652, byte_end: 8655, column_start: 1, column_end: 4, line_start: 254, line_end: 254 }: and
Token { kind: Space, char_start: 8655, char_end: 8656, byte_start: 8655, byte_end: 8656, column_start: 4, column_end: 5, line_start: 254, line_end: 254 }: " "
Token { kind: Text, char_start: 8656, char_end: 8660, byte_start: 8656, byte_end: 8660, column_start: 5, column_end: 9, line_start: 254, line_end: 254 }: this
Token { kind: Space, char_start: 8660, char_end: 8661, byte_start: 8660, byte_end: 8661, column_start: 9, column_end: 10, line_start: 254, line_end: 254 }: " "
Token { kind: Text, char_start: 8661, char_end: 8663, byte_start: 8661, byte_end: 8663, column_start: 10, column_end: 12, line_start: 254, line_end: 254 }: is
Token { kind: Space, char_start: 8663, char_end: 8664, byte_start: 8663, byte_end: 8664, column_start: 12, column_end: 13, line_start: 254, line_end: 254 }: " "
Token { kind: Text, char_start: 8664, char_end: 8665, byte_start: 8664, byte_end: 8665, column_start: 13, column_end: 14, line_start: 254, line_end: 254 }: a
Token { kind: Space, char_start: 8665, char_end: 8666, byte_start: 8665, byte_end: 8666, column_start: 14, column_end: 15, line_start: 254, line_end: 254 }: " "
Token { kind: Text, char_start: 8666, char_end: 8672, byte_start: 8666, byte_end: 8672, column_start: 15, column_end: 21, line_start: 254, line_end: 254 }: search
Token { kind: Space, char_start: 8672, char_end: 8673, byte_start: 8672, byte_end: 8673, column_start: 21, column_end: 22, line_start: 254, line_end: 254 }: " "
Token { kind: Text, char_start: 8673, char_end: 8676, byte_start: 8673, byte_end: 8676, column_start: 22, column_end: 25, line_start: 254, line_end: 254 }: for
Token { kind: Space, char_start: 8676, char_end: 8677, byte_start: 8676, byte_end: 8677, column_start: 25, column_end: 26, line_start: 254, line_end: 254 }: " "
Token { kind: Backtick, char_start: 8677, char_end: 8678, byte_start: 8677, byte_end: 8678, column_start: 26, column_end: 27, line_start: 254, line_end: 254 }: `
Token { kind: Text, char_start: 8678, char_end: 8682, byte_start: 8678, byte_end: 8682, column_start: 27, column_end: 31, line_start: 254, line_end: 254 }: 'abc
Token { kind: Backtick, char_start: 8682, char_end: 8683, byte_start: 8682, byte_end: 8683, column_start: 31, column_end: 32, line_start: 254, line_end: 254 }: `
Token { kind: Space, char_start: 8683, char_end: 8684, byte_start: 8683, byte_end: 8684, column_start: 32, column_end: 33, line_start: 254, line_end: 254 }: " "
Token { kind: Text, char_start: 8684, char_end: 8686, byte_start: 8684, byte_end: 8686, column_start: 33, column_end: 35, line_start: 254, line_end: 254 }: in
Token { kind: Space, char_start: 8686, char_end: 8687, byte_start: 8686, byte_end: 8687, column_start: 35, column_end: 36, line_start: 254, line_end: 254 }: " "
Token { kind: Text, char_start: 8687, char_end: 8690, byte_start: 8687, byte_end: 8690, column_start: 36, column_end: 39, line_start: 254, line_end: 254 }: the
Token { kind: Space, char_start: 8690, char_end: 8691, byte_start: 8690, byte_end: 8691, column_start: 39, column_end: 40, line_start: 254, line_end: 254 }: " "
Token { kind: Backtick, char_start: 8691, char_end: 8692, byte_start: 8691, byte_end: 8692, column_start: 40, column_end: 41, line_start: 254, line_end: 254 }: `
Token { kind: Text, char_start: 8692, char_end: 8696, byte_start: 8692, byte_end: 8696, column_start: 41, column_end: 45, line_start: 254, line_end: 254 }: xyz'
Token { kind: Backtick, char_start: 8696, char_end: 8697, byte_start: 8696, byte_end: 8697, column_start: 45, column_end: 46, line_start: 254, line_end: 254 }: `
Token { kind: Space, char_start: 8697, char_end: 8698, byte_start: 8697, byte_end: 8698, column_start: 46, column_end: 47, line_start: 254, line_end: 254 }: " "
Token { kind: Text, char_start: 8698, char_end: 8708, byte_start: 8698, byte_end: 8708, column_start: 47, column_end: 57, line_start: 254, line_end: 254 }: directory:
Token { kind: Newline, char_start: 8708, char_end: 8709, byte_start: 8708, byte_end: 8709, column_start: 57, column_end: 1, line_start: 254, line_end: 255 }: "\n"
Token { kind: Newline, char_start: 8709, char_end: 8710, byte_start: 8709, byte_end: 8710, column_start: 1, column_end: 1, line_start: 255, line_end: 256 }: "\n"
Token { kind: CodeFence, char_start: 8710, char_end: 8713, byte_start: 8710, byte_end: 8713, column_start: 1, column_end: 4, line_start: 256, line_end: 256 }: ```
Token { kind: Newline, char_start: 8713, char_end: 8714, byte_start: 8713, byte_end: 8714, column_start: 4, column_end: 1, line_start: 256, line_end: 257 }: "\n"
Token { kind: Text, char_start: 8714, char_end: 8718, byte_start: 8714, byte_end: 8718, column_start: 1, column_end: 5, line_start: 257, line_end: 257 }: :Ack
Token { kind: Space, char_start: 8718, char_end: 8719, byte_start: 8718, byte_end: 8719, column_start: 5, column_end: 6, line_start: 257, line_end: 257 }: " "
Token { kind: Text, char_start: 8719, char_end: 8723, byte_start: 8719, byte_end: 8723, column_start: 6, column_end: 10, line_start: 257, line_end: 257 }: 'abc
Token { kind: Space, char_start: 8723, char_end: 8724, byte_start: 8723, byte_end: 8724, column_start: 10, column_end: 11, line_start: 257, line_end: 257 }: " "
Token { kind: Text, char_start: 8724, char_end: 8728, byte_start: 8724, byte_end: 8728, column_start: 11, column_end: 15, line_start: 257, line_end: 257 }: xyz'
Token { kind: Newline, char_start: 8728, char_end: 8729, byte_start: 8728, byte_end: 8729, column_start: 15, column_end: 1, line_start: 257, line_end: 258 }: "\n"
Token { kind: CodeFence, char_start: 8729, char_end: 8732, byte_start: 8729, byte_end: 8732, column_start: 1, column_end: 4, line_start: 258, line_end: 258 }: ```
Token { kind: Newline, char_start: 8732, char_end: 8733, byte_start: 8732, byte_end: 8733, column_start: 4, column_end: 1, line_start: 258, line_end: 259 }: "\n"
Token { kind: Newline, char_start: 8733, char_end: 8734, byte_start: 8733, byte_end: 8734, column_start: 1, column_end: 1, line_start: 259, line_end: 260 }: "\n"
Token { kind: Text, char_start: 8734, char_end: 8738, byte_start: 8734, byte_end: 8738, column_start: 1, column_end: 5, line_start: 260, line_end: 260 }: This
Token { kind: Space, char_start: 8738, char_end: 8739, byte_start: 8738, byte_end: 8739, column_start: 5, column_end: 6, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8739, char_end: 8747, byte_start: 8739, byte_end: 8747, column_start: 6, column_end: 14, line_start: 260, line_end: 260 }: approach
Token { kind: Space, char_start: 8747, char_end: 8748, byte_start: 8747, byte_end: 8748, column_start: 14, column_end: 15, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8748, char_end: 8750, byte_start: 8748, byte_end: 8750, column_start: 15, column_end: 17, line_start: 260, line_end: 260 }: to
Token { kind: Space, char_start: 8750, char_end: 8751, byte_start: 8750, byte_end: 8751, column_start: 17, column_end: 18, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8751, char_end: 8759, byte_start: 8751, byte_end: 8759, column_start: 18, column_end: 26, line_start: 260, line_end: 260 }: escaping
Token { kind: Space, char_start: 8759, char_end: 8760, byte_start: 8759, byte_end: 8760, column_start: 26, column_end: 27, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8760, char_end: 8762, byte_start: 8760, byte_end: 8762, column_start: 27, column_end: 29, line_start: 260, line_end: 260 }: is
Token { kind: Space, char_start: 8762, char_end: 8763, byte_start: 8762, byte_end: 8763, column_start: 29, column_end: 30, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8763, char_end: 8768, byte_start: 8763, byte_end: 8768, column_start: 30, column_end: 35, line_start: 260, line_end: 260 }: taken
Token { kind: Space, char_start: 8768, char_end: 8769, byte_start: 8768, byte_end: 8769, column_start: 35, column_end: 36, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8769, char_end: 8771, byte_start: 8769, byte_end: 8771, column_start: 36, column_end: 38, line_start: 260, line_end: 260 }: in
Token { kind: Space, char_start: 8771, char_end: 8772, byte_start: 8771, byte_end: 8772, column_start: 38, column_end: 39, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8772, char_end: 8777, byte_start: 8772, byte_end: 8777, column_start: 39, column_end: 44, line_start: 260, line_end: 260 }: order
Token { kind: Space, char_start: 8777, char_end: 8778, byte_start: 8777, byte_end: 8778, column_start: 44, column_end: 45, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8778, char_end: 8780, byte_start: 8778, byte_end: 8780, column_start: 45, column_end: 47, line_start: 260, line_end: 260 }: to
Token { kind: Space, char_start: 8780, char_end: 8781, byte_start: 8780, byte_end: 8781, column_start: 47, column_end: 48, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8781, char_end: 8785, byte_start: 8781, byte_end: 8785, column_start: 48, column_end: 52, line_start: 260, line_end: 260 }: make
Token { kind: Space, char_start: 8785, char_end: 8786, byte_start: 8785, byte_end: 8786, column_start: 52, column_end: 53, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8786, char_end: 8788, byte_start: 8786, byte_end: 8788, column_start: 53, column_end: 55, line_start: 260, line_end: 260 }: it
Token { kind: Space, char_start: 8788, char_end: 8789, byte_start: 8788, byte_end: 8789, column_start: 55, column_end: 56, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8789, char_end: 8803, byte_start: 8789, byte_end: 8803, column_start: 56, column_end: 70, line_start: 260, line_end: 260 }: straightfoward
Token { kind: Space, char_start: 8803, char_end: 8804, byte_start: 8803, byte_end: 8804, column_start: 70, column_end: 71, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8804, char_end: 8806, byte_start: 8804, byte_end: 8806, column_start: 71, column_end: 73, line_start: 260, line_end: 260 }: to
Token { kind: Space, char_start: 8806, char_end: 8807, byte_start: 8806, byte_end: 8807, column_start: 73, column_end: 74, line_start: 260, line_end: 260 }: " "
Token { kind: Text, char_start: 8807, char_end: 8810, byte_start: 8807, byte_end: 8810, column_start: 74, column_end: 77, line_start: 260, line_end: 260 }: use
Token { kind: Newline, char_start: 8810, char_end: 8811, byte_start: 8810, byte_end: 8811, column_start: 77, column_end: 1, line_start: 260, line_end: 261 }: "\n"
Token { kind: Text, char_start: 8811, char_end: 8819, byte_start: 8811, byte_end: 8819, column_start: 1, column_end: 9, line_start: 261, line_end: 261 }: powerful
Token { kind: Space, char_start: 8819, char_end: 8820, byte_start: 8819, byte_end: 8820, column_start: 9, column_end: 10, line_start: 261, line_end: 261 }: " "
Token { kind: Text, char_start: 8820, char_end: 8824, byte_start: 8820, byte_end: 8824, column_start: 10, column_end: 14, line_start: 261, line_end: 261 }: Perl
Token { kind: Hyphen, char_start: 8824, char_end: 8825, byte_start: 8824, byte_end: 8825, column_start: 14, column_end: 15, line_start: 261, line_end: 261 }: -
Token { kind: Text, char_start: 8825, char_end: 8835, byte_start: 8825, byte_end: 8835, column_start: 15, column_end: 25, line_start: 261, line_end: 261 }: compatible
Token { kind: Space, char_start: 8835, char_end: 8836, byte_start: 8835, byte_end: 8836, column_start: 25, column_end: 26, line_start: 261, line_end: 261 }: " "
Token { kind: Text, char_start: 8836, char_end: 8843, byte_start: 8836, byte_end: 8843, column_start: 26, column_end: 33, line_start: 261, line_end: 261 }: regular
Token { kind: Space, char_start: 8843, char_end: 8844, byte_start: 8843, byte_end: 8844, column_start: 33, column_end: 34, line_start: 261, line_end: 261 }: " "
Token { kind: Text, char_start: 8844, char_end: 8854, byte_start: 8844, byte_end: 8854, column_start: 34, column_end: 44, line_start: 261, line_end: 261 }: expression
Token { kind: Space, char_start: 8854, char_end: 8855, byte_start: 8854, byte_end: 8855, column_start: 44, column_end: 45, line_start: 261, line_end: 261 }: " "
Token { kind: Text, char_start: 8855, char_end: 8861, byte_start: 8855, byte_end: 8861, column_start: 45, column_end: 51, line_start: 261, line_end: 261 }: syntax
Token { kind: Space, char_start: 8861, char_end: 8862, byte_start: 8861, byte_end: 8862, column_start: 51, column_end: 52, line_start: 261, line_end: 261 }: " "
Token { kind: Text, char_start: 8862, char_end: 8864, byte_start: 8862, byte_end: 8864, column_start: 52, column_end: 54, line_start: 261, line_end: 261 }: in
Token { kind: Space, char_start: 8864, char_end: 8865, byte_start: 8864, byte_end: 8865, column_start: 54, column_end: 55, line_start: 261, line_end: 261 }: " "
Token { kind: Text, char_start: 8865, char_end: 8867, byte_start: 8865, byte_end: 8867, column_start: 55, column_end: 57, line_start: 261, line_end: 261 }: an
Token { kind: Space, char_start: 8867, char_end: 8868, byte_start: 8867, byte_end: 8868, column_start: 57, column_end: 58, line_start: 261, line_end: 261 }: " "
Token { kind: Text, char_start: 8868, char_end: 8879, byte_start: 8868, byte_end: 8879, column_start: 58, column_end: 69, line_start: 261, line_end: 261 }: unambiguous
Token { kind: Space, char_start: 8879, char_end: 8880, byte_start: 8879, byte_end: 8880, column_start: 69, column_end: 70, line_start: 261, line_end: 261 }: " "
Token { kind: Text, char_start: 8880, char_end: 8883, byte_start: 8880, byte_end: 8883, column_start: 70, column_end: 73, line_start: 261, line_end: 261 }: way
Token { kind: Newline, char_start: 8883, char_end: 8884, byte_start: 8883, byte_end: 8884, column_start: 73, column_end: 1, line_start: 261, line_end: 262 }: "\n"
Token { kind: Text, char_start: 8884, char_end: 8891, byte_start: 8884, byte_end: 8891, column_start: 1, column_end: 8, line_start: 262, line_end: 262 }: without
Token { kind: Space, char_start: 8891, char_end: 8892, byte_start: 8891, byte_end: 8892, column_start: 8, column_end: 9, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8892, char_end: 8898, byte_start: 8892, byte_end: 8898, column_start: 9, column_end: 15, line_start: 262, line_end: 262 }: having
Token { kind: Space, char_start: 8898, char_end: 8899, byte_start: 8898, byte_end: 8899, column_start: 15, column_end: 16, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8899, char_end: 8901, byte_start: 8899, byte_end: 8901, column_start: 16, column_end: 18, line_start: 262, line_end: 262 }: to
Token { kind: Space, char_start: 8901, char_end: 8902, byte_start: 8901, byte_end: 8902, column_start: 18, column_end: 19, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8902, char_end: 8907, byte_start: 8902, byte_end: 8907, column_start: 19, column_end: 24, line_start: 262, line_end: 262 }: worry
Token { kind: Space, char_start: 8907, char_end: 8908, byte_start: 8907, byte_end: 8908, column_start: 24, column_end: 25, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8908, char_end: 8913, byte_start: 8908, byte_end: 8913, column_start: 25, column_end: 30, line_start: 262, line_end: 262 }: about
Token { kind: Space, char_start: 8913, char_end: 8914, byte_start: 8913, byte_end: 8914, column_start: 30, column_end: 31, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8914, char_end: 8919, byte_start: 8914, byte_end: 8919, column_start: 31, column_end: 36, line_start: 262, line_end: 262 }: shell
Token { kind: Space, char_start: 8919, char_end: 8920, byte_start: 8919, byte_end: 8920, column_start: 36, column_end: 37, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8920, char_end: 8928, byte_start: 8920, byte_end: 8928, column_start: 37, column_end: 45, line_start: 262, line_end: 262 }: escaping
Token { kind: Space, char_start: 8928, char_end: 8929, byte_start: 8928, byte_end: 8929, column_start: 45, column_end: 46, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8929, char_end: 8935, byte_start: 8929, byte_end: 8935, column_start: 46, column_end: 52, line_start: 262, line_end: 262 }: rules;
Token { kind: Space, char_start: 8935, char_end: 8936, byte_start: 8935, byte_end: 8936, column_start: 52, column_end: 53, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8936, char_end: 8939, byte_start: 8936, byte_end: 8939, column_start: 53, column_end: 56, line_start: 262, line_end: 262 }: for
Token { kind: Space, char_start: 8939, char_end: 8940, byte_start: 8939, byte_end: 8940, column_start: 56, column_end: 57, line_start: 262, line_end: 262 }: " "
Token { kind: Text, char_start: 8940, char_end: 8948, byte_start: 8940, byte_end: 8948, column_start: 57, column_end: 65, line_start: 262, line_end: 262 }: example:
Token { kind: Newline, char_start: 8948, char_end: 8949, byte_start: 8948, byte_end: 8949, column_start: 65, column_end: 1, line_start: 262, line_end: 263 }: "\n"
Token { kind: Newline, char_start: 8949, char_end: 8950, byte_start: 8949, byte_end: 8950, column_start: 1, column_end: 1, line_start: 263, line_end: 264 }: "\n"
Token { kind: CodeFence, char_start: 8950, char_end: 8953, byte_start: 8950, byte_end: 8953, column_start: 1, column_end: 4, line_start: 264, line_end: 264 }: ```
Token { kind: Newline, char_start: 8953, char_end: 8954, byte_start: 8953, byte_end: 8954, column_start: 4, column_end: 1, line_start: 264, line_end: 265 }: "\n"
Token { kind: Text, char_start: 8954, char_end: 8958, byte_start: 8954, byte_end: 8958, column_start: 1, column_end: 5, line_start: 265, line_end: 265 }: :Ack
Token { kind: Space, char_start: 8958, char_end: 8959, byte_start: 8958, byte_end: 8959, column_start: 5, column_end: 6, line_start: 265, line_end: 265 }: " "
Token { kind: Text, char_start: 8959, char_end: 8965, byte_start: 8959, byte_end: 8965, column_start: 6, column_end: 12, line_start: 265, line_end: 265 }: \blog\
Token { kind: Lparen, char_start: 8965, char_end: 8966, byte_start: 8965, byte_end: 8966, column_start: 12, column_end: 13, line_start: 265, line_end: 265 }: (
Token { kind: Lparen, char_start: 8966, char_end: 8967, byte_start: 8966, byte_end: 8967, column_start: 13, column_end: 14, line_start: 265, line_end: 265 }: (
Token { kind: Lbracket, char_start: 8967, char_end: 8968, byte_start: 8967, byte_end: 8968, column_start: 14, column_end: 15, line_start: 265, line_end: 265 }: [
Token { kind: Text, char_start: 8968, char_end: 8970, byte_start: 8968, byte_end: 8970, column_start: 15, column_end: 17, line_start: 265, line_end: 265 }: '"
Token { kind: Rbracket, char_start: 8970, char_end: 8971, byte_start: 8970, byte_end: 8971, column_start: 17, column_end: 18, line_start: 265, line_end: 265 }: ]
Token { kind: Rparen, char_start: 8971, char_end: 8972, byte_start: 8971, byte_end: 8972, column_start: 18, column_end: 19, line_start: 265, line_end: 265 }: )
Token { kind: Text, char_start: 8972, char_end: 8973, byte_start: 8972, byte_end: 8973, column_start: 19, column_end: 20, line_start: 265, line_end: 265 }: .
Token { kind: Star, char_start: 8973, char_end: 8974, byte_start: 8973, byte_end: 8974, column_start: 20, column_end: 21, line_start: 265, line_end: 265 }: *
Token { kind: Text, char_start: 8974, char_end: 8978, byte_start: 8974, byte_end: 8978, column_start: 21, column_end: 25, line_start: 265, line_end: 265 }: ?\1\
Token { kind: Rparen, char_start: 8978, char_end: 8979, byte_start: 8978, byte_end: 8979, column_start: 25, column_end: 26, line_start: 265, line_end: 265 }: )
Token { kind: Space, char_start: 8979, char_end: 8980, byte_start: 8979, byte_end: 8980, column_start: 26, column_end: 27, line_start: 265, line_end: 265 }: " "
Token { kind: Hyphen, char_start: 8980, char_end: 8981, byte_start: 8980, byte_end: 8981, column_start: 27, column_end: 28, line_start: 265, line_end: 265 }: -
Token { kind: Text, char_start: 8981, char_end: 8982, byte_start: 8981, byte_end: 8982, column_start: 28, column_end: 29, line_start: 265, line_end: 265 }: i
Token { kind: Space, char_start: 8982, char_end: 8983, byte_start: 8982, byte_end: 8983, column_start: 29, column_end: 30, line_start: 265, line_end: 265 }: " "
unterminated horizontal rule (line 265, column 32)
Token { kind: Text, char_start: 8985, char_end: 8991, byte_start: 8985, byte_end: 8991, column_start: 32, column_end: 38, line_start: 265, line_end: 265 }: ignore
Token { kind: Hyphen, char_start: 8991, char_end: 8992, byte_start: 8991, byte_end: 8992, column_start: 38, column_end: 39, line_start: 265, line_end: 265 }: -
Token { kind: Text, char_start: 8992, char_end: 9006, byte_start: 8992, byte_end: 9006, column_start: 39, column_end: 53, line_start: 265, line_end: 265 }: dir=src/vendor
Token { kind: Space, char_start: 9006, char_end: 9007, byte_start: 9006, byte_end: 9007, column_start: 53, column_end: 54, line_start: 265, line_end: 265 }: " "
Token { kind: Text, char_start: 9007, char_end: 9010, byte_start: 9007, byte_end: 9010, column_start: 54, column_end: 57, line_start: 265, line_end: 265 }: src
Token { kind: Space, char_start: 9010, char_end: 9011, byte_start: 9010, byte_end: 9011, column_start: 57, column_end: 58, line_start: 265, line_end: 265 }: " "
Token { kind: Text, char_start: 9011, char_end: 9015, byte_start: 9011, byte_end: 9015, column_start: 58, column_end: 62, line_start: 265, line_end: 265 }: dist
Token { kind: Space, char_start: 9015, char_end: 9016, byte_start: 9015, byte_end: 9016, column_start: 62, column_end: 63, line_start: 265, line_end: 265 }: " "
Token { kind: Text, char_start: 9016, char_end: 9021, byte_start: 9016, byte_end: 9021, column_start: 63, column_end: 68, line_start: 265, line_end: 265 }: build
Token { kind: Newline, char_start: 9021, char_end: 9022, byte_start: 9021, byte_end: 9022, column_start: 68, column_end: 1, line_start: 265, line_end: 266 }: "\n"
Token { kind: CodeFence, char_start: 9022, char_end: 9025, byte_start: 9022, byte_end: 9025, column_start: 1, column_end: 4, line_start: 266, line_end: 266 }: ```
Token { kind: Newline, char_start: 9025, char_end: 9026, byte_start: 9025, byte_end: 9026, column_start: 4, column_end: 1, line_start: 266, line_end: 267 }: "\n"
Token { kind: Newline, char_start: 9026, char_end: 9027, byte_start: 9026, byte_end: 9027, column_start: 1, column_end: 1, line_start: 267, line_end: 268 }: "\n"
Token { kind: Heading(Heading1), char_start: 9027, char_end: 9028, byte_start: 9027, byte_end: 9028, column_start: 1, column_end: 2, line_start: 268, line_end: 268 }: #
Token { kind: Space, char_start: 9028, char_end: 9029, byte_start: 9028, byte_end: 9029, column_start: 2, column_end: 3, line_start: 268, line_end: 268 }: " "
Token { kind: Text, char_start: 9029, char_end: 9032, byte_start: 9029, byte_end: 9032, column_start: 3, column_end: 6, line_start: 268, line_end: 268 }: FAQ
Token { kind: Newline, char_start: 9032, char_end: 9033, byte_start: 9032, byte_end: 9033, column_start: 6, column_end: 1, line_start: 268, line_end: 269 }: "\n"
Token { kind: Newline, char_start: 9033, char_end: 9034, byte_start: 9033, byte_end: 9034, column_start: 1, column_end: 1, line_start: 269, line_end: 270 }: "\n"
Token { kind: Heading(Heading2), char_start: 9034, char_end: 9036, byte_start: 9034, byte_end: 9036, column_start: 1, column_end: 3, line_start: 270, line_end: 270 }: ##
Token { kind: Space, char_start: 9036, char_end: 9037, byte_start: 9036, byte_end: 9037, column_start: 3, column_end: 4, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9037, char_end: 9040, byte_start: 9037, byte_end: 9040, column_start: 4, column_end: 7, line_start: 270, line_end: 270 }: Why
Token { kind: Space, char_start: 9040, char_end: 9041, byte_start: 9040, byte_end: 9041, column_start: 7, column_end: 8, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9041, char_end: 9043, byte_start: 9041, byte_end: 9043, column_start: 8, column_end: 10, line_start: 270, line_end: 270 }: do
Token { kind: Space, char_start: 9043, char_end: 9044, byte_start: 9043, byte_end: 9044, column_start: 10, column_end: 11, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9044, char_end: 9050, byte_start: 9044, byte_end: 9050, column_start: 11, column_end: 17, line_start: 270, line_end: 270 }: Ferret
Token { kind: Space, char_start: 9050, char_end: 9051, byte_start: 9050, byte_end: 9051, column_start: 17, column_end: 18, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9051, char_end: 9059, byte_start: 9051, byte_end: 9059, column_start: 18, column_end: 26, line_start: 270, line_end: 270 }: commands
Token { kind: Space, char_start: 9059, char_end: 9060, byte_start: 9059, byte_end: 9060, column_start: 26, column_end: 27, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9060, char_end: 9065, byte_start: 9060, byte_end: 9065, column_start: 27, column_end: 32, line_start: 270, line_end: 270 }: start
Token { kind: Space, char_start: 9065, char_end: 9066, byte_start: 9065, byte_end: 9066, column_start: 32, column_end: 33, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9066, char_end: 9070, byte_start: 9066, byte_end: 9070, column_start: 33, column_end: 37, line_start: 270, line_end: 270 }: with
Token { kind: Space, char_start: 9070, char_end: 9071, byte_start: 9070, byte_end: 9071, column_start: 37, column_end: 38, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9071, char_end: 9077, byte_start: 9071, byte_end: 9077, column_start: 38, column_end: 44, line_start: 270, line_end: 270 }: "Ack",
Token { kind: Space, char_start: 9077, char_end: 9078, byte_start: 9077, byte_end: 9078, column_start: 44, column_end: 45, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9078, char_end: 9084, byte_start: 9078, byte_end: 9084, column_start: 45, column_end: 51, line_start: 270, line_end: 270 }: "Lack"
Token { kind: Space, char_start: 9084, char_end: 9085, byte_start: 9084, byte_end: 9085, column_start: 51, column_end: 52, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9085, char_end: 9088, byte_start: 9085, byte_end: 9088, column_start: 52, column_end: 55, line_start: 270, line_end: 270 }: and
Token { kind: Space, char_start: 9088, char_end: 9089, byte_start: 9088, byte_end: 9089, column_start: 55, column_end: 56, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9089, char_end: 9091, byte_start: 9089, byte_end: 9091, column_start: 56, column_end: 58, line_start: 270, line_end: 270 }: so
Token { kind: Space, char_start: 9091, char_end: 9092, byte_start: 9091, byte_end: 9092, column_start: 58, column_end: 59, line_start: 270, line_end: 270 }: " "
Token { kind: Text, char_start: 9092, char_end: 9095, byte_start: 9092, byte_end: 9095, column_start: 59, column_end: 62, line_start: 270, line_end: 270 }: on?
Token { kind: Newline, char_start: 9095, char_end: 9096, byte_start: 9095, byte_end: 9096, column_start: 62, column_end: 1, line_start: 270, line_end: 271 }: "\n"
Token { kind: Newline, char_start: 9096, char_end: 9097, byte_start: 9096, byte_end: 9097, column_start: 1, column_end: 1, line_start: 271, line_end: 272 }: "\n"
Token { kind: Text, char_start: 9097, char_end: 9103, byte_start: 9097, byte_end: 9103, column_start: 1, column_end: 7, line_start: 272, line_end: 272 }: Ferret
Token { kind: Space, char_start: 9103, char_end: 9104, byte_start: 9103, byte_end: 9104, column_start: 7, column_end: 8, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9104, char_end: 9107, byte_start: 9104, byte_end: 9107, column_start: 8, column_end: 11, line_start: 272, line_end: 272 }: was
Token { kind: Space, char_start: 9107, char_end: 9108, byte_start: 9107, byte_end: 9108, column_start: 11, column_end: 12, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9108, char_end: 9118, byte_start: 9108, byte_end: 9118, column_start: 12, column_end: 22, line_start: 272, line_end: 272 }: originally
Token { kind: Space, char_start: 9118, char_end: 9119, byte_start: 9118, byte_end: 9119, column_start: 22, column_end: 23, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9119, char_end: 9122, byte_start: 9119, byte_end: 9122, column_start: 23, column_end: 26, line_start: 272, line_end: 272 }: the
Token { kind: Space, char_start: 9122, char_end: 9123, byte_start: 9122, byte_end: 9123, column_start: 26, column_end: 27, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9123, char_end: 9131, byte_start: 9123, byte_end: 9131, column_start: 27, column_end: 35, line_start: 272, line_end: 272 }: thinnest
Token { kind: Space, char_start: 9131, char_end: 9132, byte_start: 9131, byte_end: 9132, column_start: 35, column_end: 36, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9132, char_end: 9134, byte_start: 9132, byte_end: 9134, column_start: 36, column_end: 38, line_start: 272, line_end: 272 }: of
Token { kind: Space, char_start: 9134, char_end: 9135, byte_start: 9134, byte_end: 9135, column_start: 38, column_end: 39, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9135, char_end: 9143, byte_start: 9135, byte_end: 9143, column_start: 39, column_end: 47, line_start: 272, line_end: 272 }: wrappers
Token { kind: Space, char_start: 9143, char_end: 9144, byte_start: 9143, byte_end: 9144, column_start: 47, column_end: 48, line_start: 272, line_end: 272 }: " "
Token { kind: Lparen, char_start: 9144, char_end: 9145, byte_start: 9144, byte_end: 9145, column_start: 48, column_end: 49, line_start: 272, line_end: 272 }: (
Token { kind: Text, char_start: 9145, char_end: 9146, byte_start: 9145, byte_end: 9146, column_start: 49, column_end: 50, line_start: 272, line_end: 272 }: 7
Token { kind: Space, char_start: 9146, char_end: 9147, byte_start: 9146, byte_end: 9147, column_start: 50, column_end: 51, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9147, char_end: 9152, byte_start: 9147, byte_end: 9152, column_start: 51, column_end: 56, line_start: 272, line_end: 272 }: lines
Token { kind: Space, char_start: 9152, char_end: 9153, byte_start: 9152, byte_end: 9153, column_start: 56, column_end: 57, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9153, char_end: 9155, byte_start: 9153, byte_end: 9155, column_start: 57, column_end: 59, line_start: 272, line_end: 272 }: of
Token { kind: Space, char_start: 9155, char_end: 9156, byte_start: 9155, byte_end: 9156, column_start: 59, column_end: 60, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9156, char_end: 9160, byte_start: 9156, byte_end: 9160, column_start: 60, column_end: 64, line_start: 272, line_end: 272 }: code
Token { kind: Space, char_start: 9160, char_end: 9161, byte_start: 9160, byte_end: 9161, column_start: 64, column_end: 65, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9161, char_end: 9163, byte_start: 9161, byte_end: 9163, column_start: 65, column_end: 67, line_start: 272, line_end: 272 }: in
Token { kind: Space, char_start: 9163, char_end: 9164, byte_start: 9163, byte_end: 9164, column_start: 67, column_end: 68, line_start: 272, line_end: 272 }: " "
Token { kind: Text, char_start: 9164, char_end: 9166, byte_start: 9164, byte_end: 9166, column_start: 68, column_end: 70, line_start: 272, line_end: 272 }: my
Token { kind: Newline, char_start: 9166, char_end: 9167, byte_start: 9166, byte_end: 9167, column_start: 70, column_end: 1, line_start: 272, line_end: 273 }: "\n"
Token { kind: Bar, char_start: 9167, char_end: 9168, byte_start: 9167, byte_end: 9168, column_start: 1, column_end: 2, line_start: 273, line_end: 273 }: |
Token { kind: Text, char_start: 9168, char_end: 9174, byte_start: 9168, byte_end: 9174, column_start: 2, column_end: 8, line_start: 273, line_end: 273 }: .vimrc
Token { kind: Bar, char_start: 9174, char_end: 9175, byte_start: 9174, byte_end: 9175, column_start: 8, column_end: 9, line_start: 273, line_end: 273 }: |
Token { kind: Rparen, char_start: 9175, char_end: 9176, byte_start: 9175, byte_end: 9176, column_start: 9, column_end: 10, line_start: 273, line_end: 273 }: )
Token { kind: Space, char_start: 9176, char_end: 9177, byte_start: 9176, byte_end: 9177, column_start: 10, column_end: 11, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9177, char_end: 9183, byte_start: 9177, byte_end: 9183, column_start: 11, column_end: 17, line_start: 273, line_end: 273 }: around
Token { kind: Space, char_start: 9183, char_end: 9184, byte_start: 9183, byte_end: 9184, column_start: 17, column_end: 18, line_start: 273, line_end: 273 }: " "
Token { kind: Backtick, char_start: 9184, char_end: 9185, byte_start: 9184, byte_end: 9185, column_start: 18, column_end: 19, line_start: 273, line_end: 273 }: `
Token { kind: Text, char_start: 9185, char_end: 9188, byte_start: 9185, byte_end: 9188, column_start: 19, column_end: 22, line_start: 273, line_end: 273 }: ack
Token { kind: Backtick, char_start: 9188, char_end: 9189, byte_start: 9188, byte_end: 9189, column_start: 22, column_end: 23, line_start: 273, line_end: 273 }: `
Token { kind: Text, char_start: 9189, char_end: 9190, byte_start: 9189, byte_end: 9190, column_start: 23, column_end: 24, line_start: 273, line_end: 273 }: .
Token { kind: Space, char_start: 9190, char_end: 9191, byte_start: 9190, byte_end: 9191, column_start: 24, column_end: 25, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9191, char_end: 9194, byte_start: 9191, byte_end: 9194, column_start: 25, column_end: 28, line_start: 273, line_end: 273 }: The
Token { kind: Space, char_start: 9194, char_end: 9195, byte_start: 9194, byte_end: 9195, column_start: 28, column_end: 29, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9195, char_end: 9203, byte_start: 9195, byte_end: 9203, column_start: 29, column_end: 37, line_start: 273, line_end: 273 }: earliest
Token { kind: Space, char_start: 9203, char_end: 9204, byte_start: 9203, byte_end: 9204, column_start: 37, column_end: 38, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9204, char_end: 9210, byte_start: 9204, byte_end: 9210, column_start: 38, column_end: 44, line_start: 273, line_end: 273 }: traces
Token { kind: Space, char_start: 9210, char_end: 9211, byte_start: 9210, byte_end: 9211, column_start: 44, column_end: 45, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9211, char_end: 9213, byte_start: 9211, byte_end: 9213, column_start: 45, column_end: 47, line_start: 273, line_end: 273 }: of
Token { kind: Space, char_start: 9213, char_end: 9214, byte_start: 9213, byte_end: 9214, column_start: 47, column_end: 48, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9214, char_end: 9216, byte_start: 9214, byte_end: 9216, column_start: 48, column_end: 50, line_start: 273, line_end: 273 }: it
Token { kind: Space, char_start: 9216, char_end: 9217, byte_start: 9216, byte_end: 9217, column_start: 50, column_end: 51, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9217, char_end: 9220, byte_start: 9217, byte_end: 9220, column_start: 51, column_end: 54, line_start: 273, line_end: 273 }: can
Token { kind: Space, char_start: 9220, char_end: 9221, byte_start: 9220, byte_end: 9221, column_start: 54, column_end: 55, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9221, char_end: 9223, byte_start: 9221, byte_end: 9223, column_start: 55, column_end: 57, line_start: 273, line_end: 273 }: be
Token { kind: Space, char_start: 9223, char_end: 9224, byte_start: 9223, byte_end: 9224, column_start: 57, column_end: 58, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9224, char_end: 9228, byte_start: 9224, byte_end: 9228, column_start: 58, column_end: 62, line_start: 273, line_end: 273 }: seen
Token { kind: Space, char_start: 9228, char_end: 9229, byte_start: 9228, byte_end: 9229, column_start: 62, column_end: 63, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9229, char_end: 9231, byte_start: 9229, byte_end: 9231, column_start: 63, column_end: 65, line_start: 273, line_end: 273 }: in
Token { kind: Space, char_start: 9231, char_end: 9232, byte_start: 9231, byte_end: 9232, column_start: 65, column_end: 66, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9232, char_end: 9235, byte_start: 9232, byte_end: 9235, column_start: 66, column_end: 69, line_start: 273, line_end: 273 }: the
Token { kind: Space, char_start: 9235, char_end: 9236, byte_start: 9235, byte_end: 9236, column_start: 69, column_end: 70, line_start: 273, line_end: 273 }: " "
Token { kind: Text, char_start: 9236, char_end: 9243, byte_start: 9236, byte_end: 9243, column_start: 70, column_end: 77, line_start: 273, line_end: 273 }: initial
Token { kind: Newline, char_start: 9243, char_end: 9244, byte_start: 9243, byte_end: 9244, column_start: 77, column_end: 1, line_start: 273, line_end: 274 }: "\n"
Token { kind: Text, char_start: 9244, char_end: 9250, byte_start: 9244, byte_end: 9250, column_start: 1, column_end: 7, line_start: 274, line_end: 274 }: commit
Token { kind: Space, char_start: 9250, char_end: 9251, byte_start: 9250, byte_end: 9251, column_start: 7, column_end: 8, line_start: 274, line_end: 274 }: " "
Token { kind: Text, char_start: 9251, char_end: 9253, byte_start: 9251, byte_end: 9253, column_start: 8, column_end: 10, line_start: 274, line_end: 274 }: to
Token { kind: Space, char_start: 9253, char_end: 9254, byte_start: 9253, byte_end: 9254, column_start: 10, column_end: 11, line_start: 274, line_end: 274 }: " "
Token { kind: Text, char_start: 9254, char_end: 9256, byte_start: 9254, byte_end: 9256, column_start: 11, column_end: 13, line_start: 274, line_end: 274 }: my
Token { kind: Space, char_start: 9256, char_end: 9257, byte_start: 9256, byte_end: 9257, column_start: 13, column_end: 14, line_start: 274, line_end: 274 }: " "
Token { kind: Text, char_start: 9257, char_end: 9265, byte_start: 9257, byte_end: 9265, column_start: 14, column_end: 22, line_start: 274, line_end: 274 }: dotfiles
Token { kind: Space, char_start: 9265, char_end: 9266, byte_start: 9265, byte_end: 9266, column_start: 22, column_end: 23, line_start: 274, line_end: 274 }: " "
Token { kind: Text, char_start: 9266, char_end: 9270, byte_start: 9266, byte_end: 9270, column_start: 23, column_end: 27, line_start: 274, line_end: 274 }: repo
Token { kind: Space, char_start: 9270, char_end: 9271, byte_start: 9270, byte_end: 9271, column_start: 27, column_end: 28, line_start: 274, line_end: 274 }: " "
Token { kind: Text, char_start: 9271, char_end: 9273, byte_start: 9271, byte_end: 9273, column_start: 28, column_end: 30, line_start: 274, line_end: 274 }: in
Token { kind: Space, char_start: 9273, char_end: 9274, byte_start: 9273, byte_end: 9274, column_start: 30, column_end: 31, line_start: 274, line_end: 274 }: " "
Token { kind: Text, char_start: 9274, char_end: 9278, byte_start: 9274, byte_end: 9278, column_start: 31, column_end: 35, line_start: 274, line_end: 274 }: May,
Token { kind: Space, char_start: 9278, char_end: 9279, byte_start: 9278, byte_end: 9279, column_start: 35, column_end: 36, line_start: 274, line_end: 274 }: " "
Token { kind: Text, char_start: 9279, char_end: 9283, byte_start: 9279, byte_end: 9283, column_start: 36, column_end: 40, line_start: 274, line_end: 274 }: 2009
Token { kind: Space, char_start: 9283, char_end: 9284, byte_start: 9283, byte_end: 9284, column_start: 40, column_end: 41, line_start: 274, line_end: 274 }: " "
Token { kind: Lparen, char_start: 9284, char_end: 9285, byte_start: 9284, byte_end: 9285, column_start: 41, column_end: 42, line_start: 274, line_end: 274 }: (
Token { kind: Text, char_start: 9285, char_end: 9306, byte_start: 9285, byte_end: 9306, column_start: 42, column_end: 63, line_start: 274, line_end: 274 }: https://wincent.dev/h
Token { kind: Rparen, char_start: 9306, char_end: 9307, byte_start: 9306, byte_end: 9307, column_start: 63, column_end: 64, line_start: 274, line_end: 274 }: )
Token { kind: Text, char_start: 9307, char_end: 9308, byte_start: 9307, byte_end: 9308, column_start: 64, column_end: 65, line_start: 274, line_end: 274 }: .
Token { kind: Newline, char_start: 9308, char_end: 9309, byte_start: 9308, byte_end: 9309, column_start: 65, column_end: 1, line_start: 274, line_end: 275 }: "\n"
Token { kind: Newline, char_start: 9309, char_end: 9310, byte_start: 9309, byte_end: 9310, column_start: 1, column_end: 1, line_start: 275, line_end: 276 }: "\n"
Token { kind: Text, char_start: 9310, char_end: 9313, byte_start: 9310, byte_end: 9313, column_start: 1, column_end: 4, line_start: 276, line_end: 276 }: So,
Token { kind: Space, char_start: 9313, char_end: 9314, byte_start: 9313, byte_end: 9314, column_start: 4, column_end: 5, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9314, char_end: 9318, byte_start: 9314, byte_end: 9318, column_start: 5, column_end: 9, line_start: 276, line_end: 276 }: even
Token { kind: Space, char_start: 9318, char_end: 9319, byte_start: 9318, byte_end: 9319, column_start: 9, column_end: 10, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9319, char_end: 9325, byte_start: 9319, byte_end: 9325, column_start: 10, column_end: 16, line_start: 276, line_end: 276 }: though
Token { kind: Space, char_start: 9325, char_end: 9326, byte_start: 9325, byte_end: 9326, column_start: 16, column_end: 17, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9326, char_end: 9332, byte_start: 9326, byte_end: 9332, column_start: 17, column_end: 23, line_start: 276, line_end: 276 }: Ferret
Token { kind: Space, char_start: 9332, char_end: 9333, byte_start: 9332, byte_end: 9333, column_start: 23, column_end: 24, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9333, char_end: 9336, byte_start: 9333, byte_end: 9336, column_start: 24, column_end: 27, line_start: 276, line_end: 276 }: has
Token { kind: Space, char_start: 9336, char_end: 9337, byte_start: 9336, byte_end: 9337, column_start: 27, column_end: 28, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9337, char_end: 9338, byte_start: 9337, byte_end: 9338, column_start: 28, column_end: 29, line_start: 276, line_end: 276 }: a
Token { kind: Space, char_start: 9338, char_end: 9339, byte_start: 9338, byte_end: 9339, column_start: 29, column_end: 30, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9339, char_end: 9342, byte_start: 9339, byte_end: 9342, column_start: 30, column_end: 33, line_start: 276, line_end: 276 }: new
Token { kind: Space, char_start: 9342, char_end: 9343, byte_start: 9342, byte_end: 9343, column_start: 33, column_end: 34, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9343, char_end: 9347, byte_start: 9343, byte_end: 9347, column_start: 34, column_end: 38, line_start: 276, line_end: 276 }: name
Token { kind: Space, char_start: 9347, char_end: 9348, byte_start: 9347, byte_end: 9348, column_start: 38, column_end: 39, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9348, char_end: 9351, byte_start: 9348, byte_end: 9351, column_start: 39, column_end: 42, line_start: 276, line_end: 276 }: now
Token { kind: Space, char_start: 9351, char_end: 9352, byte_start: 9351, byte_end: 9352, column_start: 42, column_end: 43, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9352, char_end: 9355, byte_start: 9352, byte_end: 9355, column_start: 43, column_end: 46, line_start: 276, line_end: 276 }: and
Token { kind: Space, char_start: 9355, char_end: 9356, byte_start: 9355, byte_end: 9356, column_start: 46, column_end: 47, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9356, char_end: 9364, byte_start: 9356, byte_end: 9364, column_start: 47, column_end: 55, line_start: 276, line_end: 276 }: actually
Token { kind: Space, char_start: 9364, char_end: 9365, byte_start: 9364, byte_end: 9365, column_start: 55, column_end: 56, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9365, char_end: 9372, byte_start: 9365, byte_end: 9372, column_start: 56, column_end: 63, line_start: 276, line_end: 276 }: prefers
Token { kind: Space, char_start: 9372, char_end: 9373, byte_start: 9372, byte_end: 9373, column_start: 63, column_end: 64, line_start: 276, line_end: 276 }: " "
Token { kind: Backtick, char_start: 9373, char_end: 9374, byte_start: 9373, byte_end: 9374, column_start: 64, column_end: 65, line_start: 276, line_end: 276 }: `
Token { kind: Text, char_start: 9374, char_end: 9376, byte_start: 9374, byte_end: 9376, column_start: 65, column_end: 67, line_start: 276, line_end: 276 }: rg
Token { kind: Backtick, char_start: 9376, char_end: 9377, byte_start: 9376, byte_end: 9377, column_start: 67, column_end: 68, line_start: 276, line_end: 276 }: `
Token { kind: Space, char_start: 9377, char_end: 9378, byte_start: 9377, byte_end: 9378, column_start: 68, column_end: 69, line_start: 276, line_end: 276 }: " "
Token { kind: Text, char_start: 9378, char_end: 9382, byte_start: 9378, byte_end: 9382, column_start: 69, column_end: 73, line_start: 276, line_end: 276 }: then
Token { kind: Space, char_start: 9382, char_end: 9383, byte_start: 9382, byte_end: 9383, column_start: 73, column_end: 74, line_start: 276, line_end: 276 }: " "
Token { kind: Backtick, char_start: 9383, char_end: 9384, byte_start: 9383, byte_end: 9384, column_start: 74, column_end: 75, line_start: 276, line_end: 276 }: `
Token { kind: Text, char_start: 9384, char_end: 9386, byte_start: 9384, byte_end: 9386, column_start: 75, column_end: 77, line_start: 276, line_end: 276 }: ag
Token { kind: Backtick, char_start: 9386, char_end: 9387, byte_start: 9386, byte_end: 9387, column_start: 77, column_end: 78, line_start: 276, line_end: 276 }: `
Token { kind: Newline, char_start: 9387, char_end: 9388, byte_start: 9387, byte_end: 9388, column_start: 78, column_end: 1, line_start: 276, line_end: 277 }: "\n"
Token { kind: Text, char_start: 9388, char_end: 9392, byte_start: 9388, byte_end: 9392, column_start: 1, column_end: 5, line_start: 277, line_end: 277 }: over
Token { kind: Space, char_start: 9392, char_end: 9393, byte_start: 9392, byte_end: 9393, column_start: 5, column_end: 6, line_start: 277, line_end: 277 }: " "
Token { kind: Backtick, char_start: 9393, char_end: 9394, byte_start: 9393, byte_end: 9394, column_start: 6, column_end: 7, line_start: 277, line_end: 277 }: `
Token { kind: Text, char_start: 9394, char_end: 9397, byte_start: 9394, byte_end: 9397, column_start: 7, column_end: 10, line_start: 277, line_end: 277 }: ack
Token { kind: Backtick, char_start: 9397, char_end: 9398, byte_start: 9397, byte_end: 9398, column_start: 10, column_end: 11, line_start: 277, line_end: 277 }: `
Token { kind: Text, char_start: 9398, char_end: 9399, byte_start: 9398, byte_end: 9399, column_start: 11, column_end: 12, line_start: 277, line_end: 277 }: /
Token { kind: Backtick, char_start: 9399, char_end: 9400, byte_start: 9399, byte_end: 9400, column_start: 12, column_end: 13, line_start: 277, line_end: 277 }: `
Token { kind: Text, char_start: 9400, char_end: 9403, byte_start: 9400, byte_end: 9403, column_start: 13, column_end: 16, line_start: 277, line_end: 277 }: ack
Token { kind: Hyphen, char_start: 9403, char_end: 9404, byte_start: 9403, byte_end: 9404, column_start: 16, column_end: 17, line_start: 277, line_end: 277 }: -
Token { kind: Text, char_start: 9404, char_end: 9408, byte_start: 9404, byte_end: 9408, column_start: 17, column_end: 21, line_start: 277, line_end: 277 }: grep
Token { kind: Backtick, char_start: 9408, char_end: 9409, byte_start: 9408, byte_end: 9409, column_start: 21, column_end: 22, line_start: 277, line_end: 277 }: `
Token { kind: Space, char_start: 9409, char_end: 9410, byte_start: 9409, byte_end: 9410, column_start: 22, column_end: 23, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9410, char_end: 9414, byte_start: 9410, byte_end: 9414, column_start: 23, column_end: 27, line_start: 277, line_end: 277 }: when
Token { kind: Space, char_start: 9414, char_end: 9415, byte_start: 9414, byte_end: 9415, column_start: 27, column_end: 28, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9415, char_end: 9425, byte_start: 9415, byte_end: 9425, column_start: 28, column_end: 38, line_start: 277, line_end: 277 }: available,
Token { kind: Space, char_start: 9425, char_end: 9426, byte_start: 9425, byte_end: 9426, column_start: 38, column_end: 39, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9426, char_end: 9427, byte_start: 9426, byte_end: 9427, column_start: 39, column_end: 40, line_start: 277, line_end: 277 }: I
Token { kind: Space, char_start: 9427, char_end: 9428, byte_start: 9427, byte_end: 9428, column_start: 40, column_end: 41, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9428, char_end: 9434, byte_start: 9428, byte_end: 9434, column_start: 41, column_end: 47, line_start: 277, line_end: 277 }: prefer
Token { kind: Space, char_start: 9434, char_end: 9435, byte_start: 9434, byte_end: 9435, column_start: 47, column_end: 48, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9435, char_end: 9437, byte_start: 9435, byte_end: 9437, column_start: 48, column_end: 50, line_start: 277, line_end: 277 }: to
Token { kind: Space, char_start: 9437, char_end: 9438, byte_start: 9437, byte_end: 9438, column_start: 50, column_end: 51, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9438, char_end: 9442, byte_start: 9438, byte_end: 9442, column_start: 51, column_end: 55, line_start: 277, line_end: 277 }: keep
Token { kind: Space, char_start: 9442, char_end: 9443, byte_start: 9442, byte_end: 9443, column_start: 55, column_end: 56, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9443, char_end: 9446, byte_start: 9443, byte_end: 9446, column_start: 56, column_end: 59, line_start: 277, line_end: 277 }: the
Token { kind: Space, char_start: 9446, char_end: 9447, byte_start: 9446, byte_end: 9447, column_start: 59, column_end: 60, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9447, char_end: 9454, byte_start: 9447, byte_end: 9454, column_start: 60, column_end: 67, line_start: 277, line_end: 277 }: command
Token { kind: Space, char_start: 9454, char_end: 9455, byte_start: 9454, byte_end: 9455, column_start: 67, column_end: 68, line_start: 277, line_end: 277 }: " "
Token { kind: Text, char_start: 9455, char_end: 9460, byte_start: 9455, byte_end: 9460, column_start: 68, column_end: 73, line_start: 277, line_end: 277 }: names
Token { kind: Newline, char_start: 9460, char_end: 9461, byte_start: 9460, byte_end: 9461, column_start: 73, column_end: 1, line_start: 277, line_end: 278 }: "\n"
Token { kind: Text, char_start: 9461, char_end: 9467, byte_start: 9461, byte_end: 9467, column_start: 1, column_end: 7, line_start: 278, line_end: 278 }: intact
Token { kind: Space, char_start: 9467, char_end: 9468, byte_start: 9467, byte_end: 9468, column_start: 7, column_end: 8, line_start: 278, line_end: 278 }: " "
Token { kind: Text, char_start: 9468, char_end: 9471, byte_start: 9468, byte_end: 9471, column_start: 8, column_end: 11, line_start: 278, line_end: 278 }: and
Token { kind: Space, char_start: 9471, char_end: 9472, byte_start: 9471, byte_end: 9472, column_start: 11, column_end: 12, line_start: 278, line_end: 278 }: " "
Token { kind: Text, char_start: 9472, char_end: 9479, byte_start: 9472, byte_end: 9479, column_start: 12, column_end: 19, line_start: 278, line_end: 278 }: benefit
Token { kind: Space, char_start: 9479, char_end: 9480, byte_start: 9479, byte_end: 9480, column_start: 19, column_end: 20, line_start: 278, line_end: 278 }: " "
Token { kind: Text, char_start: 9480, char_end: 9484, byte_start: 9480, byte_end: 9484, column_start: 20, column_end: 24, line_start: 278, line_end: 278 }: from
Token { kind: Space, char_start: 9484, char_end: 9485, byte_start: 9484, byte_end: 9485, column_start: 24, column_end: 25, line_start: 278, line_end: 278 }: " "
Token { kind: Text, char_start: 9485, char_end: 9490, byte_start: 9485, byte_end: 9490, column_start: 25, column_end: 30, line_start: 278, line_end: 278 }: years
Token { kind: Space, char_start: 9490, char_end: 9491, byte_start: 9490, byte_end: 9491, column_start: 30, column_end: 31, line_start: 278, line_end: 278 }: " "
Token { kind: Text, char_start: 9491, char_end: 9493, byte_start: 9491, byte_end: 9493, column_start: 31, column_end: 33, line_start: 278, line_end: 278 }: of
Token { kind: Space, char_start: 9493, char_end: 9494, byte_start: 9493, byte_end: 9494, column_start: 33, column_end: 34, line_start: 278, line_end: 278 }: " "
Token { kind: Text, char_start: 9494, char_end: 9505, byte_start: 9494, byte_end: 9505, column_start: 34, column_end: 45, line_start: 278, line_end: 278 }: accumulated
Token { kind: Space, char_start: 9505, char_end: 9506, byte_start: 9505, byte_end: 9506, column_start: 45, column_end: 46, line_start: 278, line_end: 278 }: " "
Token { kind: Text, char_start: 9506, char_end: 9512, byte_start: 9506, byte_end: 9512, column_start: 46, column_end: 52, line_start: 278, line_end: 278 }: muscle
Token { kind: Hyphen, char_start: 9512, char_end: 9513, byte_start: 9512, byte_end: 9513, column_start: 52, column_end: 53, line_start: 278, line_end: 278 }: -
Token { kind: Text, char_start: 9513, char_end: 9520, byte_start: 9513, byte_end: 9520, column_start: 53, column_end: 60, line_start: 278, line_end: 278 }: memory.
Token { kind: Newline, char_start: 9520, char_end: 9521, byte_start: 9520, byte_end: 9521, column_start: 60, column_end: 1, line_start: 278, line_end: 279 }: "\n"
Token { kind: Newline, char_start: 9521, char_end: 9522, byte_start: 9521, byte_end: 9522, column_start: 1, column_end: 1, line_start: 279, line_end: 280 }: "\n"
Token { kind: Heading(Heading1), char_start: 9522, char_end: 9523, byte_start: 9522, byte_end: 9523, column_start: 1, column_end: 2, line_start: 280, line_end: 280 }: #
Token { kind: Space, char_start: 9523, char_end: 9524, byte_start: 9523, byte_end: 9524, column_start: 2, column_end: 3, line_start: 280, line_end: 280 }: " "
Token { kind: Text, char_start: 9524, char_end: 9531, byte_start: 9524, byte_end: 9531, column_start: 3, column_end: 10, line_start: 280, line_end: 280 }: Related
Token { kind: Newline, char_start: 9531, char_end: 9532, byte_start: 9531, byte_end: 9532, column_start: 10, column_end: 1, line_start: 280, line_end: 281 }: "\n"
Token { kind: Newline, char_start: 9532, char_end: 9533, byte_start: 9532, byte_end: 9533, column_start: 1, column_end: 1, line_start: 281, line_end: 282 }: "\n"
Token { kind: Text, char_start: 9533, char_end: 9537, byte_start: 9533, byte_end: 9537, column_start: 1, column_end: 5, line_start: 282, line_end: 282 }: Just
Token { kind: Space, char_start: 9537, char_end: 9538, byte_start: 9537, byte_end: 9538, column_start: 5, column_end: 6, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9538, char_end: 9540, byte_start: 9538, byte_end: 9540, column_start: 6, column_end: 8, line_start: 282, line_end: 282 }: as
Token { kind: Space, char_start: 9540, char_end: 9541, byte_start: 9540, byte_end: 9541, column_start: 8, column_end: 9, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9541, char_end: 9547, byte_start: 9541, byte_end: 9547, column_start: 9, column_end: 15, line_start: 282, line_end: 282 }: Ferret
Token { kind: Space, char_start: 9547, char_end: 9548, byte_start: 9547, byte_end: 9548, column_start: 15, column_end: 16, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9548, char_end: 9552, byte_start: 9548, byte_end: 9552, column_start: 16, column_end: 20, line_start: 282, line_end: 282 }: aims
Token { kind: Space, char_start: 9552, char_end: 9553, byte_start: 9552, byte_end: 9553, column_start: 20, column_end: 21, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9553, char_end: 9555, byte_start: 9553, byte_end: 9555, column_start: 21, column_end: 23, line_start: 282, line_end: 282 }: to
Token { kind: Space, char_start: 9555, char_end: 9556, byte_start: 9555, byte_end: 9556, column_start: 23, column_end: 24, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9556, char_end: 9563, byte_start: 9556, byte_end: 9563, column_start: 24, column_end: 31, line_start: 282, line_end: 282 }: improve
Token { kind: Space, char_start: 9563, char_end: 9564, byte_start: 9563, byte_end: 9564, column_start: 31, column_end: 32, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9564, char_end: 9567, byte_start: 9564, byte_end: 9567, column_start: 32, column_end: 35, line_start: 282, line_end: 282 }: the
Token { kind: Space, char_start: 9567, char_end: 9568, byte_start: 9567, byte_end: 9568, column_start: 35, column_end: 36, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9568, char_end: 9573, byte_start: 9568, byte_end: 9573, column_start: 36, column_end: 41, line_start: 282, line_end: 282 }: multi
Token { kind: Hyphen, char_start: 9573, char_end: 9574, byte_start: 9573, byte_end: 9574, column_start: 41, column_end: 42, line_start: 282, line_end: 282 }: -
Token { kind: Text, char_start: 9574, char_end: 9578, byte_start: 9574, byte_end: 9578, column_start: 42, column_end: 46, line_start: 282, line_end: 282 }: file
Token { kind: Space, char_start: 9578, char_end: 9579, byte_start: 9578, byte_end: 9579, column_start: 46, column_end: 47, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9579, char_end: 9585, byte_start: 9579, byte_end: 9585, column_start: 47, column_end: 53, line_start: 282, line_end: 282 }: search
Token { kind: Space, char_start: 9585, char_end: 9586, byte_start: 9585, byte_end: 9586, column_start: 53, column_end: 54, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9586, char_end: 9589, byte_start: 9586, byte_end: 9589, column_start: 54, column_end: 57, line_start: 282, line_end: 282 }: and
Token { kind: Space, char_start: 9589, char_end: 9590, byte_start: 9589, byte_end: 9590, column_start: 57, column_end: 58, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9590, char_end: 9597, byte_start: 9590, byte_end: 9597, column_start: 58, column_end: 65, line_start: 282, line_end: 282 }: replace
Token { kind: Space, char_start: 9597, char_end: 9598, byte_start: 9597, byte_end: 9598, column_start: 65, column_end: 66, line_start: 282, line_end: 282 }: " "
Token { kind: Text, char_start: 9598, char_end: 9609, byte_start: 9598, byte_end: 9609, column_start: 66, column_end: 77, line_start: 282, line_end: 282 }: experience,
Token { kind: Newline, char_start: 9609, char_end: 9610, byte_start: 9609, byte_end: 9610, column_start: 77, column_end: 1, line_start: 282, line_end: 283 }: "\n"
Token { kind: Text, char_start: 9610, char_end: 9615, byte_start: 9610, byte_end: 9615, column_start: 1, column_end: 6, line_start: 283, line_end: 283 }: Loupe
Token { kind: Space, char_start: 9615, char_end: 9616, byte_start: 9615, byte_end: 9616, column_start: 6, column_end: 7, line_start: 283, line_end: 283 }: " "
Token { kind: Text, char_start: 9616, char_end: 9620, byte_start: 9616, byte_end: 9620, column_start: 7, column_end: 11, line_start: 283, line_end: 283 }: does
Token { kind: Space, char_start: 9620, char_end: 9621, byte_start: 9620, byte_end: 9621, column_start: 11, column_end: 12, line_start: 283, line_end: 283 }: " "
Token { kind: Text, char_start: 9621, char_end: 9624, byte_start: 9621, byte_end: 9624, column_start: 12, column_end: 15, line_start: 283, line_end: 283 }: the
Token { kind: Space, char_start: 9624, char_end: 9625, byte_start: 9624, byte_end: 9625, column_start: 15, column_end: 16, line_start: 283, line_end: 283 }: " "
Token { kind: Text, char_start: 9625, char_end: 9629, byte_start: 9625, byte_end: 9629, column_start: 16, column_end: 20, line_start: 283, line_end: 283 }: same
Token { kind: Space, char_start: 9629, char_end: 9630, byte_start: 9629, byte_end: 9630, column_start: 20, column_end: 21, line_start: 283, line_end: 283 }: " "
Token { kind: Text, char_start: 9630, char_end: 9633, byte_start: 9630, byte_end: 9633, column_start: 21, column_end: 24, line_start: 283, line_end: 283 }: for
Token { kind: Space, char_start: 9633, char_end: 9634, byte_start: 9633, byte_end: 9634, column_start: 24, column_end: 25, line_start: 283, line_end: 283 }: " "
Token { kind: Text, char_start: 9634, char_end: 9640, byte_start: 9634, byte_end: 9640, column_start: 25, column_end: 31, line_start: 283, line_end: 283 }: within
Token { kind: Hyphen, char_start: 9640, char_end: 9641, byte_start: 9640, byte_end: 9641, column_start: 31, column_end: 32, line_start: 283, line_end: 283 }: -
Token { kind: Text, char_start: 9641, char_end: 9645, byte_start: 9641, byte_end: 9645, column_start: 32, column_end: 36, line_start: 283, line_end: 283 }: file
Token { kind: Space, char_start: 9645, char_end: 9646, byte_start: 9645, byte_end: 9646, column_start: 36, column_end: 37, line_start: 283, line_end: 283 }: " "
Token { kind: Text, char_start: 9646, char_end: 9656, byte_start: 9646, byte_end: 9656, column_start: 37, column_end: 47, line_start: 283, line_end: 283 }: searching:
Token { kind: Newline, char_start: 9656, char_end: 9657, byte_start: 9656, byte_end: 9657, column_start: 47, column_end: 1, line_start: 283, line_end: 284 }: "\n"
Token { kind: Newline, char_start: 9657, char_end: 9658, byte_start: 9657, byte_end: 9658, column_start: 1, column_end: 1, line_start: 284, line_end: 285 }: "\n"
Token { kind: Space, char_start: 9658, char_end: 9660, byte_start: 9658, byte_end: 9660, column_start: 1, column_end: 3, line_start: 285, line_end: 285 }: "  "
Token { kind: Text, char_start: 9660, char_end: 9692, byte_start: 9660, byte_end: 9692, column_start: 3, column_end: 35, line_start: 285, line_end: 285 }: https://github.com/wincent/loupe
Token { kind: Newline, char_start: 9692, char_end: 9693, byte_start: 9692, byte_end: 9693, column_start: 35, column_end: 1, line_start: 285, line_end: 286 }: "\n"
Token { kind: Newline, char_start: 9693, char_end: 9694, byte_start: 9693, byte_end: 9694, column_start: 1, column_end: 1, line_start: 286, line_end: 287 }: "\n"
Token { kind: Heading(Heading1), char_start: 9694, char_end: 9695, byte_start: 9694, byte_end: 9695, column_start: 1, column_end: 2, line_start: 287, line_end: 287 }: #
Token { kind: Space, char_start: 9695, char_end: 9696, byte_start: 9695, byte_end: 9696, column_start: 2, column_end: 3, line_start: 287, line_end: 287 }: " "
Token { kind: Text, char_start: 9696, char_end: 9703, byte_start: 9696, byte_end: 9703, column_start: 3, column_end: 10, line_start: 287, line_end: 287 }: Website
Token { kind: Newline, char_start: 9703, char_end: 9704, byte_start: 9703, byte_end: 9704, column_start: 10, column_end: 1, line_start: 287, line_end: 288 }: "\n"
Token { kind: Newline, char_start: 9704, char_end: 9705, byte_start: 9704, byte_end: 9705, column_start: 1, column_end: 1, line_start: 288, line_end: 289 }: "\n"
Token { kind: Text, char_start: 9705, char_end: 9711, byte_start: 9705, byte_end: 9711, column_start: 1, column_end: 7, line_start: 289, line_end: 289 }: Source
Token { kind: Space, char_start: 9711, char_end: 9712, byte_start: 9711, byte_end: 9712, column_start: 7, column_end: 8, line_start: 289, line_end: 289 }: " "
Token { kind: Text, char_start: 9712, char_end: 9717, byte_start: 9712, byte_end: 9717, column_start: 8, column_end: 13, line_start: 289, line_end: 289 }: code:
Token { kind: Newline, char_start: 9717, char_end: 9718, byte_start: 9717, byte_end: 9718, column_start: 13, column_end: 1, line_start: 289, line_end: 290 }: "\n"
Token { kind: Newline, char_start: 9718, char_end: 9719, byte_start: 9718, byte_end: 9719, column_start: 1, column_end: 1, line_start: 290, line_end: 291 }: "\n"
Token { kind: Space, char_start: 9719, char_end: 9721, byte_start: 9719, byte_end: 9721, column_start: 1, column_end: 3, line_start: 291, line_end: 291 }: "  "
Token { kind: Text, char_start: 9721, char_end: 9754, byte_start: 9721, byte_end: 9754, column_start: 3, column_end: 36, line_start: 291, line_end: 291 }: https://github.com/wincent/ferret
Token { kind: Newline, char_start: 9754, char_end: 9755, byte_start: 9754, byte_end: 9755, column_start: 36, column_end: 1, line_start: 291, line_end: 292 }: "\n"
Token { kind: Newline, char_start: 9755, char_end: 9756, byte_start: 9755, byte_end: 9756, column_start: 1, column_end: 1, line_start: 292, line_end: 293 }: "\n"
Token { kind: Text, char_start: 9756, char_end: 9764, byte_start: 9756, byte_end: 9764, column_start: 1, column_end: 9, line_start: 293, line_end: 293 }: Official
Token { kind: Space, char_start: 9764, char_end: 9765, byte_start: 9764, byte_end: 9765, column_start: 9, column_end: 10, line_start: 293, line_end: 293 }: " "
Token { kind: Text, char_start: 9765, char_end: 9773, byte_start: 9765, byte_end: 9773, column_start: 10, column_end: 18, line_start: 293, line_end: 293 }: releases
Token { kind: Space, char_start: 9773, char_end: 9774, byte_start: 9773, byte_end: 9774, column_start: 18, column_end: 19, line_start: 293, line_end: 293 }: " "
Token { kind: Text, char_start: 9774, char_end: 9777, byte_start: 9774, byte_end: 9777, column_start: 19, column_end: 22, line_start: 293, line_end: 293 }: are
Token { kind: Space, char_start: 9777, char_end: 9778, byte_start: 9777, byte_end: 9778, column_start: 22, column_end: 23, line_start: 293, line_end: 293 }: " "
Token { kind: Text, char_start: 9778, char_end: 9784, byte_start: 9778, byte_end: 9784, column_start: 23, column_end: 29, line_start: 293, line_end: 293 }: listed
Token { kind: Space, char_start: 9784, char_end: 9785, byte_start: 9784, byte_end: 9785, column_start: 29, column_end: 30, line_start: 293, line_end: 293 }: " "
Token { kind: Text, char_start: 9785, char_end: 9788, byte_start: 9785, byte_end: 9788, column_start: 30, column_end: 33, line_start: 293, line_end: 293 }: at:
Token { kind: Newline, char_start: 9788, char_end: 9789, byte_start: 9788, byte_end: 9789, column_start: 33, column_end: 1, line_start: 293, line_end: 294 }: "\n"
Token { kind: Newline, char_start: 9789, char_end: 9790, byte_start: 9789, byte_end: 9790, column_start: 1, column_end: 1, line_start: 294, line_end: 295 }: "\n"
Token { kind: Space, char_start: 9790, char_end: 9792, byte_start: 9790, byte_end: 9792, column_start: 1, column_end: 3, line_start: 295, line_end: 295 }: "  "
Token { kind: Text, char_start: 9792, char_end: 9844, byte_start: 9792, byte_end: 9844, column_start: 3, column_end: 55, line_start: 295, line_end: 295 }: http://www.vim.org/scripts/script.php?script_id=5220
Token { kind: Newline, char_start: 9844, char_end: 9845, byte_start: 9844, byte_end: 9845, column_start: 55, column_end: 1, line_start: 295, line_end: 296 }: "\n"
Token { kind: Newline, char_start: 9845, char_end: 9846, byte_start: 9845, byte_end: 9846, column_start: 1, column_end: 1, line_start: 296, line_end: 297 }: "\n"
Token { kind: Heading(Heading1), char_start: 9846, char_end: 9847, byte_start: 9846, byte_end: 9847, column_start: 1, column_end: 2, line_start: 297, line_end: 297 }: #
Token { kind: Space, char_start: 9847, char_end: 9848, byte_start: 9847, byte_end: 9848, column_start: 2, column_end: 3, line_start: 297, line_end: 297 }: " "
Token { kind: Text, char_start: 9848, char_end: 9855, byte_start: 9848, byte_end: 9855, column_start: 3, column_end: 10, line_start: 297, line_end: 297 }: License
Token { kind: Newline, char_start: 9855, char_end: 9856, byte_start: 9855, byte_end: 9856, column_start: 10, column_end: 1, line_start: 297, line_end: 298 }: "\n"
Token { kind: Newline, char_start: 9856, char_end: 9857, byte_start: 9856, byte_end: 9857, column_start: 1, column_end: 1, line_start: 298, line_end: 299 }: "\n"
Token { kind: Text, char_start: 9857, char_end: 9866, byte_start: 9857, byte_end: 9866, column_start: 1, column_end: 10, line_start: 299, line_end: 299 }: Copyright
Token { kind: Space, char_start: 9866, char_end: 9867, byte_start: 9866, byte_end: 9867, column_start: 10, column_end: 11, line_start: 299, line_end: 299 }: " "
Token { kind: Text, char_start: 9867, char_end: 9871, byte_start: 9867, byte_end: 9871, column_start: 11, column_end: 15, line_start: 299, line_end: 299 }: 2015
Token { kind: Hyphen, char_start: 9871, char_end: 9872, byte_start: 9871, byte_end: 9872, column_start: 15, column_end: 16, line_start: 299, line_end: 299 }: -
Token { kind: Text, char_start: 9872, char_end: 9879, byte_start: 9872, byte_end: 9879, column_start: 16, column_end: 23, line_start: 299, line_end: 299 }: present
Token { kind: Space, char_start: 9879, char_end: 9880, byte_start: 9879, byte_end: 9880, column_start: 23, column_end: 24, line_start: 299, line_end: 299 }: " "
Token { kind: Text, char_start: 9880, char_end: 9884, byte_start: 9880, byte_end: 9884, column_start: 24, column_end: 28, line_start: 299, line_end: 299 }: Greg
Token { kind: Space, char_start: 9884, char_end: 9885, byte_start: 9884, byte_end: 9885, column_start: 28, column_end: 29, line_start: 299, line_end: 299 }: " "
Token { kind: Text, char_start: 9885, char_end: 9893, byte_start: 9885, byte_end: 9893, column_start: 29, column_end: 37, line_start: 299, line_end: 299 }: Hurrell.
Token { kind: Space, char_start: 9893, char_end: 9894, byte_start: 9893, byte_end: 9894, column_start: 37, column_end: 38, line_start: 299, line_end: 299 }: " "
Token { kind: Text, char_start: 9894, char_end: 9897, byte_start: 9894, byte_end: 9897, column_start: 38, column_end: 41, line_start: 299, line_end: 299 }: All
Token { kind: Space, char_start: 9897, char_end: 9898, byte_start: 9897, byte_end: 9898, column_start: 41, column_end: 42, line_start: 299, line_end: 299 }: " "
Token { kind: Text, char_start: 9898, char_end: 9904, byte_start: 9898, byte_end: 9904, column_start: 42, column_end: 48, line_start: 299, line_end: 299 }: rights
Token { kind: Space, char_start: 9904, char_end: 9905, byte_start: 9904, byte_end: 9905, column_start: 48, column_end: 49, line_start: 299, line_end: 299 }: " "
Token { kind: Text, char_start: 9905, char_end: 9914, byte_start: 9905, byte_end: 9914, column_start: 49, column_end: 58, line_start: 299, line_end: 299 }: reserved.
Token { kind: Newline, char_start: 9914, char_end: 9915, byte_start: 9914, byte_end: 9915, column_start: 58, column_end: 1, line_start: 299, line_end: 300 }: "\n"
Token { kind: Newline, char_start: 9915, char_end: 9916, byte_start: 9915, byte_end: 9916, column_start: 1, column_end: 1, line_start: 300, line_end: 301 }: "\n"
Token { kind: Text, char_start: 9916, char_end: 9930, byte_start: 9916, byte_end: 9930, column_start: 1, column_end: 15, line_start: 301, line_end: 301 }: Redistribution
Token { kind: Space, char_start: 9930, char_end: 9931, byte_start: 9930, byte_end: 9931, column_start: 15, column_end: 16, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9931, char_end: 9934, byte_start: 9931, byte_end: 9934, column_start: 16, column_end: 19, line_start: 301, line_end: 301 }: and
Token { kind: Space, char_start: 9934, char_end: 9935, byte_start: 9934, byte_end: 9935, column_start: 19, column_end: 20, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9935, char_end: 9938, byte_start: 9935, byte_end: 9938, column_start: 20, column_end: 23, line_start: 301, line_end: 301 }: use
Token { kind: Space, char_start: 9938, char_end: 9939, byte_start: 9938, byte_end: 9939, column_start: 23, column_end: 24, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9939, char_end: 9941, byte_start: 9939, byte_end: 9941, column_start: 24, column_end: 26, line_start: 301, line_end: 301 }: in
Token { kind: Space, char_start: 9941, char_end: 9942, byte_start: 9941, byte_end: 9942, column_start: 26, column_end: 27, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9942, char_end: 9948, byte_start: 9942, byte_end: 9948, column_start: 27, column_end: 33, line_start: 301, line_end: 301 }: source
Token { kind: Space, char_start: 9948, char_end: 9949, byte_start: 9948, byte_end: 9949, column_start: 33, column_end: 34, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9949, char_end: 9952, byte_start: 9949, byte_end: 9952, column_start: 34, column_end: 37, line_start: 301, line_end: 301 }: and
Token { kind: Space, char_start: 9952, char_end: 9953, byte_start: 9952, byte_end: 9953, column_start: 37, column_end: 38, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9953, char_end: 9959, byte_start: 9953, byte_end: 9959, column_start: 38, column_end: 44, line_start: 301, line_end: 301 }: binary
Token { kind: Space, char_start: 9959, char_end: 9960, byte_start: 9959, byte_end: 9960, column_start: 44, column_end: 45, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9960, char_end: 9966, byte_start: 9960, byte_end: 9966, column_start: 45, column_end: 51, line_start: 301, line_end: 301 }: forms,
Token { kind: Space, char_start: 9966, char_end: 9967, byte_start: 9966, byte_end: 9967, column_start: 51, column_end: 52, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9967, char_end: 9971, byte_start: 9967, byte_end: 9971, column_start: 52, column_end: 56, line_start: 301, line_end: 301 }: with
Token { kind: Space, char_start: 9971, char_end: 9972, byte_start: 9971, byte_end: 9972, column_start: 56, column_end: 57, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9972, char_end: 9974, byte_start: 9972, byte_end: 9974, column_start: 57, column_end: 59, line_start: 301, line_end: 301 }: or
Token { kind: Space, char_start: 9974, char_end: 9975, byte_start: 9974, byte_end: 9975, column_start: 59, column_end: 60, line_start: 301, line_end: 301 }: " "
Token { kind: Text, char_start: 9975, char_end: 9982, byte_start: 9975, byte_end: 9982, column_start: 60, column_end: 67, line_start: 301, line_end: 301 }: without
Token { kind: Newline, char_start: 9982, char_end: 9983, byte_start: 9982, byte_end: 9983, column_start: 67, column_end: 1, line_start: 301, line_end: 302 }: "\n"
Token { kind: Text, char_start: 9983, char_end: 9996, byte_start: 9983, byte_end: 9996, column_start: 1, column_end: 14, line_start: 302, line_end: 302 }: modification,
Token { kind: Space, char_start: 9996, char_end: 9997, byte_start: 9996, byte_end: 9997, column_start: 14, column_end: 15, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 9997, char_end: 10000, byte_start: 9997, byte_end: 10000, column_start: 15, column_end: 18, line_start: 302, line_end: 302 }: are
Token { kind: Space, char_start: 10000, char_end: 10001, byte_start: 10000, byte_end: 10001, column_start: 18, column_end: 19, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 10001, char_end: 10010, byte_start: 10001, byte_end: 10010, column_start: 19, column_end: 28, line_start: 302, line_end: 302 }: permitted
Token { kind: Space, char_start: 10010, char_end: 10011, byte_start: 10010, byte_end: 10011, column_start: 28, column_end: 29, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 10011, char_end: 10019, byte_start: 10011, byte_end: 10019, column_start: 29, column_end: 37, line_start: 302, line_end: 302 }: provided
Token { kind: Space, char_start: 10019, char_end: 10020, byte_start: 10019, byte_end: 10020, column_start: 37, column_end: 38, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 10020, char_end: 10024, byte_start: 10020, byte_end: 10024, column_start: 38, column_end: 42, line_start: 302, line_end: 302 }: that
Token { kind: Space, char_start: 10024, char_end: 10025, byte_start: 10024, byte_end: 10025, column_start: 42, column_end: 43, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 10025, char_end: 10028, byte_start: 10025, byte_end: 10028, column_start: 43, column_end: 46, line_start: 302, line_end: 302 }: the
Token { kind: Space, char_start: 10028, char_end: 10029, byte_start: 10028, byte_end: 10029, column_start: 46, column_end: 47, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 10029, char_end: 10038, byte_start: 10029, byte_end: 10038, column_start: 47, column_end: 56, line_start: 302, line_end: 302 }: following
Token { kind: Space, char_start: 10038, char_end: 10039, byte_start: 10038, byte_end: 10039, column_start: 56, column_end: 57, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 10039, char_end: 10049, byte_start: 10039, byte_end: 10049, column_start: 57, column_end: 67, line_start: 302, line_end: 302 }: conditions
Token { kind: Space, char_start: 10049, char_end: 10050, byte_start: 10049, byte_end: 10050, column_start: 67, column_end: 68, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 10050, char_end: 10053, byte_start: 10050, byte_end: 10053, column_start: 68, column_end: 71, line_start: 302, line_end: 302 }: are
Token { kind: Space, char_start: 10053, char_end: 10054, byte_start: 10053, byte_end: 10054, column_start: 71, column_end: 72, line_start: 302, line_end: 302 }: " "
Token { kind: Text, char_start: 10054, char_end: 10058, byte_start: 10054, byte_end: 10058, column_start: 72, column_end: 76, line_start: 302, line_end: 302 }: met:
Token { kind: Newline, char_start: 10058, char_end: 10059, byte_start: 10058, byte_end: 10059, column_start: 76, column_end: 1, line_start: 302, line_end: 303 }: "\n"
Token { kind: Newline, char_start: 10059, char_end: 10060, byte_start: 10059, byte_end: 10060, column_start: 1, column_end: 1, line_start: 303, line_end: 304 }: "\n"
Token { kind: Text, char_start: 10060, char_end: 10062, byte_start: 10060, byte_end: 10062, column_start: 1, column_end: 3, line_start: 304, line_end: 304 }: 1.
Token { kind: Space, char_start: 10062, char_end: 10063, byte_start: 10062, byte_end: 10063, column_start: 3, column_end: 4, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10063, char_end: 10078, byte_start: 10063, byte_end: 10078, column_start: 4, column_end: 19, line_start: 304, line_end: 304 }: Redistributions
Token { kind: Space, char_start: 10078, char_end: 10079, byte_start: 10078, byte_end: 10079, column_start: 19, column_end: 20, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10079, char_end: 10081, byte_start: 10079, byte_end: 10081, column_start: 20, column_end: 22, line_start: 304, line_end: 304 }: of
Token { kind: Space, char_start: 10081, char_end: 10082, byte_start: 10081, byte_end: 10082, column_start: 22, column_end: 23, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10082, char_end: 10088, byte_start: 10082, byte_end: 10088, column_start: 23, column_end: 29, line_start: 304, line_end: 304 }: source
Token { kind: Space, char_start: 10088, char_end: 10089, byte_start: 10088, byte_end: 10089, column_start: 29, column_end: 30, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10089, char_end: 10093, byte_start: 10089, byte_end: 10093, column_start: 30, column_end: 34, line_start: 304, line_end: 304 }: code
Token { kind: Space, char_start: 10093, char_end: 10094, byte_start: 10093, byte_end: 10094, column_start: 34, column_end: 35, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10094, char_end: 10098, byte_start: 10094, byte_end: 10098, column_start: 35, column_end: 39, line_start: 304, line_end: 304 }: must
Token { kind: Space, char_start: 10098, char_end: 10099, byte_start: 10098, byte_end: 10099, column_start: 39, column_end: 40, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10099, char_end: 10105, byte_start: 10099, byte_end: 10105, column_start: 40, column_end: 46, line_start: 304, line_end: 304 }: retain
Token { kind: Space, char_start: 10105, char_end: 10106, byte_start: 10105, byte_end: 10106, column_start: 46, column_end: 47, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10106, char_end: 10109, byte_start: 10106, byte_end: 10109, column_start: 47, column_end: 50, line_start: 304, line_end: 304 }: the
Token { kind: Space, char_start: 10109, char_end: 10110, byte_start: 10109, byte_end: 10110, column_start: 50, column_end: 51, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10110, char_end: 10115, byte_start: 10110, byte_end: 10115, column_start: 51, column_end: 56, line_start: 304, line_end: 304 }: above
Token { kind: Space, char_start: 10115, char_end: 10116, byte_start: 10115, byte_end: 10116, column_start: 56, column_end: 57, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10116, char_end: 10125, byte_start: 10116, byte_end: 10125, column_start: 57, column_end: 66, line_start: 304, line_end: 304 }: copyright
Token { kind: Space, char_start: 10125, char_end: 10126, byte_start: 10125, byte_end: 10126, column_start: 66, column_end: 67, line_start: 304, line_end: 304 }: " "
Token { kind: Text, char_start: 10126, char_end: 10133, byte_start: 10126, byte_end: 10133, column_start: 67, column_end: 74, line_start: 304, line_end: 304 }: notice,
Token { kind: Newline, char_start: 10133, char_end: 10134, byte_start: 10133, byte_end: 10134, column_start: 74, column_end: 1, line_start: 304, line_end: 305 }: "\n"
Token { kind: Space, char_start: 10134, char_end: 10137, byte_start: 10134, byte_end: 10137, column_start: 1, column_end: 4, line_start: 305, line_end: 305 }: "   "
Token { kind: Text, char_start: 10137, char_end: 10141, byte_start: 10137, byte_end: 10141, column_start: 4, column_end: 8, line_start: 305, line_end: 305 }: this
Token { kind: Space, char_start: 10141, char_end: 10142, byte_start: 10141, byte_end: 10142, column_start: 8, column_end: 9, line_start: 305, line_end: 305 }: " "
Token { kind: Text, char_start: 10142, char_end: 10146, byte_start: 10142, byte_end: 10146, column_start: 9, column_end: 13, line_start: 305, line_end: 305 }: list
Token { kind: Space, char_start: 10146, char_end: 10147, byte_start: 10146, byte_end: 10147, column_start: 13, column_end: 14, line_start: 305, line_end: 305 }: " "
Token { kind: Text, char_start: 10147, char_end: 10149, byte_start: 10147, byte_end: 10149, column_start: 14, column_end: 16, line_start: 305, line_end: 305 }: of
Token { kind: Space, char_start: 10149, char_end: 10150, byte_start: 10149, byte_end: 10150, column_start: 16, column_end: 17, line_start: 305, line_end: 305 }: " "
Token { kind: Text, char_start: 10150, char_end: 10160, byte_start: 10150, byte_end: 10160, column_start: 17, column_end: 27, line_start: 305, line_end: 305 }: conditions
Token { kind: Space, char_start: 10160, char_end: 10161, byte_start: 10160, byte_end: 10161, column_start: 27, column_end: 28, line_start: 305, line_end: 305 }: " "
Token { kind: Text, char_start: 10161, char_end: 10164, byte_start: 10161, byte_end: 10164, column_start: 28, column_end: 31, line_start: 305, line_end: 305 }: and
Token { kind: Space, char_start: 10164, char_end: 10165, byte_start: 10164, byte_end: 10165, column_start: 31, column_end: 32, line_start: 305, line_end: 305 }: " "
Token { kind: Text, char_start: 10165, char_end: 10168, byte_start: 10165, byte_end: 10168, column_start: 32, column_end: 35, line_start: 305, line_end: 305 }: the
Token { kind: Space, char_start: 10168, char_end: 10169, byte_start: 10168, byte_end: 10169, column_start: 35, column_end: 36, line_start: 305, line_end: 305 }: " "
Token { kind: Text, char_start: 10169, char_end: 10178, byte_start: 10169, byte_end: 10178, column_start: 36, column_end: 45, line_start: 305, line_end: 305 }: following
Token { kind: Space, char_start: 10178, char_end: 10179, byte_start: 10178, byte_end: 10179, column_start: 45, column_end: 46, line_start: 305, line_end: 305 }: " "
Token { kind: Text, char_start: 10179, char_end: 10190, byte_start: 10179, byte_end: 10190, column_start: 46, column_end: 57, line_start: 305, line_end: 305 }: disclaimer.
Token { kind: Newline, char_start: 10190, char_end: 10191, byte_start: 10190, byte_end: 10191, column_start: 57, column_end: 1, line_start: 305, line_end: 306 }: "\n"
Token { kind: Newline, char_start: 10191, char_end: 10192, byte_start: 10191, byte_end: 10192, column_start: 1, column_end: 1, line_start: 306, line_end: 307 }: "\n"
Token { kind: Text, char_start: 10192, char_end: 10194, byte_start: 10192, byte_end: 10194, column_start: 1, column_end: 3, line_start: 307, line_end: 307 }: 2.
Token { kind: Space, char_start: 10194, char_end: 10195, byte_start: 10194, byte_end: 10195, column_start: 3, column_end: 4, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10195, char_end: 10210, byte_start: 10195, byte_end: 10210, column_start: 4, column_end: 19, line_start: 307, line_end: 307 }: Redistributions
Token { kind: Space, char_start: 10210, char_end: 10211, byte_start: 10210, byte_end: 10211, column_start: 19, column_end: 20, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10211, char_end: 10213, byte_start: 10211, byte_end: 10213, column_start: 20, column_end: 22, line_start: 307, line_end: 307 }: in
Token { kind: Space, char_start: 10213, char_end: 10214, byte_start: 10213, byte_end: 10214, column_start: 22, column_end: 23, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10214, char_end: 10220, byte_start: 10214, byte_end: 10220, column_start: 23, column_end: 29, line_start: 307, line_end: 307 }: binary
Token { kind: Space, char_start: 10220, char_end: 10221, byte_start: 10220, byte_end: 10221, column_start: 29, column_end: 30, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10221, char_end: 10225, byte_start: 10221, byte_end: 10225, column_start: 30, column_end: 34, line_start: 307, line_end: 307 }: form
Token { kind: Space, char_start: 10225, char_end: 10226, byte_start: 10225, byte_end: 10226, column_start: 34, column_end: 35, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10226, char_end: 10230, byte_start: 10226, byte_end: 10230, column_start: 35, column_end: 39, line_start: 307, line_end: 307 }: must
Token { kind: Space, char_start: 10230, char_end: 10231, byte_start: 10230, byte_end: 10231, column_start: 39, column_end: 40, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10231, char_end: 10240, byte_start: 10231, byte_end: 10240, column_start: 40, column_end: 49, line_start: 307, line_end: 307 }: reproduce
Token { kind: Space, char_start: 10240, char_end: 10241, byte_start: 10240, byte_end: 10241, column_start: 49, column_end: 50, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10241, char_end: 10244, byte_start: 10241, byte_end: 10244, column_start: 50, column_end: 53, line_start: 307, line_end: 307 }: the
Token { kind: Space, char_start: 10244, char_end: 10245, byte_start: 10244, byte_end: 10245, column_start: 53, column_end: 54, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10245, char_end: 10250, byte_start: 10245, byte_end: 10250, column_start: 54, column_end: 59, line_start: 307, line_end: 307 }: above
Token { kind: Space, char_start: 10250, char_end: 10251, byte_start: 10250, byte_end: 10251, column_start: 59, column_end: 60, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10251, char_end: 10260, byte_start: 10251, byte_end: 10260, column_start: 60, column_end: 69, line_start: 307, line_end: 307 }: copyright
Token { kind: Space, char_start: 10260, char_end: 10261, byte_start: 10260, byte_end: 10261, column_start: 69, column_end: 70, line_start: 307, line_end: 307 }: " "
Token { kind: Text, char_start: 10261, char_end: 10268, byte_start: 10261, byte_end: 10268, column_start: 70, column_end: 77, line_start: 307, line_end: 307 }: notice,
Token { kind: Newline, char_start: 10268, char_end: 10269, byte_start: 10268, byte_end: 10269, column_start: 77, column_end: 1, line_start: 307, line_end: 308 }: "\n"
Token { kind: Space, char_start: 10269, char_end: 10272, byte_start: 10269, byte_end: 10272, column_start: 1, column_end: 4, line_start: 308, line_end: 308 }: "   "
Token { kind: Text, char_start: 10272, char_end: 10276, byte_start: 10272, byte_end: 10276, column_start: 4, column_end: 8, line_start: 308, line_end: 308 }: this
Token { kind: Space, char_start: 10276, char_end: 10277, byte_start: 10276, byte_end: 10277, column_start: 8, column_end: 9, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10277, char_end: 10281, byte_start: 10277, byte_end: 10281, column_start: 9, column_end: 13, line_start: 308, line_end: 308 }: list
Token { kind: Space, char_start: 10281, char_end: 10282, byte_start: 10281, byte_end: 10282, column_start: 13, column_end: 14, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10282, char_end: 10284, byte_start: 10282, byte_end: 10284, column_start: 14, column_end: 16, line_start: 308, line_end: 308 }: of
Token { kind: Space, char_start: 10284, char_end: 10285, byte_start: 10284, byte_end: 10285, column_start: 16, column_end: 17, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10285, char_end: 10295, byte_start: 10285, byte_end: 10295, column_start: 17, column_end: 27, line_start: 308, line_end: 308 }: conditions
Token { kind: Space, char_start: 10295, char_end: 10296, byte_start: 10295, byte_end: 10296, column_start: 27, column_end: 28, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10296, char_end: 10299, byte_start: 10296, byte_end: 10299, column_start: 28, column_end: 31, line_start: 308, line_end: 308 }: and
Token { kind: Space, char_start: 10299, char_end: 10300, byte_start: 10299, byte_end: 10300, column_start: 31, column_end: 32, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10300, char_end: 10303, byte_start: 10300, byte_end: 10303, column_start: 32, column_end: 35, line_start: 308, line_end: 308 }: the
Token { kind: Space, char_start: 10303, char_end: 10304, byte_start: 10303, byte_end: 10304, column_start: 35, column_end: 36, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10304, char_end: 10313, byte_start: 10304, byte_end: 10313, column_start: 36, column_end: 45, line_start: 308, line_end: 308 }: following
Token { kind: Space, char_start: 10313, char_end: 10314, byte_start: 10313, byte_end: 10314, column_start: 45, column_end: 46, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10314, char_end: 10324, byte_start: 10314, byte_end: 10324, column_start: 46, column_end: 56, line_start: 308, line_end: 308 }: disclaimer
Token { kind: Space, char_start: 10324, char_end: 10325, byte_start: 10324, byte_end: 10325, column_start: 56, column_end: 57, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10325, char_end: 10327, byte_start: 10325, byte_end: 10327, column_start: 57, column_end: 59, line_start: 308, line_end: 308 }: in
Token { kind: Space, char_start: 10327, char_end: 10328, byte_start: 10327, byte_end: 10328, column_start: 59, column_end: 60, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10328, char_end: 10331, byte_start: 10328, byte_end: 10331, column_start: 60, column_end: 63, line_start: 308, line_end: 308 }: the
Token { kind: Space, char_start: 10331, char_end: 10332, byte_start: 10331, byte_end: 10332, column_start: 63, column_end: 64, line_start: 308, line_end: 308 }: " "
Token { kind: Text, char_start: 10332, char_end: 10345, byte_start: 10332, byte_end: 10345, column_start: 64, column_end: 77, line_start: 308, line_end: 308 }: documentation
Token { kind: Newline, char_start: 10345, char_end: 10346, byte_start: 10345, byte_end: 10346, column_start: 77, column_end: 1, line_start: 308, line_end: 309 }: "\n"
Token { kind: Space, char_start: 10346, char_end: 10349, byte_start: 10346, byte_end: 10349, column_start: 1, column_end: 4, line_start: 309, line_end: 309 }: "   "
Token { kind: Text, char_start: 10349, char_end: 10355, byte_start: 10349, byte_end: 10355, column_start: 4, column_end: 10, line_start: 309, line_end: 309 }: and/or
Token { kind: Space, char_start: 10355, char_end: 10356, byte_start: 10355, byte_end: 10356, column_start: 10, column_end: 11, line_start: 309, line_end: 309 }: " "
Token { kind: Text, char_start: 10356, char_end: 10361, byte_start: 10356, byte_end: 10361, column_start: 11, column_end: 16, line_start: 309, line_end: 309 }: other
Token { kind: Space, char_start: 10361, char_end: 10362, byte_start: 10361, byte_end: 10362, column_start: 16, column_end: 17, line_start: 309, line_end: 309 }: " "
Token { kind: Text, char_start: 10362, char_end: 10371, byte_start: 10362, byte_end: 10371, column_start: 17, column_end: 26, line_start: 309, line_end: 309 }: materials
Token { kind: Space, char_start: 10371, char_end: 10372, byte_start: 10371, byte_end: 10372, column_start: 26, column_end: 27, line_start: 309, line_end: 309 }: " "
Token { kind: Text, char_start: 10372, char_end: 10380, byte_start: 10372, byte_end: 10380, column_start: 27, column_end: 35, line_start: 309, line_end: 309 }: provided
Token { kind: Space, char_start: 10380, char_end: 10381, byte_start: 10380, byte_end: 10381, column_start: 35, column_end: 36, line_start: 309, line_end: 309 }: " "
Token { kind: Text, char_start: 10381, char_end: 10385, byte_start: 10381, byte_end: 10385, column_start: 36, column_end: 40, line_start: 309, line_end: 309 }: with
Token { kind: Space, char_start: 10385, char_end: 10386, byte_start: 10385, byte_end: 10386, column_start: 40, column_end: 41, line_start: 309, line_end: 309 }: " "
Token { kind: Text, char_start: 10386, char_end: 10389, byte_start: 10386, byte_end: 10389, column_start: 41, column_end: 44, line_start: 309, line_end: 309 }: the
Token { kind: Space, char_start: 10389, char_end: 10390, byte_start: 10389, byte_end: 10390, column_start: 44, column_end: 45, line_start: 309, line_end: 309 }: " "
Token { kind: Text, char_start: 10390, char_end: 10403, byte_start: 10390, byte_end: 10403, column_start: 45, column_end: 58, line_start: 309, line_end: 309 }: distribution.
Token { kind: Newline, char_start: 10403, char_end: 10404, byte_start: 10403, byte_end: 10404, column_start: 58, column_end: 1, line_start: 309, line_end: 310 }: "\n"
Token { kind: Newline, char_start: 10404, char_end: 10405, byte_start: 10404, byte_end: 10405, column_start: 1, column_end: 1, line_start: 310, line_end: 311 }: "\n"
Token { kind: Text, char_start: 10405, char_end: 10409, byte_start: 10405, byte_end: 10409, column_start: 1, column_end: 5, line_start: 311, line_end: 311 }: THIS
Token { kind: Space, char_start: 10409, char_end: 10410, byte_start: 10409, byte_end: 10410, column_start: 5, column_end: 6, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10410, char_end: 10418, byte_start: 10410, byte_end: 10418, column_start: 6, column_end: 14, line_start: 311, line_end: 311 }: SOFTWARE
Token { kind: Space, char_start: 10418, char_end: 10419, byte_start: 10418, byte_end: 10419, column_start: 14, column_end: 15, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10419, char_end: 10421, byte_start: 10419, byte_end: 10421, column_start: 15, column_end: 17, line_start: 311, line_end: 311 }: IS
Token { kind: Space, char_start: 10421, char_end: 10422, byte_start: 10421, byte_end: 10422, column_start: 17, column_end: 18, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10422, char_end: 10430, byte_start: 10422, byte_end: 10430, column_start: 18, column_end: 26, line_start: 311, line_end: 311 }: PROVIDED
Token { kind: Space, char_start: 10430, char_end: 10431, byte_start: 10430, byte_end: 10431, column_start: 26, column_end: 27, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10431, char_end: 10433, byte_start: 10431, byte_end: 10433, column_start: 27, column_end: 29, line_start: 311, line_end: 311 }: BY
Token { kind: Space, char_start: 10433, char_end: 10434, byte_start: 10433, byte_end: 10434, column_start: 29, column_end: 30, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10434, char_end: 10437, byte_start: 10434, byte_end: 10437, column_start: 30, column_end: 33, line_start: 311, line_end: 311 }: THE
Token { kind: Space, char_start: 10437, char_end: 10438, byte_start: 10437, byte_end: 10438, column_start: 33, column_end: 34, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10438, char_end: 10447, byte_start: 10438, byte_end: 10447, column_start: 34, column_end: 43, line_start: 311, line_end: 311 }: COPYRIGHT
Token { kind: Space, char_start: 10447, char_end: 10448, byte_start: 10447, byte_end: 10448, column_start: 43, column_end: 44, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10448, char_end: 10455, byte_start: 10448, byte_end: 10455, column_start: 44, column_end: 51, line_start: 311, line_end: 311 }: HOLDERS
Token { kind: Space, char_start: 10455, char_end: 10456, byte_start: 10455, byte_end: 10456, column_start: 51, column_end: 52, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10456, char_end: 10459, byte_start: 10456, byte_end: 10459, column_start: 52, column_end: 55, line_start: 311, line_end: 311 }: AND
Token { kind: Space, char_start: 10459, char_end: 10460, byte_start: 10459, byte_end: 10460, column_start: 55, column_end: 56, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10460, char_end: 10472, byte_start: 10460, byte_end: 10472, column_start: 56, column_end: 68, line_start: 311, line_end: 311 }: CONTRIBUTORS
Token { kind: Space, char_start: 10472, char_end: 10473, byte_start: 10472, byte_end: 10473, column_start: 68, column_end: 69, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10473, char_end: 10476, byte_start: 10473, byte_end: 10476, column_start: 69, column_end: 72, line_start: 311, line_end: 311 }: "AS
Token { kind: Space, char_start: 10476, char_end: 10477, byte_start: 10476, byte_end: 10477, column_start: 72, column_end: 73, line_start: 311, line_end: 311 }: " "
Token { kind: Text, char_start: 10477, char_end: 10480, byte_start: 10477, byte_end: 10480, column_start: 73, column_end: 76, line_start: 311, line_end: 311 }: IS"
Token { kind: Newline, char_start: 10480, char_end: 10481, byte_start: 10480, byte_end: 10481, column_start: 76, column_end: 1, line_start: 311, line_end: 312 }: "\n"
Token { kind: Text, char_start: 10481, char_end: 10484, byte_start: 10481, byte_end: 10484, column_start: 1, column_end: 4, line_start: 312, line_end: 312 }: AND
Token { kind: Space, char_start: 10484, char_end: 10485, byte_start: 10484, byte_end: 10485, column_start: 4, column_end: 5, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10485, char_end: 10488, byte_start: 10485, byte_end: 10488, column_start: 5, column_end: 8, line_start: 312, line_end: 312 }: ANY
Token { kind: Space, char_start: 10488, char_end: 10489, byte_start: 10488, byte_end: 10489, column_start: 8, column_end: 9, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10489, char_end: 10496, byte_start: 10489, byte_end: 10496, column_start: 9, column_end: 16, line_start: 312, line_end: 312 }: EXPRESS
Token { kind: Space, char_start: 10496, char_end: 10497, byte_start: 10496, byte_end: 10497, column_start: 16, column_end: 17, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10497, char_end: 10499, byte_start: 10497, byte_end: 10499, column_start: 17, column_end: 19, line_start: 312, line_end: 312 }: OR
Token { kind: Space, char_start: 10499, char_end: 10500, byte_start: 10499, byte_end: 10500, column_start: 19, column_end: 20, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10500, char_end: 10507, byte_start: 10500, byte_end: 10507, column_start: 20, column_end: 27, line_start: 312, line_end: 312 }: IMPLIED
Token { kind: Space, char_start: 10507, char_end: 10508, byte_start: 10507, byte_end: 10508, column_start: 27, column_end: 28, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10508, char_end: 10519, byte_start: 10508, byte_end: 10519, column_start: 28, column_end: 39, line_start: 312, line_end: 312 }: WARRANTIES,
Token { kind: Space, char_start: 10519, char_end: 10520, byte_start: 10519, byte_end: 10520, column_start: 39, column_end: 40, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10520, char_end: 10530, byte_start: 10520, byte_end: 10530, column_start: 40, column_end: 50, line_start: 312, line_end: 312 }: INCLUDING,
Token { kind: Space, char_start: 10530, char_end: 10531, byte_start: 10530, byte_end: 10531, column_start: 50, column_end: 51, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10531, char_end: 10534, byte_start: 10531, byte_end: 10534, column_start: 51, column_end: 54, line_start: 312, line_end: 312 }: BUT
Token { kind: Space, char_start: 10534, char_end: 10535, byte_start: 10534, byte_end: 10535, column_start: 54, column_end: 55, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10535, char_end: 10538, byte_start: 10535, byte_end: 10538, column_start: 55, column_end: 58, line_start: 312, line_end: 312 }: NOT
Token { kind: Space, char_start: 10538, char_end: 10539, byte_start: 10538, byte_end: 10539, column_start: 58, column_end: 59, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10539, char_end: 10546, byte_start: 10539, byte_end: 10546, column_start: 59, column_end: 66, line_start: 312, line_end: 312 }: LIMITED
Token { kind: Space, char_start: 10546, char_end: 10547, byte_start: 10546, byte_end: 10547, column_start: 66, column_end: 67, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10547, char_end: 10550, byte_start: 10547, byte_end: 10550, column_start: 67, column_end: 70, line_start: 312, line_end: 312 }: TO,
Token { kind: Space, char_start: 10550, char_end: 10551, byte_start: 10550, byte_end: 10551, column_start: 70, column_end: 71, line_start: 312, line_end: 312 }: " "
Token { kind: Text, char_start: 10551, char_end: 10554, byte_start: 10551, byte_end: 10554, column_start: 71, column_end: 74, line_start: 312, line_end: 312 }: THE
Token { kind: Newline, char_start: 10554, char_end: 10555, byte_start: 10554, byte_end: 10555, column_start: 74, column_end: 1, line_start: 312, line_end: 313 }: "\n"
Token { kind: Text, char_start: 10555, char_end: 10562, byte_start: 10555, byte_end: 10562, column_start: 1, column_end: 8, line_start: 313, line_end: 313 }: IMPLIED
Token { kind: Space, char_start: 10562, char_end: 10563, byte_start: 10562, byte_end: 10563, column_start: 8, column_end: 9, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10563, char_end: 10573, byte_start: 10563, byte_end: 10573, column_start: 9, column_end: 19, line_start: 313, line_end: 313 }: WARRANTIES
Token { kind: Space, char_start: 10573, char_end: 10574, byte_start: 10573, byte_end: 10574, column_start: 19, column_end: 20, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10574, char_end: 10576, byte_start: 10574, byte_end: 10576, column_start: 20, column_end: 22, line_start: 313, line_end: 313 }: OF
Token { kind: Space, char_start: 10576, char_end: 10577, byte_start: 10576, byte_end: 10577, column_start: 22, column_end: 23, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10577, char_end: 10592, byte_start: 10577, byte_end: 10592, column_start: 23, column_end: 38, line_start: 313, line_end: 313 }: MERCHANTABILITY
Token { kind: Space, char_start: 10592, char_end: 10593, byte_start: 10592, byte_end: 10593, column_start: 38, column_end: 39, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10593, char_end: 10596, byte_start: 10593, byte_end: 10596, column_start: 39, column_end: 42, line_start: 313, line_end: 313 }: AND
Token { kind: Space, char_start: 10596, char_end: 10597, byte_start: 10596, byte_end: 10597, column_start: 42, column_end: 43, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10597, char_end: 10604, byte_start: 10597, byte_end: 10604, column_start: 43, column_end: 50, line_start: 313, line_end: 313 }: FITNESS
Token { kind: Space, char_start: 10604, char_end: 10605, byte_start: 10604, byte_end: 10605, column_start: 50, column_end: 51, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10605, char_end: 10608, byte_start: 10605, byte_end: 10608, column_start: 51, column_end: 54, line_start: 313, line_end: 313 }: FOR
Token { kind: Space, char_start: 10608, char_end: 10609, byte_start: 10608, byte_end: 10609, column_start: 54, column_end: 55, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10609, char_end: 10610, byte_start: 10609, byte_end: 10610, column_start: 55, column_end: 56, line_start: 313, line_end: 313 }: A
Token { kind: Space, char_start: 10610, char_end: 10611, byte_start: 10610, byte_end: 10611, column_start: 56, column_end: 57, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10611, char_end: 10621, byte_start: 10611, byte_end: 10621, column_start: 57, column_end: 67, line_start: 313, line_end: 313 }: PARTICULAR
Token { kind: Space, char_start: 10621, char_end: 10622, byte_start: 10621, byte_end: 10622, column_start: 67, column_end: 68, line_start: 313, line_end: 313 }: " "
Token { kind: Text, char_start: 10622, char_end: 10629, byte_start: 10622, byte_end: 10629, column_start: 68, column_end: 75, line_start: 313, line_end: 313 }: PURPOSE
Token { kind: Newline, char_start: 10629, char_end: 10630, byte_start: 10629, byte_end: 10630, column_start: 75, column_end: 1, line_start: 313, line_end: 314 }: "\n"
Token { kind: Text, char_start: 10630, char_end: 10633, byte_start: 10630, byte_end: 10633, column_start: 1, column_end: 4, line_start: 314, line_end: 314 }: ARE
Token { kind: Space, char_start: 10633, char_end: 10634, byte_start: 10633, byte_end: 10634, column_start: 4, column_end: 5, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10634, char_end: 10645, byte_start: 10634, byte_end: 10645, column_start: 5, column_end: 16, line_start: 314, line_end: 314 }: DISCLAIMED.
Token { kind: Space, char_start: 10645, char_end: 10646, byte_start: 10645, byte_end: 10646, column_start: 16, column_end: 17, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10646, char_end: 10648, byte_start: 10646, byte_end: 10648, column_start: 17, column_end: 19, line_start: 314, line_end: 314 }: IN
Token { kind: Space, char_start: 10648, char_end: 10649, byte_start: 10648, byte_end: 10649, column_start: 19, column_end: 20, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10649, char_end: 10651, byte_start: 10649, byte_end: 10651, column_start: 20, column_end: 22, line_start: 314, line_end: 314 }: NO
Token { kind: Space, char_start: 10651, char_end: 10652, byte_start: 10651, byte_end: 10652, column_start: 22, column_end: 23, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10652, char_end: 10657, byte_start: 10652, byte_end: 10657, column_start: 23, column_end: 28, line_start: 314, line_end: 314 }: EVENT
Token { kind: Space, char_start: 10657, char_end: 10658, byte_start: 10657, byte_end: 10658, column_start: 28, column_end: 29, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10658, char_end: 10663, byte_start: 10658, byte_end: 10663, column_start: 29, column_end: 34, line_start: 314, line_end: 314 }: SHALL
Token { kind: Space, char_start: 10663, char_end: 10664, byte_start: 10663, byte_end: 10664, column_start: 34, column_end: 35, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10664, char_end: 10667, byte_start: 10664, byte_end: 10667, column_start: 35, column_end: 38, line_start: 314, line_end: 314 }: THE
Token { kind: Space, char_start: 10667, char_end: 10668, byte_start: 10667, byte_end: 10668, column_start: 38, column_end: 39, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10668, char_end: 10677, byte_start: 10668, byte_end: 10677, column_start: 39, column_end: 48, line_start: 314, line_end: 314 }: COPYRIGHT
Token { kind: Space, char_start: 10677, char_end: 10678, byte_start: 10677, byte_end: 10678, column_start: 48, column_end: 49, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10678, char_end: 10685, byte_start: 10678, byte_end: 10685, column_start: 49, column_end: 56, line_start: 314, line_end: 314 }: HOLDERS
Token { kind: Space, char_start: 10685, char_end: 10686, byte_start: 10685, byte_end: 10686, column_start: 56, column_end: 57, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10686, char_end: 10688, byte_start: 10686, byte_end: 10688, column_start: 57, column_end: 59, line_start: 314, line_end: 314 }: OR
Token { kind: Space, char_start: 10688, char_end: 10689, byte_start: 10688, byte_end: 10689, column_start: 59, column_end: 60, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10689, char_end: 10701, byte_start: 10689, byte_end: 10701, column_start: 60, column_end: 72, line_start: 314, line_end: 314 }: CONTRIBUTORS
Token { kind: Space, char_start: 10701, char_end: 10702, byte_start: 10701, byte_end: 10702, column_start: 72, column_end: 73, line_start: 314, line_end: 314 }: " "
Token { kind: Text, char_start: 10702, char_end: 10704, byte_start: 10702, byte_end: 10704, column_start: 73, column_end: 75, line_start: 314, line_end: 314 }: BE
Token { kind: Newline, char_start: 10704, char_end: 10705, byte_start: 10704, byte_end: 10705, column_start: 75, column_end: 1, line_start: 314, line_end: 315 }: "\n"
Token { kind: Text, char_start: 10705, char_end: 10711, byte_start: 10705, byte_end: 10711, column_start: 1, column_end: 7, line_start: 315, line_end: 315 }: LIABLE
Token { kind: Space, char_start: 10711, char_end: 10712, byte_start: 10711, byte_end: 10712, column_start: 7, column_end: 8, line_start: 315, line_end: 315 }: " "
Token { kind: Text, char_start: 10712, char_end: 10715, byte_start: 10712, byte_end: 10715, column_start: 8, column_end: 11, line_start: 315, line_end: 315 }: FOR
Token { kind: Space, char_start: 10715, char_end: 10716, byte_start: 10715, byte_end: 10716, column_start: 11, column_end: 12, line_start: 315, line_end: 315 }: " "
Token { kind: Text, char_start: 10716, char_end: 10719, byte_start: 10716, byte_end: 10719, column_start: 12, column_end: 15, line_start: 315, line_end: 315 }: ANY
Token { kind: Space, char_start: 10719, char_end: 10720, byte_start: 10719, byte_end: 10720, column_start: 15, column_end: 16, line_start: 315, line_end: 315 }: " "
Token { kind: Text, char_start: 10720, char_end: 10727, byte_start: 10720, byte_end: 10727, column_start: 16, column_end: 23, line_start: 315, line_end: 315 }: DIRECT,
Token { kind: Space, char_start: 10727, char_end: 10728, byte_start: 10727, byte_end: 10728, column_start: 23, column_end: 24, line_start: 315, line_end: 315 }: " "
Token { kind: Text, char_start: 10728, char_end: 10737, byte_start: 10728, byte_end: 10737, column_start: 24, column_end: 33, line_start: 315, line_end: 315 }: INDIRECT,
Token { kind: Space, char_start: 10737, char_end: 10738, byte_start: 10737, byte_end: 10738, column_start: 33, column_end: 34, line_start: 315, line_end: 315 }: " "
Token { kind: Text, char_start: 10738, char_end: 10749, byte_start: 10738, byte_end: 10749, column_start: 34, column_end: 45, line_start: 315, line_end: 315 }: INCIDENTAL,
Token { kind: Space, char_start: 10749, char_end: 10750, byte_start: 10749, byte_end: 10750, column_start: 45, column_end: 46, line_start: 315, line_end: 315 }: " "
Token { kind: Text, char_start: 10750, char_end: 10758, byte_start: 10750, byte_end: 10758, column_start: 46, column_end: 54, line_start: 315, line_end: 315 }: SPECIAL,
Token { kind: Space, char_start: 10758, char_end: 10759, byte_start: 10758, byte_end: 10759, column_start: 54, column_end: 55, line_start: 315, line_end: 315 }: " "
Token { kind: Text, char_start: 10759, char_end: 10769, byte_start: 10759, byte_end: 10769, column_start: 55, column_end: 65, line_start: 315, line_end: 315 }: EXEMPLARY,
Token { kind: Space, char_start: 10769, char_end: 10770, byte_start: 10769, byte_end: 10770, column_start: 65, column_end: 66, line_start: 315, line_end: 315 }: " "
Token { kind: Text, char_start: 10770, char_end: 10772, byte_start: 10770, byte_end: 10772, column_start: 66, column_end: 68, line_start: 315, line_end: 315 }: OR
Token { kind: Newline, char_start: 10772, char_end: 10773, byte_start: 10772, byte_end: 10773, column_start: 68, column_end: 1, line_start: 315, line_end: 316 }: "\n"
Token { kind: Text, char_start: 10773, char_end: 10786, byte_start: 10773, byte_end: 10786, column_start: 1, column_end: 14, line_start: 316, line_end: 316 }: CONSEQUENTIAL
Token { kind: Space, char_start: 10786, char_end: 10787, byte_start: 10786, byte_end: 10787, column_start: 14, column_end: 15, line_start: 316, line_end: 316 }: " "
Token { kind: Text, char_start: 10787, char_end: 10794, byte_start: 10787, byte_end: 10794, column_start: 15, column_end: 22, line_start: 316, line_end: 316 }: DAMAGES
Token { kind: Space, char_start: 10794, char_end: 10795, byte_start: 10794, byte_end: 10795, column_start: 22, column_end: 23, line_start: 316, line_end: 316 }: " "
Token { kind: Lparen, char_start: 10795, char_end: 10796, byte_start: 10795, byte_end: 10796, column_start: 23, column_end: 24, line_start: 316, line_end: 316 }: (
Token { kind: Text, char_start: 10796, char_end: 10806, byte_start: 10796, byte_end: 10806, column_start: 24, column_end: 34, line_start: 316, line_end: 316 }: INCLUDING,
Token { kind: Space, char_start: 10806, char_end: 10807, byte_start: 10806, byte_end: 10807, column_start: 34, column_end: 35, line_start: 316, line_end: 316 }: " "
Token { kind: Text, char_start: 10807, char_end: 10810, byte_start: 10807, byte_end: 10810, column_start: 35, column_end: 38, line_start: 316, line_end: 316 }: BUT
Token { kind: Space, char_start: 10810, char_end: 10811, byte_start: 10810, byte_end: 10811, column_start: 38, column_end: 39, line_start: 316, line_end: 316 }: " "
Token { kind: Text, char_start: 10811, char_end: 10814, byte_start: 10811, byte_end: 10814, column_start: 39, column_end: 42, line_start: 316, line_end: 316 }: NOT
Token { kind: Space, char_start: 10814, char_end: 10815, byte_start: 10814, byte_end: 10815, column_start: 42, column_end: 43, line_start: 316, line_end: 316 }: " "
Token { kind: Text, char_start: 10815, char_end: 10822, byte_start: 10815, byte_end: 10822, column_start: 43, column_end: 50, line_start: 316, line_end: 316 }: LIMITED
Token { kind: Space, char_start: 10822, char_end: 10823, byte_start: 10822, byte_end: 10823, column_start: 50, column_end: 51, line_start: 316, line_end: 316 }: " "
Token { kind: Text, char_start: 10823, char_end: 10826, byte_start: 10823, byte_end: 10826, column_start: 51, column_end: 54, line_start: 316, line_end: 316 }: TO,
Token { kind: Space, char_start: 10826, char_end: 10827, byte_start: 10826, byte_end: 10827, column_start: 54, column_end: 55, line_start: 316, line_end: 316 }: " "
Token { kind: Text, char_start: 10827, char_end: 10838, byte_start: 10827, byte_end: 10838, column_start: 55, column_end: 66, line_start: 316, line_end: 316 }: PROCUREMENT
Token { kind: Space, char_start: 10838, char_end: 10839, byte_start: 10838, byte_end: 10839, column_start: 66, column_end: 67, line_start: 316, line_end: 316 }: " "
Token { kind: Text, char_start: 10839, char_end: 10841, byte_start: 10839, byte_end: 10841, column_start: 67, column_end: 69, line_start: 316, line_end: 316 }: OF
Token { kind: Newline, char_start: 10841, char_end: 10842, byte_start: 10841, byte_end: 10842, column_start: 69, column_end: 1, line_start: 316, line_end: 317 }: "\n"
Token { kind: Text, char_start: 10842, char_end: 10852, byte_start: 10842, byte_end: 10852, column_start: 1, column_end: 11, line_start: 317, line_end: 317 }: SUBSTITUTE
Token { kind: Space, char_start: 10852, char_end: 10853, byte_start: 10852, byte_end: 10853, column_start: 11, column_end: 12, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10853, char_end: 10858, byte_start: 10853, byte_end: 10858, column_start: 12, column_end: 17, line_start: 317, line_end: 317 }: GOODS
Token { kind: Space, char_start: 10858, char_end: 10859, byte_start: 10858, byte_end: 10859, column_start: 17, column_end: 18, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10859, char_end: 10861, byte_start: 10859, byte_end: 10861, column_start: 18, column_end: 20, line_start: 317, line_end: 317 }: OR
Token { kind: Space, char_start: 10861, char_end: 10862, byte_start: 10861, byte_end: 10862, column_start: 20, column_end: 21, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10862, char_end: 10871, byte_start: 10862, byte_end: 10871, column_start: 21, column_end: 30, line_start: 317, line_end: 317 }: SERVICES;
Token { kind: Space, char_start: 10871, char_end: 10872, byte_start: 10871, byte_end: 10872, column_start: 30, column_end: 31, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10872, char_end: 10876, byte_start: 10872, byte_end: 10876, column_start: 31, column_end: 35, line_start: 317, line_end: 317 }: LOSS
Token { kind: Space, char_start: 10876, char_end: 10877, byte_start: 10876, byte_end: 10877, column_start: 35, column_end: 36, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10877, char_end: 10879, byte_start: 10877, byte_end: 10879, column_start: 36, column_end: 38, line_start: 317, line_end: 317 }: OF
Token { kind: Space, char_start: 10879, char_end: 10880, byte_start: 10879, byte_end: 10880, column_start: 38, column_end: 39, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10880, char_end: 10884, byte_start: 10880, byte_end: 10884, column_start: 39, column_end: 43, line_start: 317, line_end: 317 }: USE,
Token { kind: Space, char_start: 10884, char_end: 10885, byte_start: 10884, byte_end: 10885, column_start: 43, column_end: 44, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10885, char_end: 10890, byte_start: 10885, byte_end: 10890, column_start: 44, column_end: 49, line_start: 317, line_end: 317 }: DATA,
Token { kind: Space, char_start: 10890, char_end: 10891, byte_start: 10890, byte_end: 10891, column_start: 49, column_end: 50, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10891, char_end: 10893, byte_start: 10891, byte_end: 10893, column_start: 50, column_end: 52, line_start: 317, line_end: 317 }: OR
Token { kind: Space, char_start: 10893, char_end: 10894, byte_start: 10893, byte_end: 10894, column_start: 52, column_end: 53, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10894, char_end: 10902, byte_start: 10894, byte_end: 10902, column_start: 53, column_end: 61, line_start: 317, line_end: 317 }: PROFITS;
Token { kind: Space, char_start: 10902, char_end: 10903, byte_start: 10902, byte_end: 10903, column_start: 61, column_end: 62, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10903, char_end: 10905, byte_start: 10903, byte_end: 10905, column_start: 62, column_end: 64, line_start: 317, line_end: 317 }: OR
Token { kind: Space, char_start: 10905, char_end: 10906, byte_start: 10905, byte_end: 10906, column_start: 64, column_end: 65, line_start: 317, line_end: 317 }: " "
Token { kind: Text, char_start: 10906, char_end: 10914, byte_start: 10906, byte_end: 10914, column_start: 65, column_end: 73, line_start: 317, line_end: 317 }: BUSINESS
Token { kind: Newline, char_start: 10914, char_end: 10915, byte_start: 10914, byte_end: 10915, column_start: 73, column_end: 1, line_start: 317, line_end: 318 }: "\n"
Token { kind: Text, char_start: 10915, char_end: 10927, byte_start: 10915, byte_end: 10927, column_start: 1, column_end: 13, line_start: 318, line_end: 318 }: INTERRUPTION
Token { kind: Rparen, char_start: 10927, char_end: 10928, byte_start: 10927, byte_end: 10928, column_start: 13, column_end: 14, line_start: 318, line_end: 318 }: )
Token { kind: Space, char_start: 10928, char_end: 10929, byte_start: 10928, byte_end: 10929, column_start: 14, column_end: 15, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10929, char_end: 10936, byte_start: 10929, byte_end: 10936, column_start: 15, column_end: 22, line_start: 318, line_end: 318 }: HOWEVER
Token { kind: Space, char_start: 10936, char_end: 10937, byte_start: 10936, byte_end: 10937, column_start: 22, column_end: 23, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10937, char_end: 10943, byte_start: 10937, byte_end: 10943, column_start: 23, column_end: 29, line_start: 318, line_end: 318 }: CAUSED
Token { kind: Space, char_start: 10943, char_end: 10944, byte_start: 10943, byte_end: 10944, column_start: 29, column_end: 30, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10944, char_end: 10947, byte_start: 10944, byte_end: 10947, column_start: 30, column_end: 33, line_start: 318, line_end: 318 }: AND
Token { kind: Space, char_start: 10947, char_end: 10948, byte_start: 10947, byte_end: 10948, column_start: 33, column_end: 34, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10948, char_end: 10950, byte_start: 10948, byte_end: 10950, column_start: 34, column_end: 36, line_start: 318, line_end: 318 }: ON
Token { kind: Space, char_start: 10950, char_end: 10951, byte_start: 10950, byte_end: 10951, column_start: 36, column_end: 37, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10951, char_end: 10954, byte_start: 10951, byte_end: 10954, column_start: 37, column_end: 40, line_start: 318, line_end: 318 }: ANY
Token { kind: Space, char_start: 10954, char_end: 10955, byte_start: 10954, byte_end: 10955, column_start: 40, column_end: 41, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10955, char_end: 10961, byte_start: 10955, byte_end: 10961, column_start: 41, column_end: 47, line_start: 318, line_end: 318 }: THEORY
Token { kind: Space, char_start: 10961, char_end: 10962, byte_start: 10961, byte_end: 10962, column_start: 47, column_end: 48, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10962, char_end: 10964, byte_start: 10962, byte_end: 10964, column_start: 48, column_end: 50, line_start: 318, line_end: 318 }: OF
Token { kind: Space, char_start: 10964, char_end: 10965, byte_start: 10964, byte_end: 10965, column_start: 50, column_end: 51, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10965, char_end: 10975, byte_start: 10965, byte_end: 10975, column_start: 51, column_end: 61, line_start: 318, line_end: 318 }: LIABILITY,
Token { kind: Space, char_start: 10975, char_end: 10976, byte_start: 10975, byte_end: 10976, column_start: 61, column_end: 62, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10976, char_end: 10983, byte_start: 10976, byte_end: 10983, column_start: 62, column_end: 69, line_start: 318, line_end: 318 }: WHETHER
Token { kind: Space, char_start: 10983, char_end: 10984, byte_start: 10983, byte_end: 10984, column_start: 69, column_end: 70, line_start: 318, line_end: 318 }: " "
Token { kind: Text, char_start: 10984, char_end: 10986, byte_start: 10984, byte_end: 10986, column_start: 70, column_end: 72, line_start: 318, line_end: 318 }: IN
Token { kind: Newline, char_start: 10986, char_end: 10987, byte_start: 10986, byte_end: 10987, column_start: 72, column_end: 1, line_start: 318, line_end: 319 }: "\n"
Token { kind: Text, char_start: 10987, char_end: 10996, byte_start: 10987, byte_end: 10996, column_start: 1, column_end: 10, line_start: 319, line_end: 319 }: CONTRACT,
Token { kind: Space, char_start: 10996, char_end: 10997, byte_start: 10996, byte_end: 10997, column_start: 10, column_end: 11, line_start: 319, line_end: 319 }: " "
Token { kind: Text, char_start: 10997, char_end: 11003, byte_start: 10997, byte_end: 11003, column_start: 11, column_end: 17, line_start: 319, line_end: 319 }: STRICT
Token { kind: Space, char_start: 11003, char_end: 11004, byte_start: 11003, byte_end: 11004, column_start: 17, column_end: 18, line_start: 319, line_end: 319 }: " "
Token { kind: Text, char_start: 11004, char_end: 11014, byte_start: 11004, byte_end: 11014, column_start: 18, column_end: 28, line_start: 319, line_end: 319 }: LIABILITY,
Token { kind: Space, char_start: 11014, char_end: 11015, byte_start: 11014, byte_end: 11015, column_start: 28, column_end: 29, line_start: 319, line_end: 319 }: " "
Token { kind: Text, char_start: 11015, char_end: 11017, byte_start: 11015, byte_end: 11017, column_start: 29, column_end: 31, line_start: 319, line_end: 319 }: OR
Token { kind: Space, char_start: 11017, char_end: 11018, byte_start: 11017, byte_end: 11018, column_start: 31, column_end: 32, line_start: 319, line_end: 319 }: " "
Token { kind: Text, char_start: 11018, char_end: 11022, byte_start: 11018, byte_end: 11022, column_start: 32, column_end: 36, line_start: 319, line_end: 319 }: TORT
Token { kind: Space, char_start: 11022, char_end: 11023, byte_start: 11022, byte_end: 11023, column_start: 36, column_end: 37, line_start: 319, line_end: 319 }: " "
Token { kind: Lparen, char_start: 11023, char_end: 11024, byte_start: 11023, byte_end: 11024, column_start: 37, column_end: 38, line_start: 319, line_end: 319 }: (
Token { kind: Text, char_start: 11024, char_end: 11033, byte_start: 11024, byte_end: 11033, column_start: 38, column_end: 47, line_start: 319, line_end: 319 }: INCLUDING
Token { kind: Space, char_start: 11033, char_end: 11034, byte_start: 11033, byte_end: 11034, column_start: 47, column_end: 48, line_start: 319, line_end: 319 }: " "
Token { kind: Text, char_start: 11034, char_end: 11044, byte_start: 11034, byte_end: 11044, column_start: 48, column_end: 58, line_start: 319, line_end: 319 }: NEGLIGENCE
Token { kind: Space, char_start: 11044, char_end: 11045, byte_start: 11044, byte_end: 11045, column_start: 58, column_end: 59, line_start: 319, line_end: 319 }: " "
Token { kind: Text, char_start: 11045, char_end: 11047, byte_start: 11045, byte_end: 11047, column_start: 59, column_end: 61, line_start: 319, line_end: 319 }: OR
Token { kind: Space, char_start: 11047, char_end: 11048, byte_start: 11047, byte_end: 11048, column_start: 61, column_end: 62, line_start: 319, line_end: 319 }: " "
Token { kind: Text, char_start: 11048, char_end: 11057, byte_start: 11048, byte_end: 11057, column_start: 62, column_end: 71, line_start: 319, line_end: 319 }: OTHERWISE
Token { kind: Rparen, char_start: 11057, char_end: 11058, byte_start: 11057, byte_end: 11058, column_start: 71, column_end: 72, line_start: 319, line_end: 319 }: )
Token { kind: Newline, char_start: 11058, char_end: 11059, byte_start: 11058, byte_end: 11059, column_start: 72, column_end: 1, line_start: 319, line_end: 320 }: "\n"
Token { kind: Text, char_start: 11059, char_end: 11066, byte_start: 11059, byte_end: 11066, column_start: 1, column_end: 8, line_start: 320, line_end: 320 }: ARISING
Token { kind: Space, char_start: 11066, char_end: 11067, byte_start: 11066, byte_end: 11067, column_start: 8, column_end: 9, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11067, char_end: 11069, byte_start: 11067, byte_end: 11069, column_start: 9, column_end: 11, line_start: 320, line_end: 320 }: IN
Token { kind: Space, char_start: 11069, char_end: 11070, byte_start: 11069, byte_end: 11070, column_start: 11, column_end: 12, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11070, char_end: 11073, byte_start: 11070, byte_end: 11073, column_start: 12, column_end: 15, line_start: 320, line_end: 320 }: ANY
Token { kind: Space, char_start: 11073, char_end: 11074, byte_start: 11073, byte_end: 11074, column_start: 15, column_end: 16, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11074, char_end: 11077, byte_start: 11074, byte_end: 11077, column_start: 16, column_end: 19, line_start: 320, line_end: 320 }: WAY
Token { kind: Space, char_start: 11077, char_end: 11078, byte_start: 11077, byte_end: 11078, column_start: 19, column_end: 20, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11078, char_end: 11081, byte_start: 11078, byte_end: 11081, column_start: 20, column_end: 23, line_start: 320, line_end: 320 }: OUT
Token { kind: Space, char_start: 11081, char_end: 11082, byte_start: 11081, byte_end: 11082, column_start: 23, column_end: 24, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11082, char_end: 11084, byte_start: 11082, byte_end: 11084, column_start: 24, column_end: 26, line_start: 320, line_end: 320 }: OF
Token { kind: Space, char_start: 11084, char_end: 11085, byte_start: 11084, byte_end: 11085, column_start: 26, column_end: 27, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11085, char_end: 11088, byte_start: 11085, byte_end: 11088, column_start: 27, column_end: 30, line_start: 320, line_end: 320 }: THE
Token { kind: Space, char_start: 11088, char_end: 11089, byte_start: 11088, byte_end: 11089, column_start: 30, column_end: 31, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11089, char_end: 11092, byte_start: 11089, byte_end: 11092, column_start: 31, column_end: 34, line_start: 320, line_end: 320 }: USE
Token { kind: Space, char_start: 11092, char_end: 11093, byte_start: 11092, byte_end: 11093, column_start: 34, column_end: 35, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11093, char_end: 11095, byte_start: 11093, byte_end: 11095, column_start: 35, column_end: 37, line_start: 320, line_end: 320 }: OF
Token { kind: Space, char_start: 11095, char_end: 11096, byte_start: 11095, byte_end: 11096, column_start: 37, column_end: 38, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11096, char_end: 11100, byte_start: 11096, byte_end: 11100, column_start: 38, column_end: 42, line_start: 320, line_end: 320 }: THIS
Token { kind: Space, char_start: 11100, char_end: 11101, byte_start: 11100, byte_end: 11101, column_start: 42, column_end: 43, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11101, char_end: 11110, byte_start: 11101, byte_end: 11110, column_start: 43, column_end: 52, line_start: 320, line_end: 320 }: SOFTWARE,
Token { kind: Space, char_start: 11110, char_end: 11111, byte_start: 11110, byte_end: 11111, column_start: 52, column_end: 53, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11111, char_end: 11115, byte_start: 11111, byte_end: 11115, column_start: 53, column_end: 57, line_start: 320, line_end: 320 }: EVEN
Token { kind: Space, char_start: 11115, char_end: 11116, byte_start: 11115, byte_end: 11116, column_start: 57, column_end: 58, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11116, char_end: 11118, byte_start: 11116, byte_end: 11118, column_start: 58, column_end: 60, line_start: 320, line_end: 320 }: IF
Token { kind: Space, char_start: 11118, char_end: 11119, byte_start: 11118, byte_end: 11119, column_start: 60, column_end: 61, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11119, char_end: 11126, byte_start: 11119, byte_end: 11126, column_start: 61, column_end: 68, line_start: 320, line_end: 320 }: ADVISED
Token { kind: Space, char_start: 11126, char_end: 11127, byte_start: 11126, byte_end: 11127, column_start: 68, column_end: 69, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11127, char_end: 11129, byte_start: 11127, byte_end: 11129, column_start: 69, column_end: 71, line_start: 320, line_end: 320 }: OF
Token { kind: Space, char_start: 11129, char_end: 11130, byte_start: 11129, byte_end: 11130, column_start: 71, column_end: 72, line_start: 320, line_end: 320 }: " "
Token { kind: Text, char_start: 11130, char_end: 11133, byte_start: 11130, byte_end: 11133, column_start: 72, column_end: 75, line_start: 320, line_end: 320 }: THE
Token { kind: Newline, char_start: 11133, char_end: 11134, byte_start: 11133, byte_end: 11134, column_start: 75, column_end: 1, line_start: 320, line_end: 321 }: "\n"
Token { kind: Text, char_start: 11134, char_end: 11145, byte_start: 11134, byte_end: 11145, column_start: 1, column_end: 12, line_start: 321, line_end: 321 }: POSSIBILITY
Token { kind: Space, char_start: 11145, char_end: 11146, byte_start: 11145, byte_end: 11146, column_start: 12, column_end: 13, line_start: 321, line_end: 321 }: " "
Token { kind: Text, char_start: 11146, char_end: 11148, byte_start: 11146, byte_end: 11148, column_start: 13, column_end: 15, line_start: 321, line_end: 321 }: OF
Token { kind: Space, char_start: 11148, char_end: 11149, byte_start: 11148, byte_end: 11149, column_start: 15, column_end: 16, line_start: 321, line_end: 321 }: " "
Token { kind: Text, char_start: 11149, char_end: 11153, byte_start: 11149, byte_end: 11153, column_start: 16, column_end: 20, line_start: 321, line_end: 321 }: SUCH
Token { kind: Space, char_start: 11153, char_end: 11154, byte_start: 11153, byte_end: 11154, column_start: 20, column_end: 21, line_start: 321, line_end: 321 }: " "
Token { kind: Text, char_start: 11154, char_end: 11161, byte_start: 11154, byte_end: 11161, column_start: 21, column_end: 28, line_start: 321, line_end: 321 }: DAMAGE.
Token { kind: Newline, char_start: 11161, char_end: 11162, byte_start: 11161, byte_end: 11162, column_start: 28, column_end: 1, line_start: 321, line_end: 322 }: "\n"
Token { kind: Newline, char_start: 11162, char_end: 11163, byte_start: 11162, byte_end: 11163, column_start: 1, column_end: 1, line_start: 322, line_end: 323 }: "\n"
Token { kind: Heading(Heading1), char_start: 11163, char_end: 11164, byte_start: 11163, byte_end: 11164, column_start: 1, column_end: 2, line_start: 323, line_end: 323 }: #
Token { kind: Space, char_start: 11164, char_end: 11165, byte_start: 11164, byte_end: 11165, column_start: 2, column_end: 3, line_start: 323, line_end: 323 }: " "
Token { kind: Text, char_start: 11165, char_end: 11176, byte_start: 11165, byte_end: 11176, column_start: 3, column_end: 14, line_start: 323, line_end: 323 }: Development
Token { kind: Newline, char_start: 11176, char_end: 11177, byte_start: 11176, byte_end: 11177, column_start: 14, column_end: 1, line_start: 323, line_end: 324 }: "\n"
Token { kind: Newline, char_start: 11177, char_end: 11178, byte_start: 11177, byte_end: 11178, column_start: 1, column_end: 1, line_start: 324, line_end: 325 }: "\n"
Token { kind: Heading(Heading2), char_start: 11178, char_end: 11180, byte_start: 11178, byte_end: 11180, column_start: 1, column_end: 3, line_start: 325, line_end: 325 }: ##
Token { kind: Space, char_start: 11180, char_end: 11181, byte_start: 11180, byte_end: 11181, column_start: 3, column_end: 4, line_start: 325, line_end: 325 }: " "
Token { kind: Text, char_start: 11181, char_end: 11193, byte_start: 11181, byte_end: 11193, column_start: 4, column_end: 16, line_start: 325, line_end: 325 }: Contributing
Token { kind: Space, char_start: 11193, char_end: 11194, byte_start: 11193, byte_end: 11194, column_start: 16, column_end: 17, line_start: 325, line_end: 325 }: " "
Token { kind: Text, char_start: 11194, char_end: 11201, byte_start: 11194, byte_end: 11201, column_start: 17, column_end: 24, line_start: 325, line_end: 325 }: patches
Token { kind: Newline, char_start: 11201, char_end: 11202, byte_start: 11201, byte_end: 11202, column_start: 24, column_end: 1, line_start: 325, line_end: 326 }: "\n"
Token { kind: Newline, char_start: 11202, char_end: 11203, byte_start: 11202, byte_end: 11203, column_start: 1, column_end: 1, line_start: 326, line_end: 327 }: "\n"
Token { kind: Text, char_start: 11203, char_end: 11210, byte_start: 11203, byte_end: 11210, column_start: 1, column_end: 8, line_start: 327, line_end: 327 }: Patches
Token { kind: Space, char_start: 11210, char_end: 11211, byte_start: 11210, byte_end: 11211, column_start: 8, column_end: 9, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11211, char_end: 11214, byte_start: 11211, byte_end: 11214, column_start: 9, column_end: 12, line_start: 327, line_end: 327 }: can
Token { kind: Space, char_start: 11214, char_end: 11215, byte_start: 11214, byte_end: 11215, column_start: 12, column_end: 13, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11215, char_end: 11217, byte_start: 11215, byte_end: 11217, column_start: 13, column_end: 15, line_start: 327, line_end: 327 }: be
Token { kind: Space, char_start: 11217, char_end: 11218, byte_start: 11217, byte_end: 11218, column_start: 15, column_end: 16, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11218, char_end: 11222, byte_start: 11218, byte_end: 11222, column_start: 16, column_end: 20, line_start: 327, line_end: 327 }: sent
Token { kind: Space, char_start: 11222, char_end: 11223, byte_start: 11222, byte_end: 11223, column_start: 20, column_end: 21, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11223, char_end: 11226, byte_start: 11223, byte_end: 11226, column_start: 21, column_end: 24, line_start: 327, line_end: 327 }: via
Token { kind: Space, char_start: 11226, char_end: 11227, byte_start: 11226, byte_end: 11227, column_start: 24, column_end: 25, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11227, char_end: 11231, byte_start: 11227, byte_end: 11231, column_start: 25, column_end: 29, line_start: 327, line_end: 327 }: mail
Token { kind: Space, char_start: 11231, char_end: 11232, byte_start: 11231, byte_end: 11232, column_start: 29, column_end: 30, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11232, char_end: 11234, byte_start: 11232, byte_end: 11234, column_start: 30, column_end: 32, line_start: 327, line_end: 327 }: to
Token { kind: Space, char_start: 11234, char_end: 11235, byte_start: 11234, byte_end: 11235, column_start: 32, column_end: 33, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11235, char_end: 11239, byte_start: 11235, byte_end: 11239, column_start: 33, column_end: 37, line_start: 327, line_end: 327 }: greg
Token { kind: At, char_start: 11239, char_end: 11240, byte_start: 11239, byte_end: 11240, column_start: 37, column_end: 38, line_start: 327, line_end: 327 }: @
Token { kind: Text, char_start: 11240, char_end: 11252, byte_start: 11240, byte_end: 11252, column_start: 38, column_end: 50, line_start: 327, line_end: 327 }: hurrell.net,
Token { kind: Space, char_start: 11252, char_end: 11253, byte_start: 11252, byte_end: 11253, column_start: 50, column_end: 51, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11253, char_end: 11255, byte_start: 11253, byte_end: 11255, column_start: 51, column_end: 53, line_start: 327, line_end: 327 }: or
Token { kind: Space, char_start: 11255, char_end: 11256, byte_start: 11255, byte_end: 11256, column_start: 53, column_end: 54, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11256, char_end: 11258, byte_start: 11256, byte_end: 11258, column_start: 54, column_end: 56, line_start: 327, line_end: 327 }: as
Token { kind: Space, char_start: 11258, char_end: 11259, byte_start: 11258, byte_end: 11259, column_start: 56, column_end: 57, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11259, char_end: 11265, byte_start: 11259, byte_end: 11265, column_start: 57, column_end: 63, line_start: 327, line_end: 327 }: GitHub
Token { kind: Space, char_start: 11265, char_end: 11266, byte_start: 11265, byte_end: 11266, column_start: 63, column_end: 64, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11266, char_end: 11270, byte_start: 11266, byte_end: 11270, column_start: 64, column_end: 68, line_start: 327, line_end: 327 }: pull
Token { kind: Space, char_start: 11270, char_end: 11271, byte_start: 11270, byte_end: 11271, column_start: 68, column_end: 69, line_start: 327, line_end: 327 }: " "
Token { kind: Text, char_start: 11271, char_end: 11279, byte_start: 11271, byte_end: 11279, column_start: 69, column_end: 77, line_start: 327, line_end: 327 }: requests
Token { kind: Newline, char_start: 11279, char_end: 11280, byte_start: 11279, byte_end: 11280, column_start: 77, column_end: 1, line_start: 327, line_end: 328 }: "\n"
Token { kind: Text, char_start: 11280, char_end: 11283, byte_start: 11280, byte_end: 11283, column_start: 1, column_end: 4, line_start: 328, line_end: 328 }: at:
Token { kind: Space, char_start: 11283, char_end: 11284, byte_start: 11283, byte_end: 11284, column_start: 4, column_end: 5, line_start: 328, line_end: 328 }: " "
Token { kind: Text, char_start: 11284, char_end: 11323, byte_start: 11284, byte_end: 11323, column_start: 5, column_end: 44, line_start: 328, line_end: 328 }: https://github.com/wincent/ferret/pulls
Token { kind: Newline, char_start: 11323, char_end: 11324, byte_start: 11323, byte_end: 11324, column_start: 44, column_end: 1, line_start: 328, line_end: 329 }: "\n"
Token { kind: Newline, char_start: 11324, char_end: 11325, byte_start: 11324, byte_end: 11325, column_start: 1, column_end: 1, line_start: 329, line_end: 330 }: "\n"
Token { kind: Heading(Heading2), char_start: 11325, char_end: 11327, byte_start: 11325, byte_end: 11327, column_start: 1, column_end: 3, line_start: 330, line_end: 330 }: ##
Token { kind: Space, char_start: 11327, char_end: 11328, byte_start: 11327, byte_end: 11328, column_start: 3, column_end: 4, line_start: 330, line_end: 330 }: " "
Token { kind: Text, char_start: 11328, char_end: 11335, byte_start: 11328, byte_end: 11335, column_start: 4, column_end: 11, line_start: 330, line_end: 330 }: Cutting
Token { kind: Space, char_start: 11335, char_end: 11336, byte_start: 11335, byte_end: 11336, column_start: 11, column_end: 12, line_start: 330, line_end: 330 }: " "
Token { kind: Text, char_start: 11336, char_end: 11337, byte_start: 11336, byte_end: 11337, column_start: 12, column_end: 13, line_start: 330, line_end: 330 }: a
Token { kind: Space, char_start: 11337, char_end: 11338, byte_start: 11337, byte_end: 11338, column_start: 13, column_end: 14, line_start: 330, line_end: 330 }: " "
Token { kind: Text, char_start: 11338, char_end: 11341, byte_start: 11338, byte_end: 11341, column_start: 14, column_end: 17, line_start: 330, line_end: 330 }: new
Token { kind: Space, char_start: 11341, char_end: 11342, byte_start: 11341, byte_end: 11342, column_start: 17, column_end: 18, line_start: 330, line_end: 330 }: " "
Token { kind: Text, char_start: 11342, char_end: 11349, byte_start: 11342, byte_end: 11349, column_start: 18, column_end: 25, line_start: 330, line_end: 330 }: release
Token { kind: Newline, char_start: 11349, char_end: 11350, byte_start: 11349, byte_end: 11350, column_start: 25, column_end: 1, line_start: 330, line_end: 331 }: "\n"
Token { kind: Newline, char_start: 11350, char_end: 11351, byte_start: 11350, byte_end: 11351, column_start: 1, column_end: 1, line_start: 331, line_end: 332 }: "\n"
Token { kind: Text, char_start: 11351, char_end: 11353, byte_start: 11351, byte_end: 11353, column_start: 1, column_end: 3, line_start: 332, line_end: 332 }: At
Token { kind: Space, char_start: 11353, char_end: 11354, byte_start: 11353, byte_end: 11354, column_start: 3, column_end: 4, line_start: 332, line_end: 332 }: " "
Token { kind: Text, char_start: 11354, char_end: 11357, byte_start: 11354, byte_end: 11357, column_start: 4, column_end: 7, line_start: 332, line_end: 332 }: the
Token { kind: Space, char_start: 11357, char_end: 11358, byte_start: 11357, byte_end: 11358, column_start: 7, column_end: 8, line_start: 332, line_end: 332 }: " "
Token { kind: Text, char_start: 11358, char_end: 11364, byte_start: 11358, byte_end: 11364, column_start: 8, column_end: 14, line_start: 332, line_end: 332 }: moment
Token { kind: Space, char_start: 11364, char_end: 11365, byte_start: 11364, byte_end: 11365, column_start: 14, column_end: 15, line_start: 332, line_end: 332 }: " "
Token { kind: Text, char_start: 11365, char_end: 11368, byte_start: 11365, byte_end: 11368, column_start: 15, column_end: 18, line_start: 332, line_end: 332 }: the
Token { kind: Space, char_start: 11368, char_end: 11369, byte_start: 11368, byte_end: 11369, column_start: 18, column_end: 19, line_start: 332, line_end: 332 }: " "
Token { kind: Text, char_start: 11369, char_end: 11376, byte_start: 11369, byte_end: 11376, column_start: 19, column_end: 26, line_start: 332, line_end: 332 }: release
Token { kind: Space, char_start: 11376, char_end: 11377, byte_start: 11376, byte_end: 11377, column_start: 26, column_end: 27, line_start: 332, line_end: 332 }: " "
Token { kind: Text, char_start: 11377, char_end: 11384, byte_start: 11377, byte_end: 11384, column_start: 27, column_end: 34, line_start: 332, line_end: 332 }: process
Token { kind: Space, char_start: 11384, char_end: 11385, byte_start: 11384, byte_end: 11385, column_start: 34, column_end: 35, line_start: 332, line_end: 332 }: " "
Token { kind: Text, char_start: 11385, char_end: 11387, byte_start: 11385, byte_end: 11387, column_start: 35, column_end: 37, line_start: 332, line_end: 332 }: is
Token { kind: Space, char_start: 11387, char_end: 11388, byte_start: 11387, byte_end: 11388, column_start: 37, column_end: 38, line_start: 332, line_end: 332 }: " "
Token { kind: Text, char_start: 11388, char_end: 11395, byte_start: 11388, byte_end: 11395, column_start: 38, column_end: 45, line_start: 332, line_end: 332 }: manual:
Token { kind: Newline, char_start: 11395, char_end: 11396, byte_start: 11395, byte_end: 11396, column_start: 45, column_end: 1, line_start: 332, line_end: 333 }: "\n"
Token { kind: Newline, char_start: 11396, char_end: 11397, byte_start: 11396, byte_end: 11397, column_start: 1, column_end: 1, line_start: 333, line_end: 334 }: "\n"
Token { kind: Hyphen, char_start: 11397, char_end: 11398, byte_start: 11397, byte_end: 11398, column_start: 1, column_end: 2, line_start: 334, line_end: 334 }: -
Token { kind: Space, char_start: 11398, char_end: 11399, byte_start: 11398, byte_end: 11399, column_start: 2, column_end: 3, line_start: 334, line_end: 334 }: " "
Token { kind: Text, char_start: 11399, char_end: 11406, byte_start: 11399, byte_end: 11406, column_start: 3, column_end: 10, line_start: 334, line_end: 334 }: Perform
Token { kind: Space, char_start: 11406, char_end: 11407, byte_start: 11406, byte_end: 11407, column_start: 10, column_end: 11, line_start: 334, line_end: 334 }: " "
Token { kind: Text, char_start: 11407, char_end: 11412, byte_start: 11407, byte_end: 11412, column_start: 11, column_end: 16, line_start: 334, line_end: 334 }: final
Token { kind: Space, char_start: 11412, char_end: 11413, byte_start: 11412, byte_end: 11413, column_start: 16, column_end: 17, line_start: 334, line_end: 334 }: " "
Token { kind: Text, char_start: 11413, char_end: 11419, byte_start: 11413, byte_end: 11419, column_start: 17, column_end: 23, line_start: 334, line_end: 334 }: sanity
Token { kind: Space, char_start: 11419, char_end: 11420, byte_start: 11419, byte_end: 11420, column_start: 23, column_end: 24, line_start: 334, line_end: 334 }: " "
Token { kind: Text, char_start: 11420, char_end: 11426, byte_start: 11420, byte_end: 11426, column_start: 24, column_end: 30, line_start: 334, line_end: 334 }: checks
Token { kind: Space, char_start: 11426, char_end: 11427, byte_start: 11426, byte_end: 11427, column_start: 30, column_end: 31, line_start: 334, line_end: 334 }: " "
Token { kind: Text, char_start: 11427, char_end: 11430, byte_start: 11427, byte_end: 11430, column_start: 31, column_end: 34, line_start: 334, line_end: 334 }: and
Token { kind: Space, char_start: 11430, char_end: 11431, byte_start: 11430, byte_end: 11431, column_start: 34, column_end: 35, line_start: 334, line_end: 334 }: " "
Token { kind: Text, char_start: 11431, char_end: 11437, byte_start: 11431, byte_end: 11437, column_start: 35, column_end: 41, line_start: 334, line_end: 334 }: manual
Token { kind: Space, char_start: 11437, char_end: 11438, byte_start: 11437, byte_end: 11438, column_start: 41, column_end: 42, line_start: 334, line_end: 334 }: " "
Token { kind: Text, char_start: 11438, char_end: 11445, byte_start: 11438, byte_end: 11445, column_start: 42, column_end: 49, line_start: 334, line_end: 334 }: testing
Token { kind: Newline, char_start: 11445, char_end: 11446, byte_start: 11445, byte_end: 11446, column_start: 49, column_end: 1, line_start: 334, line_end: 335 }: "\n"
Token { kind: Hyphen, char_start: 11446, char_end: 11447, byte_start: 11446, byte_end: 11447, column_start: 1, column_end: 2, line_start: 335, line_end: 335 }: -
Token { kind: Space, char_start: 11447, char_end: 11448, byte_start: 11447, byte_end: 11448, column_start: 2, column_end: 3, line_start: 335, line_end: 335 }: " "
Token { kind: Text, char_start: 11448, char_end: 11454, byte_start: 11448, byte_end: 11454, column_start: 3, column_end: 9, line_start: 335, line_end: 335 }: Update
Token { kind: Space, char_start: 11454, char_end: 11455, byte_start: 11454, byte_end: 11455, column_start: 9, column_end: 10, line_start: 335, line_end: 335 }: " "
Token { kind: Text, char_start: 11455, char_end: 11458, byte_start: 11455, byte_end: 11458, column_start: 10, column_end: 13, line_start: 335, line_end: 335 }: the
Token { kind: Space, char_start: 11458, char_end: 11459, byte_start: 11458, byte_end: 11459, column_start: 13, column_end: 14, line_start: 335, line_end: 335 }: " "
Token { kind: Bar, char_start: 11459, char_end: 11460, byte_start: 11459, byte_end: 11460, column_start: 14, column_end: 15, line_start: 335, line_end: 335 }: |
Token { kind: Text, char_start: 11460, char_end: 11466, byte_start: 11460, byte_end: 11466, column_start: 15, column_end: 21, line_start: 335, line_end: 335 }: ferret
Token { kind: Hyphen, char_start: 11466, char_end: 11467, byte_start: 11466, byte_end: 11467, column_start: 21, column_end: 22, line_start: 335, line_end: 335 }: -
Token { kind: Text, char_start: 11467, char_end: 11474, byte_start: 11467, byte_end: 11474, column_start: 22, column_end: 29, line_start: 335, line_end: 335 }: history
Token { kind: Bar, char_start: 11474, char_end: 11475, byte_start: 11474, byte_end: 11475, column_start: 29, column_end: 30, line_start: 335, line_end: 335 }: |
Token { kind: Space, char_start: 11475, char_end: 11476, byte_start: 11475, byte_end: 11476, column_start: 30, column_end: 31, line_start: 335, line_end: 335 }: " "
Token { kind: Text, char_start: 11476, char_end: 11483, byte_start: 11476, byte_end: 11483, column_start: 31, column_end: 38, line_start: 335, line_end: 335 }: section
Token { kind: Space, char_start: 11483, char_end: 11484, byte_start: 11483, byte_end: 11484, column_start: 38, column_end: 39, line_start: 335, line_end: 335 }: " "
Token { kind: Text, char_start: 11484, char_end: 11486, byte_start: 11484, byte_end: 11486, column_start: 39, column_end: 41, line_start: 335, line_end: 335 }: of
Token { kind: Space, char_start: 11486, char_end: 11487, byte_start: 11486, byte_end: 11487, column_start: 41, column_end: 42, line_start: 335, line_end: 335 }: " "
Token { kind: Text, char_start: 11487, char_end: 11490, byte_start: 11487, byte_end: 11490, column_start: 42, column_end: 45, line_start: 335, line_end: 335 }: the
Token { kind: Space, char_start: 11490, char_end: 11491, byte_start: 11490, byte_end: 11491, column_start: 45, column_end: 46, line_start: 335, line_end: 335 }: " "
Token { kind: Text, char_start: 11491, char_end: 11504, byte_start: 11491, byte_end: 11504, column_start: 46, column_end: 59, line_start: 335, line_end: 335 }: documentation
Token { kind: Newline, char_start: 11504, char_end: 11505, byte_start: 11504, byte_end: 11505, column_start: 59, column_end: 1, line_start: 335, line_end: 336 }: "\n"
Token { kind: Hyphen, char_start: 11505, char_end: 11506, byte_start: 11505, byte_end: 11506, column_start: 1, column_end: 2, line_start: 336, line_end: 336 }: -
Token { kind: Space, char_start: 11506, char_end: 11507, byte_start: 11506, byte_end: 11507, column_start: 2, column_end: 3, line_start: 336, line_end: 336 }: " "
Token { kind: Text, char_start: 11507, char_end: 11513, byte_start: 11507, byte_end: 11513, column_start: 3, column_end: 9, line_start: 336, line_end: 336 }: Verify
Token { kind: Space, char_start: 11513, char_end: 11514, byte_start: 11513, byte_end: 11514, column_start: 9, column_end: 10, line_start: 336, line_end: 336 }: " "
Token { kind: Text, char_start: 11514, char_end: 11519, byte_start: 11514, byte_end: 11519, column_start: 10, column_end: 15, line_start: 336, line_end: 336 }: clean
Token { kind: Space, char_start: 11519, char_end: 11520, byte_start: 11519, byte_end: 11520, column_start: 15, column_end: 16, line_start: 336, line_end: 336 }: " "
Token { kind: Text, char_start: 11520, char_end: 11524, byte_start: 11520, byte_end: 11524, column_start: 16, column_end: 20, line_start: 336, line_end: 336 }: work
Token { kind: Space, char_start: 11524, char_end: 11525, byte_start: 11524, byte_end: 11525, column_start: 20, column_end: 21, line_start: 336, line_end: 336 }: " "
Token { kind: Text, char_start: 11525, char_end: 11530, byte_start: 11525, byte_end: 11530, column_start: 21, column_end: 26, line_start: 336, line_end: 336 }: tree:
Token { kind: Newline, char_start: 11530, char_end: 11531, byte_start: 11530, byte_end: 11531, column_start: 26, column_end: 1, line_start: 336, line_end: 337 }: "\n"
Token { kind: Newline, char_start: 11531, char_end: 11532, byte_start: 11531, byte_end: 11532, column_start: 1, column_end: 1, line_start: 337, line_end: 338 }: "\n"
Token { kind: CodeFence, char_start: 11532, char_end: 11535, byte_start: 11532, byte_end: 11535, column_start: 1, column_end: 4, line_start: 338, line_end: 338 }: ```
Token { kind: Newline, char_start: 11535, char_end: 11536, byte_start: 11535, byte_end: 11536, column_start: 4, column_end: 1, line_start: 338, line_end: 339 }: "\n"
Token { kind: Text, char_start: 11536, char_end: 11539, byte_start: 11536, byte_end: 11539, column_start: 1, column_end: 4, line_start: 339, line_end: 339 }: git
Token { kind: Space, char_start: 11539, char_end: 11540, byte_start: 11539, byte_end: 11540, column_start: 4, column_end: 5, line_start: 339, line_end: 339 }: " "
Token { kind: Text, char_start: 11540, char_end: 11546, byte_start: 11540, byte_end: 11546, column_start: 5, column_end: 11, line_start: 339, line_end: 339 }: status
Token { kind: Newline, char_start: 11546, char_end: 11547, byte_start: 11546, byte_end: 11547, column_start: 11, column_end: 1, line_start: 339, line_end: 340 }: "\n"
Token { kind: CodeFence, char_start: 11547, char_end: 11550, byte_start: 11547, byte_end: 11550, column_start: 1, column_end: 4, line_start: 340, line_end: 340 }: ```
Token { kind: Newline, char_start: 11550, char_end: 11551, byte_start: 11550, byte_end: 11551, column_start: 4, column_end: 1, line_start: 340, line_end: 341 }: "\n"
Token { kind: Newline, char_start: 11551, char_end: 11552, byte_start: 11551, byte_end: 11552, column_start: 1, column_end: 1, line_start: 341, line_end: 342 }: "\n"
Token { kind: Hyphen, char_start: 11552, char_end: 11553, byte_start: 11552, byte_end: 11553, column_start: 1, column_end: 2, line_start: 342, line_end: 342 }: -
Token { kind: Space, char_start: 11553, char_end: 11554, byte_start: 11553, byte_end: 11554, column_start: 2, column_end: 3, line_start: 342, line_end: 342 }: " "
Token { kind: Text, char_start: 11554, char_end: 11557, byte_start: 11554, byte_end: 11557, column_start: 3, column_end: 6, line_start: 342, line_end: 342 }: Tag
Token { kind: Space, char_start: 11557, char_end: 11558, byte_start: 11557, byte_end: 11558, column_start: 6, column_end: 7, line_start: 342, line_end: 342 }: " "
Token { kind: Text, char_start: 11558, char_end: 11561, byte_start: 11558, byte_end: 11561, column_start: 7, column_end: 10, line_start: 342, line_end: 342 }: the
Token { kind: Space, char_start: 11561, char_end: 11562, byte_start: 11561, byte_end: 11562, column_start: 10, column_end: 11, line_start: 342, line_end: 342 }: " "
Token { kind: Text, char_start: 11562, char_end: 11570, byte_start: 11562, byte_end: 11570, column_start: 11, column_end: 19, line_start: 342, line_end: 342 }: release:
Token { kind: Newline, char_start: 11570, char_end: 11571, byte_start: 11570, byte_end: 11571, column_start: 19, column_end: 1, line_start: 342, line_end: 343 }: "\n"
Token { kind: Newline, char_start: 11571, char_end: 11572, byte_start: 11571, byte_end: 11572, column_start: 1, column_end: 1, line_start: 343, line_end: 344 }: "\n"
Token { kind: CodeFence, char_start: 11572, char_end: 11575, byte_start: 11572, byte_end: 11575, column_start: 1, column_end: 4, line_start: 344, line_end: 344 }: ```
Token { kind: Newline, char_start: 11575, char_end: 11576, byte_start: 11575, byte_end: 11576, column_start: 4, column_end: 1, line_start: 344, line_end: 345 }: "\n"
Token { kind: Text, char_start: 11576, char_end: 11579, byte_start: 11576, byte_end: 11579, column_start: 1, column_end: 4, line_start: 345, line_end: 345 }: git
Token { kind: Space, char_start: 11579, char_end: 11580, byte_start: 11579, byte_end: 11580, column_start: 4, column_end: 5, line_start: 345, line_end: 345 }: " "
Token { kind: Text, char_start: 11580, char_end: 11583, byte_start: 11580, byte_end: 11583, column_start: 5, column_end: 8, line_start: 345, line_end: 345 }: tag
Token { kind: Space, char_start: 11583, char_end: 11584, byte_start: 11583, byte_end: 11584, column_start: 8, column_end: 9, line_start: 345, line_end: 345 }: " "
Token { kind: Hyphen, char_start: 11584, char_end: 11585, byte_start: 11584, byte_end: 11585, column_start: 9, column_end: 10, line_start: 345, line_end: 345 }: -
Token { kind: Text, char_start: 11585, char_end: 11586, byte_start: 11585, byte_end: 11586, column_start: 10, column_end: 11, line_start: 345, line_end: 345 }: s
Token { kind: Space, char_start: 11586, char_end: 11587, byte_start: 11586, byte_end: 11587, column_start: 11, column_end: 12, line_start: 345, line_end: 345 }: " "
Token { kind: Hyphen, char_start: 11587, char_end: 11588, byte_start: 11587, byte_end: 11588, column_start: 12, column_end: 13, line_start: 345, line_end: 345 }: -
Token { kind: Text, char_start: 11588, char_end: 11589, byte_start: 11588, byte_end: 11589, column_start: 13, column_end: 14, line_start: 345, line_end: 345 }: m
Token { kind: Space, char_start: 11589, char_end: 11590, byte_start: 11589, byte_end: 11590, column_start: 14, column_end: 15, line_start: 345, line_end: 345 }: " "
Token { kind: Text, char_start: 11590, char_end: 11599, byte_start: 11590, byte_end: 11599, column_start: 15, column_end: 24, line_start: 345, line_end: 345 }: "$VERSION
Token { kind: Space, char_start: 11599, char_end: 11600, byte_start: 11599, byte_end: 11600, column_start: 24, column_end: 25, line_start: 345, line_end: 345 }: " "
Token { kind: Text, char_start: 11600, char_end: 11608, byte_start: 11600, byte_end: 11608, column_start: 25, column_end: 33, line_start: 345, line_end: 345 }: release"
Token { kind: Space, char_start: 11608, char_end: 11609, byte_start: 11608, byte_end: 11609, column_start: 33, column_end: 34, line_start: 345, line_end: 345 }: " "
Token { kind: Text, char_start: 11609, char_end: 11617, byte_start: 11609, byte_end: 11617, column_start: 34, column_end: 42, line_start: 345, line_end: 345 }: $VERSION
Token { kind: Newline, char_start: 11617, char_end: 11618, byte_start: 11617, byte_end: 11618, column_start: 42, column_end: 1, line_start: 345, line_end: 346 }: "\n"
Token { kind: CodeFence, char_start: 11618, char_end: 11621, byte_start: 11618, byte_end: 11621, column_start: 1, column_end: 4, line_start: 346, line_end: 346 }: ```
Token { kind: Newline, char_start: 11621, char_end: 11622, byte_start: 11621, byte_end: 11622, column_start: 4, column_end: 1, line_start: 346, line_end: 347 }: "\n"
Token { kind: Newline, char_start: 11622, char_end: 11623, byte_start: 11622, byte_end: 11623, column_start: 1, column_end: 1, line_start: 347, line_end: 348 }: "\n"
Token { kind: Hyphen, char_start: 11623, char_end: 11624, byte_start: 11623, byte_end: 11624, column_start: 1, column_end: 2, line_start: 348, line_end: 348 }: -
Token { kind: Space, char_start: 11624, char_end: 11625, byte_start: 11624, byte_end: 11625, column_start: 2, column_end: 3, line_start: 348, line_end: 348 }: " "
Token { kind: Text, char_start: 11625, char_end: 11632, byte_start: 11625, byte_end: 11632, column_start: 3, column_end: 10, line_start: 348, line_end: 348 }: Publish
Token { kind: Space, char_start: 11632, char_end: 11633, byte_start: 11632, byte_end: 11633, column_start: 10, column_end: 11, line_start: 348, line_end: 348 }: " "
Token { kind: Text, char_start: 11633, char_end: 11636, byte_start: 11633, byte_end: 11636, column_start: 11, column_end: 14, line_start: 348, line_end: 348 }: the
Token { kind: Space, char_start: 11636, char_end: 11637, byte_start: 11636, byte_end: 11637, column_start: 14, column_end: 15, line_start: 348, line_end: 348 }: " "
Token { kind: Text, char_start: 11637, char_end: 11642, byte_start: 11637, byte_end: 11642, column_start: 15, column_end: 20, line_start: 348, line_end: 348 }: code:
Token { kind: Newline, char_start: 11642, char_end: 11643, byte_start: 11642, byte_end: 11643, column_start: 20, column_end: 1, line_start: 348, line_end: 349 }: "\n"
Token { kind: Newline, char_start: 11643, char_end: 11644, byte_start: 11643, byte_end: 11644, column_start: 1, column_end: 1, line_start: 349, line_end: 350 }: "\n"
Token { kind: CodeFence, char_start: 11644, char_end: 11647, byte_start: 11644, byte_end: 11647, column_start: 1, column_end: 4, line_start: 350, line_end: 350 }: ```
Token { kind: Newline, char_start: 11647, char_end: 11648, byte_start: 11647, byte_end: 11648, column_start: 4, column_end: 1, line_start: 350, line_end: 351 }: "\n"
Token { kind: Text, char_start: 11648, char_end: 11651, byte_start: 11648, byte_end: 11651, column_start: 1, column_end: 4, line_start: 351, line_end: 351 }: git
Token { kind: Space, char_start: 11651, char_end: 11652, byte_start: 11651, byte_end: 11652, column_start: 4, column_end: 5, line_start: 351, line_end: 351 }: " "
Token { kind: Text, char_start: 11652, char_end: 11656, byte_start: 11652, byte_end: 11656, column_start: 5, column_end: 9, line_start: 351, line_end: 351 }: push
Token { kind: Space, char_start: 11656, char_end: 11657, byte_start: 11656, byte_end: 11657, column_start: 9, column_end: 10, line_start: 351, line_end: 351 }: " "
Token { kind: Text, char_start: 11657, char_end: 11663, byte_start: 11657, byte_end: 11663, column_start: 10, column_end: 16, line_start: 351, line_end: 351 }: origin
Token { kind: Space, char_start: 11663, char_end: 11664, byte_start: 11663, byte_end: 11664, column_start: 16, column_end: 17, line_start: 351, line_end: 351 }: " "
Token { kind: Text, char_start: 11664, char_end: 11668, byte_start: 11664, byte_end: 11668, column_start: 17, column_end: 21, line_start: 351, line_end: 351 }: main
Token { kind: Space, char_start: 11668, char_end: 11669, byte_start: 11668, byte_end: 11669, column_start: 21, column_end: 22, line_start: 351, line_end: 351 }: " "
unterminated horizontal rule (line 351, column 24)
Token { kind: Text, char_start: 11671, char_end: 11677, byte_start: 11671, byte_end: 11677, column_start: 24, column_end: 30, line_start: 351, line_end: 351 }: follow
Token { kind: Hyphen, char_start: 11677, char_end: 11678, byte_start: 11677, byte_end: 11678, column_start: 30, column_end: 31, line_start: 351, line_end: 351 }: -
Token { kind: Text, char_start: 11678, char_end: 11682, byte_start: 11678, byte_end: 11682, column_start: 31, column_end: 35, line_start: 351, line_end: 351 }: tags
Token { kind: Newline, char_start: 11682, char_end: 11683, byte_start: 11682, byte_end: 11683, column_start: 35, column_end: 1, line_start: 351, line_end: 352 }: "\n"
Token { kind: Text, char_start: 11683, char_end: 11686, byte_start: 11683, byte_end: 11686, column_start: 1, column_end: 4, line_start: 352, line_end: 352 }: git
Token { kind: Space, char_start: 11686, char_end: 11687, byte_start: 11686, byte_end: 11687, column_start: 4, column_end: 5, line_start: 352, line_end: 352 }: " "
Token { kind: Text, char_start: 11687, char_end: 11691, byte_start: 11687, byte_end: 11691, column_start: 5, column_end: 9, line_start: 352, line_end: 352 }: push
Token { kind: Space, char_start: 11691, char_end: 11692, byte_start: 11691, byte_end: 11692, column_start: 9, column_end: 10, line_start: 352, line_end: 352 }: " "
Token { kind: Text, char_start: 11692, char_end: 11698, byte_start: 11692, byte_end: 11698, column_start: 10, column_end: 16, line_start: 352, line_end: 352 }: github
Token { kind: Space, char_start: 11698, char_end: 11699, byte_start: 11698, byte_end: 11699, column_start: 16, column_end: 17, line_start: 352, line_end: 352 }: " "
Token { kind: Text, char_start: 11699, char_end: 11703, byte_start: 11699, byte_end: 11703, column_start: 17, column_end: 21, line_start: 352, line_end: 352 }: main
Token { kind: Space, char_start: 11703, char_end: 11704, byte_start: 11703, byte_end: 11704, column_start: 21, column_end: 22, line_start: 352, line_end: 352 }: " "
unterminated horizontal rule (line 352, column 24)
Token { kind: Text, char_start: 11706, char_end: 11712, byte_start: 11706, byte_end: 11712, column_start: 24, column_end: 30, line_start: 352, line_end: 352 }: follow
Token { kind: Hyphen, char_start: 11712, char_end: 11713, byte_start: 11712, byte_end: 11713, column_start: 30, column_end: 31, line_start: 352, line_end: 352 }: -
Token { kind: Text, char_start: 11713, char_end: 11717, byte_start: 11713, byte_end: 11717, column_start: 31, column_end: 35, line_start: 352, line_end: 352 }: tags
Token { kind: Newline, char_start: 11717, char_end: 11718, byte_start: 11717, byte_end: 11718, column_start: 35, column_end: 1, line_start: 352, line_end: 353 }: "\n"
Token { kind: CodeFence, char_start: 11718, char_end: 11721, byte_start: 11718, byte_end: 11721, column_start: 1, column_end: 4, line_start: 353, line_end: 353 }: ```
Token { kind: Newline, char_start: 11721, char_end: 11722, byte_start: 11721, byte_end: 11722, column_start: 4, column_end: 1, line_start: 353, line_end: 354 }: "\n"
Token { kind: Newline, char_start: 11722, char_end: 11723, byte_start: 11722, byte_end: 11723, column_start: 1, column_end: 1, line_start: 354, line_end: 355 }: "\n"
Token { kind: Hyphen, char_start: 11723, char_end: 11724, byte_start: 11723, byte_end: 11724, column_start: 1, column_end: 2, line_start: 355, line_end: 355 }: -
Token { kind: Space, char_start: 11724, char_end: 11725, byte_start: 11724, byte_end: 11725, column_start: 2, column_end: 3, line_start: 355, line_end: 355 }: " "
Token { kind: Text, char_start: 11725, char_end: 11732, byte_start: 11725, byte_end: 11732, column_start: 3, column_end: 10, line_start: 355, line_end: 355 }: Produce
Token { kind: Space, char_start: 11732, char_end: 11733, byte_start: 11732, byte_end: 11733, column_start: 10, column_end: 11, line_start: 355, line_end: 355 }: " "
Token { kind: Text, char_start: 11733, char_end: 11736, byte_start: 11733, byte_end: 11736, column_start: 11, column_end: 14, line_start: 355, line_end: 355 }: the
Token { kind: Space, char_start: 11736, char_end: 11737, byte_start: 11736, byte_end: 11737, column_start: 14, column_end: 15, line_start: 355, line_end: 355 }: " "
Token { kind: Text, char_start: 11737, char_end: 11744, byte_start: 11737, byte_end: 11744, column_start: 15, column_end: 22, line_start: 355, line_end: 355 }: release
Token { kind: Space, char_start: 11744, char_end: 11745, byte_start: 11744, byte_end: 11745, column_start: 22, column_end: 23, line_start: 355, line_end: 355 }: " "
Token { kind: Text, char_start: 11745, char_end: 11753, byte_start: 11745, byte_end: 11753, column_start: 23, column_end: 31, line_start: 355, line_end: 355 }: archive:
Token { kind: Newline, char_start: 11753, char_end: 11754, byte_start: 11753, byte_end: 11754, column_start: 31, column_end: 1, line_start: 355, line_end: 356 }: "\n"
Token { kind: Newline, char_start: 11754, char_end: 11755, byte_start: 11754, byte_end: 11755, column_start: 1, column_end: 1, line_start: 356, line_end: 357 }: "\n"
Token { kind: CodeFence, char_start: 11755, char_end: 11758, byte_start: 11755, byte_end: 11758, column_start: 1, column_end: 4, line_start: 357, line_end: 357 }: ```
Token { kind: Newline, char_start: 11758, char_end: 11759, byte_start: 11758, byte_end: 11759, column_start: 4, column_end: 1, line_start: 357, line_end: 358 }: "\n"
Token { kind: Text, char_start: 11759, char_end: 11762, byte_start: 11759, byte_end: 11762, column_start: 1, column_end: 4, line_start: 358, line_end: 358 }: git
Token { kind: Space, char_start: 11762, char_end: 11763, byte_start: 11762, byte_end: 11763, column_start: 4, column_end: 5, line_start: 358, line_end: 358 }: " "
Token { kind: Text, char_start: 11763, char_end: 11770, byte_start: 11763, byte_end: 11770, column_start: 5, column_end: 12, line_start: 358, line_end: 358 }: archive
Token { kind: Space, char_start: 11770, char_end: 11771, byte_start: 11770, byte_end: 11771, column_start: 12, column_end: 13, line_start: 358, line_end: 358 }: " "
Token { kind: Hyphen, char_start: 11771, char_end: 11772, byte_start: 11771, byte_end: 11772, column_start: 13, column_end: 14, line_start: 358, line_end: 358 }: -
Token { kind: Text, char_start: 11772, char_end: 11773, byte_start: 11772, byte_end: 11773, column_start: 14, column_end: 15, line_start: 358, line_end: 358 }: o
Token { kind: Space, char_start: 11773, char_end: 11774, byte_start: 11773, byte_end: 11774, column_start: 15, column_end: 16, line_start: 358, line_end: 358 }: " "
Token { kind: Text, char_start: 11774, char_end: 11780, byte_start: 11774, byte_end: 11780, column_start: 16, column_end: 22, line_start: 358, line_end: 358 }: ferret
Token { kind: Hyphen, char_start: 11780, char_end: 11781, byte_start: 11780, byte_end: 11781, column_start: 22, column_end: 23, line_start: 358, line_end: 358 }: -
Token { kind: Text, char_start: 11781, char_end: 11793, byte_start: 11781, byte_end: 11793, column_start: 23, column_end: 35, line_start: 358, line_end: 358 }: $VERSION.zip
Token { kind: Space, char_start: 11793, char_end: 11794, byte_start: 11793, byte_end: 11794, column_start: 35, column_end: 36, line_start: 358, line_end: 358 }: " "
Token { kind: Text, char_start: 11794, char_end: 11798, byte_start: 11794, byte_end: 11798, column_start: 36, column_end: 40, line_start: 358, line_end: 358 }: HEAD
Token { kind: Space, char_start: 11798, char_end: 11799, byte_start: 11798, byte_end: 11799, column_start: 40, column_end: 41, line_start: 358, line_end: 358 }: " "
unterminated horizontal rule (line 358, column 43)
Token { kind: Space, char_start: 11801, char_end: 11802, byte_start: 11801, byte_end: 11802, column_start: 43, column_end: 44, line_start: 358, line_end: 358 }: " "
Token { kind: Text, char_start: 11802, char_end: 11803, byte_start: 11802, byte_end: 11803, column_start: 44, column_end: 45, line_start: 358, line_end: 358 }: .
Token { kind: Newline, char_start: 11803, char_end: 11804, byte_start: 11803, byte_end: 11804, column_start: 45, column_end: 1, line_start: 358, line_end: 359 }: "\n"
Token { kind: CodeFence, char_start: 11804, char_end: 11807, byte_start: 11804, byte_end: 11807, column_start: 1, column_end: 4, line_start: 359, line_end: 359 }: ```
Token { kind: Newline, char_start: 11807, char_end: 11808, byte_start: 11807, byte_end: 11808, column_start: 4, column_end: 1, line_start: 359, line_end: 360 }: "\n"
Token { kind: Newline, char_start: 11808, char_end: 11809, byte_start: 11808, byte_end: 11809, column_start: 1, column_end: 1, line_start: 360, line_end: 361 }: "\n"
Token { kind: Hyphen, char_start: 11809, char_end: 11810, byte_start: 11809, byte_end: 11810, column_start: 1, column_end: 2, line_start: 361, line_end: 361 }: -
Token { kind: Space, char_start: 11810, char_end: 11811, byte_start: 11810, byte_end: 11811, column_start: 2, column_end: 3, line_start: 361, line_end: 361 }: " "
Token { kind: Text, char_start: 11811, char_end: 11817, byte_start: 11811, byte_end: 11817, column_start: 3, column_end: 9, line_start: 361, line_end: 361 }: Upload
Token { kind: Space, char_start: 11817, char_end: 11818, byte_start: 11817, byte_end: 11818, column_start: 9, column_end: 10, line_start: 361, line_end: 361 }: " "
Token { kind: Text, char_start: 11818, char_end: 11820, byte_start: 11818, byte_end: 11820, column_start: 10, column_end: 12, line_start: 361, line_end: 361 }: to
Token { kind: Space, char_start: 11820, char_end: 11821, byte_start: 11820, byte_end: 11821, column_start: 12, column_end: 13, line_start: 361, line_end: 361 }: " "
Token { kind: Text, char_start: 11821, char_end: 11873, byte_start: 11821, byte_end: 11873, column_start: 13, column_end: 65, line_start: 361, line_end: 361 }: http://www.vim.org/scripts/script.php?script_id=5220
Token { kind: Newline, char_start: 11873, char_end: 11874, byte_start: 11873, byte_end: 11874, column_start: 65, column_end: 1, line_start: 361, line_end: 362 }: "\n"
Token { kind: Newline, char_start: 11874, char_end: 11875, byte_start: 11874, byte_end: 11875, column_start: 1, column_end: 1, line_start: 362, line_end: 363 }: "\n"
Token { kind: Heading(Heading1), char_start: 11875, char_end: 11876, byte_start: 11875, byte_end: 11876, column_start: 1, column_end: 2, line_start: 363, line_end: 363 }: #
Token { kind: Space, char_start: 11876, char_end: 11877, byte_start: 11876, byte_end: 11877, column_start: 2, column_end: 3, line_start: 363, line_end: 363 }: " "
Token { kind: Text, char_start: 11877, char_end: 11884, byte_start: 11877, byte_end: 11884, column_start: 3, column_end: 10, line_start: 363, line_end: 363 }: Authors
Token { kind: Newline, char_start: 11884, char_end: 11885, byte_start: 11884, byte_end: 11885, column_start: 10, column_end: 1, line_start: 363, line_end: 364 }: "\n"
Token { kind: Newline, char_start: 11885, char_end: 11886, byte_start: 11885, byte_end: 11886, column_start: 1, column_end: 1, line_start: 364, line_end: 365 }: "\n"
Token { kind: Text, char_start: 11886, char_end: 11892, byte_start: 11886, byte_end: 11892, column_start: 1, column_end: 7, line_start: 365, line_end: 365 }: Ferret
Token { kind: Space, char_start: 11892, char_end: 11893, byte_start: 11892, byte_end: 11893, column_start: 7, column_end: 8, line_start: 365, line_end: 365 }: " "
Token { kind: Text, char_start: 11893, char_end: 11895, byte_start: 11893, byte_end: 11895, column_start: 8, column_end: 10, line_start: 365, line_end: 365 }: is
Token { kind: Space, char_start: 11895, char_end: 11896, byte_start: 11895, byte_end: 11896, column_start: 10, column_end: 11, line_start: 365, line_end: 365 }: " "
Token { kind: Text, char_start: 11896, char_end: 11903, byte_start: 11896, byte_end: 11903, column_start: 11, column_end: 18, line_start: 365, line_end: 365 }: written
Token { kind: Space, char_start: 11903, char_end: 11904, byte_start: 11903, byte_end: 11904, column_start: 18, column_end: 19, line_start: 365, line_end: 365 }: " "
Token { kind: Text, char_start: 11904, char_end: 11907, byte_start: 11904, byte_end: 11907, column_start: 19, column_end: 22, line_start: 365, line_end: 365 }: and
Token { kind: Space, char_start: 11907, char_end: 11908, byte_start: 11907, byte_end: 11908, column_start: 22, column_end: 23, line_start: 365, line_end: 365 }: " "
Token { kind: Text, char_start: 11908, char_end: 11918, byte_start: 11908, byte_end: 11918, column_start: 23, column_end: 33, line_start: 365, line_end: 365 }: maintained
Token { kind: Space, char_start: 11918, char_end: 11919, byte_start: 11918, byte_end: 11919, column_start: 33, column_end: 34, line_start: 365, line_end: 365 }: " "
Token { kind: Text, char_start: 11919, char_end: 11921, byte_start: 11919, byte_end: 11921, column_start: 34, column_end: 36, line_start: 365, line_end: 365 }: by
Token { kind: Space, char_start: 11921, char_end: 11922, byte_start: 11921, byte_end: 11922, column_start: 36, column_end: 37, line_start: 365, line_end: 365 }: " "
Token { kind: Text, char_start: 11922, char_end: 11926, byte_start: 11922, byte_end: 11926, column_start: 37, column_end: 41, line_start: 365, line_end: 365 }: Greg
Token { kind: Space, char_start: 11926, char_end: 11927, byte_start: 11926, byte_end: 11927, column_start: 41, column_end: 42, line_start: 365, line_end: 365 }: " "
Token { kind: Text, char_start: 11927, char_end: 11934, byte_start: 11927, byte_end: 11934, column_start: 42, column_end: 49, line_start: 365, line_end: 365 }: Hurrell
Token { kind: Space, char_start: 11934, char_end: 11935, byte_start: 11934, byte_end: 11935, column_start: 49, column_end: 50, line_start: 365, line_end: 365 }: " "
Token { kind: BlockQuote, char_start: 11935, char_end: 11936, byte_start: 11935, byte_end: 11936, column_start: 50, column_end: 51, line_start: 365, line_end: 365 }: <
Token { kind: Text, char_start: 11936, char_end: 11940, byte_start: 11936, byte_end: 11940, column_start: 51, column_end: 55, line_start: 365, line_end: 365 }: greg
Token { kind: At, char_start: 11940, char_end: 11941, byte_start: 11940, byte_end: 11941, column_start: 55, column_end: 56, line_start: 365, line_end: 365 }: @
Token { kind: Text, char_start: 11941, char_end: 11952, byte_start: 11941, byte_end: 11952, column_start: 56, column_end: 67, line_start: 365, line_end: 365 }: hurrell.net
Token { kind: BlockQuote, char_start: 11952, char_end: 11953, byte_start: 11952, byte_end: 11953, column_start: 67, column_end: 68, line_start: 365, line_end: 365 }: >
Token { kind: Text, char_start: 11953, char_end: 11954, byte_start: 11953, byte_end: 11954, column_start: 68, column_end: 69, line_start: 365, line_end: 365 }: .
Token { kind: Newline, char_start: 11954, char_end: 11955, byte_start: 11954, byte_end: 11955, column_start: 69, column_end: 1, line_start: 365, line_end: 366 }: "\n"
Token { kind: Newline, char_start: 11955, char_end: 11956, byte_start: 11955, byte_end: 11956, column_start: 1, column_end: 1, line_start: 366, line_end: 367 }: "\n"
Token { kind: Text, char_start: 11956, char_end: 11961, byte_start: 11956, byte_end: 11961, column_start: 1, column_end: 6, line_start: 367, line_end: 367 }: Other
Token { kind: Space, char_start: 11961, char_end: 11962, byte_start: 11961, byte_end: 11962, column_start: 6, column_end: 7, line_start: 367, line_end: 367 }: " "
Token { kind: Text, char_start: 11962, char_end: 11974, byte_start: 11962, byte_end: 11974, column_start: 7, column_end: 19, line_start: 367, line_end: 367 }: contributors
Token { kind: Space, char_start: 11974, char_end: 11975, byte_start: 11974, byte_end: 11975, column_start: 19, column_end: 20, line_start: 367, line_end: 367 }: " "
Token { kind: Text, char_start: 11975, char_end: 11979, byte_start: 11975, byte_end: 11979, column_start: 20, column_end: 24, line_start: 367, line_end: 367 }: that
Token { kind: Space, char_start: 11979, char_end: 11980, byte_start: 11979, byte_end: 11980, column_start: 24, column_end: 25, line_start: 367, line_end: 367 }: " "
Token { kind: Text, char_start: 11980, char_end: 11984, byte_start: 11980, byte_end: 11984, column_start: 25, column_end: 29, line_start: 367, line_end: 367 }: have
Token { kind: Space, char_start: 11984, char_end: 11985, byte_start: 11984, byte_end: 11985, column_start: 29, column_end: 30, line_start: 367, line_end: 367 }: " "
Token { kind: Text, char_start: 11985, char_end: 11994, byte_start: 11985, byte_end: 11994, column_start: 30, column_end: 39, line_start: 367, line_end: 367 }: submitted
Token { kind: Space, char_start: 11994, char_end: 11995, byte_start: 11994, byte_end: 11995, column_start: 39, column_end: 40, line_start: 367, line_end: 367 }: " "
Token { kind: Text, char_start: 11995, char_end: 12002, byte_start: 11995, byte_end: 12002, column_start: 40, column_end: 47, line_start: 367, line_end: 367 }: patches
Token { kind: Space, char_start: 12002, char_end: 12003, byte_start: 12002, byte_end: 12003, column_start: 47, column_end: 48, line_start: 367, line_end: 367 }: " "
Token { kind: Text, char_start: 12003, char_end: 12010, byte_start: 12003, byte_end: 12010, column_start: 48, column_end: 55, line_start: 367, line_end: 367 }: include
Token { kind: Space, char_start: 12010, char_end: 12011, byte_start: 12010, byte_end: 12011, column_start: 55, column_end: 56, line_start: 367, line_end: 367 }: " "
Token { kind: Lparen, char_start: 12011, char_end: 12012, byte_start: 12011, byte_end: 12012, column_start: 56, column_end: 57, line_start: 367, line_end: 367 }: (
Token { kind: Text, char_start: 12012, char_end: 12014, byte_start: 12012, byte_end: 12014, column_start: 57, column_end: 59, line_start: 367, line_end: 367 }: in
Token { kind: Space, char_start: 12014, char_end: 12015, byte_start: 12014, byte_end: 12015, column_start: 59, column_end: 60, line_start: 367, line_end: 367 }: " "
Token { kind: Text, char_start: 12015, char_end: 12027, byte_start: 12015, byte_end: 12027, column_start: 60, column_end: 72, line_start: 367, line_end: 367 }: alphabetical
Token { kind: Newline, char_start: 12027, char_end: 12028, byte_start: 12027, byte_end: 12028, column_start: 72, column_end: 1, line_start: 367, line_end: 368 }: "\n"
Token { kind: Text, char_start: 12028, char_end: 12033, byte_start: 12028, byte_end: 12033, column_start: 1, column_end: 6, line_start: 368, line_end: 368 }: order
Token { kind: Rparen, char_start: 12033, char_end: 12034, byte_start: 12033, byte_end: 12034, column_start: 6, column_end: 7, line_start: 368, line_end: 368 }: )
Token { kind: Text, char_start: 12034, char_end: 12035, byte_start: 12034, byte_end: 12035, column_start: 7, column_end: 8, line_start: 368, line_end: 368 }: :
Token { kind: Newline, char_start: 12035, char_end: 12036, byte_start: 12035, byte_end: 12036, column_start: 8, column_end: 1, line_start: 368, line_end: 369 }: "\n"
Token { kind: Newline, char_start: 12036, char_end: 12037, byte_start: 12036, byte_end: 12037, column_start: 1, column_end: 1, line_start: 369, line_end: 370 }: "\n"
Token { kind: Hyphen, char_start: 12037, char_end: 12038, byte_start: 12037, byte_end: 12038, column_start: 1, column_end: 2, line_start: 370, line_end: 370 }: -
Token { kind: Space, char_start: 12038, char_end: 12039, byte_start: 12038, byte_end: 12039, column_start: 2, column_end: 3, line_start: 370, line_end: 370 }: " "
Token { kind: Text, char_start: 12039, char_end: 12045, byte_start: 12039, byte_end: 12045, column_start: 3, column_end: 9, line_start: 370, line_end: 370 }: Andrew
Token { kind: Space, char_start: 12045, char_end: 12046, byte_start: 12045, byte_end: 12046, column_start: 9, column_end: 10, line_start: 370, line_end: 370 }: " "
Token { kind: Text, char_start: 12046, char_end: 12056, byte_start: 12046, byte_end: 12056, column_start: 10, column_end: 20, line_start: 370, line_end: 370 }: Macpherson
Token { kind: Newline, char_start: 12056, char_end: 12057, byte_start: 12056, byte_end: 12057, column_start: 20, column_end: 1, line_start: 370, line_end: 371 }: "\n"
Token { kind: Hyphen, char_start: 12057, char_end: 12058, byte_start: 12057, byte_end: 12058, column_start: 1, column_end: 2, line_start: 371, line_end: 371 }: -
Token { kind: Space, char_start: 12058, char_end: 12059, byte_start: 12058, byte_end: 12059, column_start: 2, column_end: 3, line_start: 371, line_end: 371 }: " "
Token { kind: Text, char_start: 12059, char_end: 12065, byte_start: 12059, byte_end: 12065, column_start: 3, column_end: 9, line_start: 371, line_end: 371 }: Daniel
Token { kind: Space, char_start: 12065, char_end: 12066, byte_start: 12065, byte_end: 12066, column_start: 9, column_end: 10, line_start: 371, line_end: 371 }: " "
Token { kind: Text, char_start: 12066, char_end: 12071, byte_start: 12066, byte_end: 12071, column_start: 10, column_end: 15, line_start: 371, line_end: 371 }: Silva
Token { kind: Newline, char_start: 12071, char_end: 12072, byte_start: 12071, byte_end: 12072, column_start: 15, column_end: 1, line_start: 371, line_end: 372 }: "\n"
Token { kind: Hyphen, char_start: 12072, char_end: 12073, byte_start: 12072, byte_end: 12073, column_start: 1, column_end: 2, line_start: 372, line_end: 372 }: -
Token { kind: Space, char_start: 12073, char_end: 12074, byte_start: 12073, byte_end: 12074, column_start: 2, column_end: 3, line_start: 372, line_end: 372 }: " "
Token { kind: Text, char_start: 12074, char_end: 12079, byte_start: 12074, byte_end: 12079, column_start: 3, column_end: 8, line_start: 372, line_end: 372 }: Filip
Token { kind: Space, char_start: 12079, char_end: 12080, byte_start: 12079, byte_end: 12080, column_start: 8, column_end: 9, line_start: 372, line_end: 372 }: " "
Token { kind: Text, char_start: 12080, char_end: 12089, byte_start: 12080, byte_end: 12090, column_start: 9, column_end: 18, line_start: 372, line_end: 372 }: Szymański
Token { kind: Newline, char_start: 12089, char_end: 12090, byte_start: 12090, byte_end: 12091, column_start: 18, column_end: 1, line_start: 372, line_end: 373 }: "\n"
Token { kind: Hyphen, char_start: 12090, char_end: 12091, byte_start: 12091, byte_end: 12092, column_start: 1, column_end: 2, line_start: 373, line_end: 373 }: -
Token { kind: Space, char_start: 12091, char_end: 12092, byte_start: 12092, byte_end: 12093, column_start: 2, column_end: 3, line_start: 373, line_end: 373 }: " "
Token { kind: Text, char_start: 12092, char_end: 12095, byte_start: 12093, byte_end: 12096, column_start: 3, column_end: 6, line_start: 373, line_end: 373 }: Joe
Token { kind: Space, char_start: 12095, char_end: 12096, byte_start: 12096, byte_end: 12097, column_start: 6, column_end: 7, line_start: 373, line_end: 373 }: " "
Token { kind: Text, char_start: 12096, char_end: 12104, byte_start: 12097, byte_end: 12105, column_start: 7, column_end: 15, line_start: 373, line_end: 373 }: Lencioni
Token { kind: Newline, char_start: 12104, char_end: 12105, byte_start: 12105, byte_end: 12106, column_start: 15, column_end: 1, line_start: 373, line_end: 374 }: "\n"
Token { kind: Hyphen, char_start: 12105, char_end: 12106, byte_start: 12106, byte_end: 12107, column_start: 1, column_end: 2, line_start: 374, line_end: 374 }: -
Token { kind: Space, char_start: 12106, char_end: 12107, byte_start: 12107, byte_end: 12108, column_start: 2, column_end: 3, line_start: 374, line_end: 374 }: " "
Token { kind: Text, char_start: 12107, char_end: 12110, byte_start: 12108, byte_end: 12111, column_start: 3, column_end: 6, line_start: 374, line_end: 374 }: Jon
Token { kind: Space, char_start: 12110, char_end: 12111, byte_start: 12111, byte_end: 12112, column_start: 6, column_end: 7, line_start: 374, line_end: 374 }: " "
Token { kind: Text, char_start: 12111, char_end: 12117, byte_start: 12112, byte_end: 12118, column_start: 7, column_end: 13, line_start: 374, line_end: 374 }: Parise
Token { kind: Newline, char_start: 12117, char_end: 12118, byte_start: 12118, byte_end: 12119, column_start: 13, column_end: 1, line_start: 374, line_end: 375 }: "\n"
Token { kind: Hyphen, char_start: 12118, char_end: 12119, byte_start: 12119, byte_end: 12120, column_start: 1, column_end: 2, line_start: 375, line_end: 375 }: -
Token { kind: Space, char_start: 12119, char_end: 12120, byte_start: 12120, byte_end: 12121, column_start: 2, column_end: 3, line_start: 375, line_end: 375 }: " "
Token { kind: Text, char_start: 12120, char_end: 12124, byte_start: 12121, byte_end: 12125, column_start: 3, column_end: 7, line_start: 375, line_end: 375 }: Nelo
Token { kind: Space, char_start: 12124, char_end: 12125, byte_start: 12125, byte_end: 12126, column_start: 7, column_end: 8, line_start: 375, line_end: 375 }: " "
Token { kind: Text, char_start: 12125, char_end: 12131, byte_start: 12126, byte_end: 12132, column_start: 8, column_end: 14, line_start: 375, line_end: 375 }: Wallus
Token { kind: Newline, char_start: 12131, char_end: 12132, byte_start: 12132, byte_end: 12133, column_start: 14, column_end: 1, line_start: 375, line_end: 376 }: "\n"
Token { kind: Hyphen, char_start: 12132, char_end: 12133, byte_start: 12133, byte_end: 12134, column_start: 1, column_end: 2, line_start: 376, line_end: 376 }: -
Token { kind: Space, char_start: 12133, char_end: 12134, byte_start: 12134, byte_end: 12135, column_start: 2, column_end: 3, line_start: 376, line_end: 376 }: " "
Token { kind: Text, char_start: 12134, char_end: 12137, byte_start: 12135, byte_end: 12138, column_start: 3, column_end: 6, line_start: 376, line_end: 376 }: Tom
Token { kind: Space, char_start: 12137, char_end: 12138, byte_start: 12138, byte_end: 12139, column_start: 6, column_end: 7, line_start: 376, line_end: 376 }: " "
Token { kind: Text, char_start: 12138, char_end: 12144, byte_start: 12139, byte_end: 12145, column_start: 7, column_end: 13, line_start: 376, line_end: 376 }: Dooner
Token { kind: Newline, char_start: 12144, char_end: 12145, byte_start: 12145, byte_end: 12146, column_start: 13, column_end: 1, line_start: 376, line_end: 377 }: "\n"
Token { kind: Hyphen, char_start: 12145, char_end: 12146, byte_start: 12146, byte_end: 12147, column_start: 1, column_end: 2, line_start: 377, line_end: 377 }: -
Token { kind: Space, char_start: 12146, char_end: 12147, byte_start: 12147, byte_end: 12148, column_start: 2, column_end: 3, line_start: 377, line_end: 377 }: " "
Token { kind: Text, char_start: 12147, char_end: 12154, byte_start: 12148, byte_end: 12155, column_start: 3, column_end: 10, line_start: 377, line_end: 377 }: Vaibhav
Token { kind: Space, char_start: 12154, char_end: 12155, byte_start: 12155, byte_end: 12156, column_start: 10, column_end: 11, line_start: 377, line_end: 377 }: " "
Token { kind: Text, char_start: 12155, char_end: 12160, byte_start: 12156, byte_end: 12161, column_start: 11, column_end: 16, line_start: 377, line_end: 377 }: Sagar
Token { kind: Newline, char_start: 12160, char_end: 12161, byte_start: 12161, byte_end: 12162, column_start: 16, column_end: 1, line_start: 377, line_end: 378 }: "\n"
Token { kind: Hyphen, char_start: 12161, char_end: 12162, byte_start: 12162, byte_end: 12163, column_start: 1, column_end: 2, line_start: 378, line_end: 378 }: -
Token { kind: Space, char_start: 12162, char_end: 12163, byte_start: 12163, byte_end: 12164, column_start: 2, column_end: 3, line_start: 378, line_end: 378 }: " "
Token { kind: Text, char_start: 12163, char_end: 12167, byte_start: 12164, byte_end: 12168, column_start: 3, column_end: 7, line_start: 378, line_end: 378 }: Yoni
Token { kind: Space, char_start: 12167, char_end: 12168, byte_start: 12168, byte_end: 12169, column_start: 7, column_end: 8, line_start: 378, line_end: 378 }: " "
Token { kind: Text, char_start: 12168, char_end: 12173, byte_start: 12169, byte_end: 12174, column_start: 8, column_end: 13, line_start: 378, line_end: 378 }: Weill
Token { kind: Newline, char_start: 12173, char_end: 12174, byte_start: 12174, byte_end: 12175, column_start: 13, column_end: 1, line_start: 378, line_end: 379 }: "\n"
Token { kind: Hyphen, char_start: 12174, char_end: 12175, byte_start: 12175, byte_end: 12176, column_start: 1, column_end: 2, line_start: 379, line_end: 379 }: -
Token { kind: Space, char_start: 12175, char_end: 12176, byte_start: 12176, byte_end: 12177, column_start: 2, column_end: 3, line_start: 379, line_end: 379 }: " "
Token { kind: Text, char_start: 12176, char_end: 12180, byte_start: 12177, byte_end: 12181, column_start: 3, column_end: 7, line_start: 379, line_end: 379 }: fent
Token { kind: Newline, char_start: 12180, char_end: 12181, byte_start: 12181, byte_end: 12182, column_start: 7, column_end: 1, line_start: 379, line_end: 380 }: "\n"
Token { kind: Newline, char_start: 12181, char_end: 12182, byte_start: 12182, byte_end: 12183, column_start: 1, column_end: 1, line_start: 380, line_end: 381 }: "\n"
Token { kind: Text, char_start: 12182, char_end: 12186, byte_start: 12183, byte_end: 12187, column_start: 1, column_end: 5, line_start: 381, line_end: 381 }: This
Token { kind: Space, char_start: 12186, char_end: 12187, byte_start: 12187, byte_end: 12188, column_start: 5, column_end: 6, line_start: 381, line_end: 381 }: " "
Token { kind: Text, char_start: 12187, char_end: 12191, byte_start: 12188, byte_end: 12192, column_start: 6, column_end: 10, line_start: 381, line_end: 381 }: list
Token { kind: Space, char_start: 12191, char_end: 12192, byte_start: 12192, byte_end: 12193, column_start: 10, column_end: 11, line_start: 381, line_end: 381 }: " "
Token { kind: Text, char_start: 12192, char_end: 12200, byte_start: 12193, byte_end: 12201, column_start: 11, column_end: 19, line_start: 381, line_end: 381 }: produced
Token { kind: Space, char_start: 12200, char_end: 12201, byte_start: 12201, byte_end: 12202, column_start: 19, column_end: 20, line_start: 381, line_end: 381 }: " "
Token { kind: Text, char_start: 12201, char_end: 12206, byte_start: 12202, byte_end: 12207, column_start: 20, column_end: 25, line_start: 381, line_end: 381 }: with:
Token { kind: Newline, char_start: 12206, char_end: 12207, byte_start: 12207, byte_end: 12208, column_start: 25, column_end: 1, line_start: 381, line_end: 382 }: "\n"
Token { kind: Newline, char_start: 12207, char_end: 12208, byte_start: 12208, byte_end: 12209, column_start: 1, column_end: 1, line_start: 382, line_end: 383 }: "\n"
Token { kind: CodeFence, char_start: 12208, char_end: 12211, byte_start: 12209, byte_end: 12212, column_start: 1, column_end: 4, line_start: 383, line_end: 383 }: ```
Token { kind: Newline, char_start: 12211, char_end: 12212, byte_start: 12212, byte_end: 12213, column_start: 4, column_end: 1, line_start: 383, line_end: 384 }: "\n"
Token { kind: Text, char_start: 12212, char_end: 12217, byte_start: 12213, byte_end: 12218, column_start: 1, column_end: 6, line_start: 384, line_end: 384 }: :read
Token { kind: Space, char_start: 12217, char_end: 12218, byte_start: 12218, byte_end: 12219, column_start: 6, column_end: 7, line_start: 384, line_end: 384 }: " "
Token { kind: Bang, char_start: 12218, char_end: 12219, byte_start: 12219, byte_end: 12220, column_start: 7, column_end: 8, line_start: 384, line_end: 384 }: !
Token { kind: Text, char_start: 12219, char_end: 12222, byte_start: 12220, byte_end: 12223, column_start: 8, column_end: 11, line_start: 384, line_end: 384 }: git
Token { kind: Space, char_start: 12222, char_end: 12223, byte_start: 12223, byte_end: 12224, column_start: 11, column_end: 12, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12223, char_end: 12231, byte_start: 12224, byte_end: 12232, column_start: 12, column_end: 20, line_start: 384, line_end: 384 }: shortlog
Token { kind: Space, char_start: 12231, char_end: 12232, byte_start: 12232, byte_end: 12233, column_start: 20, column_end: 21, line_start: 384, line_end: 384 }: " "
Token { kind: Hyphen, char_start: 12232, char_end: 12233, byte_start: 12233, byte_end: 12234, column_start: 21, column_end: 22, line_start: 384, line_end: 384 }: -
Token { kind: Text, char_start: 12233, char_end: 12234, byte_start: 12234, byte_end: 12235, column_start: 22, column_end: 23, line_start: 384, line_end: 384 }: s
Token { kind: Space, char_start: 12234, char_end: 12235, byte_start: 12235, byte_end: 12236, column_start: 23, column_end: 24, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12235, char_end: 12239, byte_start: 12236, byte_end: 12240, column_start: 24, column_end: 28, line_start: 384, line_end: 384 }: HEAD
Token { kind: Space, char_start: 12239, char_end: 12240, byte_start: 12240, byte_end: 12241, column_start: 28, column_end: 29, line_start: 384, line_end: 384 }: " "
Token { kind: Bar, char_start: 12240, char_end: 12241, byte_start: 12241, byte_end: 12242, column_start: 29, column_end: 30, line_start: 384, line_end: 384 }: |
Token { kind: Space, char_start: 12241, char_end: 12242, byte_start: 12242, byte_end: 12243, column_start: 30, column_end: 31, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12242, char_end: 12246, byte_start: 12243, byte_end: 12247, column_start: 31, column_end: 35, line_start: 384, line_end: 384 }: grep
Token { kind: Space, char_start: 12246, char_end: 12247, byte_start: 12247, byte_end: 12248, column_start: 35, column_end: 36, line_start: 384, line_end: 384 }: " "
Token { kind: Hyphen, char_start: 12247, char_end: 12248, byte_start: 12248, byte_end: 12249, column_start: 36, column_end: 37, line_start: 384, line_end: 384 }: -
Token { kind: Text, char_start: 12248, char_end: 12249, byte_start: 12249, byte_end: 12250, column_start: 37, column_end: 38, line_start: 384, line_end: 384 }: v
Token { kind: Space, char_start: 12249, char_end: 12250, byte_start: 12250, byte_end: 12251, column_start: 38, column_end: 39, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12250, char_end: 12255, byte_start: 12251, byte_end: 12256, column_start: 39, column_end: 44, line_start: 384, line_end: 384 }: 'Greg
Token { kind: Space, char_start: 12255, char_end: 12256, byte_start: 12256, byte_end: 12257, column_start: 44, column_end: 45, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12256, char_end: 12264, byte_start: 12257, byte_end: 12265, column_start: 45, column_end: 53, line_start: 384, line_end: 384 }: Hurrell'
Token { kind: Space, char_start: 12264, char_end: 12265, byte_start: 12265, byte_end: 12266, column_start: 53, column_end: 54, line_start: 384, line_end: 384 }: " "
Token { kind: Bar, char_start: 12265, char_end: 12266, byte_start: 12266, byte_end: 12267, column_start: 54, column_end: 55, line_start: 384, line_end: 384 }: |
Token { kind: Space, char_start: 12266, char_end: 12267, byte_start: 12267, byte_end: 12268, column_start: 55, column_end: 56, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12267, char_end: 12270, byte_start: 12268, byte_end: 12271, column_start: 56, column_end: 59, line_start: 384, line_end: 384 }: cut
Token { kind: Space, char_start: 12270, char_end: 12271, byte_start: 12271, byte_end: 12272, column_start: 59, column_end: 60, line_start: 384, line_end: 384 }: " "
Token { kind: Hyphen, char_start: 12271, char_end: 12272, byte_start: 12272, byte_end: 12273, column_start: 60, column_end: 61, line_start: 384, line_end: 384 }: -
Token { kind: Text, char_start: 12272, char_end: 12273, byte_start: 12273, byte_end: 12274, column_start: 61, column_end: 62, line_start: 384, line_end: 384 }: f
Token { kind: Space, char_start: 12273, char_end: 12274, byte_start: 12274, byte_end: 12275, column_start: 62, column_end: 63, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12274, char_end: 12275, byte_start: 12275, byte_end: 12276, column_start: 63, column_end: 64, line_start: 384, line_end: 384 }: 2
Token { kind: Hyphen, char_start: 12275, char_end: 12276, byte_start: 12276, byte_end: 12277, column_start: 64, column_end: 65, line_start: 384, line_end: 384 }: -
Token { kind: Text, char_start: 12276, char_end: 12277, byte_start: 12277, byte_end: 12278, column_start: 65, column_end: 66, line_start: 384, line_end: 384 }: 3
Token { kind: Space, char_start: 12277, char_end: 12278, byte_start: 12278, byte_end: 12279, column_start: 66, column_end: 67, line_start: 384, line_end: 384 }: " "
Token { kind: Bar, char_start: 12278, char_end: 12279, byte_start: 12279, byte_end: 12280, column_start: 67, column_end: 68, line_start: 384, line_end: 384 }: |
Token { kind: Space, char_start: 12279, char_end: 12280, byte_start: 12280, byte_end: 12281, column_start: 68, column_end: 69, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12280, char_end: 12283, byte_start: 12281, byte_end: 12284, column_start: 69, column_end: 72, line_start: 384, line_end: 384 }: sed
Token { kind: Space, char_start: 12283, char_end: 12284, byte_start: 12284, byte_end: 12285, column_start: 72, column_end: 73, line_start: 384, line_end: 384 }: " "
Token { kind: Hyphen, char_start: 12284, char_end: 12285, byte_start: 12285, byte_end: 12286, column_start: 73, column_end: 74, line_start: 384, line_end: 384 }: -
Token { kind: Text, char_start: 12285, char_end: 12286, byte_start: 12286, byte_end: 12287, column_start: 74, column_end: 75, line_start: 384, line_end: 384 }: e
Token { kind: Space, char_start: 12286, char_end: 12287, byte_start: 12287, byte_end: 12288, column_start: 75, column_end: 76, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12287, char_end: 12292, byte_start: 12288, byte_end: 12293, column_start: 76, column_end: 81, line_start: 384, line_end: 384 }: 's/^/
Token { kind: Hyphen, char_start: 12292, char_end: 12293, byte_start: 12293, byte_end: 12294, column_start: 81, column_end: 82, line_start: 384, line_end: 384 }: -
Token { kind: Space, char_start: 12293, char_end: 12294, byte_start: 12294, byte_end: 12295, column_start: 82, column_end: 83, line_start: 384, line_end: 384 }: " "
Token { kind: Text, char_start: 12294, char_end: 12296, byte_start: 12295, byte_end: 12297, column_start: 83, column_end: 85, line_start: 384, line_end: 384 }: /'
Token { kind: Newline, char_start: 12296, char_end: 12297, byte_start: 12297, byte_end: 12298, column_start: 85, column_end: 1, line_start: 384, line_end: 385 }: "\n"
Token { kind: CodeFence, char_start: 12297, char_end: 12300, byte_start: 12298, byte_end: 12301, column_start: 1, column_end: 4, line_start: 385, line_end: 385 }: ```
Token { kind: Newline, char_start: 12300, char_end: 12301, byte_start: 12301, byte_end: 12302, column_start: 4, column_end: 1, line_start: 385, line_end: 386 }: "\n"
Token { kind: Newline, char_start: 12301, char_end: 12302, byte_start: 12302, byte_end: 12303, column_start: 1, column_end: 1, line_start: 386, line_end: 387 }: "\n"
Token { kind: Heading(Heading1), char_start: 12302, char_end: 12303, byte_start: 12303, byte_end: 12304, column_start: 1, column_end: 2, line_start: 387, line_end: 387 }: #
Token { kind: Space, char_start: 12303, char_end: 12304, byte_start: 12304, byte_end: 12305, column_start: 2, column_end: 3, line_start: 387, line_end: 387 }: " "
Token { kind: Text, char_start: 12304, char_end: 12311, byte_start: 12305, byte_end: 12312, column_start: 3, column_end: 10, line_start: 387, line_end: 387 }: History
Token { kind: Newline, char_start: 12311, char_end: 12312, byte_start: 12312, byte_end: 12313, column_start: 10, column_end: 1, line_start: 387, line_end: 388 }: "\n"
Token { kind: Newline, char_start: 12312, char_end: 12313, byte_start: 12313, byte_end: 12314, column_start: 1, column_end: 1, line_start: 388, line_end: 389 }: "\n"
Token { kind: Heading(Heading2), char_start: 12313, char_end: 12315, byte_start: 12314, byte_end: 12316, column_start: 1, column_end: 3, line_start: 389, line_end: 389 }: ##
Token { kind: Space, char_start: 12315, char_end: 12316, byte_start: 12316, byte_end: 12317, column_start: 3, column_end: 4, line_start: 389, line_end: 389 }: " "
Token { kind: Text, char_start: 12316, char_end: 12320, byte_start: 12317, byte_end: 12321, column_start: 4, column_end: 8, line_start: 389, line_end: 389 }: main
Token { kind: Space, char_start: 12320, char_end: 12321, byte_start: 12321, byte_end: 12322, column_start: 8, column_end: 9, line_start: 389, line_end: 389 }: " "
Token { kind: Lparen, char_start: 12321, char_end: 12322, byte_start: 12322, byte_end: 12323, column_start: 9, column_end: 10, line_start: 389, line_end: 389 }: (
Token { kind: Text, char_start: 12322, char_end: 12325, byte_start: 12323, byte_end: 12326, column_start: 10, column_end: 13, line_start: 389, line_end: 389 }: not
Token { kind: Space, char_start: 12325, char_end: 12326, byte_start: 12326, byte_end: 12327, column_start: 13, column_end: 14, line_start: 389, line_end: 389 }: " "
Token { kind: Text, char_start: 12326, char_end: 12329, byte_start: 12327, byte_end: 12330, column_start: 14, column_end: 17, line_start: 389, line_end: 389 }: yet
Token { kind: Space, char_start: 12329, char_end: 12330, byte_start: 12330, byte_end: 12331, column_start: 17, column_end: 18, line_start: 389, line_end: 389 }: " "
Token { kind: Text, char_start: 12330, char_end: 12338, byte_start: 12331, byte_end: 12339, column_start: 18, column_end: 26, line_start: 389, line_end: 389 }: released
Token { kind: Rparen, char_start: 12338, char_end: 12339, byte_start: 12339, byte_end: 12340, column_start: 26, column_end: 27, line_start: 389, line_end: 389 }: )
Token { kind: Newline, char_start: 12339, char_end: 12340, byte_start: 12340, byte_end: 12341, column_start: 27, column_end: 1, line_start: 389, line_end: 390 }: "\n"
Token { kind: Newline, char_start: 12340, char_end: 12341, byte_start: 12341, byte_end: 12342, column_start: 1, column_end: 1, line_start: 390, line_end: 391 }: "\n"
Token { kind: Hyphen, char_start: 12341, char_end: 12342, byte_start: 12342, byte_end: 12343, column_start: 1, column_end: 2, line_start: 391, line_end: 391 }: -
Token { kind: Space, char_start: 12342, char_end: 12343, byte_start: 12343, byte_end: 12344, column_start: 2, column_end: 3, line_start: 391, line_end: 391 }: " "
Token { kind: Text, char_start: 12343, char_end: 12346, byte_start: 12344, byte_end: 12347, column_start: 3, column_end: 6, line_start: 391, line_end: 391 }: Add
Token { kind: Space, char_start: 12346, char_end: 12347, byte_start: 12347, byte_end: 12348, column_start: 6, column_end: 7, line_start: 391, line_end: 391 }: " "
Token { kind: Bar, char_start: 12347, char_end: 12348, byte_start: 12348, byte_end: 12349, column_start: 7, column_end: 8, line_start: 391, line_end: 391 }: |
Token { kind: BlockQuote, char_start: 12348, char_end: 12349, byte_start: 12349, byte_end: 12350, column_start: 8, column_end: 9, line_start: 391, line_end: 391 }: <
Token { kind: Text, char_start: 12349, char_end: 12353, byte_start: 12350, byte_end: 12354, column_start: 9, column_end: 13, line_start: 391, line_end: 391 }: Plug
Token { kind: BlockQuote, char_start: 12353, char_end: 12354, byte_start: 12354, byte_end: 12355, column_start: 13, column_end: 14, line_start: 391, line_end: 391 }: >
Token { kind: Lparen, char_start: 12354, char_end: 12355, byte_start: 12355, byte_end: 12356, column_start: 14, column_end: 15, line_start: 391, line_end: 391 }: (
Token { kind: Text, char_start: 12355, char_end: 12365, byte_start: 12356, byte_end: 12366, column_start: 15, column_end: 25, line_start: 391, line_end: 391 }: FerretBack
Token { kind: Rparen, char_start: 12365, char_end: 12366, byte_start: 12366, byte_end: 12367, column_start: 25, column_end: 26, line_start: 391, line_end: 391 }: )
Token { kind: Bar, char_start: 12366, char_end: 12367, byte_start: 12367, byte_end: 12368, column_start: 26, column_end: 27, line_start: 391, line_end: 391 }: |
Token { kind: Text, char_start: 12367, char_end: 12368, byte_start: 12368, byte_end: 12369, column_start: 27, column_end: 28, line_start: 391, line_end: 391 }: ,
Token { kind: Space, char_start: 12368, char_end: 12369, byte_start: 12369, byte_end: 12370, column_start: 28, column_end: 29, line_start: 391, line_end: 391 }: " "
Token { kind: Bar, char_start: 12369, char_end: 12370, byte_start: 12370, byte_end: 12371, column_start: 29, column_end: 30, line_start: 391, line_end: 391 }: |
Token { kind: BlockQuote, char_start: 12370, char_end: 12371, byte_start: 12371, byte_end: 12372, column_start: 30, column_end: 31, line_start: 391, line_end: 391 }: <
Token { kind: Text, char_start: 12371, char_end: 12375, byte_start: 12372, byte_end: 12376, column_start: 31, column_end: 35, line_start: 391, line_end: 391 }: Plug
Token { kind: BlockQuote, char_start: 12375, char_end: 12376, byte_start: 12376, byte_end: 12377, column_start: 35, column_end: 36, line_start: 391, line_end: 391 }: >
Token { kind: Lparen, char_start: 12376, char_end: 12377, byte_start: 12377, byte_end: 12378, column_start: 36, column_end: 37, line_start: 391, line_end: 391 }: (
Token { kind: Text, char_start: 12377, char_end: 12388, byte_start: 12378, byte_end: 12389, column_start: 37, column_end: 48, line_start: 391, line_end: 391 }: FerretBlack
Token { kind: Rparen, char_start: 12388, char_end: 12389, byte_start: 12389, byte_end: 12390, column_start: 48, column_end: 49, line_start: 391, line_end: 391 }: )
Token { kind: Bar, char_start: 12389, char_end: 12390, byte_start: 12390, byte_end: 12391, column_start: 49, column_end: 50, line_start: 391, line_end: 391 }: |
Token { kind: Text, char_start: 12390, char_end: 12391, byte_start: 12391, byte_end: 12392, column_start: 50, column_end: 51, line_start: 391, line_end: 391 }: ,
Token { kind: Space, char_start: 12391, char_end: 12392, byte_start: 12392, byte_end: 12393, column_start: 51, column_end: 52, line_start: 391, line_end: 391 }: " "
Token { kind: Text, char_start: 12392, char_end: 12395, byte_start: 12393, byte_end: 12396, column_start: 52, column_end: 55, line_start: 391, line_end: 391 }: and
Token { kind: Space, char_start: 12395, char_end: 12396, byte_start: 12396, byte_end: 12397, column_start: 55, column_end: 56, line_start: 391, line_end: 391 }: " "
Token { kind: Bar, char_start: 12396, char_end: 12397, byte_start: 12397, byte_end: 12398, column_start: 56, column_end: 57, line_start: 391, line_end: 391 }: |
Token { kind: BlockQuote, char_start: 12397, char_end: 12398, byte_start: 12398, byte_end: 12399, column_start: 57, column_end: 58, line_start: 391, line_end: 391 }: <
Token { kind: Text, char_start: 12398, char_end: 12402, byte_start: 12399, byte_end: 12403, column_start: 58, column_end: 62, line_start: 391, line_end: 391 }: Plug
Token { kind: BlockQuote, char_start: 12402, char_end: 12403, byte_start: 12403, byte_end: 12404, column_start: 62, column_end: 63, line_start: 391, line_end: 391 }: >
Token { kind: Lparen, char_start: 12403, char_end: 12404, byte_start: 12404, byte_end: 12405, column_start: 63, column_end: 64, line_start: 391, line_end: 391 }: (
Token { kind: Text, char_start: 12404, char_end: 12415, byte_start: 12405, byte_end: 12416, column_start: 64, column_end: 75, line_start: 391, line_end: 391 }: FerretQuack
Token { kind: Rparen, char_start: 12415, char_end: 12416, byte_start: 12416, byte_end: 12417, column_start: 75, column_end: 76, line_start: 391, line_end: 391 }: )
Token { kind: Bar, char_start: 12416, char_end: 12417, byte_start: 12417, byte_end: 12418, column_start: 76, column_end: 77, line_start: 391, line_end: 391 }: |
Token { kind: Newline, char_start: 12417, char_end: 12418, byte_start: 12418, byte_end: 12419, column_start: 77, column_end: 1, line_start: 391, line_end: 392 }: "\n"
Token { kind: Space, char_start: 12418, char_end: 12420, byte_start: 12419, byte_end: 12421, column_start: 1, column_end: 3, line_start: 392, line_end: 392 }: "  "
Token { kind: Text, char_start: 12420, char_end: 12427, byte_start: 12421, byte_end: 12428, column_start: 3, column_end: 10, line_start: 392, line_end: 392 }: targets
Token { kind: Space, char_start: 12427, char_end: 12428, byte_start: 12428, byte_end: 12429, column_start: 10, column_end: 11, line_start: 392, line_end: 392 }: " "
Token { kind: Text, char_start: 12428, char_end: 12431, byte_start: 12429, byte_end: 12432, column_start: 11, column_end: 14, line_start: 392, line_end: 392 }: for
Token { kind: Space, char_start: 12431, char_end: 12432, byte_start: 12432, byte_end: 12433, column_start: 14, column_end: 15, line_start: 392, line_end: 392 }: " "
Token { kind: Text, char_start: 12432, char_end: 12435, byte_start: 12433, byte_end: 12436, column_start: 15, column_end: 18, line_start: 392, line_end: 392 }: use
Token { kind: Space, char_start: 12435, char_end: 12436, byte_start: 12436, byte_end: 12437, column_start: 18, column_end: 19, line_start: 392, line_end: 392 }: " "
Token { kind: Text, char_start: 12436, char_end: 12438, byte_start: 12437, byte_end: 12439, column_start: 19, column_end: 21, line_start: 392, line_end: 392 }: in
Token { kind: Space, char_start: 12438, char_end: 12439, byte_start: 12439, byte_end: 12440, column_start: 21, column_end: 22, line_start: 392, line_end: 392 }: " "
Token { kind: Text, char_start: 12439, char_end: 12447, byte_start: 12440, byte_end: 12448, column_start: 22, column_end: 30, line_start: 392, line_end: 392 }: mappings
Token { kind: Space, char_start: 12447, char_end: 12448, byte_start: 12448, byte_end: 12449, column_start: 30, column_end: 31, line_start: 392, line_end: 392 }: " "
Token { kind: Lparen, char_start: 12448, char_end: 12449, byte_start: 12449, byte_end: 12450, column_start: 31, column_end: 32, line_start: 392, line_end: 392 }: (
Token { kind: Text, char_start: 12449, char_end: 12492, byte_start: 12450, byte_end: 12493, column_start: 32, column_end: 75, line_start: 392, line_end: 392 }: https://github.com/wincent/ferret/issues/79
Token { kind: Rparen, char_start: 12492, char_end: 12493, byte_start: 12493, byte_end: 12494, column_start: 75, column_end: 76, line_start: 392, line_end: 392 }: )
Token { kind: Text, char_start: 12493, char_end: 12494, byte_start: 12494, byte_end: 12495, column_start: 76, column_end: 77, line_start: 392, line_end: 392 }: .
Token { kind: Newline, char_start: 12494, char_end: 12495, byte_start: 12495, byte_end: 12496, column_start: 77, column_end: 1, line_start: 392, line_end: 393 }: "\n"
Token { kind: Hyphen, char_start: 12495, char_end: 12496, byte_start: 12496, byte_end: 12497, column_start: 1, column_end: 2, line_start: 393, line_end: 393 }: -
Token { kind: Space, char_start: 12496, char_end: 12497, byte_start: 12497, byte_end: 12498, column_start: 2, column_end: 3, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12497, char_end: 12500, byte_start: 12498, byte_end: 12501, column_start: 3, column_end: 6, line_start: 393, line_end: 393 }: Fix
Token { kind: Space, char_start: 12500, char_end: 12501, byte_start: 12501, byte_end: 12502, column_start: 6, column_end: 7, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12501, char_end: 12506, byte_start: 12502, byte_end: 12507, column_start: 7, column_end: 12, line_start: 393, line_end: 393 }: hangs
Token { kind: Space, char_start: 12506, char_end: 12507, byte_start: 12507, byte_end: 12508, column_start: 12, column_end: 13, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12507, char_end: 12515, byte_start: 12508, byte_end: 12516, column_start: 13, column_end: 21, line_start: 393, line_end: 393 }: produced
Token { kind: Space, char_start: 12515, char_end: 12516, byte_start: 12516, byte_end: 12517, column_start: 21, column_end: 22, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12516, char_end: 12518, byte_start: 12517, byte_end: 12519, column_start: 22, column_end: 24, line_start: 393, line_end: 393 }: by
Token { kind: Space, char_start: 12518, char_end: 12519, byte_start: 12519, byte_end: 12520, column_start: 24, column_end: 25, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12519, char_end: 12526, byte_start: 12520, byte_end: 12527, column_start: 25, column_end: 32, line_start: 393, line_end: 393 }: options
Token { kind: Space, char_start: 12526, char_end: 12527, byte_start: 12527, byte_end: 12528, column_start: 32, column_end: 33, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12527, char_end: 12531, byte_start: 12528, byte_end: 12532, column_start: 33, column_end: 37, line_start: 393, line_end: 393 }: that
Token { kind: Space, char_start: 12531, char_end: 12532, byte_start: 12532, byte_end: 12533, column_start: 37, column_end: 38, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12532, char_end: 12536, byte_start: 12533, byte_end: 12537, column_start: 38, column_end: 42, line_start: 393, line_end: 393 }: take
Token { kind: Space, char_start: 12536, char_end: 12537, byte_start: 12537, byte_end: 12538, column_start: 42, column_end: 43, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12537, char_end: 12546, byte_start: 12538, byte_end: 12547, column_start: 43, column_end: 52, line_start: 393, line_end: 393 }: arguments
Token { kind: Space, char_start: 12546, char_end: 12547, byte_start: 12547, byte_end: 12548, column_start: 52, column_end: 53, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12547, char_end: 12549, byte_start: 12548, byte_end: 12550, column_start: 53, column_end: 55, line_start: 393, line_end: 393 }: in
Token { kind: Space, char_start: 12549, char_end: 12550, byte_start: 12550, byte_end: 12551, column_start: 55, column_end: 56, line_start: 393, line_end: 393 }: " "
Token { kind: Backtick, char_start: 12550, char_end: 12551, byte_start: 12551, byte_end: 12552, column_start: 56, column_end: 57, line_start: 393, line_end: 393 }: `
Token { kind: Text, char_start: 12551, char_end: 12553, byte_start: 12552, byte_end: 12554, column_start: 57, column_end: 59, line_start: 393, line_end: 393 }: rg
Token { kind: Backtick, char_start: 12553, char_end: 12554, byte_start: 12554, byte_end: 12555, column_start: 59, column_end: 60, line_start: 393, line_end: 393 }: `
Token { kind: Space, char_start: 12554, char_end: 12555, byte_start: 12555, byte_end: 12556, column_start: 60, column_end: 61, line_start: 393, line_end: 393 }: " "
Token { kind: Text, char_start: 12555, char_end: 12562, byte_start: 12556, byte_end: 12563, column_start: 61, column_end: 68, line_start: 393, line_end: 393 }: v13.0.0
Token { kind: Newline, char_start: 12562, char_end: 12563, byte_start: 12563, byte_end: 12564, column_start: 68, column_end: 1, line_start: 393, line_end: 394 }: "\n"
Token { kind: Space, char_start: 12563, char_end: 12565, byte_start: 12564, byte_end: 12566, column_start: 1, column_end: 3, line_start: 394, line_end: 394 }: "  "
Token { kind: Lparen, char_start: 12565, char_end: 12566, byte_start: 12566, byte_end: 12567, column_start: 3, column_end: 4, line_start: 394, line_end: 394 }: (
Token { kind: Text, char_start: 12566, char_end: 12609, byte_start: 12567, byte_end: 12610, column_start: 4, column_end: 47, line_start: 394, line_end: 394 }: https://github.com/wincent/ferret/issues/82
Token { kind: Rparen, char_start: 12609, char_end: 12610, byte_start: 12610, byte_end: 12611, column_start: 47, column_end: 48, line_start: 394, line_end: 394 }: )
Token { kind: Text, char_start: 12610, char_end: 12611, byte_start: 12611, byte_end: 12612, column_start: 48, column_end: 49, line_start: 394, line_end: 394 }: .
Token { kind: Newline, char_start: 12611, char_end: 12612, byte_start: 12612, byte_end: 12613, column_start: 49, column_end: 1, line_start: 394, line_end: 395 }: "\n"
Token { kind: Hyphen, char_start: 12612, char_end: 12613, byte_start: 12613, byte_end: 12614, column_start: 1, column_end: 2, line_start: 395, line_end: 395 }: -
Token { kind: Space, char_start: 12613, char_end: 12614, byte_start: 12614, byte_end: 12615, column_start: 2, column_end: 3, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12614, char_end: 12617, byte_start: 12615, byte_end: 12618, column_start: 3, column_end: 6, line_start: 395, line_end: 395 }: Fix
Token { kind: Space, char_start: 12617, char_end: 12618, byte_start: 12618, byte_end: 12619, column_start: 6, column_end: 7, line_start: 395, line_end: 395 }: " "
Token { kind: Bar, char_start: 12618, char_end: 12619, byte_start: 12619, byte_end: 12620, column_start: 7, column_end: 8, line_start: 395, line_end: 395 }: |
Token { kind: Text, char_start: 12619, char_end: 12622, byte_start: 12620, byte_end: 12623, column_start: 8, column_end: 11, line_start: 395, line_end: 395 }: E42
Token { kind: Bar, char_start: 12622, char_end: 12623, byte_start: 12623, byte_end: 12624, column_start: 11, column_end: 12, line_start: 395, line_end: 395 }: |
Token { kind: Space, char_start: 12623, char_end: 12624, byte_start: 12624, byte_end: 12625, column_start: 12, column_end: 13, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12624, char_end: 12627, byte_start: 12625, byte_end: 12628, column_start: 13, column_end: 16, line_start: 395, line_end: 395 }: and
Token { kind: Space, char_start: 12627, char_end: 12628, byte_start: 12628, byte_end: 12629, column_start: 16, column_end: 17, line_start: 395, line_end: 395 }: " "
Token { kind: Bar, char_start: 12628, char_end: 12629, byte_start: 12629, byte_end: 12630, column_start: 17, column_end: 18, line_start: 395, line_end: 395 }: |
Token { kind: Text, char_start: 12629, char_end: 12633, byte_start: 12630, byte_end: 12634, column_start: 18, column_end: 22, line_start: 395, line_end: 395 }: E684
Token { kind: Bar, char_start: 12633, char_end: 12634, byte_start: 12634, byte_end: 12635, column_start: 22, column_end: 23, line_start: 395, line_end: 395 }: |
Token { kind: Space, char_start: 12634, char_end: 12635, byte_start: 12635, byte_end: 12636, column_start: 23, column_end: 24, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12635, char_end: 12641, byte_start: 12636, byte_end: 12642, column_start: 24, column_end: 30, line_start: 395, line_end: 395 }: errors
Token { kind: Space, char_start: 12641, char_end: 12642, byte_start: 12642, byte_end: 12643, column_start: 30, column_end: 31, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12642, char_end: 12646, byte_start: 12643, byte_end: 12647, column_start: 31, column_end: 35, line_start: 395, line_end: 395 }: when
Token { kind: Space, char_start: 12646, char_end: 12647, byte_start: 12647, byte_end: 12648, column_start: 35, column_end: 36, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12647, char_end: 12655, byte_start: 12648, byte_end: 12656, column_start: 36, column_end: 44, line_start: 395, line_end: 395 }: deleting
Token { kind: Space, char_start: 12655, char_end: 12656, byte_start: 12656, byte_end: 12657, column_start: 44, column_end: 45, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12656, char_end: 12660, byte_start: 12657, byte_end: 12661, column_start: 45, column_end: 49, line_start: 395, line_end: 395 }: last
Token { kind: Space, char_start: 12660, char_end: 12661, byte_start: 12661, byte_end: 12662, column_start: 49, column_end: 50, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12661, char_end: 12665, byte_start: 12662, byte_end: 12666, column_start: 50, column_end: 54, line_start: 395, line_end: 395 }: item
Token { kind: Space, char_start: 12665, char_end: 12666, byte_start: 12666, byte_end: 12667, column_start: 54, column_end: 55, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12666, char_end: 12668, byte_start: 12667, byte_end: 12669, column_start: 55, column_end: 57, line_start: 395, line_end: 395 }: in
Token { kind: Space, char_start: 12668, char_end: 12669, byte_start: 12669, byte_end: 12670, column_start: 57, column_end: 58, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12669, char_end: 12677, byte_start: 12670, byte_end: 12678, column_start: 58, column_end: 66, line_start: 395, line_end: 395 }: listing,
Token { kind: Space, char_start: 12677, char_end: 12678, byte_start: 12678, byte_end: 12679, column_start: 66, column_end: 67, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12678, char_end: 12680, byte_start: 12679, byte_end: 12681, column_start: 67, column_end: 69, line_start: 395, line_end: 395 }: or
Token { kind: Space, char_start: 12680, char_end: 12681, byte_start: 12681, byte_end: 12682, column_start: 69, column_end: 70, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12681, char_end: 12687, byte_start: 12682, byte_end: 12688, column_start: 70, column_end: 76, line_start: 395, line_end: 395 }: trying
Token { kind: Space, char_start: 12687, char_end: 12688, byte_start: 12688, byte_end: 12689, column_start: 76, column_end: 77, line_start: 395, line_end: 395 }: " "
Token { kind: Text, char_start: 12688, char_end: 12690, byte_start: 12689, byte_end: 12691, column_start: 77, column_end: 79, line_start: 395, line_end: 395 }: to
Token { kind: Newline, char_start: 12690, char_end: 12691, byte_start: 12691, byte_end: 12692, column_start: 79, column_end: 1, line_start: 395, line_end: 396 }: "\n"
Token { kind: Space, char_start: 12691, char_end: 12693, byte_start: 12692, byte_end: 12694, column_start: 1, column_end: 3, line_start: 396, line_end: 396 }: "  "
Token { kind: Text, char_start: 12693, char_end: 12699, byte_start: 12694, byte_end: 12700, column_start: 3, column_end: 9, line_start: 396, line_end: 396 }: delete
Token { kind: Space, char_start: 12699, char_end: 12700, byte_start: 12700, byte_end: 12701, column_start: 9, column_end: 10, line_start: 396, line_end: 396 }: " "
Token { kind: Text, char_start: 12700, char_end: 12704, byte_start: 12701, byte_end: 12705, column_start: 10, column_end: 14, line_start: 396, line_end: 396 }: from
Token { kind: Space, char_start: 12704, char_end: 12705, byte_start: 12705, byte_end: 12706, column_start: 14, column_end: 15, line_start: 396, line_end: 396 }: " "
Token { kind: Text, char_start: 12705, char_end: 12707, byte_start: 12706, byte_end: 12708, column_start: 15, column_end: 17, line_start: 396, line_end: 396 }: an
Token { kind: Space, char_start: 12707, char_end: 12708, byte_start: 12708, byte_end: 12709, column_start: 17, column_end: 18, line_start: 396, line_end: 396 }: " "
Token { kind: Text, char_start: 12708, char_end: 12713, byte_start: 12709, byte_end: 12714, column_start: 18, column_end: 23, line_start: 396, line_end: 396 }: empty
Token { kind: Space, char_start: 12713, char_end: 12714, byte_start: 12714, byte_end: 12715, column_start: 23, column_end: 24, line_start: 396, line_end: 396 }: " "
Token { kind: Text, char_start: 12714, char_end: 12721, byte_start: 12715, byte_end: 12722, column_start: 24, column_end: 31, line_start: 396, line_end: 396 }: listing
Token { kind: Space, char_start: 12721, char_end: 12722, byte_start: 12722, byte_end: 12723, column_start: 31, column_end: 32, line_start: 396, line_end: 396 }: " "
Token { kind: Lparen, char_start: 12722, char_end: 12723, byte_start: 12723, byte_end: 12724, column_start: 32, column_end: 33, line_start: 396, line_end: 396 }: (
Token { kind: Text, char_start: 12723, char_end: 12766, byte_start: 12724, byte_end: 12767, column_start: 33, column_end: 76, line_start: 396, line_end: 396 }: https://github.com/wincent/ferret/issues/83
Token { kind: Rparen, char_start: 12766, char_end: 12767, byte_start: 12767, byte_end: 12768, column_start: 76, column_end: 77, line_start: 396, line_end: 396 }: )
Token { kind: Text, char_start: 12767, char_end: 12768, byte_start: 12768, byte_end: 12769, column_start: 77, column_end: 78, line_start: 396, line_end: 396 }: .
Token { kind: Newline, char_start: 12768, char_end: 12769, byte_start: 12769, byte_end: 12770, column_start: 78, column_end: 1, line_start: 396, line_end: 397 }: "\n"
Token { kind: Hyphen, char_start: 12769, char_end: 12770, byte_start: 12770, byte_end: 12771, column_start: 1, column_end: 2, line_start: 397, line_end: 397 }: -
Token { kind: Space, char_start: 12770, char_end: 12771, byte_start: 12771, byte_end: 12772, column_start: 2, column_end: 3, line_start: 397, line_end: 397 }: " "
Token { kind: Text, char_start: 12771, char_end: 12774, byte_start: 12772, byte_end: 12775, column_start: 3, column_end: 6, line_start: 397, line_end: 397 }: Add
Token { kind: Space, char_start: 12774, char_end: 12775, byte_start: 12775, byte_end: 12776, column_start: 6, column_end: 7, line_start: 397, line_end: 397 }: " "
Token { kind: Bar, char_start: 12775, char_end: 12776, byte_start: 12776, byte_end: 12777, column_start: 7, column_end: 8, line_start: 397, line_end: 397 }: |
Token { kind: Text, char_start: 12776, char_end: 12796, byte_start: 12777, byte_end: 12797, column_start: 8, column_end: 28, line_start: 397, line_end: 397 }: g:FerretCommandNames
Token { kind: Bar, char_start: 12796, char_end: 12797, byte_start: 12797, byte_end: 12798, column_start: 28, column_end: 29, line_start: 397, line_end: 397 }: |
Token { kind: Space, char_start: 12797, char_end: 12798, byte_start: 12798, byte_end: 12799, column_start: 29, column_end: 30, line_start: 397, line_end: 397 }: " "
Token { kind: Lparen, char_start: 12798, char_end: 12799, byte_start: 12799, byte_end: 12800, column_start: 30, column_end: 31, line_start: 397, line_end: 397 }: (
Token { kind: Text, char_start: 12799, char_end: 12842, byte_start: 12800, byte_end: 12843, column_start: 31, column_end: 74, line_start: 397, line_end: 397 }: https://github.com/wincent/ferret/issues/75
Token { kind: Rparen, char_start: 12842, char_end: 12843, byte_start: 12843, byte_end: 12844, column_start: 74, column_end: 75, line_start: 397, line_end: 397 }: )
Token { kind: Text, char_start: 12843, char_end: 12844, byte_start: 12844, byte_end: 12845, column_start: 75, column_end: 76, line_start: 397, line_end: 397 }: .
Token { kind: Newline, char_start: 12844, char_end: 12845, byte_start: 12845, byte_end: 12846, column_start: 76, column_end: 1, line_start: 397, line_end: 398 }: "\n"
Token { kind: Newline, char_start: 12845, char_end: 12846, byte_start: 12846, byte_end: 12847, column_start: 1, column_end: 1, line_start: 398, line_end: 399 }: "\n"
Token { kind: Heading(Heading2), char_start: 12846, char_end: 12848, byte_start: 12847, byte_end: 12849, column_start: 1, column_end: 3, line_start: 399, line_end: 399 }: ##
Token { kind: Space, char_start: 12848, char_end: 12849, byte_start: 12849, byte_end: 12850, column_start: 3, column_end: 4, line_start: 399, line_end: 399 }: " "
Token { kind: Text, char_start: 12849, char_end: 12852, byte_start: 12850, byte_end: 12853, column_start: 4, column_end: 7, line_start: 399, line_end: 399 }: 5.1
Token { kind: Space, char_start: 12852, char_end: 12853, byte_start: 12853, byte_end: 12854, column_start: 7, column_end: 8, line_start: 399, line_end: 399 }: " "
Token { kind: Lparen, char_start: 12853, char_end: 12854, byte_start: 12854, byte_end: 12855, column_start: 8, column_end: 9, line_start: 399, line_end: 399 }: (
Token { kind: Text, char_start: 12854, char_end: 12855, byte_start: 12855, byte_end: 12856, column_start: 9, column_end: 10, line_start: 399, line_end: 399 }: 9
Token { kind: Space, char_start: 12855, char_end: 12856, byte_start: 12856, byte_end: 12857, column_start: 10, column_end: 11, line_start: 399, line_end: 399 }: " "
Token { kind: Text, char_start: 12856, char_end: 12860, byte_start: 12857, byte_end: 12861, column_start: 11, column_end: 15, line_start: 399, line_end: 399 }: July
Token { kind: Space, char_start: 12860, char_end: 12861, byte_start: 12861, byte_end: 12862, column_start: 15, column_end: 16, line_start: 399, line_end: 399 }: " "
Token { kind: Text, char_start: 12861, char_end: 12865, byte_start: 12862, byte_end: 12866, column_start: 16, column_end: 20, line_start: 399, line_end: 399 }: 2021
Token { kind: Rparen, char_start: 12865, char_end: 12866, byte_start: 12866, byte_end: 12867, column_start: 20, column_end: 21, line_start: 399, line_end: 399 }: )
Token { kind: Newline, char_start: 12866, char_end: 12867, byte_start: 12867, byte_end: 12868, column_start: 21, column_end: 1, line_start: 399, line_end: 400 }: "\n"
Token { kind: Newline, char_start: 12867, char_end: 12868, byte_start: 12868, byte_end: 12869, column_start: 1, column_end: 1, line_start: 400, line_end: 401 }: "\n"
Token { kind: Hyphen, char_start: 12868, char_end: 12869, byte_start: 12869, byte_end: 12870, column_start: 1, column_end: 2, line_start: 401, line_end: 401 }: -
Token { kind: Space, char_start: 12869, char_end: 12870, byte_start: 12870, byte_end: 12871, column_start: 2, column_end: 3, line_start: 401, line_end: 401 }: " "
Token { kind: Text, char_start: 12870, char_end: 12873, byte_start: 12871, byte_end: 12874, column_start: 3, column_end: 6, line_start: 401, line_end: 401 }: Add
Token { kind: Space, char_start: 12873, char_end: 12874, byte_start: 12874, byte_end: 12875, column_start: 6, column_end: 7, line_start: 401, line_end: 401 }: " "
Token { kind: Bar, char_start: 12874, char_end: 12875, byte_start: 12875, byte_end: 12876, column_start: 7, column_end: 8, line_start: 401, line_end: 401 }: |
Token { kind: Text, char_start: 12875, char_end: 12894, byte_start: 12876, byte_end: 12895, column_start: 8, column_end: 27, line_start: 401, line_end: 401 }: g:FerretAckWordWord
Token { kind: Bar, char_start: 12894, char_end: 12895, byte_start: 12895, byte_end: 12896, column_start: 27, column_end: 28, line_start: 401, line_end: 401 }: |
Token { kind: Space, char_start: 12895, char_end: 12896, byte_start: 12896, byte_end: 12897, column_start: 28, column_end: 29, line_start: 401, line_end: 401 }: " "
Token { kind: Text, char_start: 12896, char_end: 12904, byte_start: 12897, byte_end: 12905, column_start: 29, column_end: 37, line_start: 401, line_end: 401 }: setting,
Token { kind: Space, char_start: 12904, char_end: 12905, byte_start: 12905, byte_end: 12906, column_start: 37, column_end: 38, line_start: 401, line_end: 401 }: " "
Token { kind: Text, char_start: 12905, char_end: 12907, byte_start: 12906, byte_end: 12908, column_start: 38, column_end: 40, line_start: 401, line_end: 401 }: to
Token { kind: Space, char_start: 12907, char_end: 12908, byte_start: 12908, byte_end: 12909, column_start: 40, column_end: 41, line_start: 401, line_end: 401 }: " "
Token { kind: Text, char_start: 12908, char_end: 12912, byte_start: 12909, byte_end: 12913, column_start: 41, column_end: 45, line_start: 401, line_end: 401 }: pass
Token { kind: Space, char_start: 12912, char_end: 12913, byte_start: 12913, byte_end: 12914, column_start: 45, column_end: 46, line_start: 401, line_end: 401 }: " "
Token { kind: Backtick, char_start: 12913, char_end: 12914, byte_start: 12914, byte_end: 12915, column_start: 46, column_end: 47, line_start: 401, line_end: 401 }: `
Token { kind: Hyphen, char_start: 12914, char_end: 12915, byte_start: 12915, byte_end: 12916, column_start: 47, column_end: 48, line_start: 401, line_end: 401 }: -
Token { kind: Text, char_start: 12915, char_end: 12916, byte_start: 12916, byte_end: 12917, column_start: 48, column_end: 49, line_start: 401, line_end: 401 }: w
Token { kind: Backtick, char_start: 12916, char_end: 12917, byte_start: 12917, byte_end: 12918, column_start: 49, column_end: 50, line_start: 401, line_end: 401 }: `
Token { kind: Space, char_start: 12917, char_end: 12918, byte_start: 12918, byte_end: 12919, column_start: 50, column_end: 51, line_start: 401, line_end: 401 }: " "
Token { kind: Text, char_start: 12918, char_end: 12920, byte_start: 12919, byte_end: 12921, column_start: 51, column_end: 53, line_start: 401, line_end: 401 }: to
Token { kind: Space, char_start: 12920, char_end: 12921, byte_start: 12921, byte_end: 12922, column_start: 53, column_end: 54, line_start: 401, line_end: 401 }: " "
Token { kind: Text, char_start: 12921, char_end: 12924, byte_start: 12922, byte_end: 12925, column_start: 54, column_end: 57, line_start: 401, line_end: 401 }: the
Token { kind: Space, char_start: 12924, char_end: 12925, byte_start: 12925, byte_end: 12926, column_start: 57, column_end: 58, line_start: 401, line_end: 401 }: " "
Token { kind: Text, char_start: 12925, char_end: 12935, byte_start: 12926, byte_end: 12936, column_start: 58, column_end: 68, line_start: 401, line_end: 401 }: underlying
Token { kind: Space, char_start: 12935, char_end: 12936, byte_start: 12936, byte_end: 12937, column_start: 68, column_end: 69, line_start: 401, line_end: 401 }: " "
Token { kind: Text, char_start: 12936, char_end: 12942, byte_start: 12937, byte_end: 12943, column_start: 69, column_end: 75, line_start: 401, line_end: 401 }: search
Token { kind: Newline, char_start: 12942, char_end: 12943, byte_start: 12943, byte_end: 12944, column_start: 75, column_end: 1, line_start: 401, line_end: 402 }: "\n"
Token { kind: Space, char_start: 12943, char_end: 12945, byte_start: 12944, byte_end: 12946, column_start: 1, column_end: 3, line_start: 402, line_end: 402 }: "  "
Token { kind: Text, char_start: 12945, char_end: 12949, byte_start: 12946, byte_end: 12950, column_start: 3, column_end: 7, line_start: 402, line_end: 402 }: tool
Token { kind: Space, char_start: 12949, char_end: 12950, byte_start: 12950, byte_end: 12951, column_start: 7, column_end: 8, line_start: 402, line_end: 402 }: " "
Token { kind: Text, char_start: 12950, char_end: 12954, byte_start: 12951, byte_end: 12955, column_start: 8, column_end: 12, line_start: 402, line_end: 402 }: when
Token { kind: Space, char_start: 12954, char_end: 12955, byte_start: 12955, byte_end: 12956, column_start: 12, column_end: 13, line_start: 402, line_end: 402 }: " "
Token { kind: Bar, char_start: 12955, char_end: 12956, byte_start: 12956, byte_end: 12957, column_start: 13, column_end: 14, line_start: 402, line_end: 402 }: |
Token { kind: BlockQuote, char_start: 12956, char_end: 12957, byte_start: 12957, byte_end: 12958, column_start: 14, column_end: 15, line_start: 402, line_end: 402 }: <
Token { kind: Text, char_start: 12957, char_end: 12961, byte_start: 12958, byte_end: 12962, column_start: 15, column_end: 19, line_start: 402, line_end: 402 }: Plug
Token { kind: BlockQuote, char_start: 12961, char_end: 12962, byte_start: 12962, byte_end: 12963, column_start: 19, column_end: 20, line_start: 402, line_end: 402 }: >
Token { kind: Lparen, char_start: 12962, char_end: 12963, byte_start: 12963, byte_end: 12964, column_start: 20, column_end: 21, line_start: 402, line_end: 402 }: (
Token { kind: Text, char_start: 12963, char_end: 12976, byte_start: 12964, byte_end: 12977, column_start: 21, column_end: 34, line_start: 402, line_end: 402 }: FerretAckWord
Token { kind: Rparen, char_start: 12976, char_end: 12977, byte_start: 12977, byte_end: 12978, column_start: 34, column_end: 35, line_start: 402, line_end: 402 }: )
Token { kind: Bar, char_start: 12977, char_end: 12978, byte_start: 12978, byte_end: 12979, column_start: 35, column_end: 36, line_start: 402, line_end: 402 }: |
Token { kind: Space, char_start: 12978, char_end: 12979, byte_start: 12979, byte_end: 12980, column_start: 36, column_end: 37, line_start: 402, line_end: 402 }: " "
Token { kind: Text, char_start: 12979, char_end: 12981, byte_start: 12980, byte_end: 12982, column_start: 37, column_end: 39, line_start: 402, line_end: 402 }: is
Token { kind: Space, char_start: 12981, char_end: 12982, byte_start: 12982, byte_end: 12983, column_start: 39, column_end: 40, line_start: 402, line_end: 402 }: " "
Token { kind: Text, char_start: 12982, char_end: 12989, byte_start: 12983, byte_end: 12990, column_start: 40, column_end: 47, line_start: 402, line_end: 402 }: pressed
Token { kind: Newline, char_start: 12989, char_end: 12990, byte_start: 12990, byte_end: 12991, column_start: 47, column_end: 1, line_start: 402, line_end: 403 }: "\n"
Token { kind: Space, char_start: 12990, char_end: 12992, byte_start: 12991, byte_end: 12993, column_start: 1, column_end: 3, line_start: 403, line_end: 403 }: "  "
Token { kind: Lparen, char_start: 12992, char_end: 12993, byte_start: 12993, byte_end: 12994, column_start: 3, column_end: 4, line_start: 403, line_end: 403 }: (
Token { kind: Text, char_start: 12993, char_end: 13036, byte_start: 12994, byte_end: 13037, column_start: 4, column_end: 47, line_start: 403, line_end: 403 }: https://github.com/wincent/ferret/issues/66
Token { kind: Rparen, char_start: 13036, char_end: 13037, byte_start: 13037, byte_end: 13038, column_start: 47, column_end: 48, line_start: 403, line_end: 403 }: )
Token { kind: Text, char_start: 13037, char_end: 13038, byte_start: 13038, byte_end: 13039, column_start: 48, column_end: 49, line_start: 403, line_end: 403 }: .
Token { kind: Newline, char_start: 13038, char_end: 13039, byte_start: 13039, byte_end: 13040, column_start: 49, column_end: 1, line_start: 403, line_end: 404 }: "\n"
Token { kind: Hyphen, char_start: 13039, char_end: 13040, byte_start: 13040, byte_end: 13041, column_start: 1, column_end: 2, line_start: 404, line_end: 404 }: -
Token { kind: Space, char_start: 13040, char_end: 13041, byte_start: 13041, byte_end: 13042, column_start: 2, column_end: 3, line_start: 404, line_end: 404 }: " "
Token { kind: Text, char_start: 13041, char_end: 13044, byte_start: 13042, byte_end: 13045, column_start: 3, column_end: 6, line_start: 404, line_end: 404 }: Use
Token { kind: Space, char_start: 13044, char_end: 13045, byte_start: 13045, byte_end: 13046, column_start: 6, column_end: 7, line_start: 404, line_end: 404 }: " "
Token { kind: Backtick, char_start: 13045, char_end: 13046, byte_start: 13046, byte_end: 13047, column_start: 7, column_end: 8, line_start: 404, line_end: 404 }: `
Token { kind: Text, char_start: 13046, char_end: 13053, byte_start: 13047, byte_end: 13054, column_start: 8, column_end: 15, line_start: 404, line_end: 404 }: :normal
Token { kind: Bang, char_start: 13053, char_end: 13054, byte_start: 13054, byte_end: 13055, column_start: 15, column_end: 16, line_start: 404, line_end: 404 }: !
Token { kind: Backtick, char_start: 13054, char_end: 13055, byte_start: 13055, byte_end: 13056, column_start: 16, column_end: 17, line_start: 404, line_end: 404 }: `
Token { kind: Space, char_start: 13055, char_end: 13056, byte_start: 13056, byte_end: 13057, column_start: 17, column_end: 18, line_start: 404, line_end: 404 }: " "
Token { kind: Text, char_start: 13056, char_end: 13063, byte_start: 13057, byte_end: 13064, column_start: 18, column_end: 25, line_start: 404, line_end: 404 }: instead
Token { kind: Space, char_start: 13063, char_end: 13064, byte_start: 13064, byte_end: 13065, column_start: 25, column_end: 26, line_start: 404, line_end: 404 }: " "
Token { kind: Text, char_start: 13064, char_end: 13066, byte_start: 13065, byte_end: 13067, column_start: 26, column_end: 28, line_start: 404, line_end: 404 }: of
Token { kind: Space, char_start: 13066, char_end: 13067, byte_start: 13067, byte_end: 13068, column_start: 28, column_end: 29, line_start: 404, line_end: 404 }: " "
Token { kind: Bar, char_start: 13067, char_end: 13068, byte_start: 13068, byte_end: 13069, column_start: 29, column_end: 30, line_start: 404, line_end: 404 }: |
Token { kind: Text, char_start: 13068, char_end: 13075, byte_start: 13069, byte_end: 13076, column_start: 30, column_end: 37, line_start: 404, line_end: 404 }: :normal
Token { kind: Bar, char_start: 13075, char_end: 13076, byte_start: 13076, byte_end: 13077, column_start: 37, column_end: 38, line_start: 404, line_end: 404 }: |
Token { kind: Space, char_start: 13076, char_end: 13077, byte_start: 13077, byte_end: 13078, column_start: 38, column_end: 39, line_start: 404, line_end: 404 }: " "
Token { kind: Text, char_start: 13077, char_end: 13079, byte_start: 13078, byte_end: 13080, column_start: 39, column_end: 41, line_start: 404, line_end: 404 }: to
Token { kind: Space, char_start: 13079, char_end: 13080, byte_start: 13080, byte_end: 13081, column_start: 41, column_end: 42, line_start: 404, line_end: 404 }: " "
Token { kind: Text, char_start: 13080, char_end: 13085, byte_start: 13081, byte_end: 13086, column_start: 42, column_end: 47, line_start: 404, line_end: 404 }: avoid
Token { kind: Space, char_start: 13085, char_end: 13086, byte_start: 13086, byte_end: 13087, column_start: 47, column_end: 48, line_start: 404, line_end: 404 }: " "
Token { kind: Text, char_start: 13086, char_end: 13093, byte_start: 13087, byte_end: 13094, column_start: 48, column_end: 55, line_start: 404, line_end: 404 }: running
Token { kind: Space, char_start: 13093, char_end: 13094, byte_start: 13094, byte_end: 13095, column_start: 55, column_end: 56, line_start: 404, line_end: 404 }: " "
Token { kind: Text, char_start: 13094, char_end: 13100, byte_start: 13095, byte_end: 13101, column_start: 56, column_end: 62, line_start: 404, line_end: 404 }: custom
Token { kind: Space, char_start: 13100, char_end: 13101, byte_start: 13101, byte_end: 13102, column_start: 62, column_end: 63, line_start: 404, line_end: 404 }: " "
Token { kind: Text, char_start: 13101, char_end: 13109, byte_start: 13102, byte_end: 13110, column_start: 63, column_end: 71, line_start: 404, line_end: 404 }: mappings
Token { kind: Newline, char_start: 13109, char_end: 13110, byte_start: 13110, byte_end: 13111, column_start: 71, column_end: 1, line_start: 404, line_end: 405 }: "\n"
Token { kind: Space, char_start: 13110, char_end: 13112, byte_start: 13111, byte_end: 13113, column_start: 1, column_end: 3, line_start: 405, line_end: 405 }: "  "
Token { kind: Lparen, char_start: 13112, char_end: 13113, byte_start: 13113, byte_end: 13114, column_start: 3, column_end: 4, line_start: 405, line_end: 405 }: (
Token { kind: Text, char_start: 13113, char_end: 13118, byte_start: 13114, byte_end: 13119, column_start: 4, column_end: 9, line_start: 405, line_end: 405 }: patch
Token { kind: Space, char_start: 13118, char_end: 13119, byte_start: 13119, byte_end: 13120, column_start: 9, column_end: 10, line_start: 405, line_end: 405 }: " "
Token { kind: Text, char_start: 13119, char_end: 13123, byte_start: 13120, byte_end: 13124, column_start: 10, column_end: 14, line_start: 405, line_end: 405 }: from
Token { kind: Space, char_start: 13123, char_end: 13124, byte_start: 13124, byte_end: 13125, column_start: 14, column_end: 15, line_start: 405, line_end: 405 }: " "
Token { kind: Text, char_start: 13124, char_end: 13128, byte_start: 13125, byte_end: 13129, column_start: 15, column_end: 19, line_start: 405, line_end: 405 }: Yoni
Token { kind: Space, char_start: 13128, char_end: 13129, byte_start: 13129, byte_end: 13130, column_start: 19, column_end: 20, line_start: 405, line_end: 405 }: " "
Token { kind: Text, char_start: 13129, char_end: 13135, byte_start: 13130, byte_end: 13136, column_start: 20, column_end: 26, line_start: 405, line_end: 405 }: Weill,
Token { kind: Space, char_start: 13135, char_end: 13136, byte_start: 13136, byte_end: 13137, column_start: 26, column_end: 27, line_start: 405, line_end: 405 }: " "
Token { kind: Text, char_start: 13136, char_end: 13177, byte_start: 13137, byte_end: 13178, column_start: 27, column_end: 68, line_start: 405, line_end: 405 }: https://github.com/wincent/ferret/pull/67
Token { kind: Rparen, char_start: 13177, char_end: 13178, byte_start: 13178, byte_end: 13179, column_start: 68, column_end: 69, line_start: 405, line_end: 405 }: )
Token { kind: Text, char_start: 13178, char_end: 13179, byte_start: 13179, byte_end: 13180, column_start: 69, column_end: 70, line_start: 405, line_end: 405 }: .
Token { kind: Newline, char_start: 13179, char_end: 13180, byte_start: 13180, byte_end: 13181, column_start: 70, column_end: 1, line_start: 405, line_end: 406 }: "\n"
Token { kind: Hyphen, char_start: 13180, char_end: 13181, byte_start: 13181, byte_end: 13182, column_start: 1, column_end: 2, line_start: 406, line_end: 406 }: -
Token { kind: Space, char_start: 13181, char_end: 13182, byte_start: 13182, byte_end: 13183, column_start: 2, column_end: 3, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13182, char_end: 13188, byte_start: 13183, byte_end: 13189, column_start: 3, column_end: 9, line_start: 406, line_end: 406 }: Append
Token { kind: Space, char_start: 13188, char_end: 13189, byte_start: 13189, byte_end: 13190, column_start: 9, column_end: 10, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13189, char_end: 13190, byte_start: 13190, byte_end: 13191, column_start: 10, column_end: 11, line_start: 406, line_end: 406 }: a
Token { kind: Space, char_start: 13190, char_end: 13191, byte_start: 13191, byte_end: 13192, column_start: 11, column_end: 12, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13191, char_end: 13199, byte_start: 13192, byte_end: 13200, column_start: 12, column_end: 20, line_start: 406, line_end: 406 }: trailing
Token { kind: Space, char_start: 13199, char_end: 13200, byte_start: 13200, byte_end: 13201, column_start: 20, column_end: 21, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13200, char_end: 13205, byte_start: 13201, byte_end: 13206, column_start: 21, column_end: 26, line_start: 406, line_end: 406 }: slash
Token { kind: Space, char_start: 13205, char_end: 13206, byte_start: 13206, byte_end: 13207, column_start: 26, column_end: 27, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13206, char_end: 13210, byte_start: 13207, byte_end: 13211, column_start: 27, column_end: 31, line_start: 406, line_end: 406 }: when
Token { kind: Space, char_start: 13210, char_end: 13211, byte_start: 13211, byte_end: 13212, column_start: 31, column_end: 32, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13211, char_end: 13225, byte_start: 13212, byte_end: 13226, column_start: 32, column_end: 46, line_start: 406, line_end: 406 }: autocompleting
Token { kind: Space, char_start: 13225, char_end: 13226, byte_start: 13226, byte_end: 13227, column_start: 46, column_end: 47, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13226, char_end: 13227, byte_start: 13227, byte_end: 13228, column_start: 47, column_end: 48, line_start: 406, line_end: 406 }: a
Token { kind: Space, char_start: 13227, char_end: 13228, byte_start: 13228, byte_end: 13229, column_start: 48, column_end: 49, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13228, char_end: 13237, byte_start: 13229, byte_end: 13238, column_start: 49, column_end: 58, line_start: 406, line_end: 406 }: directory
Token { kind: Space, char_start: 13237, char_end: 13238, byte_start: 13238, byte_end: 13239, column_start: 58, column_end: 59, line_start: 406, line_end: 406 }: " "
Token { kind: Text, char_start: 13238, char_end: 13242, byte_start: 13239, byte_end: 13243, column_start: 59, column_end: 63, line_start: 406, line_end: 406 }: name
Token { kind: Newline, char_start: 13242, char_end: 13243, byte_start: 13243, byte_end: 13244, column_start: 63, column_end: 1, line_start: 406, line_end: 407 }: "\n"
Token { kind: Space, char_start: 13243, char_end: 13245, byte_start: 13244, byte_end: 13246, column_start: 1, column_end: 3, line_start: 407, line_end: 407 }: "  "
Token { kind: Lparen, char_start: 13245, char_end: 13246, byte_start: 13246, byte_end: 13247, column_start: 3, column_end: 4, line_start: 407, line_end: 407 }: (
Token { kind: Text, char_start: 13246, char_end: 13289, byte_start: 13247, byte_end: 13290, column_start: 4, column_end: 47, line_start: 407, line_end: 407 }: https://github.com/wincent/ferret/issues/69
Token { kind: Rparen, char_start: 13289, char_end: 13290, byte_start: 13290, byte_end: 13291, column_start: 47, column_end: 48, line_start: 407, line_end: 407 }: )
Token { kind: Text, char_start: 13290, char_end: 13291, byte_start: 13291, byte_end: 13292, column_start: 48, column_end: 49, line_start: 407, line_end: 407 }: .
Token { kind: Newline, char_start: 13291, char_end: 13292, byte_start: 13292, byte_end: 13293, column_start: 49, column_end: 1, line_start: 407, line_end: 408 }: "\n"
Token { kind: Hyphen, char_start: 13292, char_end: 13293, byte_start: 13293, byte_end: 13294, column_start: 1, column_end: 2, line_start: 408, line_end: 408 }: -
Token { kind: Space, char_start: 13293, char_end: 13294, byte_start: 13294, byte_end: 13295, column_start: 2, column_end: 3, line_start: 408, line_end: 408 }: " "
Token { kind: Text, char_start: 13294, char_end: 13299, byte_start: 13295, byte_end: 13300, column_start: 3, column_end: 8, line_start: 408, line_end: 408 }: Fixed
Token { kind: Space, char_start: 13299, char_end: 13300, byte_start: 13300, byte_end: 13301, column_start: 8, column_end: 9, line_start: 408, line_end: 408 }: " "
Token { kind: Text, char_start: 13300, char_end: 13307, byte_start: 13301, byte_end: 13308, column_start: 9, column_end: 16, line_start: 408, line_end: 408 }: failure
Token { kind: Space, char_start: 13307, char_end: 13308, byte_start: 13308, byte_end: 13309, column_start: 16, column_end: 17, line_start: 408, line_end: 408 }: " "
Token { kind: Text, char_start: 13308, char_end: 13310, byte_start: 13309, byte_end: 13311, column_start: 17, column_end: 19, line_start: 408, line_end: 408 }: to
Token { kind: Space, char_start: 13310, char_end: 13311, byte_start: 13311, byte_end: 13312, column_start: 19, column_end: 20, line_start: 408, line_end: 408 }: " "
Token { kind: Text, char_start: 13311, char_end: 13317, byte_start: 13312, byte_end: 13318, column_start: 20, column_end: 26, line_start: 408, line_end: 408 }: detect
Token { kind: Space, char_start: 13317, char_end: 13318, byte_start: 13318, byte_end: 13319, column_start: 26, column_end: 27, line_start: 408, line_end: 408 }: " "
Token { kind: Text, char_start: 13318, char_end: 13321, byte_start: 13319, byte_end: 13322, column_start: 27, column_end: 30, line_start: 408, line_end: 408 }: pre
Token { kind: Hyphen, char_start: 13321, char_end: 13322, byte_start: 13322, byte_end: 13323, column_start: 30, column_end: 31, line_start: 408, line_end: 408 }: -
Token { kind: Text, char_start: 13322, char_end: 13330, byte_start: 13323, byte_end: 13331, column_start: 31, column_end: 39, line_start: 408, line_end: 408 }: existing
Token { kind: Space, char_start: 13330, char_end: 13331, byte_start: 13331, byte_end: 13332, column_start: 39, column_end: 40, line_start: 408, line_end: 408 }: " "
Token { kind: Text, char_start: 13331, char_end: 13338, byte_start: 13332, byte_end: 13339, column_start: 40, column_end: 47, line_start: 408, line_end: 408 }: mapping
Token { kind: Space, char_start: 13338, char_end: 13339, byte_start: 13339, byte_end: 13340, column_start: 47, column_end: 48, line_start: 408, line_end: 408 }: " "
Token { kind: Text, char_start: 13339, char_end: 13341, byte_start: 13340, byte_end: 13342, column_start: 48, column_end: 50, line_start: 408, line_end: 408 }: to
Token { kind: Space, char_start: 13341, char_end: 13342, byte_start: 13342, byte_end: 13343, column_start: 50, column_end: 51, line_start: 408, line_end: 408 }: " "
Token { kind: Bar, char_start: 13342, char_end: 13343, byte_start: 13343, byte_end: 13344, column_start: 51, column_end: 52, line_start: 408, line_end: 408 }: |
Token { kind: BlockQuote, char_start: 13343, char_end: 13344, byte_start: 13344, byte_end: 13345, column_start: 52, column_end: 53, line_start: 408, line_end: 408 }: <
Token { kind: Text, char_start: 13344, char_end: 13348, byte_start: 13345, byte_end: 13349, column_start: 53, column_end: 57, line_start: 408, line_end: 408 }: Plug
Token { kind: BlockQuote, char_start: 13348, char_end: 13349, byte_start: 13349, byte_end: 13350, column_start: 57, column_end: 58, line_start: 408, line_end: 408 }: >
Token { kind: Lparen, char_start: 13349, char_end: 13350, byte_start: 13350, byte_end: 13351, column_start: 58, column_end: 59, line_start: 408, line_end: 408 }: (
Token { kind: Text, char_start: 13350, char_end: 13360, byte_start: 13351, byte_end: 13361, column_start: 59, column_end: 69, line_start: 408, line_end: 408 }: FerretLack
Token { kind: Rparen, char_start: 13360, char_end: 13361, byte_start: 13361, byte_end: 13362, column_start: 69, column_end: 70, line_start: 408, line_end: 408 }: )
Token { kind: Bar, char_start: 13361, char_end: 13362, byte_start: 13362, byte_end: 13363, column_start: 70, column_end: 71, line_start: 408, line_end: 408 }: |
Token { kind: Text, char_start: 13362, char_end: 13363, byte_start: 13363, byte_end: 13364, column_start: 71, column_end: 72, line_start: 408, line_end: 408 }: .
Token { kind: Newline, char_start: 13363, char_end: 13364, byte_start: 13364, byte_end: 13365, column_start: 72, column_end: 1, line_start: 408, line_end: 409 }: "\n"
Token { kind: Hyphen, char_start: 13364, char_end: 13365, byte_start: 13365, byte_end: 13366, column_start: 1, column_end: 2, line_start: 409, line_end: 409 }: -
Token { kind: Space, char_start: 13365, char_end: 13366, byte_start: 13366, byte_end: 13367, column_start: 2, column_end: 3, line_start: 409, line_end: 409 }: " "
Token { kind: Text, char_start: 13366, char_end: 13372, byte_start: 13367, byte_end: 13373, column_start: 3, column_end: 9, line_start: 409, line_end: 409 }: Worked
Token { kind: Space, char_start: 13372, char_end: 13373, byte_start: 13373, byte_end: 13374, column_start: 9, column_end: 10, line_start: 409, line_end: 409 }: " "
Token { kind: Text, char_start: 13373, char_end: 13379, byte_start: 13374, byte_end: 13380, column_start: 10, column_end: 16, line_start: 409, line_end: 409 }: around
Token { kind: Space, char_start: 13379, char_end: 13380, byte_start: 13380, byte_end: 13381, column_start: 16, column_end: 17, line_start: 409, line_end: 409 }: " "
Token { kind: Text, char_start: 13380, char_end: 13388, byte_start: 13381, byte_end: 13389, column_start: 17, column_end: 25, line_start: 409, line_end: 409 }: breakage
Token { kind: Space, char_start: 13388, char_end: 13389, byte_start: 13389, byte_end: 13390, column_start: 25, column_end: 26, line_start: 409, line_end: 409 }: " "
Token { kind: Text, char_start: 13389, char_end: 13395, byte_start: 13390, byte_end: 13396, column_start: 26, column_end: 32, line_start: 409, line_end: 409 }: caused
Token { kind: Space, char_start: 13395, char_end: 13396, byte_start: 13396, byte_end: 13397, column_start: 32, column_end: 33, line_start: 409, line_end: 409 }: " "
Token { kind: Text, char_start: 13396, char_end: 13398, byte_start: 13397, byte_end: 13399, column_start: 33, column_end: 35, line_start: 409, line_end: 409 }: by
Token { kind: Space, char_start: 13398, char_end: 13399, byte_start: 13399, byte_end: 13400, column_start: 35, column_end: 36, line_start: 409, line_end: 409 }: " "
Token { kind: Backtick, char_start: 13399, char_end: 13400, byte_start: 13400, byte_end: 13401, column_start: 36, column_end: 37, line_start: 409, line_end: 409 }: `
Token { kind: Text, char_start: 13400, char_end: 13402, byte_start: 13401, byte_end: 13403, column_start: 37, column_end: 39, line_start: 409, line_end: 409 }: rg
Token { kind: Backtick, char_start: 13402, char_end: 13403, byte_start: 13403, byte_end: 13404, column_start: 39, column_end: 40, line_start: 409, line_end: 409 }: `
Token { kind: Space, char_start: 13403, char_end: 13404, byte_start: 13404, byte_end: 13405, column_start: 40, column_end: 41, line_start: 409, line_end: 409 }: " "
Token { kind: Text, char_start: 13404, char_end: 13411, byte_start: 13405, byte_end: 13412, column_start: 41, column_end: 48, line_start: 409, line_end: 409 }: v13.0.0
Token { kind: Newline, char_start: 13411, char_end: 13412, byte_start: 13412, byte_end: 13413, column_start: 48, column_end: 1, line_start: 409, line_end: 410 }: "\n"
Token { kind: Space, char_start: 13412, char_end: 13414, byte_start: 13413, byte_end: 13415, column_start: 1, column_end: 3, line_start: 410, line_end: 410 }: "  "
Token { kind: Lparen, char_start: 13414, char_end: 13415, byte_start: 13415, byte_end: 13416, column_start: 3, column_end: 4, line_start: 410, line_end: 410 }: (
Token { kind: Text, char_start: 13415, char_end: 13458, byte_start: 13416, byte_end: 13459, column_start: 4, column_end: 47, line_start: 410, line_end: 410 }: https://github.com/wincent/ferret/issues/78
Token { kind: Rparen, char_start: 13458, char_end: 13459, byte_start: 13459, byte_end: 13460, column_start: 47, column_end: 48, line_start: 410, line_end: 410 }: )
Token { kind: Text, char_start: 13459, char_end: 13460, byte_start: 13460, byte_end: 13461, column_start: 48, column_end: 49, line_start: 410, line_end: 410 }: .
Token { kind: Newline, char_start: 13460, char_end: 13461, byte_start: 13461, byte_end: 13462, column_start: 49, column_end: 1, line_start: 410, line_end: 411 }: "\n"
Token { kind: Newline, char_start: 13461, char_end: 13462, byte_start: 13462, byte_end: 13463, column_start: 1, column_end: 1, line_start: 411, line_end: 412 }: "\n"
Token { kind: Heading(Heading2), char_start: 13462, char_end: 13464, byte_start: 13463, byte_end: 13465, column_start: 1, column_end: 3, line_start: 412, line_end: 412 }: ##
Token { kind: Space, char_start: 13464, char_end: 13465, byte_start: 13465, byte_end: 13466, column_start: 3, column_end: 4, line_start: 412, line_end: 412 }: " "
Token { kind: Text, char_start: 13465, char_end: 13468, byte_start: 13466, byte_end: 13469, column_start: 4, column_end: 7, line_start: 412, line_end: 412 }: 5.0
Token { kind: Space, char_start: 13468, char_end: 13469, byte_start: 13469, byte_end: 13470, column_start: 7, column_end: 8, line_start: 412, line_end: 412 }: " "
Token { kind: Lparen, char_start: 13469, char_end: 13470, byte_start: 13470, byte_end: 13471, column_start: 8, column_end: 9, line_start: 412, line_end: 412 }: (
Token { kind: Text, char_start: 13470, char_end: 13471, byte_start: 13471, byte_end: 13472, column_start: 9, column_end: 10, line_start: 412, line_end: 412 }: 8
Token { kind: Space, char_start: 13471, char_end: 13472, byte_start: 13472, byte_end: 13473, column_start: 10, column_end: 11, line_start: 412, line_end: 412 }: " "
Token { kind: Text, char_start: 13472, char_end: 13476, byte_start: 13473, byte_end: 13477, column_start: 11, column_end: 15, line_start: 412, line_end: 412 }: June
Token { kind: Space, char_start: 13476, char_end: 13477, byte_start: 13477, byte_end: 13478, column_start: 15, column_end: 16, line_start: 412, line_end: 412 }: " "
Token { kind: Text, char_start: 13477, char_end: 13481, byte_start: 13478, byte_end: 13482, column_start: 16, column_end: 20, line_start: 412, line_end: 412 }: 2019
Token { kind: Rparen, char_start: 13481, char_end: 13482, byte_start: 13482, byte_end: 13483, column_start: 20, column_end: 21, line_start: 412, line_end: 412 }: )
Token { kind: Newline, char_start: 13482, char_end: 13483, byte_start: 13483, byte_end: 13484, column_start: 21, column_end: 1, line_start: 412, line_end: 413 }: "\n"
Token { kind: Newline, char_start: 13483, char_end: 13484, byte_start: 13484, byte_end: 13485, column_start: 1, column_end: 1, line_start: 413, line_end: 414 }: "\n"
Token { kind: Hyphen, char_start: 13484, char_end: 13485, byte_start: 13485, byte_end: 13486, column_start: 1, column_end: 2, line_start: 414, line_end: 414 }: -
Token { kind: Space, char_start: 13485, char_end: 13486, byte_start: 13486, byte_end: 13487, column_start: 2, column_end: 3, line_start: 414, line_end: 414 }: " "
Token { kind: Text, char_start: 13486, char_end: 13489, byte_start: 13487, byte_end: 13490, column_start: 3, column_end: 6, line_start: 414, line_end: 414 }: The
Token { kind: Space, char_start: 13489, char_end: 13490, byte_start: 13490, byte_end: 13491, column_start: 6, column_end: 7, line_start: 414, line_end: 414 }: " "
Token { kind: Bar, char_start: 13490, char_end: 13491, byte_start: 13491, byte_end: 13492, column_start: 7, column_end: 8, line_start: 414, line_end: 414 }: |
Token { kind: BlockQuote, char_start: 13491, char_end: 13492, byte_start: 13492, byte_end: 13493, column_start: 8, column_end: 9, line_start: 414, line_end: 414 }: <
Token { kind: Text, char_start: 13492, char_end: 13496, byte_start: 13493, byte_end: 13497, column_start: 9, column_end: 13, line_start: 414, line_end: 414 }: Plug
Token { kind: BlockQuote, char_start: 13496, char_end: 13497, byte_start: 13497, byte_end: 13498, column_start: 13, column_end: 14, line_start: 414, line_end: 414 }: >
Token { kind: Lparen, char_start: 13497, char_end: 13498, byte_start: 13498, byte_end: 13499, column_start: 14, column_end: 15, line_start: 414, line_end: 414 }: (
Token { kind: Text, char_start: 13498, char_end: 13508, byte_start: 13499, byte_end: 13509, column_start: 15, column_end: 25, line_start: 414, line_end: 414 }: FerretAcks
Token { kind: Rparen, char_start: 13508, char_end: 13509, byte_start: 13509, byte_end: 13510, column_start: 25, column_end: 26, line_start: 414, line_end: 414 }: )
Token { kind: Bar, char_start: 13509, char_end: 13510, byte_start: 13510, byte_end: 13511, column_start: 26, column_end: 27, line_start: 414, line_end: 414 }: |
Token { kind: Space, char_start: 13510, char_end: 13511, byte_start: 13511, byte_end: 13512, column_start: 27, column_end: 28, line_start: 414, line_end: 414 }: " "
Token { kind: Text, char_start: 13511, char_end: 13518, byte_start: 13512, byte_end: 13519, column_start: 28, column_end: 35, line_start: 414, line_end: 414 }: mapping
Token { kind: Space, char_start: 13518, char_end: 13519, byte_start: 13519, byte_end: 13520, column_start: 35, column_end: 36, line_start: 414, line_end: 414 }: " "
Token { kind: Text, char_start: 13519, char_end: 13522, byte_start: 13520, byte_end: 13523, column_start: 36, column_end: 39, line_start: 414, line_end: 414 }: now
Token { kind: Space, char_start: 13522, char_end: 13523, byte_start: 13523, byte_end: 13524, column_start: 39, column_end: 40, line_start: 414, line_end: 414 }: " "
Token { kind: Text, char_start: 13523, char_end: 13527, byte_start: 13524, byte_end: 13528, column_start: 40, column_end: 44, line_start: 414, line_end: 414 }: uses
Token { kind: Space, char_start: 13527, char_end: 13528, byte_start: 13528, byte_end: 13529, column_start: 44, column_end: 45, line_start: 414, line_end: 414 }: " "
Token { kind: Bar, char_start: 13528, char_end: 13529, byte_start: 13529, byte_end: 13530, column_start: 45, column_end: 46, line_start: 414, line_end: 414 }: |
Token { kind: Text, char_start: 13529, char_end: 13532, byte_start: 13530, byte_end: 13533, column_start: 46, column_end: 49, line_start: 414, line_end: 414 }: /\v
Token { kind: Bar, char_start: 13532, char_end: 13533, byte_start: 13533, byte_end: 13534, column_start: 49, column_end: 50, line_start: 414, line_end: 414 }: |
Token { kind: Space, char_start: 13533, char_end: 13534, byte_start: 13534, byte_end: 13535, column_start: 50, column_end: 51, line_start: 414, line_end: 414 }: " "
Token { kind: Text, char_start: 13534, char_end: 13539, byte_start: 13535, byte_end: 13540, column_start: 51, column_end: 56, line_start: 414, line_end: 414 }: "very
Token { kind: Space, char_start: 13539, char_end: 13540, byte_start: 13540, byte_end: 13541, column_start: 56, column_end: 57, line_start: 414, line_end: 414 }: " "
Token { kind: Text, char_start: 13540, char_end: 13546, byte_start: 13541, byte_end: 13547, column_start: 57, column_end: 63, line_start: 414, line_end: 414 }: magic"
Token { kind: Space, char_start: 13546, char_end: 13547, byte_start: 13547, byte_end: 13548, column_start: 63, column_end: 64, line_start: 414, line_end: 414 }: " "
Token { kind: Text, char_start: 13547, char_end: 13551, byte_start: 13548, byte_end: 13552, column_start: 64, column_end: 68, line_start: 414, line_end: 414 }: mode
Token { kind: Space, char_start: 13551, char_end: 13552, byte_start: 13552, byte_end: 13553, column_start: 68, column_end: 69, line_start: 414, line_end: 414 }: " "
Token { kind: Text, char_start: 13552, char_end: 13554, byte_start: 13553, byte_end: 13555, column_start: 69, column_end: 71, line_start: 414, line_end: 414 }: by
Token { kind: Newline, char_start: 13554, char_end: 13555, byte_start: 13555, byte_end: 13556, column_start: 71, column_end: 1, line_start: 414, line_end: 415 }: "\n"
Token { kind: Space, char_start: 13555, char_end: 13557, byte_start: 13556, byte_end: 13558, column_start: 1, column_end: 3, line_start: 415, line_end: 415 }: "  "
Token { kind: Text, char_start: 13557, char_end: 13565, byte_start: 13558, byte_end: 13566, column_start: 3, column_end: 11, line_start: 415, line_end: 415 }: default.
Token { kind: Space, char_start: 13565, char_end: 13566, byte_start: 13566, byte_end: 13567, column_start: 11, column_end: 12, line_start: 415, line_end: 415 }: " "
Token { kind: Text, char_start: 13566, char_end: 13570, byte_start: 13567, byte_end: 13571, column_start: 12, column_end: 16, line_start: 415, line_end: 415 }: This
Token { kind: Space, char_start: 13570, char_end: 13571, byte_start: 13571, byte_end: 13572, column_start: 16, column_end: 17, line_start: 415, line_end: 415 }: " "
Token { kind: Text, char_start: 13571, char_end: 13578, byte_start: 13572, byte_end: 13579, column_start: 17, column_end: 24, line_start: 415, line_end: 415 }: default
Token { kind: Space, char_start: 13578, char_end: 13579, byte_start: 13579, byte_end: 13580, column_start: 24, column_end: 25, line_start: 415, line_end: 415 }: " "
Token { kind: Text, char_start: 13579, char_end: 13582, byte_start: 13580, byte_end: 13583, column_start: 25, column_end: 28, line_start: 415, line_end: 415 }: can
Token { kind: Space, char_start: 13582, char_end: 13583, byte_start: 13583, byte_end: 13584, column_start: 28, column_end: 29, line_start: 415, line_end: 415 }: " "
Token { kind: Text, char_start: 13583, char_end: 13585, byte_start: 13584, byte_end: 13586, column_start: 29, column_end: 31, line_start: 415, line_end: 415 }: be
Token { kind: Space, char_start: 13585, char_end: 13586, byte_start: 13586, byte_end: 13587, column_start: 31, column_end: 32, line_start: 415, line_end: 415 }: " "
Token { kind: Text, char_start: 13586, char_end: 13593, byte_start: 13587, byte_end: 13594, column_start: 32, column_end: 39, line_start: 415, line_end: 415 }: changed
Token { kind: Space, char_start: 13593, char_end: 13594, byte_start: 13594, byte_end: 13595, column_start: 39, column_end: 40, line_start: 415, line_end: 415 }: " "
Token { kind: Text, char_start: 13594, char_end: 13599, byte_start: 13595, byte_end: 13600, column_start: 40, column_end: 45, line_start: 415, line_end: 415 }: using
Token { kind: Space, char_start: 13599, char_end: 13600, byte_start: 13600, byte_end: 13601, column_start: 45, column_end: 46, line_start: 415, line_end: 415 }: " "
Token { kind: Text, char_start: 13600, char_end: 13603, byte_start: 13601, byte_end: 13604, column_start: 46, column_end: 49, line_start: 415, line_end: 415 }: the
Token { kind: Space, char_start: 13603, char_end: 13604, byte_start: 13604, byte_end: 13605, column_start: 49, column_end: 50, line_start: 415, line_end: 415 }: " "
Token { kind: Bar, char_start: 13604, char_end: 13605, byte_start: 13605, byte_end: 13606, column_start: 50, column_end: 51, line_start: 415, line_end: 415 }: |
Token { kind: Text, char_start: 13605, char_end: 13622, byte_start: 13606, byte_end: 13623, column_start: 51, column_end: 68, line_start: 415, line_end: 415 }: g:FerretVeryMagic
Token { kind: Bar, char_start: 13622, char_end: 13623, byte_start: 13623, byte_end: 13624, column_start: 68, column_end: 69, line_start: 415, line_end: 415 }: |
Token { kind: Space, char_start: 13623, char_end: 13624, byte_start: 13624, byte_end: 13625, column_start: 69, column_end: 70, line_start: 415, line_end: 415 }: " "
Token { kind: Text, char_start: 13624, char_end: 13631, byte_start: 13625, byte_end: 13632, column_start: 70, column_end: 77, line_start: 415, line_end: 415 }: option.
Token { kind: Newline, char_start: 13631, char_end: 13632, byte_start: 13632, byte_end: 13633, column_start: 77, column_end: 1, line_start: 415, line_end: 416 }: "\n"
Token { kind: Hyphen, char_start: 13632, char_end: 13633, byte_start: 13633, byte_end: 13634, column_start: 1, column_end: 2, line_start: 416, line_end: 416 }: -
Token { kind: Space, char_start: 13633, char_end: 13634, byte_start: 13634, byte_end: 13635, column_start: 2, column_end: 3, line_start: 416, line_end: 416 }: " "
Token { kind: Bar, char_start: 13634, char_end: 13635, byte_start: 13635, byte_end: 13636, column_start: 3, column_end: 4, line_start: 416, line_end: 416 }: |
Token { kind: Text, char_start: 13635, char_end: 13640, byte_start: 13636, byte_end: 13641, column_start: 4, column_end: 9, line_start: 416, line_end: 416 }: :Acks
Token { kind: Bar, char_start: 13640, char_end: 13641, byte_start: 13641, byte_end: 13642, column_start: 9, column_end: 10, line_start: 416, line_end: 416 }: |
Token { kind: Space, char_start: 13641, char_end: 13642, byte_start: 13642, byte_end: 13643, column_start: 10, column_end: 11, line_start: 416, line_end: 416 }: " "
Token { kind: Text, char_start: 13642, char_end: 13645, byte_start: 13643, byte_end: 13646, column_start: 11, column_end: 14, line_start: 416, line_end: 416 }: now
Token { kind: Space, char_start: 13645, char_end: 13646, byte_start: 13646, byte_end: 13647, column_start: 14, column_end: 15, line_start: 416, line_end: 416 }: " "
Token { kind: Text, char_start: 13646, char_end: 13660, byte_start: 13647, byte_end: 13661, column_start: 15, column_end: 29, line_start: 416, line_end: 416 }: preferentially
Token { kind: Space, char_start: 13660, char_end: 13661, byte_start: 13661, byte_end: 13662, column_start: 29, column_end: 30, line_start: 416, line_end: 416 }: " "
Token { kind: Text, char_start: 13661, char_end: 13665, byte_start: 13662, byte_end: 13666, column_start: 30, column_end: 34, line_start: 416, line_end: 416 }: uses
Token { kind: Space, char_start: 13665, char_end: 13666, byte_start: 13666, byte_end: 13667, column_start: 34, column_end: 35, line_start: 416, line_end: 416 }: " "
Token { kind: Bar, char_start: 13666, char_end: 13667, byte_start: 13667, byte_end: 13668, column_start: 35, column_end: 36, line_start: 416, line_end: 416 }: |
Token { kind: Text, char_start: 13667, char_end: 13671, byte_start: 13668, byte_end: 13672, column_start: 36, column_end: 40, line_start: 416, line_end: 416 }: :cdo
Token { kind: Bar, char_start: 13671, char_end: 13672, byte_start: 13672, byte_end: 13673, column_start: 40, column_end: 41, line_start: 416, line_end: 416 }: |
Token { kind: Space, char_start: 13672, char_end: 13673, byte_start: 13673, byte_end: 13674, column_start: 41, column_end: 42, line_start: 416, line_end: 416 }: " "
Token { kind: Lparen, char_start: 13673, char_end: 13674, byte_start: 13674, byte_end: 13675, column_start: 42, column_end: 43, line_start: 416, line_end: 416 }: (
Token { kind: Text, char_start: 13674, char_end: 13680, byte_start: 13675, byte_end: 13681, column_start: 43, column_end: 49, line_start: 416, line_end: 416 }: rather
Token { kind: Space, char_start: 13680, char_end: 13681, byte_start: 13681, byte_end: 13682, column_start: 49, column_end: 50, line_start: 416, line_end: 416 }: " "
Token { kind: Text, char_start: 13681, char_end: 13685, byte_start: 13682, byte_end: 13686, column_start: 50, column_end: 54, line_start: 416, line_end: 416 }: than
Token { kind: Space, char_start: 13685, char_end: 13686, byte_start: 13686, byte_end: 13687, column_start: 54, column_end: 55, line_start: 416, line_end: 416 }: " "
Token { kind: Bar, char_start: 13686, char_end: 13687, byte_start: 13687, byte_end: 13688, column_start: 55, column_end: 56, line_start: 416, line_end: 416 }: |
Token { kind: Text, char_start: 13687, char_end: 13692, byte_start: 13688, byte_end: 13693, column_start: 56, column_end: 61, line_start: 416, line_end: 416 }: :cfdo
Token { kind: Bar, char_start: 13692, char_end: 13693, byte_start: 13693, byte_end: 13694, column_start: 61, column_end: 62, line_start: 416, line_end: 416 }: |
Token { kind: Rparen, char_start: 13693, char_end: 13694, byte_start: 13694, byte_end: 13695, column_start: 62, column_end: 63, line_start: 416, line_end: 416 }: )
Token { kind: Space, char_start: 13694, char_end: 13695, byte_start: 13695, byte_end: 13696, column_start: 63, column_end: 64, line_start: 416, line_end: 416 }: " "
Token { kind: Text, char_start: 13695, char_end: 13697, byte_start: 13696, byte_end: 13698, column_start: 64, column_end: 66, line_start: 416, line_end: 416 }: to
Token { kind: Space, char_start: 13697, char_end: 13698, byte_start: 13698, byte_end: 13699, column_start: 66, column_end: 67, line_start: 416, line_end: 416 }: " "
Token { kind: Text, char_start: 13698, char_end: 13702, byte_start: 13699, byte_end: 13703, column_start: 67, column_end: 71, line_start: 416, line_end: 416 }: make
Token { kind: Newline, char_start: 13702, char_end: 13703, byte_start: 13703, byte_end: 13704, column_start: 71, column_end: 1, line_start: 416, line_end: 417 }: "\n"
Token { kind: Space, char_start: 13703, char_end: 13705, byte_start: 13704, byte_end: 13706, column_start: 1, column_end: 3, line_start: 417, line_end: 417 }: "  "
Token { kind: Text, char_start: 13705, char_end: 13718, byte_start: 13706, byte_end: 13719, column_start: 3, column_end: 16, line_start: 417, line_end: 417 }: replacements,
Token { kind: Space, char_start: 13718, char_end: 13719, byte_start: 13719, byte_end: 13720, column_start: 16, column_end: 17, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13719, char_end: 13724, byte_start: 13720, byte_end: 13725, column_start: 17, column_end: 22, line_start: 417, line_end: 417 }: which
Token { kind: Space, char_start: 13724, char_end: 13725, byte_start: 13725, byte_end: 13726, column_start: 22, column_end: 23, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13725, char_end: 13730, byte_start: 13726, byte_end: 13731, column_start: 23, column_end: 28, line_start: 417, line_end: 417 }: means
Token { kind: Space, char_start: 13730, char_end: 13731, byte_start: 13731, byte_end: 13732, column_start: 28, column_end: 29, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13731, char_end: 13735, byte_start: 13732, byte_end: 13736, column_start: 29, column_end: 33, line_start: 417, line_end: 417 }: that
Token { kind: Space, char_start: 13735, char_end: 13736, byte_start: 13736, byte_end: 13737, column_start: 33, column_end: 34, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13736, char_end: 13738, byte_start: 13737, byte_end: 13739, column_start: 34, column_end: 36, line_start: 417, line_end: 417 }: it
Token { kind: Space, char_start: 13738, char_end: 13739, byte_start: 13739, byte_end: 13740, column_start: 36, column_end: 37, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13739, char_end: 13741, byte_start: 13740, byte_end: 13742, column_start: 37, column_end: 39, line_start: 417, line_end: 417 }: no
Token { kind: Space, char_start: 13741, char_end: 13742, byte_start: 13742, byte_end: 13743, column_start: 39, column_end: 40, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13742, char_end: 13748, byte_start: 13743, byte_end: 13749, column_start: 40, column_end: 46, line_start: 417, line_end: 417 }: longer
Token { kind: Space, char_start: 13748, char_end: 13749, byte_start: 13749, byte_end: 13750, column_start: 46, column_end: 47, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13749, char_end: 13757, byte_start: 13750, byte_end: 13758, column_start: 47, column_end: 55, line_start: 417, line_end: 417 }: operates
Token { kind: Space, char_start: 13757, char_end: 13758, byte_start: 13758, byte_end: 13759, column_start: 55, column_end: 56, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13758, char_end: 13760, byte_start: 13759, byte_end: 13761, column_start: 56, column_end: 58, line_start: 417, line_end: 417 }: on
Token { kind: Space, char_start: 13760, char_end: 13761, byte_start: 13761, byte_end: 13762, column_start: 58, column_end: 59, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13761, char_end: 13762, byte_start: 13762, byte_end: 13763, column_start: 59, column_end: 60, line_start: 417, line_end: 417 }: a
Token { kind: Space, char_start: 13762, char_end: 13763, byte_start: 13763, byte_end: 13764, column_start: 60, column_end: 61, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13763, char_end: 13766, byte_start: 13764, byte_end: 13767, column_start: 61, column_end: 64, line_start: 417, line_end: 417 }: per
Token { kind: Hyphen, char_start: 13766, char_end: 13767, byte_start: 13767, byte_end: 13768, column_start: 64, column_end: 65, line_start: 417, line_end: 417 }: -
Token { kind: Text, char_start: 13767, char_end: 13771, byte_start: 13768, byte_end: 13772, column_start: 65, column_end: 69, line_start: 417, line_end: 417 }: file
Token { kind: Space, char_start: 13771, char_end: 13772, byte_start: 13772, byte_end: 13773, column_start: 69, column_end: 70, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13772, char_end: 13777, byte_start: 13773, byte_end: 13778, column_start: 70, column_end: 75, line_start: 417, line_end: 417 }: level
Token { kind: Space, char_start: 13777, char_end: 13778, byte_start: 13778, byte_end: 13779, column_start: 75, column_end: 76, line_start: 417, line_end: 417 }: " "
Token { kind: Text, char_start: 13778, char_end: 13781, byte_start: 13779, byte_end: 13782, column_start: 76, column_end: 79, line_start: 417, line_end: 417 }: and
Token { kind: Newline, char_start: 13781, char_end: 13782, byte_start: 13782, byte_end: 13783, column_start: 79, column_end: 1, line_start: 417, line_end: 418 }: "\n"
Token { kind: Space, char_start: 13782, char_end: 13784, byte_start: 13783, byte_end: 13785, column_start: 1, column_end: 3, line_start: 418, line_end: 418 }: "  "
Token { kind: Text, char_start: 13784, char_end: 13791, byte_start: 13785, byte_end: 13792, column_start: 3, column_end: 10, line_start: 418, line_end: 418 }: instead
Token { kind: Space, char_start: 13791, char_end: 13792, byte_start: 13792, byte_end: 13793, column_start: 10, column_end: 11, line_start: 418, line_end: 418 }: " "
Token { kind: Text, char_start: 13792, char_end: 13799, byte_start: 13793, byte_end: 13800, column_start: 11, column_end: 18, line_start: 418, line_end: 418 }: targets
Token { kind: Space, char_start: 13799, char_end: 13800, byte_start: 13800, byte_end: 13801, column_start: 18, column_end: 19, line_start: 418, line_end: 418 }: " "
Token { kind: Text, char_start: 13800, char_end: 13810, byte_start: 13801, byte_end: 13811, column_start: 19, column_end: 29, line_start: 418, line_end: 418 }: individual
Token { kind: Space, char_start: 13810, char_end: 13811, byte_start: 13811, byte_end: 13812, column_start: 29, column_end: 30, line_start: 418, line_end: 418 }: " "
Token { kind: Text, char_start: 13811, char_end: 13818, byte_start: 13812, byte_end: 13819, column_start: 30, column_end: 37, line_start: 418, line_end: 418 }: entries
Token { kind: Space, char_start: 13818, char_end: 13819, byte_start: 13819, byte_end: 13820, column_start: 37, column_end: 38, line_start: 418, line_end: 418 }: " "
Token { kind: Text, char_start: 13819, char_end: 13825, byte_start: 13820, byte_end: 13826, column_start: 38, column_end: 44, line_start: 418, line_end: 418 }: within
Token { kind: Space, char_start: 13825, char_end: 13826, byte_start: 13826, byte_end: 13827, column_start: 44, column_end: 45, line_start: 418, line_end: 418 }: " "
Token { kind: Text, char_start: 13826, char_end: 13829, byte_start: 13827, byte_end: 13830, column_start: 45, column_end: 48, line_start: 418, line_end: 418 }: the
Token { kind: Space, char_start: 13829, char_end: 13830, byte_start: 13830, byte_end: 13831, column_start: 48, column_end: 49, line_start: 418, line_end: 418 }: " "
Token { kind: Bar, char_start: 13830, char_end: 13831, byte_start: 13831, byte_end: 13832, column_start: 49, column_end: 50, line_start: 418, line_end: 418 }: |
Token { kind: Text, char_start: 13831, char_end: 13839, byte_start: 13832, byte_end: 13840, column_start: 50, column_end: 58, line_start: 418, line_end: 418 }: quickfix
Token { kind: Bar, char_start: 13839, char_end: 13840, byte_start: 13840, byte_end: 13841, column_start: 58, column_end: 59, line_start: 418, line_end: 418 }: |
Token { kind: Space, char_start: 13840, char_end: 13841, byte_start: 13841, byte_end: 13842, column_start: 59, column_end: 60, line_start: 418, line_end: 418 }: " "
Token { kind: Text, char_start: 13841, char_end: 13848, byte_start: 13842, byte_end: 13849, column_start: 60, column_end: 67, line_start: 418, line_end: 418 }: window.
Token { kind: Space, char_start: 13848, char_end: 13849, byte_start: 13849, byte_end: 13850, column_start: 67, column_end: 68, line_start: 418, line_end: 418 }: " "
Token { kind: Text, char_start: 13849, char_end: 13853, byte_start: 13850, byte_end: 13854, column_start: 68, column_end: 72, line_start: 418, line_end: 418 }: This
Token { kind: Space, char_start: 13853, char_end: 13854, byte_start: 13854, byte_end: 13855, column_start: 72, column_end: 73, line_start: 418, line_end: 418 }: " "
Token { kind: Text, char_start: 13854, char_end: 13856, byte_start: 13855, byte_end: 13857, column_start: 73, column_end: 75, line_start: 418, line_end: 418 }: is
Token { kind: Newline, char_start: 13856, char_end: 13857, byte_start: 13857, byte_end: 13858, column_start: 75, column_end: 1, line_start: 418, line_end: 419 }: "\n"
Token { kind: Space, char_start: 13857, char_end: 13859, byte_start: 13858, byte_end: 13860, column_start: 1, column_end: 3, line_start: 419, line_end: 419 }: "  "
Token { kind: Text, char_start: 13859, char_end: 13867, byte_start: 13860, byte_end: 13868, column_start: 3, column_end: 11, line_start: 419, line_end: 419 }: relevant
Token { kind: Space, char_start: 13867, char_end: 13868, byte_start: 13868, byte_end: 13869, column_start: 11, column_end: 12, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13868, char_end: 13870, byte_start: 13869, byte_end: 13871, column_start: 12, column_end: 14, line_start: 419, line_end: 419 }: if
Token { kind: Space, char_start: 13870, char_end: 13871, byte_start: 13871, byte_end: 13872, column_start: 14, column_end: 15, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13871, char_end: 13877, byte_start: 13872, byte_end: 13878, column_start: 15, column_end: 21, line_start: 419, line_end: 419 }: you've
Token { kind: Space, char_start: 13877, char_end: 13878, byte_start: 13878, byte_end: 13879, column_start: 21, column_end: 22, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13878, char_end: 13882, byte_start: 13879, byte_end: 13883, column_start: 22, column_end: 26, line_start: 419, line_end: 419 }: used
Token { kind: Space, char_start: 13882, char_end: 13883, byte_start: 13883, byte_end: 13884, column_start: 26, column_end: 27, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13883, char_end: 13890, byte_start: 13884, byte_end: 13891, column_start: 27, column_end: 34, line_start: 419, line_end: 419 }: Ferrets
Token { kind: Space, char_start: 13890, char_end: 13891, byte_start: 13891, byte_end: 13892, column_start: 34, column_end: 35, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13891, char_end: 13899, byte_start: 13892, byte_end: 13900, column_start: 35, column_end: 43, line_start: 419, line_end: 419 }: mappings
Token { kind: Space, char_start: 13899, char_end: 13900, byte_start: 13900, byte_end: 13901, column_start: 43, column_end: 44, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13900, char_end: 13902, byte_start: 13901, byte_end: 13903, column_start: 44, column_end: 46, line_start: 419, line_end: 419 }: to
Token { kind: Space, char_start: 13902, char_end: 13903, byte_start: 13903, byte_end: 13904, column_start: 46, column_end: 47, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13903, char_end: 13909, byte_start: 13904, byte_end: 13910, column_start: 47, column_end: 53, line_start: 419, line_end: 419 }: delete
Token { kind: Space, char_start: 13909, char_end: 13910, byte_start: 13910, byte_end: 13911, column_start: 53, column_end: 54, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13910, char_end: 13917, byte_start: 13911, byte_end: 13918, column_start: 54, column_end: 61, line_start: 419, line_end: 419 }: entries
Token { kind: Space, char_start: 13917, char_end: 13918, byte_start: 13918, byte_end: 13919, column_start: 61, column_end: 62, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13918, char_end: 13922, byte_start: 13919, byte_end: 13923, column_start: 62, column_end: 66, line_start: 419, line_end: 419 }: from
Token { kind: Space, char_start: 13922, char_end: 13923, byte_start: 13923, byte_end: 13924, column_start: 66, column_end: 67, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13923, char_end: 13926, byte_start: 13924, byte_end: 13927, column_start: 67, column_end: 70, line_start: 419, line_end: 419 }: the
Token { kind: Space, char_start: 13926, char_end: 13927, byte_start: 13927, byte_end: 13928, column_start: 70, column_end: 71, line_start: 419, line_end: 419 }: " "
Token { kind: Text, char_start: 13927, char_end: 13934, byte_start: 13928, byte_end: 13935, column_start: 71, column_end: 78, line_start: 419, line_end: 419 }: window.
Token { kind: Newline, char_start: 13934, char_end: 13935, byte_start: 13935, byte_end: 13936, column_start: 78, column_end: 1, line_start: 419, line_end: 420 }: "\n"
Token { kind: Space, char_start: 13935, char_end: 13937, byte_start: 13936, byte_end: 13938, column_start: 1, column_end: 3, line_start: 420, line_end: 420 }: "  "
Token { kind: Text, char_start: 13937, char_end: 13940, byte_start: 13938, byte_end: 13941, column_start: 3, column_end: 6, line_start: 420, line_end: 420 }: The
Token { kind: Space, char_start: 13940, char_end: 13941, byte_start: 13941, byte_end: 13942, column_start: 6, column_end: 7, line_start: 420, line_end: 420 }: " "
Token { kind: Text, char_start: 13941, char_end: 13944, byte_start: 13942, byte_end: 13945, column_start: 7, column_end: 10, line_start: 420, line_end: 420 }: old
Token { kind: Space, char_start: 13944, char_end: 13945, byte_start: 13945, byte_end: 13946, column_start: 10, column_end: 11, line_start: 420, line_end: 420 }: " "
Token { kind: Text, char_start: 13945, char_end: 13953, byte_start: 13946, byte_end: 13954, column_start: 11, column_end: 19, line_start: 420, line_end: 420 }: behavior
Token { kind: Space, char_start: 13953, char_end: 13954, byte_start: 13954, byte_end: 13955, column_start: 19, column_end: 20, line_start: 420, line_end: 420 }: " "
Token { kind: Text, char_start: 13954, char_end: 13957, byte_start: 13955, byte_end: 13958, column_start: 20, column_end: 23, line_start: 420, line_end: 420 }: can
Token { kind: Space, char_start: 13957, char_end: 13958, byte_start: 13958, byte_end: 13959, column_start: 23, column_end: 24, line_start: 420, line_end: 420 }: " "
Token { kind: Text, char_start: 13958, char_end: 13960, byte_start: 13959, byte_end: 13961, column_start: 24, column_end: 26, line_start: 420, line_end: 420 }: be
Token { kind: Space, char_start: 13960, char_end: 13961, byte_start: 13961, byte_end: 13962, column_start: 26, column_end: 27, line_start: 420, line_end: 420 }: " "
Token { kind: Text, char_start: 13961, char_end: 13969, byte_start: 13962, byte_end: 13970, column_start: 27, column_end: 35, line_start: 420, line_end: 420 }: restored
Token { kind: Space, char_start: 13969, char_end: 13970, byte_start: 13970, byte_end: 13971, column_start: 35, column_end: 36, line_start: 420, line_end: 420 }: " "
Token { kind: Text, char_start: 13970, char_end: 13974, byte_start: 13971, byte_end: 13975, column_start: 36, column_end: 40, line_start: 420, line_end: 420 }: with
Token { kind: Space, char_start: 13974, char_end: 13975, byte_start: 13975, byte_end: 13976, column_start: 40, column_end: 41, line_start: 420, line_end: 420 }: " "
Token { kind: Text, char_start: 13975, char_end: 13978, byte_start: 13976, byte_end: 13979, column_start: 41, column_end: 44, line_start: 420, line_end: 420 }: the
Token { kind: Space, char_start: 13978, char_end: 13979, byte_start: 13979, byte_end: 13980, column_start: 44, column_end: 45, line_start: 420, line_end: 420 }: " "
Token { kind: Bar, char_start: 13979, char_end: 13980, byte_start: 13980, byte_end: 13981, column_start: 45, column_end: 46, line_start: 420, line_end: 420 }: |
Token { kind: Text, char_start: 13980, char_end: 13999, byte_start: 13981, byte_end: 14000, column_start: 46, column_end: 65, line_start: 420, line_end: 420 }: g:FerretAcksCommand
Token { kind: Bar, char_start: 13999, char_end: 14000, byte_start: 14000, byte_end: 14001, column_start: 65, column_end: 66, line_start: 420, line_end: 420 }: |
Token { kind: Space, char_start: 14000, char_end: 14001, byte_start: 14001, byte_end: 14002, column_start: 66, column_end: 67, line_start: 420, line_end: 420 }: " "
Token { kind: Text, char_start: 14001, char_end: 14008, byte_start: 14002, byte_end: 14009, column_start: 67, column_end: 74, line_start: 420, line_end: 420 }: option.
Token { kind: Newline, char_start: 14008, char_end: 14009, byte_start: 14009, byte_end: 14010, column_start: 74, column_end: 1, line_start: 420, line_end: 421 }: "\n"
Token { kind: Hyphen, char_start: 14009, char_end: 14010, byte_start: 14010, byte_end: 14011, column_start: 1, column_end: 2, line_start: 421, line_end: 421 }: -
Token { kind: Space, char_start: 14010, char_end: 14011, byte_start: 14011, byte_end: 14012, column_start: 2, column_end: 3, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14011, char_end: 14017, byte_start: 14012, byte_end: 14018, column_start: 3, column_end: 9, line_start: 421, line_end: 421 }: Ferret
Token { kind: Space, char_start: 14017, char_end: 14018, byte_start: 14018, byte_end: 14019, column_start: 9, column_end: 10, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14018, char_end: 14021, byte_start: 14019, byte_end: 14022, column_start: 10, column_end: 13, line_start: 421, line_end: 421 }: now
Token { kind: Space, char_start: 14021, char_end: 14022, byte_start: 14022, byte_end: 14023, column_start: 13, column_end: 14, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14022, char_end: 14025, byte_start: 14023, byte_end: 14026, column_start: 14, column_end: 17, line_start: 421, line_end: 421 }: has
Token { kind: Space, char_start: 14025, char_end: 14026, byte_start: 14026, byte_end: 14027, column_start: 17, column_end: 18, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14026, char_end: 14027, byte_start: 14027, byte_end: 14028, column_start: 18, column_end: 19, line_start: 421, line_end: 421 }: a
Token { kind: Space, char_start: 14027, char_end: 14028, byte_start: 14028, byte_end: 14029, column_start: 19, column_end: 20, line_start: 421, line_end: 421 }: " "
Token { kind: Bar, char_start: 14028, char_end: 14029, byte_start: 14029, byte_end: 14030, column_start: 20, column_end: 21, line_start: 421, line_end: 421 }: |
Token { kind: Text, char_start: 14029, char_end: 14035, byte_start: 14030, byte_end: 14036, column_start: 21, column_end: 27, line_start: 421, line_end: 421 }: :Lacks
Token { kind: Bar, char_start: 14035, char_end: 14036, byte_start: 14036, byte_end: 14037, column_start: 27, column_end: 28, line_start: 421, line_end: 421 }: |
Token { kind: Space, char_start: 14036, char_end: 14037, byte_start: 14037, byte_end: 14038, column_start: 28, column_end: 29, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14037, char_end: 14045, byte_start: 14038, byte_end: 14046, column_start: 29, column_end: 37, line_start: 421, line_end: 421 }: command,
Token { kind: Space, char_start: 14045, char_end: 14046, byte_start: 14046, byte_end: 14047, column_start: 37, column_end: 38, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14046, char_end: 14048, byte_start: 14047, byte_end: 14049, column_start: 38, column_end: 40, line_start: 421, line_end: 421 }: an
Token { kind: Space, char_start: 14048, char_end: 14049, byte_start: 14049, byte_end: 14050, column_start: 40, column_end: 41, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14049, char_end: 14055, byte_start: 14050, byte_end: 14056, column_start: 41, column_end: 47, line_start: 421, line_end: 421 }: analog
Token { kind: Space, char_start: 14055, char_end: 14056, byte_start: 14056, byte_end: 14057, column_start: 47, column_end: 48, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14056, char_end: 14058, byte_start: 14057, byte_end: 14059, column_start: 48, column_end: 50, line_start: 421, line_end: 421 }: to
Token { kind: Space, char_start: 14058, char_end: 14059, byte_start: 14059, byte_end: 14060, column_start: 50, column_end: 51, line_start: 421, line_end: 421 }: " "
Token { kind: Bar, char_start: 14059, char_end: 14060, byte_start: 14060, byte_end: 14061, column_start: 51, column_end: 52, line_start: 421, line_end: 421 }: |
Token { kind: Text, char_start: 14060, char_end: 14065, byte_start: 14061, byte_end: 14066, column_start: 52, column_end: 57, line_start: 421, line_end: 421 }: :Acks
Token { kind: Bar, char_start: 14065, char_end: 14066, byte_start: 14066, byte_end: 14067, column_start: 57, column_end: 58, line_start: 421, line_end: 421 }: |
Token { kind: Space, char_start: 14066, char_end: 14067, byte_start: 14067, byte_end: 14068, column_start: 58, column_end: 59, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14067, char_end: 14072, byte_start: 14068, byte_end: 14073, column_start: 59, column_end: 64, line_start: 421, line_end: 421 }: which
Token { kind: Space, char_start: 14072, char_end: 14073, byte_start: 14073, byte_end: 14074, column_start: 64, column_end: 65, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14073, char_end: 14080, byte_start: 14074, byte_end: 14081, column_start: 65, column_end: 72, line_start: 421, line_end: 421 }: applies
Token { kind: Space, char_start: 14080, char_end: 14081, byte_start: 14081, byte_end: 14082, column_start: 72, column_end: 73, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14081, char_end: 14083, byte_start: 14082, byte_end: 14084, column_start: 73, column_end: 75, line_start: 421, line_end: 421 }: to
Token { kind: Space, char_start: 14083, char_end: 14084, byte_start: 14084, byte_end: 14085, column_start: 75, column_end: 76, line_start: 421, line_end: 421 }: " "
Token { kind: Text, char_start: 14084, char_end: 14087, byte_start: 14085, byte_end: 14088, column_start: 76, column_end: 79, line_start: 421, line_end: 421 }: the
Token { kind: Newline, char_start: 14087, char_end: 14088, byte_start: 14088, byte_end: 14089, column_start: 79, column_end: 1, line_start: 421, line_end: 422 }: "\n"
Token { kind: Space, char_start: 14088, char_end: 14090, byte_start: 14089, byte_end: 14091, column_start: 1, column_end: 3, line_start: 422, line_end: 422 }: "  "
Token { kind: Bar, char_start: 14090, char_end: 14091, byte_start: 14091, byte_end: 14092, column_start: 3, column_end: 4, line_start: 422, line_end: 422 }: |
Token { kind: Text, char_start: 14091, char_end: 14099, byte_start: 14092, byte_end: 14100, column_start: 4, column_end: 12, line_start: 422, line_end: 422 }: location
Token { kind: Hyphen, char_start: 14099, char_end: 14100, byte_start: 14100, byte_end: 14101, column_start: 12, column_end: 13, line_start: 422, line_end: 422 }: -
Token { kind: Text, char_start: 14100, char_end: 14104, byte_start: 14101, byte_end: 14105, column_start: 13, column_end: 17, line_start: 422, line_end: 422 }: list
Token { kind: Bar, char_start: 14104, char_end: 14105, byte_start: 14105, byte_end: 14106, column_start: 17, column_end: 18, line_start: 422, line_end: 422 }: |
Token { kind: Text, char_start: 14105, char_end: 14106, byte_start: 14106, byte_end: 14107, column_start: 18, column_end: 19, line_start: 422, line_end: 422 }: .
Token { kind: Newline, char_start: 14106, char_end: 14107, byte_start: 14107, byte_end: 14108, column_start: 19, column_end: 1, line_start: 422, line_end: 423 }: "\n"
Token { kind: Hyphen, char_start: 14107, char_end: 14108, byte_start: 14108, byte_end: 14109, column_start: 1, column_end: 2, line_start: 423, line_end: 423 }: -
Token { kind: Space, char_start: 14108, char_end: 14109, byte_start: 14109, byte_end: 14110, column_start: 2, column_end: 3, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14109, char_end: 14118, byte_start: 14110, byte_end: 14119, column_start: 3, column_end: 12, line_start: 423, line_end: 423 }: Likewise,
Token { kind: Space, char_start: 14118, char_end: 14119, byte_start: 14119, byte_end: 14120, column_start: 12, column_end: 13, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14119, char_end: 14125, byte_start: 14120, byte_end: 14126, column_start: 13, column_end: 19, line_start: 423, line_end: 423 }: Ferret
Token { kind: Space, char_start: 14125, char_end: 14126, byte_start: 14126, byte_end: 14127, column_start: 19, column_end: 20, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14126, char_end: 14129, byte_start: 14127, byte_end: 14130, column_start: 20, column_end: 23, line_start: 423, line_end: 423 }: now
Token { kind: Space, char_start: 14129, char_end: 14130, byte_start: 14130, byte_end: 14131, column_start: 23, column_end: 24, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14130, char_end: 14133, byte_start: 14131, byte_end: 14134, column_start: 24, column_end: 27, line_start: 423, line_end: 423 }: has
Token { kind: Space, char_start: 14133, char_end: 14134, byte_start: 14134, byte_end: 14135, column_start: 27, column_end: 28, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14134, char_end: 14135, byte_start: 14135, byte_end: 14136, column_start: 28, column_end: 29, line_start: 423, line_end: 423 }: a
Token { kind: Space, char_start: 14135, char_end: 14136, byte_start: 14136, byte_end: 14137, column_start: 29, column_end: 30, line_start: 423, line_end: 423 }: " "
Token { kind: Bar, char_start: 14136, char_end: 14137, byte_start: 14137, byte_end: 14138, column_start: 30, column_end: 31, line_start: 423, line_end: 423 }: |
Token { kind: Text, char_start: 14137, char_end: 14143, byte_start: 14138, byte_end: 14144, column_start: 31, column_end: 37, line_start: 423, line_end: 423 }: :Largs
Token { kind: Bar, char_start: 14143, char_end: 14144, byte_start: 14144, byte_end: 14145, column_start: 37, column_end: 38, line_start: 423, line_end: 423 }: |
Token { kind: Space, char_start: 14144, char_end: 14145, byte_start: 14145, byte_end: 14146, column_start: 38, column_end: 39, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14145, char_end: 14153, byte_start: 14146, byte_end: 14154, column_start: 39, column_end: 47, line_start: 423, line_end: 423 }: command,
Token { kind: Space, char_start: 14153, char_end: 14154, byte_start: 14154, byte_end: 14155, column_start: 47, column_end: 48, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14154, char_end: 14163, byte_start: 14155, byte_end: 14164, column_start: 48, column_end: 57, line_start: 423, line_end: 423 }: analogous
Token { kind: Space, char_start: 14163, char_end: 14164, byte_start: 14164, byte_end: 14165, column_start: 57, column_end: 58, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14164, char_end: 14166, byte_start: 14165, byte_end: 14167, column_start: 58, column_end: 60, line_start: 423, line_end: 423 }: to
Token { kind: Space, char_start: 14166, char_end: 14167, byte_start: 14167, byte_end: 14168, column_start: 60, column_end: 61, line_start: 423, line_end: 423 }: " "
Token { kind: Bar, char_start: 14167, char_end: 14168, byte_start: 14168, byte_end: 14169, column_start: 61, column_end: 62, line_start: 423, line_end: 423 }: |
Token { kind: Text, char_start: 14168, char_end: 14174, byte_start: 14169, byte_end: 14175, column_start: 62, column_end: 68, line_start: 423, line_end: 423 }: :Qargs
Token { kind: Bar, char_start: 14174, char_end: 14175, byte_start: 14175, byte_end: 14176, column_start: 68, column_end: 69, line_start: 423, line_end: 423 }: |
Token { kind: Text, char_start: 14175, char_end: 14176, byte_start: 14176, byte_end: 14177, column_start: 69, column_end: 70, line_start: 423, line_end: 423 }: ,
Token { kind: Space, char_start: 14176, char_end: 14177, byte_start: 14177, byte_end: 14178, column_start: 70, column_end: 71, line_start: 423, line_end: 423 }: " "
Token { kind: Text, char_start: 14177, char_end: 14182, byte_start: 14178, byte_end: 14183, column_start: 71, column_end: 76, line_start: 423, line_end: 423 }: which
Token { kind: Newline, char_start: 14182, char_end: 14183, byte_start: 14183, byte_end: 14184, column_start: 76, column_end: 1, line_start: 423, line_end: 424 }: "\n"
Token { kind: Space, char_start: 14183, char_end: 14185, byte_start: 14184, byte_end: 14186, column_start: 1, column_end: 3, line_start: 424, line_end: 424 }: "  "
Token { kind: Text, char_start: 14185, char_end: 14192, byte_start: 14186, byte_end: 14193, column_start: 3, column_end: 10, line_start: 424, line_end: 424 }: applies
Token { kind: Space, char_start: 14192, char_end: 14193, byte_start: 14193, byte_end: 14194, column_start: 10, column_end: 11, line_start: 424, line_end: 424 }: " "
Token { kind: Text, char_start: 14193, char_end: 14195, byte_start: 14194, byte_end: 14196, column_start: 11, column_end: 13, line_start: 424, line_end: 424 }: to
Token { kind: Space, char_start: 14195, char_end: 14196, byte_start: 14196, byte_end: 14197, column_start: 13, column_end: 14, line_start: 424, line_end: 424 }: " "
Token { kind: Text, char_start: 14196, char_end: 14199, byte_start: 14197, byte_end: 14200, column_start: 14, column_end: 17, line_start: 424, line_end: 424 }: the
Token { kind: Space, char_start: 14199, char_end: 14200, byte_start: 14200, byte_end: 14201, column_start: 17, column_end: 18, line_start: 424, line_end: 424 }: " "
Token { kind: Bar, char_start: 14200, char_end: 14201, byte_start: 14201, byte_end: 14202, column_start: 18, column_end: 19, line_start: 424, line_end: 424 }: |
Token { kind: Text, char_start: 14201, char_end: 14209, byte_start: 14202, byte_end: 14210, column_start: 19, column_end: 27, line_start: 424, line_end: 424 }: location
Token { kind: Hyphen, char_start: 14209, char_end: 14210, byte_start: 14210, byte_end: 14211, column_start: 27, column_end: 28, line_start: 424, line_end: 424 }: -
Token { kind: Text, char_start: 14210, char_end: 14214, byte_start: 14211, byte_end: 14215, column_start: 28, column_end: 32, line_start: 424, line_end: 424 }: list
Token { kind: Bar, char_start: 14214, char_end: 14215, byte_start: 14215, byte_end: 14216, column_start: 32, column_end: 33, line_start: 424, line_end: 424 }: |
Token { kind: Space, char_start: 14215, char_end: 14216, byte_start: 14216, byte_end: 14217, column_start: 33, column_end: 34, line_start: 424, line_end: 424 }: " "
Token { kind: Text, char_start: 14216, char_end: 14223, byte_start: 14217, byte_end: 14224, column_start: 34, column_end: 41, line_start: 424, line_end: 424 }: instead
Token { kind: Space, char_start: 14223, char_end: 14224, byte_start: 14224, byte_end: 14225, column_start: 41, column_end: 42, line_start: 424, line_end: 424 }: " "
Token { kind: Text, char_start: 14224, char_end: 14226, byte_start: 14225, byte_end: 14227, column_start: 42, column_end: 44, line_start: 424, line_end: 424 }: of
Token { kind: Space, char_start: 14226, char_end: 14227, byte_start: 14227, byte_end: 14228, column_start: 44, column_end: 45, line_start: 424, line_end: 424 }: " "
Token { kind: Text, char_start: 14227, char_end: 14230, byte_start: 14228, byte_end: 14231, column_start: 45, column_end: 48, line_start: 424, line_end: 424 }: the
Token { kind: Space, char_start: 14230, char_end: 14231, byte_start: 14231, byte_end: 14232, column_start: 48, column_end: 49, line_start: 424, line_end: 424 }: " "
Token { kind: Bar, char_start: 14231, char_end: 14232, byte_start: 14232, byte_end: 14233, column_start: 49, column_end: 50, line_start: 424, line_end: 424 }: |
Token { kind: Text, char_start: 14232, char_end: 14240, byte_start: 14233, byte_end: 14241, column_start: 50, column_end: 58, line_start: 424, line_end: 424 }: quickfix
Token { kind: Bar, char_start: 14240, char_end: 14241, byte_start: 14241, byte_end: 14242, column_start: 58, column_end: 59, line_start: 424, line_end: 424 }: |
Token { kind: Space, char_start: 14241, char_end: 14242, byte_start: 14242, byte_end: 14243, column_start: 59, column_end: 60, line_start: 424, line_end: 424 }: " "
Token { kind: Text, char_start: 14242, char_end: 14249, byte_start: 14243, byte_end: 14250, column_start: 60, column_end: 67, line_start: 424, line_end: 424 }: window.
Token { kind: Newline, char_start: 14249, char_end: 14250, byte_start: 14250, byte_end: 14251, column_start: 67, column_end: 1, line_start: 424, line_end: 425 }: "\n"
Token { kind: Hyphen, char_start: 14250, char_end: 14251, byte_start: 14251, byte_end: 14252, column_start: 1, column_end: 2, line_start: 425, line_end: 425 }: -
Token { kind: Space, char_start: 14251, char_end: 14252, byte_start: 14252, byte_end: 14253, column_start: 2, column_end: 3, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14252, char_end: 14255, byte_start: 14253, byte_end: 14256, column_start: 3, column_end: 6, line_start: 425, line_end: 425 }: The
Token { kind: Space, char_start: 14255, char_end: 14256, byte_start: 14256, byte_end: 14257, column_start: 6, column_end: 7, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14256, char_end: 14262, byte_start: 14257, byte_end: 14263, column_start: 7, column_end: 13, line_start: 425, line_end: 425 }: Ferret
Token { kind: Space, char_start: 14262, char_end: 14263, byte_start: 14263, byte_end: 14264, column_start: 13, column_end: 14, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14263, char_end: 14271, byte_start: 14264, byte_end: 14272, column_start: 14, column_end: 22, line_start: 425, line_end: 425 }: bindings
Token { kind: Space, char_start: 14271, char_end: 14272, byte_start: 14272, byte_end: 14273, column_start: 22, column_end: 23, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14272, char_end: 14276, byte_start: 14273, byte_end: 14277, column_start: 23, column_end: 27, line_start: 425, line_end: 425 }: that
Token { kind: Space, char_start: 14276, char_end: 14277, byte_start: 14277, byte_end: 14278, column_start: 27, column_end: 28, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14277, char_end: 14280, byte_start: 14278, byte_end: 14281, column_start: 28, column_end: 31, line_start: 425, line_end: 425 }: are
Token { kind: Space, char_start: 14280, char_end: 14281, byte_start: 14281, byte_end: 14282, column_start: 31, column_end: 32, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14281, char_end: 14284, byte_start: 14282, byte_end: 14285, column_start: 32, column_end: 35, line_start: 425, line_end: 425 }: set
Token { kind: Hyphen, char_start: 14284, char_end: 14285, byte_start: 14285, byte_end: 14286, column_start: 35, column_end: 36, line_start: 425, line_end: 425 }: -
Token { kind: Text, char_start: 14285, char_end: 14287, byte_start: 14286, byte_end: 14288, column_start: 36, column_end: 38, line_start: 425, line_end: 425 }: up
Token { kind: Space, char_start: 14287, char_end: 14288, byte_start: 14288, byte_end: 14289, column_start: 38, column_end: 39, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14288, char_end: 14290, byte_start: 14289, byte_end: 14291, column_start: 39, column_end: 41, line_start: 425, line_end: 425 }: in
Token { kind: Space, char_start: 14290, char_end: 14291, byte_start: 14291, byte_end: 14292, column_start: 41, column_end: 42, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14291, char_end: 14294, byte_start: 14292, byte_end: 14295, column_start: 42, column_end: 45, line_start: 425, line_end: 425 }: the
Token { kind: Space, char_start: 14294, char_end: 14295, byte_start: 14295, byte_end: 14296, column_start: 45, column_end: 46, line_start: 425, line_end: 425 }: " "
Token { kind: Bar, char_start: 14295, char_end: 14296, byte_start: 14296, byte_end: 14297, column_start: 46, column_end: 47, line_start: 425, line_end: 425 }: |
Token { kind: Text, char_start: 14296, char_end: 14304, byte_start: 14297, byte_end: 14305, column_start: 47, column_end: 55, line_start: 425, line_end: 425 }: quickfix
Token { kind: Bar, char_start: 14304, char_end: 14305, byte_start: 14305, byte_end: 14306, column_start: 55, column_end: 56, line_start: 425, line_end: 425 }: |
Token { kind: Space, char_start: 14305, char_end: 14306, byte_start: 14306, byte_end: 14307, column_start: 56, column_end: 57, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14306, char_end: 14312, byte_start: 14307, byte_end: 14313, column_start: 57, column_end: 63, line_start: 425, line_end: 425 }: window
Token { kind: Space, char_start: 14312, char_end: 14313, byte_start: 14313, byte_end: 14314, column_start: 63, column_end: 64, line_start: 425, line_end: 425 }: " "
Token { kind: Text, char_start: 14313, char_end: 14317, byte_start: 14314, byte_end: 14318, column_start: 64, column_end: 68, line_start: 425, line_end: 425 }: when
Token { kind: Newline, char_start: 14317, char_end: 14318, byte_start: 14318, byte_end: 14319, column_start: 68, column_end: 1, line_start: 425, line_end: 426 }: "\n"
Token { kind: Space, char_start: 14318, char_end: 14320, byte_start: 14319, byte_end: 14321, column_start: 1, column_end: 3, line_start: 426, line_end: 426 }: "  "
Token { kind: Bar, char_start: 14320, char_end: 14321, byte_start: 14321, byte_end: 14322, column_start: 3, column_end: 4, line_start: 426, line_end: 426 }: |
Token { kind: Text, char_start: 14321, char_end: 14334, byte_start: 14322, byte_end: 14335, column_start: 4, column_end: 17, line_start: 426, line_end: 426 }: g:FerretQFMap
Token { kind: Bar, char_start: 14334, char_end: 14335, byte_start: 14335, byte_end: 14336, column_start: 17, column_end: 18, line_start: 426, line_end: 426 }: |
Token { kind: Space, char_start: 14335, char_end: 14336, byte_start: 14336, byte_end: 14337, column_start: 18, column_end: 19, line_start: 426, line_end: 426 }: " "
Token { kind: Text, char_start: 14336, char_end: 14338, byte_start: 14337, byte_end: 14339, column_start: 19, column_end: 21, line_start: 426, line_end: 426 }: is
Token { kind: Space, char_start: 14338, char_end: 14339, byte_start: 14339, byte_end: 14340, column_start: 21, column_end: 22, line_start: 426, line_end: 426 }: " "
Token { kind: Text, char_start: 14339, char_end: 14346, byte_start: 14340, byte_end: 14347, column_start: 22, column_end: 29, line_start: 426, line_end: 426 }: enabled
Token { kind: Space, char_start: 14346, char_end: 14347, byte_start: 14347, byte_end: 14348, column_start: 29, column_end: 30, line_start: 426, line_end: 426 }: " "
Token { kind: Text, char_start: 14347, char_end: 14350, byte_start: 14348, byte_end: 14351, column_start: 30, column_end: 33, line_start: 426, line_end: 426 }: now
Token { kind: Space, char_start: 14350, char_end: 14351, byte_start: 14351, byte_end: 14352, column_start: 33, column_end: 34, line_start: 426, line_end: 426 }: " "
Token { kind: Text, char_start: 14351, char_end: 14355, byte_start: 14352, byte_end: 14356, column_start: 34, column_end: 38, line_start: 426, line_end: 426 }: also
Token { kind: Space, char_start: 14355, char_end: 14356, byte_start: 14356, byte_end: 14357, column_start: 38, column_end: 39, line_start: 426, line_end: 426 }: " "
Token { kind: Text, char_start: 14356, char_end: 14361, byte_start: 14357, byte_end: 14362, column_start: 39, column_end: 44, line_start: 426, line_end: 426 }: apply
Token { kind: Space, char_start: 14361, char_end: 14362, byte_start: 14362, byte_end: 14363, column_start: 44, column_end: 45, line_start: 426, line_end: 426 }: " "
Token { kind: Text, char_start: 14362, char_end: 14364, byte_start: 14363, byte_end: 14365, column_start: 45, column_end: 47, line_start: 426, line_end: 426 }: to
Token { kind: Space, char_start: 14364, char_end: 14365, byte_start: 14365, byte_end: 14366, column_start: 47, column_end: 48, line_start: 426, line_end: 426 }: " "
Token { kind: Text, char_start: 14365, char_end: 14368, byte_start: 14366, byte_end: 14369, column_start: 48, column_end: 51, line_start: 426, line_end: 426 }: the
Token { kind: Space, char_start: 14368, char_end: 14369, byte_start: 14369, byte_end: 14370, column_start: 51, column_end: 52, line_start: 426, line_end: 426 }: " "
Token { kind: Bar, char_start: 14369, char_end: 14370, byte_start: 14370, byte_end: 14371, column_start: 52, column_end: 53, line_start: 426, line_end: 426 }: |
Token { kind: Text, char_start: 14370, char_end: 14378, byte_start: 14371, byte_end: 14379, column_start: 53, column_end: 61, line_start: 426, line_end: 426 }: location
Token { kind: Hyphen, char_start: 14378, char_end: 14379, byte_start: 14379, byte_end: 14380, column_start: 61, column_end: 62, line_start: 426, line_end: 426 }: -
Token { kind: Text, char_start: 14379, char_end: 14383, byte_start: 14380, byte_end: 14384, column_start: 62, column_end: 66, line_start: 426, line_end: 426 }: list
Token { kind: Bar, char_start: 14383, char_end: 14384, byte_start: 14384, byte_end: 14385, column_start: 66, column_end: 67, line_start: 426, line_end: 426 }: |
Token { kind: Text, char_start: 14384, char_end: 14385, byte_start: 14385, byte_end: 14386, column_start: 67, column_end: 68, line_start: 426, line_end: 426 }: .
Token { kind: Newline, char_start: 14385, char_end: 14386, byte_start: 14386, byte_end: 14387, column_start: 68, column_end: 1, line_start: 426, line_end: 427 }: "\n"
Token { kind: Newline, char_start: 14386, char_end: 14387, byte_start: 14387, byte_end: 14388, column_start: 1, column_end: 1, line_start: 427, line_end: 428 }: "\n"
Token { kind: Heading(Heading2), char_start: 14387, char_end: 14389, byte_start: 14388, byte_end: 14390, column_start: 1, column_end: 3, line_start: 428, line_end: 428 }: ##
Token { kind: Space, char_start: 14389, char_end: 14390, byte_start: 14390, byte_end: 14391, column_start: 3, column_end: 4, line_start: 428, line_end: 428 }: " "
Token { kind: Text, char_start: 14390, char_end: 14393, byte_start: 14391, byte_end: 14394, column_start: 4, column_end: 7, line_start: 428, line_end: 428 }: 4.1
Token { kind: Space, char_start: 14393, char_end: 14394, byte_start: 14394, byte_end: 14395, column_start: 7, column_end: 8, line_start: 428, line_end: 428 }: " "
Token { kind: Lparen, char_start: 14394, char_end: 14395, byte_start: 14395, byte_end: 14396, column_start: 8, column_end: 9, line_start: 428, line_end: 428 }: (
Token { kind: Text, char_start: 14395, char_end: 14397, byte_start: 14396, byte_end: 14398, column_start: 9, column_end: 11, line_start: 428, line_end: 428 }: 31
Token { kind: Space, char_start: 14397, char_end: 14398, byte_start: 14398, byte_end: 14399, column_start: 11, column_end: 12, line_start: 428, line_end: 428 }: " "
Token { kind: Text, char_start: 14398, char_end: 14405, byte_start: 14399, byte_end: 14406, column_start: 12, column_end: 19, line_start: 428, line_end: 428 }: January
Token { kind: Space, char_start: 14405, char_end: 14406, byte_start: 14406, byte_end: 14407, column_start: 19, column_end: 20, line_start: 428, line_end: 428 }: " "
Token { kind: Text, char_start: 14406, char_end: 14410, byte_start: 14407, byte_end: 14411, column_start: 20, column_end: 24, line_start: 428, line_end: 428 }: 2019
Token { kind: Rparen, char_start: 14410, char_end: 14411, byte_start: 14411, byte_end: 14412, column_start: 24, column_end: 25, line_start: 428, line_end: 428 }: )
Token { kind: Newline, char_start: 14411, char_end: 14412, byte_start: 14412, byte_end: 14413, column_start: 25, column_end: 1, line_start: 428, line_end: 429 }: "\n"
Token { kind: Newline, char_start: 14412, char_end: 14413, byte_start: 14413, byte_end: 14414, column_start: 1, column_end: 1, line_start: 429, line_end: 430 }: "\n"
Token { kind: Hyphen, char_start: 14413, char_end: 14414, byte_start: 14414, byte_end: 14415, column_start: 1, column_end: 2, line_start: 430, line_end: 430 }: -
Token { kind: Space, char_start: 14414, char_end: 14415, byte_start: 14415, byte_end: 14416, column_start: 2, column_end: 3, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14415, char_end: 14420, byte_start: 14416, byte_end: 14421, column_start: 3, column_end: 8, line_start: 430, line_end: 430 }: Added
Token { kind: Space, char_start: 14420, char_end: 14421, byte_start: 14421, byte_end: 14422, column_start: 8, column_end: 9, line_start: 430, line_end: 430 }: " "
Token { kind: Bar, char_start: 14421, char_end: 14422, byte_start: 14422, byte_end: 14423, column_start: 9, column_end: 10, line_start: 430, line_end: 430 }: |
Token { kind: Text, char_start: 14422, char_end: 14428, byte_start: 14423, byte_end: 14429, column_start: 10, column_end: 16, line_start: 430, line_end: 430 }: :Quack
Token { kind: Bar, char_start: 14428, char_end: 14429, byte_start: 14429, byte_end: 14430, column_start: 16, column_end: 17, line_start: 430, line_end: 430 }: |
Token { kind: Space, char_start: 14429, char_end: 14430, byte_start: 14430, byte_end: 14431, column_start: 17, column_end: 18, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14430, char_end: 14438, byte_start: 14431, byte_end: 14439, column_start: 18, column_end: 26, line_start: 430, line_end: 430 }: command,
Token { kind: Space, char_start: 14438, char_end: 14439, byte_start: 14439, byte_end: 14440, column_start: 26, column_end: 27, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14439, char_end: 14448, byte_start: 14440, byte_end: 14449, column_start: 27, column_end: 36, line_start: 430, line_end: 430 }: analogous
Token { kind: Space, char_start: 14448, char_end: 14449, byte_start: 14449, byte_end: 14450, column_start: 36, column_end: 37, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14449, char_end: 14451, byte_start: 14450, byte_end: 14452, column_start: 37, column_end: 39, line_start: 430, line_end: 430 }: to
Token { kind: Space, char_start: 14451, char_end: 14452, byte_start: 14452, byte_end: 14453, column_start: 39, column_end: 40, line_start: 430, line_end: 430 }: " "
Token { kind: Bar, char_start: 14452, char_end: 14453, byte_start: 14453, byte_end: 14454, column_start: 40, column_end: 41, line_start: 430, line_end: 430 }: |
Token { kind: Text, char_start: 14453, char_end: 14457, byte_start: 14454, byte_end: 14458, column_start: 41, column_end: 45, line_start: 430, line_end: 430 }: :Ack
Token { kind: Bar, char_start: 14457, char_end: 14458, byte_start: 14458, byte_end: 14459, column_start: 45, column_end: 46, line_start: 430, line_end: 430 }: |
Token { kind: Space, char_start: 14458, char_end: 14459, byte_start: 14459, byte_end: 14460, column_start: 46, column_end: 47, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14459, char_end: 14462, byte_start: 14460, byte_end: 14463, column_start: 47, column_end: 50, line_start: 430, line_end: 430 }: but
Token { kind: Space, char_start: 14462, char_end: 14463, byte_start: 14463, byte_end: 14464, column_start: 50, column_end: 51, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14463, char_end: 14469, byte_start: 14464, byte_end: 14470, column_start: 51, column_end: 57, line_start: 430, line_end: 430 }: scoped
Token { kind: Space, char_start: 14469, char_end: 14470, byte_start: 14470, byte_end: 14471, column_start: 57, column_end: 58, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14470, char_end: 14472, byte_start: 14471, byte_end: 14473, column_start: 58, column_end: 60, line_start: 430, line_end: 430 }: to
Token { kind: Space, char_start: 14472, char_end: 14473, byte_start: 14473, byte_end: 14474, column_start: 60, column_end: 61, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14473, char_end: 14476, byte_start: 14474, byte_end: 14477, column_start: 61, column_end: 64, line_start: 430, line_end: 430 }: the
Token { kind: Space, char_start: 14476, char_end: 14477, byte_start: 14477, byte_end: 14478, column_start: 64, column_end: 65, line_start: 430, line_end: 430 }: " "
Token { kind: Text, char_start: 14477, char_end: 14482, byte_start: 14478, byte_end: 14483, column_start: 65, column_end: 70, line_start: 430, line_end: 430 }: files
Token { kind: Newline, char_start: 14482, char_end: 14483, byte_start: 14483, byte_end: 14484, column_start: 70, column_end: 1, line_start: 430, line_end: 431 }: "\n"
Token { kind: Space, char_start: 14483, char_end: 14485, byte_start: 14484, byte_end: 14486, column_start: 1, column_end: 3, line_start: 431, line_end: 431 }: "  "
Token { kind: Text, char_start: 14485, char_end: 14494, byte_start: 14486, byte_end: 14495, column_start: 3, column_end: 12, line_start: 431, line_end: 431 }: currently
Token { kind: Space, char_start: 14494, char_end: 14495, byte_start: 14495, byte_end: 14496, column_start: 12, column_end: 13, line_start: 431, line_end: 431 }: " "
Token { kind: Text, char_start: 14495, char_end: 14501, byte_start: 14496, byte_end: 14502, column_start: 13, column_end: 19, line_start: 431, line_end: 431 }: listed
Token { kind: Space, char_start: 14501, char_end: 14502, byte_start: 14502, byte_end: 14503, column_start: 19, column_end: 20, line_start: 431, line_end: 431 }: " "
Token { kind: Text, char_start: 14502, char_end: 14504, byte_start: 14503, byte_end: 14505, column_start: 20, column_end: 22, line_start: 431, line_end: 431 }: in
Token { kind: Space, char_start: 14504, char_end: 14505, byte_start: 14505, byte_end: 14506, column_start: 22, column_end: 23, line_start: 431, line_end: 431 }: " "
Token { kind: Text, char_start: 14505, char_end: 14508, byte_start: 14506, byte_end: 14509, column_start: 23, column_end: 26, line_start: 431, line_end: 431 }: the
Token { kind: Space, char_start: 14508, char_end: 14509, byte_start: 14509, byte_end: 14510, column_start: 26, column_end: 27, line_start: 431, line_end: 431 }: " "
Token { kind: Bar, char_start: 14509, char_end: 14510, byte_start: 14510, byte_end: 14511, column_start: 27, column_end: 28, line_start: 431, line_end: 431 }: |
Token { kind: Text, char_start: 14510, char_end: 14518, byte_start: 14511, byte_end: 14519, column_start: 28, column_end: 36, line_start: 431, line_end: 431 }: quickfix
Token { kind: Bar, char_start: 14518, char_end: 14519, byte_start: 14519, byte_end: 14520, column_start: 36, column_end: 37, line_start: 431, line_end: 431 }: |
Token { kind: Space, char_start: 14519, char_end: 14520, byte_start: 14520, byte_end: 14521, column_start: 37, column_end: 38, line_start: 431, line_end: 431 }: " "
Token { kind: Text, char_start: 14520, char_end: 14527, byte_start: 14521, byte_end: 14528, column_start: 38, column_end: 45, line_start: 431, line_end: 431 }: window.
Token { kind: Newline, char_start: 14527, char_end: 14528, byte_start: 14528, byte_end: 14529, column_start: 45, column_end: 1, line_start: 431, line_end: 432 }: "\n"
Token { kind: Hyphen, char_start: 14528, char_end: 14529, byte_start: 14529, byte_end: 14530, column_start: 1, column_end: 2, line_start: 432, line_end: 432 }: -
Token { kind: Space, char_start: 14529, char_end: 14530, byte_start: 14530, byte_end: 14531, column_start: 2, column_end: 3, line_start: 432, line_end: 432 }: " "
Token { kind: Text, char_start: 14530, char_end: 14535, byte_start: 14531, byte_end: 14536, column_start: 3, column_end: 8, line_start: 432, line_end: 432 }: Fixed
Token { kind: Space, char_start: 14535, char_end: 14536, byte_start: 14536, byte_end: 14537, column_start: 8, column_end: 9, line_start: 432, line_end: 432 }: " "
Token { kind: Text, char_start: 14536, char_end: 14542, byte_start: 14537, byte_end: 14543, column_start: 9, column_end: 15, line_start: 432, line_end: 432 }: option
Token { kind: Space, char_start: 14542, char_end: 14543, byte_start: 14543, byte_end: 14544, column_start: 15, column_end: 16, line_start: 432, line_end: 432 }: " "
Token { kind: Text, char_start: 14543, char_end: 14558, byte_start: 14544, byte_end: 14559, column_start: 16, column_end: 31, line_start: 432, line_end: 432 }: autocompletion.
Token { kind: Newline, char_start: 14558, char_end: 14559, byte_start: 14559, byte_end: 14560, column_start: 31, column_end: 1, line_start: 432, line_end: 433 }: "\n"
Token { kind: Newline, char_start: 14559, char_end: 14560, byte_start: 14560, byte_end: 14561, column_start: 1, column_end: 1, line_start: 433, line_end: 434 }: "\n"
Token { kind: Heading(Heading2), char_start: 14560, char_end: 14562, byte_start: 14561, byte_end: 14563, column_start: 1, column_end: 3, line_start: 434, line_end: 434 }: ##
Token { kind: Space, char_start: 14562, char_end: 14563, byte_start: 14563, byte_end: 14564, column_start: 3, column_end: 4, line_start: 434, line_end: 434 }: " "
Token { kind: Text, char_start: 14563, char_end: 14568, byte_start: 14564, byte_end: 14569, column_start: 4, column_end: 9, line_start: 434, line_end: 434 }: 4.0.2
Token { kind: Space, char_start: 14568, char_end: 14569, byte_start: 14569, byte_end: 14570, column_start: 9, column_end: 10, line_start: 434, line_end: 434 }: " "
Token { kind: Lparen, char_start: 14569, char_end: 14570, byte_start: 14570, byte_end: 14571, column_start: 10, column_end: 11, line_start: 434, line_end: 434 }: (
Token { kind: Text, char_start: 14570, char_end: 14572, byte_start: 14571, byte_end: 14573, column_start: 11, column_end: 13, line_start: 434, line_end: 434 }: 11
Token { kind: Space, char_start: 14572, char_end: 14573, byte_start: 14573, byte_end: 14574, column_start: 13, column_end: 14, line_start: 434, line_end: 434 }: " "
Token { kind: Text, char_start: 14573, char_end: 14580, byte_start: 14574, byte_end: 14581, column_start: 14, column_end: 21, line_start: 434, line_end: 434 }: January
Token { kind: Space, char_start: 14580, char_end: 14581, byte_start: 14581, byte_end: 14582, column_start: 21, column_end: 22, line_start: 434, line_end: 434 }: " "
Token { kind: Text, char_start: 14581, char_end: 14585, byte_start: 14582, byte_end: 14586, column_start: 22, column_end: 26, line_start: 434, line_end: 434 }: 2019
Token { kind: Rparen, char_start: 14585, char_end: 14586, byte_start: 14586, byte_end: 14587, column_start: 26, column_end: 27, line_start: 434, line_end: 434 }: )
Token { kind: Newline, char_start: 14586, char_end: 14587, byte_start: 14587, byte_end: 14588, column_start: 27, column_end: 1, line_start: 434, line_end: 435 }: "\n"
Token { kind: Newline, char_start: 14587, char_end: 14588, byte_start: 14588, byte_end: 14589, column_start: 1, column_end: 1, line_start: 435, line_end: 436 }: "\n"
Token { kind: Hyphen, char_start: 14588, char_end: 14589, byte_start: 14589, byte_end: 14590, column_start: 1, column_end: 2, line_start: 436, line_end: 436 }: -
Token { kind: Space, char_start: 14589, char_end: 14590, byte_start: 14590, byte_end: 14591, column_start: 2, column_end: 3, line_start: 436, line_end: 436 }: " "
Token { kind: Text, char_start: 14590, char_end: 14597, byte_start: 14591, byte_end: 14598, column_start: 3, column_end: 10, line_start: 436, line_end: 436 }: Restore
Token { kind: Space, char_start: 14597, char_end: 14598, byte_start: 14598, byte_end: 14599, column_start: 10, column_end: 11, line_start: 436, line_end: 436 }: " "
Token { kind: Text, char_start: 14598, char_end: 14611, byte_start: 14599, byte_end: 14612, column_start: 11, column_end: 24, line_start: 436, line_end: 436 }: compatibility
Token { kind: Space, char_start: 14611, char_end: 14612, byte_start: 14612, byte_end: 14613, column_start: 24, column_end: 25, line_start: 436, line_end: 436 }: " "
Token { kind: Text, char_start: 14612, char_end: 14616, byte_start: 14613, byte_end: 14617, column_start: 25, column_end: 29, line_start: 436, line_end: 436 }: with
Token { kind: Space, char_start: 14616, char_end: 14617, byte_start: 14617, byte_end: 14618, column_start: 29, column_end: 30, line_start: 436, line_end: 436 }: " "
Token { kind: Text, char_start: 14617, char_end: 14625, byte_start: 14618, byte_end: 14626, column_start: 30, column_end: 38, line_start: 436, line_end: 436 }: versions
Token { kind: Space, char_start: 14625, char_end: 14626, byte_start: 14626, byte_end: 14627, column_start: 38, column_end: 39, line_start: 436, line_end: 436 }: " "
Token { kind: Text, char_start: 14626, char_end: 14628, byte_start: 14627, byte_end: 14629, column_start: 39, column_end: 41, line_start: 436, line_end: 436 }: of
Token { kind: Space, char_start: 14628, char_end: 14629, byte_start: 14629, byte_end: 14630, column_start: 41, column_end: 42, line_start: 436, line_end: 436 }: " "
Token { kind: Backtick, char_start: 14629, char_end: 14630, byte_start: 14630, byte_end: 14631, column_start: 42, column_end: 43, line_start: 436, line_end: 436 }: `
Token { kind: Text, char_start: 14630, char_end: 14632, byte_start: 14631, byte_end: 14633, column_start: 43, column_end: 45, line_start: 436, line_end: 436 }: rg
Token { kind: Backtick, char_start: 14632, char_end: 14633, byte_start: 14633, byte_end: 14634, column_start: 45, column_end: 46, line_start: 436, line_end: 436 }: `
Token { kind: Space, char_start: 14633, char_end: 14634, byte_start: 14634, byte_end: 14635, column_start: 46, column_end: 47, line_start: 436, line_end: 436 }: " "
Token { kind: Text, char_start: 14634, char_end: 14639, byte_start: 14635, byte_end: 14640, column_start: 47, column_end: 52, line_start: 436, line_end: 436 }: prior
Token { kind: Space, char_start: 14639, char_end: 14640, byte_start: 14640, byte_end: 14641, column_start: 52, column_end: 53, line_start: 436, line_end: 436 }: " "
Token { kind: Text, char_start: 14640, char_end: 14642, byte_start: 14641, byte_end: 14643, column_start: 53, column_end: 55, line_start: 436, line_end: 436 }: to
Token { kind: Space, char_start: 14642, char_end: 14643, byte_start: 14643, byte_end: 14644, column_start: 55, column_end: 56, line_start: 436, line_end: 436 }: " "
Token { kind: Text, char_start: 14643, char_end: 14647, byte_start: 14644, byte_end: 14648, column_start: 56, column_end: 60, line_start: 436, line_end: 436 }: v0.8
Token { kind: Newline, char_start: 14647, char_end: 14648, byte_start: 14648, byte_end: 14649, column_start: 60, column_end: 1, line_start: 436, line_end: 437 }: "\n"
Token { kind: Space, char_start: 14648, char_end: 14650, byte_start: 14649, byte_end: 14651, column_start: 1, column_end: 3, line_start: 437, line_end: 437 }: "  "
Token { kind: Lparen, char_start: 14650, char_end: 14651, byte_start: 14651, byte_end: 14652, column_start: 3, column_end: 4, line_start: 437, line_end: 437 }: (
Token { kind: Text, char_start: 14651, char_end: 14694, byte_start: 14652, byte_end: 14695, column_start: 4, column_end: 47, line_start: 437, line_end: 437 }: https://github.com/wincent/ferret/issues/59
Token { kind: Rparen, char_start: 14694, char_end: 14695, byte_start: 14695, byte_end: 14696, column_start: 47, column_end: 48, line_start: 437, line_end: 437 }: )
Token { kind: Text, char_start: 14695, char_end: 14696, byte_start: 14696, byte_end: 14697, column_start: 48, column_end: 49, line_start: 437, line_end: 437 }: .
Token { kind: Newline, char_start: 14696, char_end: 14697, byte_start: 14697, byte_end: 14698, column_start: 49, column_end: 1, line_start: 437, line_end: 438 }: "\n"
Token { kind: Newline, char_start: 14697, char_end: 14698, byte_start: 14698, byte_end: 14699, column_start: 1, column_end: 1, line_start: 438, line_end: 439 }: "\n"
Token { kind: Heading(Heading2), char_start: 14698, char_end: 14700, byte_start: 14699, byte_end: 14701, column_start: 1, column_end: 3, line_start: 439, line_end: 439 }: ##
Token { kind: Space, char_start: 14700, char_end: 14701, byte_start: 14701, byte_end: 14702, column_start: 3, column_end: 4, line_start: 439, line_end: 439 }: " "
Token { kind: Text, char_start: 14701, char_end: 14706, byte_start: 14702, byte_end: 14707, column_start: 4, column_end: 9, line_start: 439, line_end: 439 }: 4.0.1
Token { kind: Space, char_start: 14706, char_end: 14707, byte_start: 14707, byte_end: 14708, column_start: 9, column_end: 10, line_start: 439, line_end: 439 }: " "
Token { kind: Lparen, char_start: 14707, char_end: 14708, byte_start: 14708, byte_end: 14709, column_start: 10, column_end: 11, line_start: 439, line_end: 439 }: (
Token { kind: Text, char_start: 14708, char_end: 14709, byte_start: 14709, byte_end: 14710, column_start: 11, column_end: 12, line_start: 439, line_end: 439 }: 8
Token { kind: Space, char_start: 14709, char_end: 14710, byte_start: 14710, byte_end: 14711, column_start: 12, column_end: 13, line_start: 439, line_end: 439 }: " "
Token { kind: Text, char_start: 14710, char_end: 14717, byte_start: 14711, byte_end: 14718, column_start: 13, column_end: 20, line_start: 439, line_end: 439 }: January
Token { kind: Space, char_start: 14717, char_end: 14718, byte_start: 14718, byte_end: 14719, column_start: 20, column_end: 21, line_start: 439, line_end: 439 }: " "
Token { kind: Text, char_start: 14718, char_end: 14722, byte_start: 14719, byte_end: 14723, column_start: 21, column_end: 25, line_start: 439, line_end: 439 }: 2019
Token { kind: Rparen, char_start: 14722, char_end: 14723, byte_start: 14723, byte_end: 14724, column_start: 25, column_end: 26, line_start: 439, line_end: 439 }: )
Token { kind: Newline, char_start: 14723, char_end: 14724, byte_start: 14724, byte_end: 14725, column_start: 26, column_end: 1, line_start: 439, line_end: 440 }: "\n"
Token { kind: Newline, char_start: 14724, char_end: 14725, byte_start: 14725, byte_end: 14726, column_start: 1, column_end: 1, line_start: 440, line_end: 441 }: "\n"
Token { kind: Hyphen, char_start: 14725, char_end: 14726, byte_start: 14726, byte_end: 14727, column_start: 1, column_end: 2, line_start: 441, line_end: 441 }: -
Token { kind: Space, char_start: 14726, char_end: 14727, byte_start: 14727, byte_end: 14728, column_start: 2, column_end: 3, line_start: 441, line_end: 441 }: " "
Token { kind: Text, char_start: 14727, char_end: 14731, byte_start: 14728, byte_end: 14732, column_start: 3, column_end: 7, line_start: 441, line_end: 441 }: Make
Token { kind: Space, char_start: 14731, char_end: 14732, byte_start: 14732, byte_end: 14733, column_start: 7, column_end: 8, line_start: 441, line_end: 441 }: " "
Token { kind: Bar, char_start: 14732, char_end: 14733, byte_start: 14733, byte_end: 14734, column_start: 8, column_end: 9, line_start: 441, line_end: 441 }: |
Token { kind: Text, char_start: 14733, char_end: 14738, byte_start: 14734, byte_end: 14739, column_start: 9, column_end: 14, line_start: 441, line_end: 441 }: :Acks
Token { kind: Bar, char_start: 14738, char_end: 14739, byte_start: 14739, byte_end: 14740, column_start: 14, column_end: 15, line_start: 441, line_end: 441 }: |
Token { kind: Space, char_start: 14739, char_end: 14740, byte_start: 14740, byte_end: 14741, column_start: 15, column_end: 16, line_start: 441, line_end: 441 }: " "
Token { kind: Text, char_start: 14740, char_end: 14748, byte_start: 14741, byte_end: 14749, column_start: 16, column_end: 24, line_start: 441, line_end: 441 }: behavior
Token { kind: Space, char_start: 14748, char_end: 14749, byte_start: 14749, byte_end: 14750, column_start: 24, column_end: 25, line_start: 441, line_end: 441 }: " "
Token { kind: Text, char_start: 14749, char_end: 14752, byte_start: 14750, byte_end: 14753, column_start: 25, column_end: 28, line_start: 441, line_end: 441 }: the
Token { kind: Space, char_start: 14752, char_end: 14753, byte_start: 14753, byte_end: 14754, column_start: 28, column_end: 29, line_start: 441, line_end: 441 }: " "
Token { kind: Text, char_start: 14753, char_end: 14757, byte_start: 14754, byte_end: 14758, column_start: 29, column_end: 33, line_start: 441, line_end: 441 }: same
Token { kind: Space, char_start: 14757, char_end: 14758, byte_start: 14758, byte_end: 14759, column_start: 33, column_end: 34, line_start: 441, line_end: 441 }: " "
Token { kind: Text, char_start: 14758, char_end: 14770, byte_start: 14759, byte_end: 14771, column_start: 34, column_end: 46, line_start: 441, line_end: 441 }: irrespective
Token { kind: Space, char_start: 14770, char_end: 14771, byte_start: 14771, byte_end: 14772, column_start: 46, column_end: 47, line_start: 441, line_end: 441 }: " "
Token { kind: Text, char_start: 14771, char_end: 14773, byte_start: 14772, byte_end: 14774, column_start: 47, column_end: 49, line_start: 441, line_end: 441 }: of
Token { kind: Space, char_start: 14773, char_end: 14774, byte_start: 14774, byte_end: 14775, column_start: 49, column_end: 50, line_start: 441, line_end: 441 }: " "
Token { kind: Text, char_start: 14774, char_end: 14777, byte_start: 14775, byte_end: 14778, column_start: 50, column_end: 53, line_start: 441, line_end: 441 }: the
Token { kind: Space, char_start: 14777, char_end: 14778, byte_start: 14778, byte_end: 14779, column_start: 53, column_end: 54, line_start: 441, line_end: 441 }: " "
Token { kind: Bar, char_start: 14778, char_end: 14779, byte_start: 14779, byte_end: 14780, column_start: 54, column_end: 55, line_start: 441, line_end: 441 }: |
Token { kind: Text, char_start: 14779, char_end: 14789, byte_start: 14780, byte_end: 14790, column_start: 55, column_end: 65, line_start: 441, line_end: 441 }: 'gdefault'
Token { kind: Bar, char_start: 14789, char_end: 14790, byte_start: 14790, byte_end: 14791, column_start: 65, column_end: 66, line_start: 441, line_end: 441 }: |
Token { kind: Space, char_start: 14790, char_end: 14791, byte_start: 14791, byte_end: 14792, column_start: 66, column_end: 67, line_start: 441, line_end: 441 }: " "
Token { kind: Text, char_start: 14791, char_end: 14799, byte_start: 14792, byte_end: 14800, column_start: 67, column_end: 75, line_start: 441, line_end: 441 }: setting.
Token { kind: Newline, char_start: 14799, char_end: 14800, byte_start: 14800, byte_end: 14801, column_start: 75, column_end: 1, line_start: 441, line_end: 442 }: "\n"
Token { kind: Newline, char_start: 14800, char_end: 14801, byte_start: 14801, byte_end: 14802, column_start: 1, column_end: 1, line_start: 442, line_end: 443 }: "\n"
Token { kind: Heading(Heading2), char_start: 14801, char_end: 14803, byte_start: 14802, byte_end: 14804, column_start: 1, column_end: 3, line_start: 443, line_end: 443 }: ##
Token { kind: Space, char_start: 14803, char_end: 14804, byte_start: 14804, byte_end: 14805, column_start: 3, column_end: 4, line_start: 443, line_end: 443 }: " "
Token { kind: Text, char_start: 14804, char_end: 14807, byte_start: 14805, byte_end: 14808, column_start: 4, column_end: 7, line_start: 443, line_end: 443 }: 4.0
Token { kind: Space, char_start: 14807, char_end: 14808, byte_start: 14808, byte_end: 14809, column_start: 7, column_end: 8, line_start: 443, line_end: 443 }: " "
Token { kind: Lparen, char_start: 14808, char_end: 14809, byte_start: 14809, byte_end: 14810, column_start: 8, column_end: 9, line_start: 443, line_end: 443 }: (
Token { kind: Text, char_start: 14809, char_end: 14811, byte_start: 14810, byte_end: 14812, column_start: 9, column_end: 11, line_start: 443, line_end: 443 }: 25
Token { kind: Space, char_start: 14811, char_end: 14812, byte_start: 14812, byte_end: 14813, column_start: 11, column_end: 12, line_start: 443, line_end: 443 }: " "
Token { kind: Text, char_start: 14812, char_end: 14820, byte_start: 14813, byte_end: 14821, column_start: 12, column_end: 20, line_start: 443, line_end: 443 }: December
Token { kind: Space, char_start: 14820, char_end: 14821, byte_start: 14821, byte_end: 14822, column_start: 20, column_end: 21, line_start: 443, line_end: 443 }: " "
Token { kind: Text, char_start: 14821, char_end: 14825, byte_start: 14822, byte_end: 14826, column_start: 21, column_end: 25, line_start: 443, line_end: 443 }: 2018
Token { kind: Rparen, char_start: 14825, char_end: 14826, byte_start: 14826, byte_end: 14827, column_start: 25, column_end: 26, line_start: 443, line_end: 443 }: )
Token { kind: Newline, char_start: 14826, char_end: 14827, byte_start: 14827, byte_end: 14828, column_start: 26, column_end: 1, line_start: 443, line_end: 444 }: "\n"
Token { kind: Newline, char_start: 14827, char_end: 14828, byte_start: 14828, byte_end: 14829, column_start: 1, column_end: 1, line_start: 444, line_end: 445 }: "\n"
Token { kind: Hyphen, char_start: 14828, char_end: 14829, byte_start: 14829, byte_end: 14830, column_start: 1, column_end: 2, line_start: 445, line_end: 445 }: -
Token { kind: Space, char_start: 14829, char_end: 14830, byte_start: 14830, byte_end: 14831, column_start: 2, column_end: 3, line_start: 445, line_end: 445 }: " "
Token { kind: Text, char_start: 14830, char_end: 14833, byte_start: 14831, byte_end: 14834, column_start: 3, column_end: 6, line_start: 445, line_end: 445 }: Try
Token { kind: Space, char_start: 14833, char_end: 14834, byte_start: 14834, byte_end: 14835, column_start: 6, column_end: 7, line_start: 445, line_end: 445 }: " "
Token { kind: Text, char_start: 14834, char_end: 14836, byte_start: 14835, byte_end: 14837, column_start: 7, column_end: 9, line_start: 445, line_end: 445 }: to
Token { kind: Space, char_start: 14836, char_end: 14837, byte_start: 14837, byte_end: 14838, column_start: 9, column_end: 10, line_start: 445, line_end: 445 }: " "
Token { kind: Text, char_start: 14837, char_end: 14842, byte_start: 14838, byte_end: 14843, column_start: 10, column_end: 15, line_start: 445, line_end: 445 }: avoid
Token { kind: Space, char_start: 14842, char_end: 14843, byte_start: 14843, byte_end: 14844, column_start: 15, column_end: 16, line_start: 445, line_end: 445 }: " "
Token { kind: Text, char_start: 14843, char_end: 14849, byte_start: 14844, byte_end: 14850, column_start: 16, column_end: 22, line_start: 445, line_end: 445 }: "press
Token { kind: Space, char_start: 14849, char_end: 14850, byte_start: 14850, byte_end: 14851, column_start: 22, column_end: 23, line_start: 445, line_end: 445 }: " "
Token { kind: Text, char_start: 14850, char_end: 14855, byte_start: 14851, byte_end: 14856, column_start: 23, column_end: 28, line_start: 445, line_end: 445 }: ENTER
Token { kind: Space, char_start: 14855, char_end: 14856, byte_start: 14856, byte_end: 14857, column_start: 28, column_end: 29, line_start: 445, line_end: 445 }: " "
Token { kind: Text, char_start: 14856, char_end: 14858, byte_start: 14857, byte_end: 14859, column_start: 29, column_end: 31, line_start: 445, line_end: 445 }: to
Token { kind: Space, char_start: 14858, char_end: 14859, byte_start: 14859, byte_end: 14860, column_start: 31, column_end: 32, line_start: 445, line_end: 445 }: " "
Token { kind: Text, char_start: 14859, char_end: 14868, byte_start: 14860, byte_end: 14869, column_start: 32, column_end: 41, line_start: 445, line_end: 445 }: continue"
Token { kind: Space, char_start: 14868, char_end: 14869, byte_start: 14869, byte_end: 14870, column_start: 41, column_end: 42, line_start: 445, line_end: 445 }: " "
Token { kind: Text, char_start: 14869, char_end: 14877, byte_start: 14870, byte_end: 14878, column_start: 42, column_end: 50, line_start: 445, line_end: 445 }: prompts.
Token { kind: Newline, char_start: 14877, char_end: 14878, byte_start: 14878, byte_end: 14879, column_start: 50, column_end: 1, line_start: 445, line_end: 446 }: "\n"
Token { kind: Hyphen, char_start: 14878, char_end: 14879, byte_start: 14879, byte_end: 14880, column_start: 1, column_end: 2, line_start: 446, line_end: 446 }: -
Token { kind: Space, char_start: 14879, char_end: 14880, byte_start: 14880, byte_end: 14881, column_start: 2, column_end: 3, line_start: 446, line_end: 446 }: " "
Token { kind: Text, char_start: 14880, char_end: 14883, byte_start: 14881, byte_end: 14884, column_start: 3, column_end: 6, line_start: 446, line_end: 446 }: Put
Token { kind: Space, char_start: 14883, char_end: 14884, byte_start: 14884, byte_end: 14885, column_start: 6, column_end: 7, line_start: 446, line_end: 446 }: " "
Token { kind: Text, char_start: 14884, char_end: 14890, byte_start: 14885, byte_end: 14891, column_start: 7, column_end: 13, line_start: 446, line_end: 446 }: search
Token { kind: Space, char_start: 14890, char_end: 14891, byte_start: 14891, byte_end: 14892, column_start: 13, column_end: 14, line_start: 446, line_end: 446 }: " "
Token { kind: Text, char_start: 14891, char_end: 14895, byte_start: 14892, byte_end: 14896, column_start: 14, column_end: 18, line_start: 446, line_end: 446 }: term
Token { kind: Space, char_start: 14895, char_end: 14896, byte_start: 14896, byte_end: 14897, column_start: 18, column_end: 19, line_start: 446, line_end: 446 }: " "
Token { kind: Text, char_start: 14896, char_end: 14898, byte_start: 14897, byte_end: 14899, column_start: 19, column_end: 21, line_start: 446, line_end: 446 }: in
Token { kind: Space, char_start: 14898, char_end: 14899, byte_start: 14899, byte_end: 14900, column_start: 21, column_end: 22, line_start: 446, line_end: 446 }: " "
Token { kind: Bar, char_start: 14899, char_end: 14900, byte_start: 14900, byte_end: 14901, column_start: 22, column_end: 23, line_start: 446, line_end: 446 }: |
Token { kind: Text, char_start: 14900, char_end: 14916, byte_start: 14901, byte_end: 14917, column_start: 23, column_end: 39, line_start: 446, line_end: 446 }: w:quickfix_title
Token { kind: Bar, char_start: 14916, char_end: 14917, byte_start: 14917, byte_end: 14918, column_start: 39, column_end: 40, line_start: 446, line_end: 446 }: |
Token { kind: Space, char_start: 14917, char_end: 14918, byte_start: 14918, byte_end: 14919, column_start: 40, column_end: 41, line_start: 446, line_end: 446 }: " "
Token { kind: Text, char_start: 14918, char_end: 14921, byte_start: 14919, byte_end: 14922, column_start: 41, column_end: 44, line_start: 446, line_end: 446 }: for
Token { kind: Space, char_start: 14921, char_end: 14922, byte_start: 14922, byte_end: 14923, column_start: 44, column_end: 45, line_start: 446, line_end: 446 }: " "
Token { kind: Text, char_start: 14922, char_end: 14925, byte_start: 14923, byte_end: 14926, column_start: 45, column_end: 48, line_start: 446, line_end: 446 }: use
Token { kind: Space, char_start: 14925, char_end: 14926, byte_start: 14926, byte_end: 14927, column_start: 48, column_end: 49, line_start: 446, line_end: 446 }: " "
Token { kind: Text, char_start: 14926, char_end: 14928, byte_start: 14927, byte_end: 14929, column_start: 49, column_end: 51, line_start: 446, line_end: 446 }: in
Token { kind: Space, char_start: 14928, char_end: 14929, byte_start: 14929, byte_end: 14930, column_start: 51, column_end: 52, line_start: 446, line_end: 446 }: " "
Token { kind: Text, char_start: 14929, char_end: 14940, byte_start: 14930, byte_end: 14941, column_start: 52, column_end: 63, line_start: 446, line_end: 446 }: statuslines
Token { kind: Newline, char_start: 14940, char_end: 14941, byte_start: 14941, byte_end: 14942, column_start: 63, column_end: 1, line_start: 446, line_end: 447 }: "\n"
Token { kind: Space, char_start: 14941, char_end: 14943, byte_start: 14942, byte_end: 14944, column_start: 1, column_end: 3, line_start: 447, line_end: 447 }: "  "
Token { kind: Lparen, char_start: 14943, char_end: 14944, byte_start: 14944, byte_end: 14945, column_start: 3, column_end: 4, line_start: 447, line_end: 447 }: (
Token { kind: Text, char_start: 14944, char_end: 14985, byte_start: 14945, byte_end: 14986, column_start: 4, column_end: 45, line_start: 447, line_end: 447 }: https://github.com/wincent/ferret/pull/57
Token { kind: Rparen, char_start: 14985, char_end: 14986, byte_start: 14986, byte_end: 14987, column_start: 45, column_end: 46, line_start: 447, line_end: 447 }: )
Token { kind: Text, char_start: 14986, char_end: 14987, byte_start: 14987, byte_end: 14988, column_start: 46, column_end: 47, line_start: 447, line_end: 447 }: .
Token { kind: Newline, char_start: 14987, char_end: 14988, byte_start: 14988, byte_end: 14989, column_start: 47, column_end: 1, line_start: 447, line_end: 448 }: "\n"
Token { kind: Hyphen, char_start: 14988, char_end: 14989, byte_start: 14989, byte_end: 14990, column_start: 1, column_end: 2, line_start: 448, line_end: 448 }: -
Token { kind: Space, char_start: 14989, char_end: 14990, byte_start: 14990, byte_end: 14991, column_start: 2, column_end: 3, line_start: 448, line_end: 448 }: " "
Token { kind: Text, char_start: 14990, char_end: 14993, byte_start: 14991, byte_end: 14994, column_start: 3, column_end: 6, line_start: 448, line_end: 448 }: Add
Token { kind: Space, char_start: 14993, char_end: 14994, byte_start: 14994, byte_end: 14995, column_start: 6, column_end: 7, line_start: 448, line_end: 448 }: " "
Token { kind: Bar, char_start: 14994, char_end: 14995, byte_start: 14995, byte_end: 14996, column_start: 7, column_end: 8, line_start: 448, line_end: 448 }: |
Token { kind: Text, char_start: 14995, char_end: 15022, byte_start: 14996, byte_end: 15023, column_start: 8, column_end: 35, line_start: 448, line_end: 448 }: g:FerretExecutableArguments
Token { kind: Bar, char_start: 15022, char_end: 15023, byte_start: 15023, byte_end: 15024, column_start: 35, column_end: 36, line_start: 448, line_end: 448 }: |
Token { kind: Space, char_start: 15023, char_end: 15024, byte_start: 15024, byte_end: 15025, column_start: 36, column_end: 37, line_start: 448, line_end: 448 }: " "
Token { kind: Text, char_start: 15024, char_end: 15027, byte_start: 15025, byte_end: 15028, column_start: 37, column_end: 40, line_start: 448, line_end: 448 }: and
Token { kind: Space, char_start: 15027, char_end: 15028, byte_start: 15028, byte_end: 15029, column_start: 40, column_end: 41, line_start: 448, line_end: 448 }: " "
Token { kind: Bar, char_start: 15028, char_end: 15029, byte_start: 15029, byte_end: 15030, column_start: 41, column_end: 42, line_start: 448, line_end: 448 }: |
Token { kind: Text, char_start: 15029, char_end: 15035, byte_start: 15030, byte_end: 15036, column_start: 42, column_end: 48, line_start: 448, line_end: 448 }: ferret
Token { kind: Heading(Heading1), char_start: 15035, char_end: 15036, byte_start: 15036, byte_end: 15037, column_start: 48, column_end: 49, line_start: 448, line_end: 448 }: #
Token { kind: Text, char_start: 15036, char_end: 15057, byte_start: 15037, byte_end: 15058, column_start: 49, column_end: 70, line_start: 448, line_end: 448 }: get_default_arguments
Token { kind: Lparen, char_start: 15057, char_end: 15058, byte_start: 15058, byte_end: 15059, column_start: 70, column_end: 71, line_start: 448, line_end: 448 }: (
Token { kind: Rparen, char_start: 15058, char_end: 15059, byte_start: 15059, byte_end: 15060, column_start: 71, column_end: 72, line_start: 448, line_end: 448 }: )
Token { kind: Bar, char_start: 15059, char_end: 15060, byte_start: 15060, byte_end: 15061, column_start: 72, column_end: 73, line_start: 448, line_end: 448 }: |
Token { kind: Newline, char_start: 15060, char_end: 15061, byte_start: 15061, byte_end: 15062, column_start: 73, column_end: 1, line_start: 448, line_end: 449 }: "\n"
Token { kind: Space, char_start: 15061, char_end: 15063, byte_start: 15062, byte_end: 15064, column_start: 1, column_end: 3, line_start: 449, line_end: 449 }: "  "
Token { kind: Lparen, char_start: 15063, char_end: 15064, byte_start: 15064, byte_end: 15065, column_start: 3, column_end: 4, line_start: 449, line_end: 449 }: (
Token { kind: Text, char_start: 15064, char_end: 15105, byte_start: 15065, byte_end: 15106, column_start: 4, column_end: 45, line_start: 449, line_end: 449 }: https://github.com/wincent/ferret/pull/46
Token { kind: Rparen, char_start: 15105, char_end: 15106, byte_start: 15106, byte_end: 15107, column_start: 45, column_end: 46, line_start: 449, line_end: 449 }: )
Token { kind: Text, char_start: 15106, char_end: 15107, byte_start: 15107, byte_end: 15108, column_start: 46, column_end: 47, line_start: 449, line_end: 449 }: .
Token { kind: Newline, char_start: 15107, char_end: 15108, byte_start: 15108, byte_end: 15109, column_start: 47, column_end: 1, line_start: 449, line_end: 450 }: "\n"
Token { kind: Newline, char_start: 15108, char_end: 15109, byte_start: 15109, byte_end: 15110, column_start: 1, column_end: 1, line_start: 450, line_end: 451 }: "\n"
Token { kind: Heading(Heading2), char_start: 15109, char_end: 15111, byte_start: 15110, byte_end: 15112, column_start: 1, column_end: 3, line_start: 451, line_end: 451 }: ##
Token { kind: Space, char_start: 15111, char_end: 15112, byte_start: 15112, byte_end: 15113, column_start: 3, column_end: 4, line_start: 451, line_end: 451 }: " "
Token { kind: Text, char_start: 15112, char_end: 15117, byte_start: 15113, byte_end: 15118, column_start: 4, column_end: 9, line_start: 451, line_end: 451 }: 3.0.3
Token { kind: Space, char_start: 15117, char_end: 15118, byte_start: 15118, byte_end: 15119, column_start: 9, column_end: 10, line_start: 451, line_end: 451 }: " "
Token { kind: Lparen, char_start: 15118, char_end: 15119, byte_start: 15119, byte_end: 15120, column_start: 10, column_end: 11, line_start: 451, line_end: 451 }: (
Token { kind: Text, char_start: 15119, char_end: 15121, byte_start: 15120, byte_end: 15122, column_start: 11, column_end: 13, line_start: 451, line_end: 451 }: 23
Token { kind: Space, char_start: 15121, char_end: 15122, byte_start: 15122, byte_end: 15123, column_start: 13, column_end: 14, line_start: 451, line_end: 451 }: " "
Token { kind: Text, char_start: 15122, char_end: 15127, byte_start: 15123, byte_end: 15128, column_start: 14, column_end: 19, line_start: 451, line_end: 451 }: March
Token { kind: Space, char_start: 15127, char_end: 15128, byte_start: 15128, byte_end: 15129, column_start: 19, column_end: 20, line_start: 451, line_end: 451 }: " "
Token { kind: Text, char_start: 15128, char_end: 15132, byte_start: 15129, byte_end: 15133, column_start: 20, column_end: 24, line_start: 451, line_end: 451 }: 2018
Token { kind: Rparen, char_start: 15132, char_end: 15133, byte_start: 15133, byte_end: 15134, column_start: 24, column_end: 25, line_start: 451, line_end: 451 }: )
Token { kind: Newline, char_start: 15133, char_end: 15134, byte_start: 15134, byte_end: 15135, column_start: 25, column_end: 1, line_start: 451, line_end: 452 }: "\n"
Token { kind: Newline, char_start: 15134, char_end: 15135, byte_start: 15135, byte_end: 15136, column_start: 1, column_end: 1, line_start: 452, line_end: 453 }: "\n"
Token { kind: Hyphen, char_start: 15135, char_end: 15136, byte_start: 15136, byte_end: 15137, column_start: 1, column_end: 2, line_start: 453, line_end: 453 }: -
Token { kind: Space, char_start: 15136, char_end: 15137, byte_start: 15137, byte_end: 15138, column_start: 2, column_end: 3, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15137, char_end: 15140, byte_start: 15138, byte_end: 15141, column_start: 3, column_end: 6, line_start: 453, line_end: 453 }: Fix
Token { kind: Space, char_start: 15140, char_end: 15141, byte_start: 15141, byte_end: 15142, column_start: 6, column_end: 7, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15141, char_end: 15144, byte_start: 15142, byte_end: 15145, column_start: 7, column_end: 10, line_start: 453, line_end: 453 }: for
Token { kind: Space, char_start: 15144, char_end: 15145, byte_start: 15145, byte_end: 15146, column_start: 10, column_end: 11, line_start: 453, line_end: 453 }: " "
Token { kind: Bar, char_start: 15145, char_end: 15146, byte_start: 15146, byte_end: 15147, column_start: 11, column_end: 12, line_start: 453, line_end: 453 }: |
Token { kind: Text, char_start: 15146, char_end: 15151, byte_start: 15147, byte_end: 15152, column_start: 12, column_end: 17, line_start: 453, line_end: 453 }: :Lack
Token { kind: Bar, char_start: 15151, char_end: 15152, byte_start: 15152, byte_end: 15153, column_start: 17, column_end: 18, line_start: 453, line_end: 453 }: |
Token { kind: Space, char_start: 15152, char_end: 15153, byte_start: 15153, byte_end: 15154, column_start: 18, column_end: 19, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15153, char_end: 15160, byte_start: 15154, byte_end: 15161, column_start: 19, column_end: 26, line_start: 453, line_end: 453 }: results
Token { kind: Space, char_start: 15160, char_end: 15161, byte_start: 15161, byte_end: 15162, column_start: 26, column_end: 27, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15161, char_end: 15168, byte_start: 15162, byte_end: 15169, column_start: 27, column_end: 34, line_start: 453, line_end: 453 }: opening
Token { kind: Space, char_start: 15168, char_end: 15169, byte_start: 15169, byte_end: 15170, column_start: 34, column_end: 35, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15169, char_end: 15171, byte_start: 15170, byte_end: 15172, column_start: 35, column_end: 37, line_start: 453, line_end: 453 }: in
Token { kind: Space, char_start: 15171, char_end: 15172, byte_start: 15172, byte_end: 15173, column_start: 37, column_end: 38, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15172, char_end: 15180, byte_start: 15173, byte_end: 15181, column_start: 38, column_end: 46, line_start: 453, line_end: 453 }: quickfix
Token { kind: Space, char_start: 15180, char_end: 15181, byte_start: 15181, byte_end: 15182, column_start: 46, column_end: 47, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15181, char_end: 15188, byte_start: 15182, byte_end: 15189, column_start: 47, column_end: 54, line_start: 453, line_end: 453 }: listing
Token { kind: Space, char_start: 15188, char_end: 15189, byte_start: 15189, byte_end: 15190, column_start: 54, column_end: 55, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15189, char_end: 15191, byte_start: 15190, byte_end: 15192, column_start: 55, column_end: 57, line_start: 453, line_end: 453 }: in
Token { kind: Space, char_start: 15191, char_end: 15192, byte_start: 15192, byte_end: 15193, column_start: 57, column_end: 58, line_start: 453, line_end: 453 }: " "
Token { kind: Text, char_start: 15192, char_end: 15198, byte_start: 15193, byte_end: 15199, column_start: 58, column_end: 64, line_start: 453, line_end: 453 }: Neovim
Token { kind: Newline, char_start: 15198, char_end: 15199, byte_start: 15199, byte_end: 15200, column_start: 64, column_end: 1, line_start: 453, line_end: 454 }: "\n"
Token { kind: Space, char_start: 15199, char_end: 15201, byte_start: 15200, byte_end: 15202, column_start: 1, column_end: 3, line_start: 454, line_end: 454 }: "  "
Token { kind: Lparen, char_start: 15201, char_end: 15202, byte_start: 15202, byte_end: 15203, column_start: 3, column_end: 4, line_start: 454, line_end: 454 }: (
Token { kind: Text, char_start: 15202, char_end: 15245, byte_start: 15203, byte_end: 15246, column_start: 4, column_end: 47, line_start: 454, line_end: 454 }: https://github.com/wincent/ferret/issues/47
Token { kind: Rparen, char_start: 15245, char_end: 15246, byte_start: 15246, byte_end: 15247, column_start: 47, column_end: 48, line_start: 454, line_end: 454 }: )
Token { kind: Text, char_start: 15246, char_end: 15247, byte_start: 15247, byte_end: 15248, column_start: 48, column_end: 49, line_start: 454, line_end: 454 }: .
Token { kind: Newline, char_start: 15247, char_end: 15248, byte_start: 15248, byte_end: 15249, column_start: 49, column_end: 1, line_start: 454, line_end: 455 }: "\n"
Token { kind: Newline, char_start: 15248, char_end: 15249, byte_start: 15249, byte_end: 15250, column_start: 1, column_end: 1, line_start: 455, line_end: 456 }: "\n"
Token { kind: Heading(Heading2), char_start: 15249, char_end: 15251, byte_start: 15250, byte_end: 15252, column_start: 1, column_end: 3, line_start: 456, line_end: 456 }: ##
Token { kind: Space, char_start: 15251, char_end: 15252, byte_start: 15252, byte_end: 15253, column_start: 3, column_end: 4, line_start: 456, line_end: 456 }: " "
Token { kind: Text, char_start: 15252, char_end: 15257, byte_start: 15253, byte_end: 15258, column_start: 4, column_end: 9, line_start: 456, line_end: 456 }: 3.0.2
Token { kind: Space, char_start: 15257, char_end: 15258, byte_start: 15258, byte_end: 15259, column_start: 9, column_end: 10, line_start: 456, line_end: 456 }: " "
Token { kind: Lparen, char_start: 15258, char_end: 15259, byte_start: 15259, byte_end: 15260, column_start: 10, column_end: 11, line_start: 456, line_end: 456 }: (
Token { kind: Text, char_start: 15259, char_end: 15261, byte_start: 15260, byte_end: 15262, column_start: 11, column_end: 13, line_start: 456, line_end: 456 }: 25
Token { kind: Space, char_start: 15261, char_end: 15262, byte_start: 15262, byte_end: 15263, column_start: 13, column_end: 14, line_start: 456, line_end: 456 }: " "
Token { kind: Text, char_start: 15262, char_end: 15269, byte_start: 15263, byte_end: 15270, column_start: 14, column_end: 21, line_start: 456, line_end: 456 }: October
Token { kind: Space, char_start: 15269, char_end: 15270, byte_start: 15270, byte_end: 15271, column_start: 21, column_end: 22, line_start: 456, line_end: 456 }: " "
Token { kind: Text, char_start: 15270, char_end: 15274, byte_start: 15271, byte_end: 15275, column_start: 22, column_end: 26, line_start: 456, line_end: 456 }: 2017
Token { kind: Rparen, char_start: 15274, char_end: 15275, byte_start: 15275, byte_end: 15276, column_start: 26, column_end: 27, line_start: 456, line_end: 456 }: )
Token { kind: Newline, char_start: 15275, char_end: 15276, byte_start: 15276, byte_end: 15277, column_start: 27, column_end: 1, line_start: 456, line_end: 457 }: "\n"
Token { kind: Newline, char_start: 15276, char_end: 15277, byte_start: 15277, byte_end: 15278, column_start: 1, column_end: 1, line_start: 457, line_end: 458 }: "\n"
Token { kind: Hyphen, char_start: 15277, char_end: 15278, byte_start: 15278, byte_end: 15279, column_start: 1, column_end: 2, line_start: 458, line_end: 458 }: -
Token { kind: Space, char_start: 15278, char_end: 15279, byte_start: 15279, byte_end: 15280, column_start: 2, column_end: 3, line_start: 458, line_end: 458 }: " "
Token { kind: Text, char_start: 15279, char_end: 15282, byte_start: 15280, byte_end: 15283, column_start: 3, column_end: 6, line_start: 458, line_end: 458 }: Fix
Token { kind: Space, char_start: 15282, char_end: 15283, byte_start: 15283, byte_end: 15284, column_start: 6, column_end: 7, line_start: 458, line_end: 458 }: " "
Token { kind: Text, char_start: 15283, char_end: 15289, byte_start: 15284, byte_end: 15290, column_start: 7, column_end: 13, line_start: 458, line_end: 458 }: broken
Token { kind: Space, char_start: 15289, char_end: 15290, byte_start: 15290, byte_end: 15291, column_start: 13, column_end: 14, line_start: 458, line_end: 458 }: " "
Token { kind: Bar, char_start: 15290, char_end: 15291, byte_start: 15291, byte_end: 15292, column_start: 14, column_end: 15, line_start: 458, line_end: 458 }: |
Token { kind: Text, char_start: 15291, char_end: 15296, byte_start: 15292, byte_end: 15297, column_start: 15, column_end: 20, line_start: 458, line_end: 458 }: :Back
Token { kind: Bar, char_start: 15296, char_end: 15297, byte_start: 15297, byte_end: 15298, column_start: 20, column_end: 21, line_start: 458, line_end: 458 }: |
Token { kind: Space, char_start: 15297, char_end: 15298, byte_start: 15298, byte_end: 15299, column_start: 21, column_end: 22, line_start: 458, line_end: 458 }: " "
Token { kind: Text, char_start: 15298, char_end: 15301, byte_start: 15299, byte_end: 15302, column_start: 22, column_end: 25, line_start: 458, line_end: 458 }: and
Token { kind: Space, char_start: 15301, char_end: 15302, byte_start: 15302, byte_end: 15303, column_start: 25, column_end: 26, line_start: 458, line_end: 458 }: " "
Token { kind: Bar, char_start: 15302, char_end: 15303, byte_start: 15303, byte_end: 15304, column_start: 26, column_end: 27, line_start: 458, line_end: 458 }: |
Token { kind: Text, char_start: 15303, char_end: 15309, byte_start: 15304, byte_end: 15310, column_start: 27, column_end: 33, line_start: 458, line_end: 458 }: :Black
Token { kind: Bar, char_start: 15309, char_end: 15310, byte_start: 15310, byte_end: 15311, column_start: 33, column_end: 34, line_start: 458, line_end: 458 }: |
Token { kind: Space, char_start: 15310, char_end: 15311, byte_start: 15311, byte_end: 15312, column_start: 34, column_end: 35, line_start: 458, line_end: 458 }: " "
Token { kind: Text, char_start: 15311, char_end: 15319, byte_start: 15312, byte_end: 15320, column_start: 35, column_end: 43, line_start: 458, line_end: 458 }: commands
Token { kind: Newline, char_start: 15319, char_end: 15320, byte_start: 15320, byte_end: 15321, column_start: 43, column_end: 1, line_start: 458, line_end: 459 }: "\n"
Token { kind: Space, char_start: 15320, char_end: 15322, byte_start: 15321, byte_end: 15323, column_start: 1, column_end: 3, line_start: 459, line_end: 459 }: "  "
Token { kind: Lparen, char_start: 15322, char_end: 15323, byte_start: 15323, byte_end: 15324, column_start: 3, column_end: 4, line_start: 459, line_end: 459 }: (
Token { kind: Text, char_start: 15323, char_end: 15366, byte_start: 15324, byte_end: 15367, column_start: 4, column_end: 47, line_start: 459, line_end: 459 }: https://github.com/wincent/ferret/issues/48
Token { kind: Rparen, char_start: 15366, char_end: 15367, byte_start: 15367, byte_end: 15368, column_start: 47, column_end: 48, line_start: 459, line_end: 459 }: )
Token { kind: Text, char_start: 15367, char_end: 15368, byte_start: 15368, byte_end: 15369, column_start: 48, column_end: 49, line_start: 459, line_end: 459 }: .
Token { kind: Newline, char_start: 15368, char_end: 15369, byte_start: 15369, byte_end: 15370, column_start: 49, column_end: 1, line_start: 459, line_end: 460 }: "\n"
Token { kind: Newline, char_start: 15369, char_end: 15370, byte_start: 15370, byte_end: 15371, column_start: 1, column_end: 1, line_start: 460, line_end: 461 }: "\n"
Token { kind: Heading(Heading2), char_start: 15370, char_end: 15372, byte_start: 15371, byte_end: 15373, column_start: 1, column_end: 3, line_start: 461, line_end: 461 }: ##
Token { kind: Space, char_start: 15372, char_end: 15373, byte_start: 15373, byte_end: 15374, column_start: 3, column_end: 4, line_start: 461, line_end: 461 }: " "
Token { kind: Text, char_start: 15373, char_end: 15378, byte_start: 15374, byte_end: 15379, column_start: 4, column_end: 9, line_start: 461, line_end: 461 }: 3.0.1
Token { kind: Space, char_start: 15378, char_end: 15379, byte_start: 15379, byte_end: 15380, column_start: 9, column_end: 10, line_start: 461, line_end: 461 }: " "
Token { kind: Lparen, char_start: 15379, char_end: 15380, byte_start: 15380, byte_end: 15381, column_start: 10, column_end: 11, line_start: 461, line_end: 461 }: (
Token { kind: Text, char_start: 15380, char_end: 15382, byte_start: 15381, byte_end: 15383, column_start: 11, column_end: 13, line_start: 461, line_end: 461 }: 24
Token { kind: Space, char_start: 15382, char_end: 15383, byte_start: 15383, byte_end: 15384, column_start: 13, column_end: 14, line_start: 461, line_end: 461 }: " "
Token { kind: Text, char_start: 15383, char_end: 15389, byte_start: 15384, byte_end: 15390, column_start: 14, column_end: 20, line_start: 461, line_end: 461 }: August
Token { kind: Space, char_start: 15389, char_end: 15390, byte_start: 15390, byte_end: 15391, column_start: 20, column_end: 21, line_start: 461, line_end: 461 }: " "
Token { kind: Text, char_start: 15390, char_end: 15394, byte_start: 15391, byte_end: 15395, column_start: 21, column_end: 25, line_start: 461, line_end: 461 }: 2017
Token { kind: Rparen, char_start: 15394, char_end: 15395, byte_start: 15395, byte_end: 15396, column_start: 25, column_end: 26, line_start: 461, line_end: 461 }: )
Token { kind: Newline, char_start: 15395, char_end: 15396, byte_start: 15396, byte_end: 15397, column_start: 26, column_end: 1, line_start: 461, line_end: 462 }: "\n"
Token { kind: Newline, char_start: 15396, char_end: 15397, byte_start: 15397, byte_end: 15398, column_start: 1, column_end: 1, line_start: 462, line_end: 463 }: "\n"
Token { kind: Hyphen, char_start: 15397, char_end: 15398, byte_start: 15398, byte_end: 15399, column_start: 1, column_end: 2, line_start: 463, line_end: 463 }: -
Token { kind: Space, char_start: 15398, char_end: 15399, byte_start: 15399, byte_end: 15400, column_start: 2, column_end: 3, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15399, char_end: 15402, byte_start: 15400, byte_end: 15403, column_start: 3, column_end: 6, line_start: 463, line_end: 463 }: Fix
Token { kind: Space, char_start: 15402, char_end: 15403, byte_start: 15403, byte_end: 15404, column_start: 6, column_end: 7, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15403, char_end: 15410, byte_start: 15404, byte_end: 15411, column_start: 7, column_end: 14, line_start: 463, line_end: 463 }: failure
Token { kind: Space, char_start: 15410, char_end: 15411, byte_start: 15411, byte_end: 15412, column_start: 14, column_end: 15, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15411, char_end: 15413, byte_start: 15412, byte_end: 15414, column_start: 15, column_end: 17, line_start: 463, line_end: 463 }: to
Token { kind: Space, char_start: 15413, char_end: 15414, byte_start: 15414, byte_end: 15415, column_start: 17, column_end: 18, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15414, char_end: 15420, byte_start: 15415, byte_end: 15421, column_start: 18, column_end: 24, line_start: 463, line_end: 463 }: handle
Token { kind: Space, char_start: 15420, char_end: 15421, byte_start: 15421, byte_end: 15422, column_start: 24, column_end: 25, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15421, char_end: 15427, byte_start: 15422, byte_end: 15428, column_start: 25, column_end: 31, line_start: 463, line_end: 463 }: search
Token { kind: Space, char_start: 15427, char_end: 15428, byte_start: 15428, byte_end: 15429, column_start: 31, column_end: 32, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15428, char_end: 15436, byte_start: 15429, byte_end: 15437, column_start: 32, column_end: 40, line_start: 463, line_end: 463 }: patterns
Token { kind: Space, char_start: 15436, char_end: 15437, byte_start: 15437, byte_end: 15438, column_start: 40, column_end: 41, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15437, char_end: 15447, byte_start: 15438, byte_end: 15448, column_start: 41, column_end: 51, line_start: 463, line_end: 463 }: containing
Token { kind: Space, char_start: 15447, char_end: 15448, byte_start: 15448, byte_end: 15449, column_start: 51, column_end: 52, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15448, char_end: 15456, byte_start: 15449, byte_end: 15457, column_start: 52, column_end: 60, line_start: 463, line_end: 463 }: multiple
Token { kind: Space, char_start: 15456, char_end: 15457, byte_start: 15457, byte_end: 15458, column_start: 60, column_end: 61, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15457, char_end: 15464, byte_start: 15458, byte_end: 15465, column_start: 61, column_end: 68, line_start: 463, line_end: 463 }: escaped
Token { kind: Space, char_start: 15464, char_end: 15465, byte_start: 15465, byte_end: 15466, column_start: 68, column_end: 69, line_start: 463, line_end: 463 }: " "
Token { kind: Text, char_start: 15465, char_end: 15471, byte_start: 15466, byte_end: 15472, column_start: 69, column_end: 75, line_start: 463, line_end: 463 }: spaces
Token { kind: Newline, char_start: 15471, char_end: 15472, byte_start: 15472, byte_end: 15473, column_start: 75, column_end: 1, line_start: 463, line_end: 464 }: "\n"
Token { kind: Space, char_start: 15472, char_end: 15474, byte_start: 15473, byte_end: 15475, column_start: 1, column_end: 3, line_start: 464, line_end: 464 }: "  "
Token { kind: Lparen, char_start: 15474, char_end: 15475, byte_start: 15475, byte_end: 15476, column_start: 3, column_end: 4, line_start: 464, line_end: 464 }: (
Token { kind: Text, char_start: 15475, char_end: 15518, byte_start: 15476, byte_end: 15519, column_start: 4, column_end: 47, line_start: 464, line_end: 464 }: https://github.com/wincent/ferret/issues/49
Token { kind: Rparen, char_start: 15518, char_end: 15519, byte_start: 15519, byte_end: 15520, column_start: 47, column_end: 48, line_start: 464, line_end: 464 }: )
Token { kind: Text, char_start: 15519, char_end: 15520, byte_start: 15520, byte_end: 15521, column_start: 48, column_end: 49, line_start: 464, line_end: 464 }: .
Token { kind: Newline, char_start: 15520, char_end: 15521, byte_start: 15521, byte_end: 15522, column_start: 49, column_end: 1, line_start: 464, line_end: 465 }: "\n"
Token { kind: Newline, char_start: 15521, char_end: 15522, byte_start: 15522, byte_end: 15523, column_start: 1, column_end: 1, line_start: 465, line_end: 466 }: "\n"
Token { kind: Heading(Heading2), char_start: 15522, char_end: 15524, byte_start: 15523, byte_end: 15525, column_start: 1, column_end: 3, line_start: 466, line_end: 466 }: ##
Token { kind: Space, char_start: 15524, char_end: 15525, byte_start: 15525, byte_end: 15526, column_start: 3, column_end: 4, line_start: 466, line_end: 466 }: " "
Token { kind: Text, char_start: 15525, char_end: 15528, byte_start: 15526, byte_end: 15529, column_start: 4, column_end: 7, line_start: 466, line_end: 466 }: 3.0
Token { kind: Space, char_start: 15528, char_end: 15529, byte_start: 15529, byte_end: 15530, column_start: 7, column_end: 8, line_start: 466, line_end: 466 }: " "
Token { kind: Lparen, char_start: 15529, char_end: 15530, byte_start: 15530, byte_end: 15531, column_start: 8, column_end: 9, line_start: 466, line_end: 466 }: (
Token { kind: Text, char_start: 15530, char_end: 15532, byte_start: 15531, byte_end: 15533, column_start: 9, column_end: 11, line_start: 466, line_end: 466 }: 13
Token { kind: Space, char_start: 15532, char_end: 15533, byte_start: 15533, byte_end: 15534, column_start: 11, column_end: 12, line_start: 466, line_end: 466 }: " "
Token { kind: Text, char_start: 15533, char_end: 15537, byte_start: 15534, byte_end: 15538, column_start: 12, column_end: 16, line_start: 466, line_end: 466 }: June
Token { kind: Space, char_start: 15537, char_end: 15538, byte_start: 15538, byte_end: 15539, column_start: 16, column_end: 17, line_start: 466, line_end: 466 }: " "
Token { kind: Text, char_start: 15538, char_end: 15542, byte_start: 15539, byte_end: 15543, column_start: 17, column_end: 21, line_start: 466, line_end: 466 }: 2017
Token { kind: Rparen, char_start: 15542, char_end: 15543, byte_start: 15543, byte_end: 15544, column_start: 21, column_end: 22, line_start: 466, line_end: 466 }: )
Token { kind: Newline, char_start: 15543, char_end: 15544, byte_start: 15544, byte_end: 15545, column_start: 22, column_end: 1, line_start: 466, line_end: 467 }: "\n"
Token { kind: Newline, char_start: 15544, char_end: 15545, byte_start: 15545, byte_end: 15546, column_start: 1, column_end: 1, line_start: 467, line_end: 468 }: "\n"
Token { kind: Hyphen, char_start: 15545, char_end: 15546, byte_start: 15546, byte_end: 15547, column_start: 1, column_end: 2, line_start: 468, line_end: 468 }: -
Token { kind: Space, char_start: 15546, char_end: 15547, byte_start: 15547, byte_end: 15548, column_start: 2, column_end: 3, line_start: 468, line_end: 468 }: " "
Token { kind: Text, char_start: 15547, char_end: 15554, byte_start: 15548, byte_end: 15555, column_start: 3, column_end: 10, line_start: 468, line_end: 468 }: Improve
Token { kind: Space, char_start: 15554, char_end: 15555, byte_start: 15555, byte_end: 15556, column_start: 10, column_end: 11, line_start: 468, line_end: 468 }: " "
Token { kind: Text, char_start: 15555, char_end: 15563, byte_start: 15556, byte_end: 15564, column_start: 11, column_end: 19, line_start: 468, line_end: 468 }: handling
Token { kind: Space, char_start: 15563, char_end: 15564, byte_start: 15564, byte_end: 15565, column_start: 19, column_end: 20, line_start: 468, line_end: 468 }: " "
Token { kind: Text, char_start: 15564, char_end: 15566, byte_start: 15565, byte_end: 15567, column_start: 20, column_end: 22, line_start: 468, line_end: 468 }: of
Token { kind: Space, char_start: 15566, char_end: 15567, byte_start: 15567, byte_end: 15568, column_start: 22, column_end: 23, line_start: 468, line_end: 468 }: " "
Token { kind: Text, char_start: 15567, char_end: 15576, byte_start: 15568, byte_end: 15577, column_start: 23, column_end: 32, line_start: 468, line_end: 468 }: backslash
Token { kind: Space, char_start: 15576, char_end: 15577, byte_start: 15577, byte_end: 15578, column_start: 32, column_end: 33, line_start: 468, line_end: 468 }: " "
Token { kind: Text, char_start: 15577, char_end: 15584, byte_start: 15578, byte_end: 15585, column_start: 33, column_end: 40, line_start: 468, line_end: 468 }: escapes
Token { kind: Newline, char_start: 15584, char_end: 15585, byte_start: 15585, byte_end: 15586, column_start: 40, column_end: 1, line_start: 468, line_end: 469 }: "\n"
Token { kind: Space, char_start: 15585, char_end: 15587, byte_start: 15586, byte_end: 15588, column_start: 1, column_end: 3, line_start: 469, line_end: 469 }: "  "
Token { kind: Lparen, char_start: 15587, char_end: 15588, byte_start: 15588, byte_end: 15589, column_start: 3, column_end: 4, line_start: 469, line_end: 469 }: (
Token { kind: Text, char_start: 15588, char_end: 15631, byte_start: 15589, byte_end: 15632, column_start: 4, column_end: 47, line_start: 469, line_end: 469 }: https://github.com/wincent/ferret/issues/41
Token { kind: Rparen, char_start: 15631, char_end: 15632, byte_start: 15632, byte_end: 15633, column_start: 47, column_end: 48, line_start: 469, line_end: 469 }: )
Token { kind: Text, char_start: 15632, char_end: 15633, byte_start: 15633, byte_end: 15634, column_start: 48, column_end: 49, line_start: 469, line_end: 469 }: .
Token { kind: Newline, char_start: 15633, char_end: 15634, byte_start: 15634, byte_end: 15635, column_start: 49, column_end: 1, line_start: 469, line_end: 470 }: "\n"
Token { kind: Hyphen, char_start: 15634, char_end: 15635, byte_start: 15635, byte_end: 15636, column_start: 1, column_end: 2, line_start: 470, line_end: 470 }: -
Token { kind: Space, char_start: 15635, char_end: 15636, byte_start: 15636, byte_end: 15637, column_start: 2, column_end: 3, line_start: 470, line_end: 470 }: " "
Token { kind: Text, char_start: 15636, char_end: 15639, byte_start: 15637, byte_end: 15640, column_start: 3, column_end: 6, line_start: 470, line_end: 470 }: Add
Token { kind: Space, char_start: 15639, char_end: 15640, byte_start: 15640, byte_end: 15641, column_start: 6, column_end: 7, line_start: 470, line_end: 470 }: " "
Token { kind: Bar, char_start: 15640, char_end: 15641, byte_start: 15641, byte_end: 15642, column_start: 7, column_end: 8, line_start: 470, line_end: 470 }: |
Token { kind: Text, char_start: 15641, char_end: 15657, byte_start: 15642, byte_end: 15658, column_start: 8, column_end: 24, line_start: 470, line_end: 470 }: g:FerretAutojump
Token { kind: Bar, char_start: 15657, char_end: 15658, byte_start: 15658, byte_end: 15659, column_start: 24, column_end: 25, line_start: 470, line_end: 470 }: |
Token { kind: Text, char_start: 15658, char_end: 15659, byte_start: 15659, byte_end: 15660, column_start: 25, column_end: 26, line_start: 470, line_end: 470 }: .
Token { kind: Newline, char_start: 15659, char_end: 15660, byte_start: 15660, byte_end: 15661, column_start: 26, column_end: 1, line_start: 470, line_end: 471 }: "\n"
Token { kind: Hyphen, char_start: 15660, char_end: 15661, byte_start: 15661, byte_end: 15662, column_start: 1, column_end: 2, line_start: 471, line_end: 471 }: -
Token { kind: Space, char_start: 15661, char_end: 15662, byte_start: 15662, byte_end: 15663, column_start: 2, column_end: 3, line_start: 471, line_end: 471 }: " "
Token { kind: Text, char_start: 15662, char_end: 15666, byte_start: 15663, byte_end: 15667, column_start: 3, column_end: 7, line_start: 471, line_end: 471 }: Drop
Token { kind: Space, char_start: 15666, char_end: 15667, byte_start: 15667, byte_end: 15668, column_start: 7, column_end: 8, line_start: 471, line_end: 471 }: " "
Token { kind: Text, char_start: 15667, char_end: 15674, byte_start: 15668, byte_end: 15675, column_start: 8, column_end: 15, line_start: 471, line_end: 471 }: support
Token { kind: Space, char_start: 15674, char_end: 15675, byte_start: 15675, byte_end: 15676, column_start: 15, column_end: 16, line_start: 471, line_end: 471 }: " "
Token { kind: Text, char_start: 15675, char_end: 15678, byte_start: 15676, byte_end: 15679, column_start: 16, column_end: 19, line_start: 471, line_end: 471 }: for
Token { kind: Space, char_start: 15678, char_end: 15679, byte_start: 15679, byte_end: 15680, column_start: 19, column_end: 20, line_start: 471, line_end: 471 }: " "
Token { kind: Text, char_start: 15679, char_end: 15682, byte_start: 15680, byte_end: 15683, column_start: 20, column_end: 23, line_start: 471, line_end: 471 }: vim
Token { kind: Hyphen, char_start: 15682, char_end: 15683, byte_start: 15683, byte_end: 15684, column_start: 23, column_end: 24, line_start: 471, line_end: 471 }: -
Token { kind: Text, char_start: 15683, char_end: 15692, byte_start: 15684, byte_end: 15693, column_start: 24, column_end: 33, line_start: 471, line_end: 471 }: dispatch.
Token { kind: Newline, char_start: 15692, char_end: 15693, byte_start: 15693, byte_end: 15694, column_start: 33, column_end: 1, line_start: 471, line_end: 472 }: "\n"
Token { kind: Newline, char_start: 15693, char_end: 15694, byte_start: 15694, byte_end: 15695, column_start: 1, column_end: 1, line_start: 472, line_end: 473 }: "\n"
Token { kind: Heading(Heading2), char_start: 15694, char_end: 15696, byte_start: 15695, byte_end: 15697, column_start: 1, column_end: 3, line_start: 473, line_end: 473 }: ##
Token { kind: Space, char_start: 15696, char_end: 15697, byte_start: 15697, byte_end: 15698, column_start: 3, column_end: 4, line_start: 473, line_end: 473 }: " "
Token { kind: Text, char_start: 15697, char_end: 15700, byte_start: 15698, byte_end: 15701, column_start: 4, column_end: 7, line_start: 473, line_end: 473 }: 2.0
Token { kind: Space, char_start: 15700, char_end: 15701, byte_start: 15701, byte_end: 15702, column_start: 7, column_end: 8, line_start: 473, line_end: 473 }: " "
Token { kind: Lparen, char_start: 15701, char_end: 15702, byte_start: 15702, byte_end: 15703, column_start: 8, column_end: 9, line_start: 473, line_end: 473 }: (
Token { kind: Text, char_start: 15702, char_end: 15703, byte_start: 15703, byte_end: 15704, column_start: 9, column_end: 10, line_start: 473, line_end: 473 }: 6
Token { kind: Space, char_start: 15703, char_end: 15704, byte_start: 15704, byte_end: 15705, column_start: 10, column_end: 11, line_start: 473, line_end: 473 }: " "
Token { kind: Text, char_start: 15704, char_end: 15708, byte_start: 15705, byte_end: 15709, column_start: 11, column_end: 15, line_start: 473, line_end: 473 }: June
Token { kind: Space, char_start: 15708, char_end: 15709, byte_start: 15709, byte_end: 15710, column_start: 15, column_end: 16, line_start: 473, line_end: 473 }: " "
Token { kind: Text, char_start: 15709, char_end: 15713, byte_start: 15710, byte_end: 15714, column_start: 16, column_end: 20, line_start: 473, line_end: 473 }: 2017
Token { kind: Rparen, char_start: 15713, char_end: 15714, byte_start: 15714, byte_end: 15715, column_start: 20, column_end: 21, line_start: 473, line_end: 473 }: )
Token { kind: Newline, char_start: 15714, char_end: 15715, byte_start: 15715, byte_end: 15716, column_start: 21, column_end: 1, line_start: 473, line_end: 474 }: "\n"
Token { kind: Newline, char_start: 15715, char_end: 15716, byte_start: 15716, byte_end: 15717, column_start: 1, column_end: 1, line_start: 474, line_end: 475 }: "\n"
Token { kind: Hyphen, char_start: 15716, char_end: 15717, byte_start: 15717, byte_end: 15718, column_start: 1, column_end: 2, line_start: 475, line_end: 475 }: -
Token { kind: Space, char_start: 15717, char_end: 15718, byte_start: 15718, byte_end: 15719, column_start: 2, column_end: 3, line_start: 475, line_end: 475 }: " "
Token { kind: Text, char_start: 15718, char_end: 15721, byte_start: 15719, byte_end: 15722, column_start: 3, column_end: 6, line_start: 475, line_end: 475 }: Add
Token { kind: Space, char_start: 15721, char_end: 15722, byte_start: 15722, byte_end: 15723, column_start: 6, column_end: 7, line_start: 475, line_end: 475 }: " "
Token { kind: Text, char_start: 15722, char_end: 15729, byte_start: 15723, byte_end: 15730, column_start: 7, column_end: 14, line_start: 475, line_end: 475 }: support
Token { kind: Space, char_start: 15729, char_end: 15730, byte_start: 15730, byte_end: 15731, column_start: 14, column_end: 15, line_start: 475, line_end: 475 }: " "
Token { kind: Text, char_start: 15730, char_end: 15733, byte_start: 15731, byte_end: 15734, column_start: 15, column_end: 18, line_start: 475, line_end: 475 }: for
Token { kind: Space, char_start: 15733, char_end: 15734, byte_start: 15734, byte_end: 15735, column_start: 18, column_end: 19, line_start: 475, line_end: 475 }: " "
Token { kind: Text, char_start: 15734, char_end: 15741, byte_start: 15735, byte_end: 15742, column_start: 19, column_end: 26, line_start: 475, line_end: 475 }: Neovim,
Token { kind: Space, char_start: 15741, char_end: 15742, byte_start: 15742, byte_end: 15743, column_start: 26, column_end: 27, line_start: 475, line_end: 475 }: " "
Token { kind: Text, char_start: 15742, char_end: 15747, byte_start: 15743, byte_end: 15748, column_start: 27, column_end: 32, line_start: 475, line_end: 475 }: along
Token { kind: Space, char_start: 15747, char_end: 15748, byte_start: 15748, byte_end: 15749, column_start: 32, column_end: 33, line_start: 475, line_end: 475 }: " "
Token { kind: Text, char_start: 15748, char_end: 15752, byte_start: 15749, byte_end: 15753, column_start: 33, column_end: 37, line_start: 475, line_end: 475 }: with
Token { kind: Space, char_start: 15752, char_end: 15753, byte_start: 15753, byte_end: 15754, column_start: 37, column_end: 38, line_start: 475, line_end: 475 }: " "
Token { kind: Bar, char_start: 15753, char_end: 15754, byte_start: 15754, byte_end: 15755, column_start: 38, column_end: 39, line_start: 475, line_end: 475 }: |
Token { kind: Text, char_start: 15754, char_end: 15766, byte_start: 15755, byte_end: 15767, column_start: 39, column_end: 51, line_start: 475, line_end: 475 }: g:FerretNvim
Token { kind: Bar, char_start: 15766, char_end: 15767, byte_start: 15767, byte_end: 15768, column_start: 51, column_end: 52, line_start: 475, line_end: 475 }: |
Token { kind: Space, char_start: 15767, char_end: 15768, byte_start: 15768, byte_end: 15769, column_start: 52, column_end: 53, line_start: 475, line_end: 475 }: " "
Token { kind: Text, char_start: 15768, char_end: 15776, byte_start: 15769, byte_end: 15777, column_start: 53, column_end: 61, line_start: 475, line_end: 475 }: setting.
Token { kind: Newline, char_start: 15776, char_end: 15777, byte_start: 15777, byte_end: 15778, column_start: 61, column_end: 1, line_start: 475, line_end: 476 }: "\n"
Token { kind: Newline, char_start: 15777, char_end: 15778, byte_start: 15778, byte_end: 15779, column_start: 1, column_end: 1, line_start: 476, line_end: 477 }: "\n"
Token { kind: Heading(Heading2), char_start: 15778, char_end: 15780, byte_start: 15779, byte_end: 15781, column_start: 1, column_end: 3, line_start: 477, line_end: 477 }: ##
Token { kind: Space, char_start: 15780, char_end: 15781, byte_start: 15781, byte_end: 15782, column_start: 3, column_end: 4, line_start: 477, line_end: 477 }: " "
Token { kind: Text, char_start: 15781, char_end: 15784, byte_start: 15782, byte_end: 15785, column_start: 4, column_end: 7, line_start: 477, line_end: 477 }: 1.5
Token { kind: Space, char_start: 15784, char_end: 15785, byte_start: 15785, byte_end: 15786, column_start: 7, column_end: 8, line_start: 477, line_end: 477 }: " "
Token { kind: Text, char_start: 15785, char_end: 15791, byte_start: 15786, byte_end: 15792, column_start: 8, column_end: 14, line_start: 477, line_end: 477 }: "Cinco
Token { kind: Space, char_start: 15791, char_end: 15792, byte_start: 15792, byte_end: 15793, column_start: 14, column_end: 15, line_start: 477, line_end: 477 }: " "
Token { kind: Text, char_start: 15792, char_end: 15794, byte_start: 15793, byte_end: 15795, column_start: 15, column_end: 17, line_start: 477, line_end: 477 }: de
Token { kind: Space, char_start: 15794, char_end: 15795, byte_start: 15795, byte_end: 15796, column_start: 17, column_end: 18, line_start: 477, line_end: 477 }: " "
Token { kind: Text, char_start: 15795, char_end: 15802, byte_start: 15796, byte_end: 15803, column_start: 18, column_end: 25, line_start: 477, line_end: 477 }: Cuatro"
Token { kind: Space, char_start: 15802, char_end: 15803, byte_start: 15803, byte_end: 15804, column_start: 25, column_end: 26, line_start: 477, line_end: 477 }: " "
Token { kind: Lparen, char_start: 15803, char_end: 15804, byte_start: 15804, byte_end: 15805, column_start: 26, column_end: 27, line_start: 477, line_end: 477 }: (
Token { kind: Text, char_start: 15804, char_end: 15805, byte_start: 15805, byte_end: 15806, column_start: 27, column_end: 28, line_start: 477, line_end: 477 }: 4
Token { kind: Space, char_start: 15805, char_end: 15806, byte_start: 15806, byte_end: 15807, column_start: 28, column_end: 29, line_start: 477, line_end: 477 }: " "
Token { kind: Text, char_start: 15806, char_end: 15809, byte_start: 15807, byte_end: 15810, column_start: 29, column_end: 32, line_start: 477, line_end: 477 }: May
Token { kind: Space, char_start: 15809, char_end: 15810, byte_start: 15810, byte_end: 15811, column_start: 32, column_end: 33, line_start: 477, line_end: 477 }: " "
Token { kind: Text, char_start: 15810, char_end: 15814, byte_start: 15811, byte_end: 15815, column_start: 33, column_end: 37, line_start: 477, line_end: 477 }: 2017
Token { kind: Rparen, char_start: 15814, char_end: 15815, byte_start: 15815, byte_end: 15816, column_start: 37, column_end: 38, line_start: 477, line_end: 477 }: )
Token { kind: Newline, char_start: 15815, char_end: 15816, byte_start: 15816, byte_end: 15817, column_start: 38, column_end: 1, line_start: 477, line_end: 478 }: "\n"
Token { kind: Newline, char_start: 15816, char_end: 15817, byte_start: 15817, byte_end: 15818, column_start: 1, column_end: 1, line_start: 478, line_end: 479 }: "\n"
Token { kind: Hyphen, char_start: 15817, char_end: 15818, byte_start: 15818, byte_end: 15819, column_start: 1, column_end: 2, line_start: 479, line_end: 479 }: -
Token { kind: Space, char_start: 15818, char_end: 15819, byte_start: 15819, byte_end: 15820, column_start: 2, column_end: 3, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15819, char_end: 15831, byte_start: 15820, byte_end: 15832, column_start: 3, column_end: 15, line_start: 479, line_end: 479 }: Improvements
Token { kind: Space, char_start: 15831, char_end: 15832, byte_start: 15832, byte_end: 15833, column_start: 15, column_end: 16, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15832, char_end: 15834, byte_start: 15833, byte_end: 15835, column_start: 16, column_end: 18, line_start: 479, line_end: 479 }: to
Token { kind: Space, char_start: 15834, char_end: 15835, byte_start: 15835, byte_end: 15836, column_start: 18, column_end: 19, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15835, char_end: 15838, byte_start: 15836, byte_end: 15839, column_start: 19, column_end: 22, line_start: 479, line_end: 479 }: the
Token { kind: Space, char_start: 15838, char_end: 15839, byte_start: 15839, byte_end: 15840, column_start: 22, column_end: 23, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15839, char_end: 15847, byte_start: 15840, byte_end: 15848, column_start: 23, column_end: 31, line_start: 479, line_end: 479 }: handling
Token { kind: Space, char_start: 15847, char_end: 15848, byte_start: 15848, byte_end: 15849, column_start: 31, column_end: 32, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15848, char_end: 15850, byte_start: 15849, byte_end: 15851, column_start: 32, column_end: 34, line_start: 479, line_end: 479 }: of
Token { kind: Space, char_start: 15850, char_end: 15851, byte_start: 15851, byte_end: 15852, column_start: 34, column_end: 35, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15851, char_end: 15855, byte_start: 15852, byte_end: 15856, column_start: 35, column_end: 39, line_start: 479, line_end: 479 }: very
Token { kind: Space, char_start: 15855, char_end: 15856, byte_start: 15856, byte_end: 15857, column_start: 39, column_end: 40, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15856, char_end: 15861, byte_start: 15857, byte_end: 15862, column_start: 40, column_end: 45, line_start: 479, line_end: 479 }: large
Token { kind: Space, char_start: 15861, char_end: 15862, byte_start: 15862, byte_end: 15863, column_start: 45, column_end: 46, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15862, char_end: 15868, byte_start: 15863, byte_end: 15869, column_start: 46, column_end: 52, line_start: 479, line_end: 479 }: result
Token { kind: Space, char_start: 15868, char_end: 15869, byte_start: 15869, byte_end: 15870, column_start: 52, column_end: 53, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15869, char_end: 15873, byte_start: 15870, byte_end: 15874, column_start: 53, column_end: 57, line_start: 479, line_end: 479 }: sets
Token { kind: Space, char_start: 15873, char_end: 15874, byte_start: 15874, byte_end: 15875, column_start: 57, column_end: 58, line_start: 479, line_end: 479 }: " "
Token { kind: Lparen, char_start: 15874, char_end: 15875, byte_start: 15875, byte_end: 15876, column_start: 58, column_end: 59, line_start: 479, line_end: 479 }: (
Token { kind: Text, char_start: 15875, char_end: 15878, byte_start: 15876, byte_end: 15879, column_start: 59, column_end: 62, line_start: 479, line_end: 479 }: due
Token { kind: Space, char_start: 15878, char_end: 15879, byte_start: 15879, byte_end: 15880, column_start: 62, column_end: 63, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15879, char_end: 15881, byte_start: 15880, byte_end: 15882, column_start: 63, column_end: 65, line_start: 479, line_end: 479 }: to
Token { kind: Space, char_start: 15881, char_end: 15882, byte_start: 15882, byte_end: 15883, column_start: 65, column_end: 66, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15882, char_end: 15886, byte_start: 15883, byte_end: 15887, column_start: 66, column_end: 70, line_start: 479, line_end: 479 }: wide
Token { kind: Space, char_start: 15886, char_end: 15887, byte_start: 15887, byte_end: 15888, column_start: 70, column_end: 71, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15887, char_end: 15892, byte_start: 15888, byte_end: 15893, column_start: 71, column_end: 76, line_start: 479, line_end: 479 }: lines
Token { kind: Space, char_start: 15892, char_end: 15893, byte_start: 15893, byte_end: 15894, column_start: 76, column_end: 77, line_start: 479, line_end: 479 }: " "
Token { kind: Text, char_start: 15893, char_end: 15895, byte_start: 15894, byte_end: 15896, column_start: 77, column_end: 79, line_start: 479, line_end: 479 }: or
Token { kind: Newline, char_start: 15895, char_end: 15896, byte_start: 15896, byte_end: 15897, column_start: 79, column_end: 1, line_start: 479, line_end: 480 }: "\n"
Token { kind: Space, char_start: 15896, char_end: 15898, byte_start: 15897, byte_end: 15899, column_start: 1, column_end: 3, line_start: 480, line_end: 480 }: "  "
Token { kind: Text, char_start: 15898, char_end: 15902, byte_start: 15899, byte_end: 15903, column_start: 3, column_end: 7, line_start: 480, line_end: 480 }: many
Token { kind: Space, char_start: 15902, char_end: 15903, byte_start: 15903, byte_end: 15904, column_start: 7, column_end: 8, line_start: 480, line_end: 480 }: " "
Token { kind: Text, char_start: 15903, char_end: 15910, byte_start: 15904, byte_end: 15911, column_start: 8, column_end: 15, line_start: 480, line_end: 480 }: results
Token { kind: Rparen, char_start: 15910, char_end: 15911, byte_start: 15911, byte_end: 15912, column_start: 15, column_end: 16, line_start: 480, line_end: 480 }: )
Token { kind: Text, char_start: 15911, char_end: 15912, byte_start: 15912, byte_end: 15913, column_start: 16, column_end: 17, line_start: 480, line_end: 480 }: .
Token { kind: Newline, char_start: 15912, char_end: 15913, byte_start: 15913, byte_end: 15914, column_start: 17, column_end: 1, line_start: 480, line_end: 481 }: "\n"
Token { kind: Hyphen, char_start: 15913, char_end: 15914, byte_start: 15914, byte_end: 15915, column_start: 1, column_end: 2, line_start: 481, line_end: 481 }: -
Token { kind: Space, char_start: 15914, char_end: 15915, byte_start: 15915, byte_end: 15916, column_start: 2, column_end: 3, line_start: 481, line_end: 481 }: " "
Token { kind: Text, char_start: 15915, char_end: 15920, byte_start: 15916, byte_end: 15921, column_start: 3, column_end: 8, line_start: 481, line_end: 481 }: Added
Token { kind: Space, char_start: 15920, char_end: 15921, byte_start: 15921, byte_end: 15922, column_start: 8, column_end: 9, line_start: 481, line_end: 481 }: " "
Token { kind: Bar, char_start: 15921, char_end: 15922, byte_start: 15922, byte_end: 15923, column_start: 9, column_end: 10, line_start: 481, line_end: 481 }: |
Token { kind: Text, char_start: 15922, char_end: 15938, byte_start: 15923, byte_end: 15939, column_start: 10, column_end: 26, line_start: 481, line_end: 481 }: g:FerretLazyInit
Token { kind: Bar, char_start: 15938, char_end: 15939, byte_start: 15939, byte_end: 15940, column_start: 26, column_end: 27, line_start: 481, line_end: 481 }: |
Token { kind: Text, char_start: 15939, char_end: 15940, byte_start: 15940, byte_end: 15941, column_start: 27, column_end: 28, line_start: 481, line_end: 481 }: .
Token { kind: Newline, char_start: 15940, char_end: 15941, byte_start: 15941, byte_end: 15942, column_start: 28, column_end: 1, line_start: 481, line_end: 482 }: "\n"
Token { kind: Hyphen, char_start: 15941, char_end: 15942, byte_start: 15942, byte_end: 15943, column_start: 1, column_end: 2, line_start: 482, line_end: 482 }: -
Token { kind: Space, char_start: 15942, char_end: 15943, byte_start: 15943, byte_end: 15944, column_start: 2, column_end: 3, line_start: 482, line_end: 482 }: " "
Token { kind: Text, char_start: 15943, char_end: 15948, byte_start: 15944, byte_end: 15949, column_start: 3, column_end: 8, line_start: 482, line_end: 482 }: Added
Token { kind: Space, char_start: 15948, char_end: 15949, byte_start: 15949, byte_end: 15950, column_start: 8, column_end: 9, line_start: 482, line_end: 482 }: " "
Token { kind: Text, char_start: 15949, char_end: 15956, byte_start: 15950, byte_end: 15957, column_start: 9, column_end: 16, line_start: 482, line_end: 482 }: missing
Token { kind: Space, char_start: 15956, char_end: 15957, byte_start: 15957, byte_end: 15958, column_start: 16, column_end: 17, line_start: 482, line_end: 482 }: " "
Token { kind: Text, char_start: 15957, char_end: 15970, byte_start: 15958, byte_end: 15971, column_start: 17, column_end: 30, line_start: 482, line_end: 482 }: documentation
Token { kind: Space, char_start: 15970, char_end: 15971, byte_start: 15971, byte_end: 15972, column_start: 30, column_end: 31, line_start: 482, line_end: 482 }: " "
Token { kind: Text, char_start: 15971, char_end: 15974, byte_start: 15972, byte_end: 15975, column_start: 31, column_end: 34, line_start: 482, line_end: 482 }: for
Token { kind: Space, char_start: 15974, char_end: 15975, byte_start: 15975, byte_end: 15976, column_start: 34, column_end: 35, line_start: 482, line_end: 482 }: " "
Token { kind: Bar, char_start: 15975, char_end: 15976, byte_start: 15976, byte_end: 15977, column_start: 35, column_end: 36, line_start: 482, line_end: 482 }: |
Token { kind: Text, char_start: 15976, char_end: 15987, byte_start: 15977, byte_end: 15988, column_start: 36, column_end: 47, line_start: 482, line_end: 482 }: g:FerretJob
Token { kind: Bar, char_start: 15987, char_end: 15988, byte_start: 15988, byte_end: 15989, column_start: 47, column_end: 48, line_start: 482, line_end: 482 }: |
Token { kind: Text, char_start: 15988, char_end: 15989, byte_start: 15989, byte_end: 15990, column_start: 48, column_end: 49, line_start: 482, line_end: 482 }: .
Token { kind: Newline, char_start: 15989, char_end: 15990, byte_start: 15990, byte_end: 15991, column_start: 49, column_end: 1, line_start: 482, line_end: 483 }: "\n"
Token { kind: Hyphen, char_start: 15990, char_end: 15991, byte_start: 15991, byte_end: 15992, column_start: 1, column_end: 2, line_start: 483, line_end: 483 }: -
Token { kind: Space, char_start: 15991, char_end: 15992, byte_start: 15992, byte_end: 15993, column_start: 2, column_end: 3, line_start: 483, line_end: 483 }: " "
Token { kind: Text, char_start: 15992, char_end: 15997, byte_start: 15993, byte_end: 15998, column_start: 3, column_end: 8, line_start: 483, line_end: 483 }: Added
Token { kind: Space, char_start: 15997, char_end: 15998, byte_start: 15998, byte_end: 15999, column_start: 8, column_end: 9, line_start: 483, line_end: 483 }: " "
Token { kind: Bar, char_start: 15998, char_end: 15999, byte_start: 15999, byte_end: 16000, column_start: 9, column_end: 10, line_start: 483, line_end: 483 }: |
Token { kind: Text, char_start: 15999, char_end: 16017, byte_start: 16000, byte_end: 16018, column_start: 10, column_end: 28, line_start: 483, line_end: 483 }: g:FerretMaxResults
Token { kind: Bar, char_start: 16017, char_end: 16018, byte_start: 16018, byte_end: 16019, column_start: 28, column_end: 29, line_start: 483, line_end: 483 }: |
Token { kind: Text, char_start: 16018, char_end: 16019, byte_start: 16019, byte_end: 16020, column_start: 29, column_end: 30, line_start: 483, line_end: 483 }: .
Token { kind: Newline, char_start: 16019, char_end: 16020, byte_start: 16020, byte_end: 16021, column_start: 30, column_end: 1, line_start: 483, line_end: 484 }: "\n"
Token { kind: Hyphen, char_start: 16020, char_end: 16021, byte_start: 16021, byte_end: 16022, column_start: 1, column_end: 2, line_start: 484, line_end: 484 }: -
Token { kind: Space, char_start: 16021, char_end: 16022, byte_start: 16022, byte_end: 16023, column_start: 2, column_end: 3, line_start: 484, line_end: 484 }: " "
Token { kind: Text, char_start: 16022, char_end: 16027, byte_start: 16023, byte_end: 16028, column_start: 3, column_end: 8, line_start: 484, line_end: 484 }: Added
Token { kind: Space, char_start: 16027, char_end: 16028, byte_start: 16028, byte_end: 16029, column_start: 8, column_end: 9, line_start: 484, line_end: 484 }: " "
Token { kind: Text, char_start: 16028, char_end: 16035, byte_start: 16029, byte_end: 16036, column_start: 9, column_end: 16, line_start: 484, line_end: 484 }: feature
Token { kind: Hyphen, char_start: 16035, char_end: 16036, byte_start: 16036, byte_end: 16037, column_start: 16, column_end: 17, line_start: 484, line_end: 484 }: -
Token { kind: Text, char_start: 16036, char_end: 16045, byte_start: 16037, byte_end: 16046, column_start: 17, column_end: 26, line_start: 484, line_end: 484 }: detection
Token { kind: Space, char_start: 16045, char_end: 16046, byte_start: 16046, byte_end: 16047, column_start: 26, column_end: 27, line_start: 484, line_end: 484 }: " "
Token { kind: Text, char_start: 16046, char_end: 16049, byte_start: 16047, byte_end: 16050, column_start: 27, column_end: 30, line_start: 484, line_end: 484 }: for
Token { kind: Space, char_start: 16049, char_end: 16050, byte_start: 16050, byte_end: 16051, column_start: 30, column_end: 31, line_start: 484, line_end: 484 }: " "
Token { kind: Backtick, char_start: 16050, char_end: 16051, byte_start: 16051, byte_end: 16052, column_start: 31, column_end: 32, line_start: 484, line_end: 484 }: `
Token { kind: Text, char_start: 16051, char_end: 16053, byte_start: 16052, byte_end: 16054, column_start: 32, column_end: 34, line_start: 484, line_end: 484 }: rg
Token { kind: Backtick, char_start: 16053, char_end: 16054, byte_start: 16054, byte_end: 16055, column_start: 34, column_end: 35, line_start: 484, line_end: 484 }: `
Token { kind: Space, char_start: 16054, char_end: 16055, byte_start: 16055, byte_end: 16056, column_start: 35, column_end: 36, line_start: 484, line_end: 484 }: " "
Token { kind: Text, char_start: 16055, char_end: 16058, byte_start: 16056, byte_end: 16059, column_start: 36, column_end: 39, line_start: 484, line_end: 484 }: and
Token { kind: Space, char_start: 16058, char_end: 16059, byte_start: 16059, byte_end: 16060, column_start: 39, column_end: 40, line_start: 484, line_end: 484 }: " "
Token { kind: Backtick, char_start: 16059, char_end: 16060, byte_start: 16060, byte_end: 16061, column_start: 40, column_end: 41, line_start: 484, line_end: 484 }: `
Token { kind: Text, char_start: 16060, char_end: 16062, byte_start: 16061, byte_end: 16063, column_start: 41, column_end: 43, line_start: 484, line_end: 484 }: ag
Token { kind: Backtick, char_start: 16062, char_end: 16063, byte_start: 16063, byte_end: 16064, column_start: 43, column_end: 44, line_start: 484, line_end: 484 }: `
Token { kind: Text, char_start: 16063, char_end: 16064, byte_start: 16064, byte_end: 16065, column_start: 44, column_end: 45, line_start: 484, line_end: 484 }: ,
Token { kind: Space, char_start: 16064, char_end: 16065, byte_start: 16065, byte_end: 16066, column_start: 45, column_end: 46, line_start: 484, line_end: 484 }: " "
Token { kind: Text, char_start: 16065, char_end: 16073, byte_start: 16066, byte_end: 16074, column_start: 46, column_end: 54, line_start: 484, line_end: 484 }: allowing
Token { kind: Space, char_start: 16073, char_end: 16074, byte_start: 16074, byte_end: 16075, column_start: 54, column_end: 55, line_start: 484, line_end: 484 }: " "
Token { kind: Text, char_start: 16074, char_end: 16080, byte_start: 16075, byte_end: 16081, column_start: 55, column_end: 61, line_start: 484, line_end: 484 }: Ferret
Token { kind: Space, char_start: 16080, char_end: 16081, byte_start: 16081, byte_end: 16082, column_start: 61, column_end: 62, line_start: 484, line_end: 484 }: " "
Token { kind: Text, char_start: 16081, char_end: 16083, byte_start: 16082, byte_end: 16084, column_start: 62, column_end: 64, line_start: 484, line_end: 484 }: to
Token { kind: Space, char_start: 16083, char_end: 16084, byte_start: 16084, byte_end: 16085, column_start: 64, column_end: 65, line_start: 484, line_end: 484 }: " "
Token { kind: Text, char_start: 16084, char_end: 16094, byte_start: 16085, byte_end: 16095, column_start: 65, column_end: 75, line_start: 484, line_end: 484 }: gracefully
Token { kind: Newline, char_start: 16094, char_end: 16095, byte_start: 16095, byte_end: 16096, column_start: 75, column_end: 1, line_start: 484, line_end: 485 }: "\n"
Token { kind: Space, char_start: 16095, char_end: 16097, byte_start: 16096, byte_end: 16098, column_start: 1, column_end: 3, line_start: 485, line_end: 485 }: "  "
Token { kind: Text, char_start: 16097, char_end: 16101, byte_start: 16098, byte_end: 16102, column_start: 3, column_end: 7, line_start: 485, line_end: 485 }: work
Token { kind: Space, char_start: 16101, char_end: 16102, byte_start: 16102, byte_end: 16103, column_start: 7, column_end: 8, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16102, char_end: 16106, byte_start: 16103, byte_end: 16107, column_start: 8, column_end: 12, line_start: 485, line_end: 485 }: with
Token { kind: Space, char_start: 16106, char_end: 16107, byte_start: 16107, byte_end: 16108, column_start: 12, column_end: 13, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16107, char_end: 16112, byte_start: 16108, byte_end: 16113, column_start: 13, column_end: 18, line_start: 485, line_end: 485 }: older
Token { kind: Space, char_start: 16112, char_end: 16113, byte_start: 16113, byte_end: 16114, column_start: 18, column_end: 19, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16113, char_end: 16121, byte_start: 16114, byte_end: 16122, column_start: 19, column_end: 27, line_start: 485, line_end: 485 }: versions
Token { kind: Space, char_start: 16121, char_end: 16122, byte_start: 16122, byte_end: 16123, column_start: 27, column_end: 28, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16122, char_end: 16124, byte_start: 16123, byte_end: 16125, column_start: 28, column_end: 30, line_start: 485, line_end: 485 }: of
Token { kind: Space, char_start: 16124, char_end: 16125, byte_start: 16125, byte_end: 16126, column_start: 30, column_end: 31, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16125, char_end: 16130, byte_start: 16126, byte_end: 16131, column_start: 31, column_end: 36, line_start: 485, line_end: 485 }: those
Token { kind: Space, char_start: 16130, char_end: 16131, byte_start: 16131, byte_end: 16132, column_start: 36, column_end: 37, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16131, char_end: 16136, byte_start: 16132, byte_end: 16137, column_start: 37, column_end: 42, line_start: 485, line_end: 485 }: tools
Token { kind: Space, char_start: 16136, char_end: 16137, byte_start: 16137, byte_end: 16138, column_start: 42, column_end: 43, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16137, char_end: 16141, byte_start: 16138, byte_end: 16142, column_start: 43, column_end: 47, line_start: 485, line_end: 485 }: that
Token { kind: Space, char_start: 16141, char_end: 16142, byte_start: 16142, byte_end: 16143, column_start: 47, column_end: 48, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16142, char_end: 16144, byte_start: 16143, byte_end: 16145, column_start: 48, column_end: 50, line_start: 485, line_end: 485 }: do
Token { kind: Space, char_start: 16144, char_end: 16145, byte_start: 16145, byte_end: 16146, column_start: 50, column_end: 51, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16145, char_end: 16148, byte_start: 16146, byte_end: 16149, column_start: 51, column_end: 54, line_start: 485, line_end: 485 }: not
Token { kind: Space, char_start: 16148, char_end: 16149, byte_start: 16149, byte_end: 16150, column_start: 54, column_end: 55, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16149, char_end: 16156, byte_start: 16150, byte_end: 16157, column_start: 55, column_end: 62, line_start: 485, line_end: 485 }: support
Token { kind: Space, char_start: 16156, char_end: 16157, byte_start: 16157, byte_end: 16158, column_start: 62, column_end: 63, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16157, char_end: 16160, byte_start: 16158, byte_end: 16161, column_start: 63, column_end: 66, line_start: 485, line_end: 485 }: all
Token { kind: Space, char_start: 16160, char_end: 16161, byte_start: 16161, byte_end: 16162, column_start: 66, column_end: 67, line_start: 485, line_end: 485 }: " "
Token { kind: Text, char_start: 16161, char_end: 16168, byte_start: 16162, byte_end: 16169, column_start: 67, column_end: 74, line_start: 485, line_end: 485 }: desired
Token { kind: Newline, char_start: 16168, char_end: 16169, byte_start: 16169, byte_end: 16170, column_start: 74, column_end: 1, line_start: 485, line_end: 486 }: "\n"
Token { kind: Space, char_start: 16169, char_end: 16171, byte_start: 16170, byte_end: 16172, column_start: 1, column_end: 3, line_start: 486, line_end: 486 }: "  "
Token { kind: Text, char_start: 16171, char_end: 16178, byte_start: 16172, byte_end: 16179, column_start: 3, column_end: 10, line_start: 486, line_end: 486 }: command
Token { kind: Hyphen, char_start: 16178, char_end: 16179, byte_start: 16179, byte_end: 16180, column_start: 10, column_end: 11, line_start: 486, line_end: 486 }: -
Token { kind: Text, char_start: 16179, char_end: 16183, byte_start: 16180, byte_end: 16184, column_start: 11, column_end: 15, line_start: 486, line_end: 486 }: line
Token { kind: Space, char_start: 16183, char_end: 16184, byte_start: 16184, byte_end: 16185, column_start: 15, column_end: 16, line_start: 486, line_end: 486 }: " "
Token { kind: Text, char_start: 16184, char_end: 16193, byte_start: 16185, byte_end: 16194, column_start: 16, column_end: 25, line_start: 486, line_end: 486 }: switches.
Token { kind: Newline, char_start: 16193, char_end: 16194, byte_start: 16194, byte_end: 16195, column_start: 25, column_end: 1, line_start: 486, line_end: 487 }: "\n"
Token { kind: Newline, char_start: 16194, char_end: 16195, byte_start: 16195, byte_end: 16196, column_start: 1, column_end: 1, line_start: 487, line_end: 488 }: "\n"
Token { kind: Heading(Heading2), char_start: 16195, char_end: 16197, byte_start: 16196, byte_end: 16198, column_start: 1, column_end: 3, line_start: 488, line_end: 488 }: ##
Token { kind: Space, char_start: 16197, char_end: 16198, byte_start: 16198, byte_end: 16199, column_start: 3, column_end: 4, line_start: 488, line_end: 488 }: " "
Token { kind: Text, char_start: 16198, char_end: 16201, byte_start: 16199, byte_end: 16202, column_start: 4, column_end: 7, line_start: 488, line_end: 488 }: 1.4
Token { kind: Space, char_start: 16201, char_end: 16202, byte_start: 16202, byte_end: 16203, column_start: 7, column_end: 8, line_start: 488, line_end: 488 }: " "
Token { kind: Lparen, char_start: 16202, char_end: 16203, byte_start: 16203, byte_end: 16204, column_start: 8, column_end: 9, line_start: 488, line_end: 488 }: (
Token { kind: Text, char_start: 16203, char_end: 16205, byte_start: 16204, byte_end: 16206, column_start: 9, column_end: 11, line_start: 488, line_end: 488 }: 21
Token { kind: Space, char_start: 16205, char_end: 16206, byte_start: 16206, byte_end: 16207, column_start: 11, column_end: 12, line_start: 488, line_end: 488 }: " "
Token { kind: Text, char_start: 16206, char_end: 16213, byte_start: 16207, byte_end: 16214, column_start: 12, column_end: 19, line_start: 488, line_end: 488 }: January
Token { kind: Space, char_start: 16213, char_end: 16214, byte_start: 16214, byte_end: 16215, column_start: 19, column_end: 20, line_start: 488, line_end: 488 }: " "
Token { kind: Text, char_start: 16214, char_end: 16218, byte_start: 16215, byte_end: 16219, column_start: 20, column_end: 24, line_start: 488, line_end: 488 }: 2017
Token { kind: Rparen, char_start: 16218, char_end: 16219, byte_start: 16219, byte_end: 16220, column_start: 24, column_end: 25, line_start: 488, line_end: 488 }: )
Token { kind: Newline, char_start: 16219, char_end: 16220, byte_start: 16220, byte_end: 16221, column_start: 25, column_end: 1, line_start: 488, line_end: 489 }: "\n"
Token { kind: Newline, char_start: 16220, char_end: 16221, byte_start: 16221, byte_end: 16222, column_start: 1, column_end: 1, line_start: 489, line_end: 490 }: "\n"
Token { kind: Hyphen, char_start: 16221, char_end: 16222, byte_start: 16222, byte_end: 16223, column_start: 1, column_end: 2, line_start: 490, line_end: 490 }: -
Token { kind: Space, char_start: 16222, char_end: 16223, byte_start: 16223, byte_end: 16224, column_start: 2, column_end: 3, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16223, char_end: 16227, byte_start: 16224, byte_end: 16228, column_start: 3, column_end: 7, line_start: 490, line_end: 490 }: Drop
Token { kind: Space, char_start: 16227, char_end: 16228, byte_start: 16228, byte_end: 16229, column_start: 7, column_end: 8, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16228, char_end: 16234, byte_start: 16229, byte_end: 16235, column_start: 8, column_end: 14, line_start: 490, line_end: 490 }: broken
Token { kind: Space, char_start: 16234, char_end: 16235, byte_start: 16235, byte_end: 16236, column_start: 14, column_end: 15, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16235, char_end: 16242, byte_start: 16236, byte_end: 16243, column_start: 15, column_end: 22, line_start: 490, line_end: 490 }: support
Token { kind: Space, char_start: 16242, char_end: 16243, byte_start: 16243, byte_end: 16244, column_start: 22, column_end: 23, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16243, char_end: 16246, byte_start: 16244, byte_end: 16247, column_start: 23, column_end: 26, line_start: 490, line_end: 490 }: for
Token { kind: Space, char_start: 16246, char_end: 16247, byte_start: 16247, byte_end: 16248, column_start: 26, column_end: 27, line_start: 490, line_end: 490 }: " "
Token { kind: Backtick, char_start: 16247, char_end: 16248, byte_start: 16248, byte_end: 16249, column_start: 27, column_end: 28, line_start: 490, line_end: 490 }: `
Token { kind: Text, char_start: 16248, char_end: 16252, byte_start: 16249, byte_end: 16253, column_start: 28, column_end: 32, line_start: 490, line_end: 490 }: grep
Token { kind: Backtick, char_start: 16252, char_end: 16253, byte_start: 16253, byte_end: 16254, column_start: 32, column_end: 33, line_start: 490, line_end: 490 }: `
Token { kind: Text, char_start: 16253, char_end: 16254, byte_start: 16254, byte_end: 16255, column_start: 33, column_end: 34, line_start: 490, line_end: 490 }: ,
Token { kind: Space, char_start: 16254, char_end: 16255, byte_start: 16255, byte_end: 16256, column_start: 34, column_end: 35, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16255, char_end: 16263, byte_start: 16256, byte_end: 16264, column_start: 35, column_end: 43, line_start: 490, line_end: 490 }: printing
Token { kind: Space, char_start: 16263, char_end: 16264, byte_start: 16264, byte_end: 16265, column_start: 43, column_end: 44, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16264, char_end: 16265, byte_start: 16265, byte_end: 16266, column_start: 44, column_end: 45, line_start: 490, line_end: 490 }: a
Token { kind: Space, char_start: 16265, char_end: 16266, byte_start: 16266, byte_end: 16267, column_start: 45, column_end: 46, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16266, char_end: 16272, byte_start: 16267, byte_end: 16273, column_start: 46, column_end: 52, line_start: 490, line_end: 490 }: prompt
Token { kind: Space, char_start: 16272, char_end: 16273, byte_start: 16273, byte_end: 16274, column_start: 52, column_end: 53, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16273, char_end: 16275, byte_start: 16274, byte_end: 16276, column_start: 53, column_end: 55, line_start: 490, line_end: 490 }: to
Token { kind: Space, char_start: 16275, char_end: 16276, byte_start: 16276, byte_end: 16277, column_start: 55, column_end: 56, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16276, char_end: 16283, byte_start: 16277, byte_end: 16284, column_start: 56, column_end: 63, line_start: 490, line_end: 490 }: install
Token { kind: Space, char_start: 16283, char_end: 16284, byte_start: 16284, byte_end: 16285, column_start: 63, column_end: 64, line_start: 490, line_end: 490 }: " "
Token { kind: Backtick, char_start: 16284, char_end: 16285, byte_start: 16285, byte_end: 16286, column_start: 64, column_end: 65, line_start: 490, line_end: 490 }: `
Token { kind: Text, char_start: 16285, char_end: 16287, byte_start: 16286, byte_end: 16288, column_start: 65, column_end: 67, line_start: 490, line_end: 490 }: rg
Token { kind: Backtick, char_start: 16287, char_end: 16288, byte_start: 16288, byte_end: 16289, column_start: 67, column_end: 68, line_start: 490, line_end: 490 }: `
Token { kind: Text, char_start: 16288, char_end: 16289, byte_start: 16289, byte_end: 16290, column_start: 68, column_end: 69, line_start: 490, line_end: 490 }: ,
Token { kind: Space, char_start: 16289, char_end: 16290, byte_start: 16290, byte_end: 16291, column_start: 69, column_end: 70, line_start: 490, line_end: 490 }: " "
Token { kind: Backtick, char_start: 16290, char_end: 16291, byte_start: 16291, byte_end: 16292, column_start: 70, column_end: 71, line_start: 490, line_end: 490 }: `
Token { kind: Text, char_start: 16291, char_end: 16293, byte_start: 16292, byte_end: 16294, column_start: 71, column_end: 73, line_start: 490, line_end: 490 }: ag
Token { kind: Backtick, char_start: 16293, char_end: 16294, byte_start: 16294, byte_end: 16295, column_start: 73, column_end: 74, line_start: 490, line_end: 490 }: `
Token { kind: Text, char_start: 16294, char_end: 16295, byte_start: 16295, byte_end: 16296, column_start: 74, column_end: 75, line_start: 490, line_end: 490 }: ,
Token { kind: Space, char_start: 16295, char_end: 16296, byte_start: 16296, byte_end: 16297, column_start: 75, column_end: 76, line_start: 490, line_end: 490 }: " "
Token { kind: Text, char_start: 16296, char_end: 16298, byte_start: 16297, byte_end: 16299, column_start: 76, column_end: 78, line_start: 490, line_end: 490 }: or
Token { kind: Newline, char_start: 16298, char_end: 16299, byte_start: 16299, byte_end: 16300, column_start: 78, column_end: 1, line_start: 490, line_end: 491 }: "\n"
Token { kind: Space, char_start: 16299, char_end: 16301, byte_start: 16300, byte_end: 16302, column_start: 1, column_end: 3, line_start: 491, line_end: 491 }: "  "
Token { kind: Backtick, char_start: 16301, char_end: 16302, byte_start: 16302, byte_end: 16303, column_start: 3, column_end: 4, line_start: 491, line_end: 491 }: `
Token { kind: Text, char_start: 16302, char_end: 16305, byte_start: 16303, byte_end: 16306, column_start: 4, column_end: 7, line_start: 491, line_end: 491 }: ack
Token { kind: Backtick, char_start: 16305, char_end: 16306, byte_start: 16306, byte_end: 16307, column_start: 7, column_end: 8, line_start: 491, line_end: 491 }: `
Token { kind: Text, char_start: 16306, char_end: 16307, byte_start: 16307, byte_end: 16308, column_start: 8, column_end: 9, line_start: 491, line_end: 491 }: /
Token { kind: Backtick, char_start: 16307, char_end: 16308, byte_start: 16308, byte_end: 16309, column_start: 9, column_end: 10, line_start: 491, line_end: 491 }: `
Token { kind: Text, char_start: 16308, char_end: 16311, byte_start: 16309, byte_end: 16312, column_start: 10, column_end: 13, line_start: 491, line_end: 491 }: ack
Token { kind: Hyphen, char_start: 16311, char_end: 16312, byte_start: 16312, byte_end: 16313, column_start: 13, column_end: 14, line_start: 491, line_end: 491 }: -
Token { kind: Text, char_start: 16312, char_end: 16316, byte_start: 16313, byte_end: 16317, column_start: 14, column_end: 18, line_start: 491, line_end: 491 }: grep
Token { kind: Backtick, char_start: 16316, char_end: 16317, byte_start: 16317, byte_end: 16318, column_start: 18, column_end: 19, line_start: 491, line_end: 491 }: `
Token { kind: Space, char_start: 16317, char_end: 16318, byte_start: 16318, byte_end: 16319, column_start: 19, column_end: 20, line_start: 491, line_end: 491 }: " "
Token { kind: Text, char_start: 16318, char_end: 16326, byte_start: 16319, byte_end: 16327, column_start: 20, column_end: 28, line_start: 491, line_end: 491 }: instead.
Token { kind: Newline, char_start: 16326, char_end: 16327, byte_start: 16327, byte_end: 16328, column_start: 28, column_end: 1, line_start: 491, line_end: 492 }: "\n"
Token { kind: Hyphen, char_start: 16327, char_end: 16328, byte_start: 16328, byte_end: 16329, column_start: 1, column_end: 2, line_start: 492, line_end: 492 }: -
Token { kind: Space, char_start: 16328, char_end: 16329, byte_start: 16329, byte_end: 16330, column_start: 2, column_end: 3, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16329, char_end: 16331, byte_start: 16330, byte_end: 16332, column_start: 3, column_end: 5, line_start: 492, line_end: 492 }: If
Token { kind: Space, char_start: 16331, char_end: 16332, byte_start: 16332, byte_end: 16333, column_start: 5, column_end: 6, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16332, char_end: 16334, byte_start: 16333, byte_end: 16335, column_start: 6, column_end: 8, line_start: 492, line_end: 492 }: an
Token { kind: Space, char_start: 16334, char_end: 16335, byte_start: 16335, byte_end: 16336, column_start: 8, column_end: 9, line_start: 492, line_end: 492 }: " "
Token { kind: Backtick, char_start: 16335, char_end: 16336, byte_start: 16336, byte_end: 16337, column_start: 9, column_end: 10, line_start: 492, line_end: 492 }: `
Token { kind: Text, char_start: 16336, char_end: 16339, byte_start: 16337, byte_end: 16340, column_start: 10, column_end: 13, line_start: 492, line_end: 492 }: ack
Token { kind: Backtick, char_start: 16339, char_end: 16340, byte_start: 16340, byte_end: 16341, column_start: 13, column_end: 14, line_start: 492, line_end: 492 }: `
Token { kind: Space, char_start: 16340, char_end: 16341, byte_start: 16341, byte_end: 16342, column_start: 14, column_end: 15, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16341, char_end: 16351, byte_start: 16342, byte_end: 16352, column_start: 15, column_end: 25, line_start: 492, line_end: 492 }: executable
Token { kind: Space, char_start: 16351, char_end: 16352, byte_start: 16352, byte_end: 16353, column_start: 25, column_end: 26, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16352, char_end: 16354, byte_start: 16353, byte_end: 16355, column_start: 26, column_end: 28, line_start: 492, line_end: 492 }: is
Token { kind: Space, char_start: 16354, char_end: 16355, byte_start: 16355, byte_end: 16356, column_start: 28, column_end: 29, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16355, char_end: 16358, byte_start: 16356, byte_end: 16359, column_start: 29, column_end: 32, line_start: 492, line_end: 492 }: not
Token { kind: Space, char_start: 16358, char_end: 16359, byte_start: 16359, byte_end: 16360, column_start: 32, column_end: 33, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16359, char_end: 16365, byte_start: 16360, byte_end: 16366, column_start: 33, column_end: 39, line_start: 492, line_end: 492 }: found,
Token { kind: Space, char_start: 16365, char_end: 16366, byte_start: 16366, byte_end: 16367, column_start: 39, column_end: 40, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16366, char_end: 16372, byte_start: 16367, byte_end: 16373, column_start: 40, column_end: 46, line_start: 492, line_end: 492 }: search
Token { kind: Space, char_start: 16372, char_end: 16373, byte_start: 16373, byte_end: 16374, column_start: 46, column_end: 47, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16373, char_end: 16376, byte_start: 16374, byte_end: 16377, column_start: 47, column_end: 50, line_start: 492, line_end: 492 }: for
Token { kind: Space, char_start: 16376, char_end: 16377, byte_start: 16377, byte_end: 16378, column_start: 50, column_end: 51, line_start: 492, line_end: 492 }: " "
Token { kind: Backtick, char_start: 16377, char_end: 16378, byte_start: 16378, byte_end: 16379, column_start: 51, column_end: 52, line_start: 492, line_end: 492 }: `
Token { kind: Text, char_start: 16378, char_end: 16381, byte_start: 16379, byte_end: 16382, column_start: 52, column_end: 55, line_start: 492, line_end: 492 }: ack
Token { kind: Hyphen, char_start: 16381, char_end: 16382, byte_start: 16382, byte_end: 16383, column_start: 55, column_end: 56, line_start: 492, line_end: 492 }: -
Token { kind: Text, char_start: 16382, char_end: 16386, byte_start: 16383, byte_end: 16387, column_start: 56, column_end: 60, line_start: 492, line_end: 492 }: grep
Token { kind: Backtick, char_start: 16386, char_end: 16387, byte_start: 16387, byte_end: 16388, column_start: 60, column_end: 61, line_start: 492, line_end: 492 }: `
Token { kind: Text, char_start: 16387, char_end: 16388, byte_start: 16388, byte_end: 16389, column_start: 61, column_end: 62, line_start: 492, line_end: 492 }: ,
Token { kind: Space, char_start: 16388, char_end: 16389, byte_start: 16389, byte_end: 16390, column_start: 62, column_end: 63, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16389, char_end: 16394, byte_start: 16390, byte_end: 16395, column_start: 63, column_end: 68, line_start: 492, line_end: 492 }: which
Token { kind: Space, char_start: 16394, char_end: 16395, byte_start: 16395, byte_end: 16396, column_start: 68, column_end: 69, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16395, char_end: 16397, byte_start: 16396, byte_end: 16398, column_start: 69, column_end: 71, line_start: 492, line_end: 492 }: is
Token { kind: Space, char_start: 16397, char_end: 16398, byte_start: 16398, byte_end: 16399, column_start: 71, column_end: 72, line_start: 492, line_end: 492 }: " "
Token { kind: Text, char_start: 16398, char_end: 16401, byte_start: 16399, byte_end: 16402, column_start: 72, column_end: 75, line_start: 492, line_end: 492 }: the
Token { kind: Newline, char_start: 16401, char_end: 16402, byte_start: 16402, byte_end: 16403, column_start: 75, column_end: 1, line_start: 492, line_end: 493 }: "\n"
Token { kind: Space, char_start: 16402, char_end: 16404, byte_start: 16403, byte_end: 16405, column_start: 1, column_end: 3, line_start: 493, line_end: 493 }: "  "
Token { kind: Text, char_start: 16404, char_end: 16408, byte_start: 16405, byte_end: 16409, column_start: 3, column_end: 7, line_start: 493, line_end: 493 }: name
Token { kind: Space, char_start: 16408, char_end: 16409, byte_start: 16409, byte_end: 16410, column_start: 7, column_end: 8, line_start: 493, line_end: 493 }: " "
Token { kind: Text, char_start: 16409, char_end: 16413, byte_start: 16410, byte_end: 16414, column_start: 8, column_end: 12, line_start: 493, line_end: 493 }: used
Token { kind: Space, char_start: 16413, char_end: 16414, byte_start: 16414, byte_end: 16415, column_start: 12, column_end: 13, line_start: 493, line_end: 493 }: " "
Token { kind: Text, char_start: 16414, char_end: 16416, byte_start: 16415, byte_end: 16417, column_start: 13, column_end: 15, line_start: 493, line_end: 493 }: on
Token { kind: Space, char_start: 16416, char_end: 16417, byte_start: 16417, byte_end: 16418, column_start: 15, column_end: 16, line_start: 493, line_end: 493 }: " "
Token { kind: Text, char_start: 16417, char_end: 16423, byte_start: 16418, byte_end: 16424, column_start: 16, column_end: 22, line_start: 493, line_end: 493 }: Debian
Token { kind: Hyphen, char_start: 16423, char_end: 16424, byte_start: 16424, byte_end: 16425, column_start: 22, column_end: 23, line_start: 493, line_end: 493 }: -
Token { kind: Text, char_start: 16424, char_end: 16431, byte_start: 16425, byte_end: 16432, column_start: 23, column_end: 30, line_start: 493, line_end: 493 }: derived
Token { kind: Space, char_start: 16431, char_end: 16432, byte_start: 16432, byte_end: 16433, column_start: 30, column_end: 31, line_start: 493, line_end: 493 }: " "
Token { kind: Text, char_start: 16432, char_end: 16440, byte_start: 16433, byte_end: 16441, column_start: 31, column_end: 39, line_start: 493, line_end: 493 }: distros.
Token { kind: Newline, char_start: 16440, char_end: 16441, byte_start: 16441, byte_end: 16442, column_start: 39, column_end: 1, line_start: 493, line_end: 494 }: "\n"
Token { kind: Newline, char_start: 16441, char_end: 16442, byte_start: 16442, byte_end: 16443, column_start: 1, column_end: 1, line_start: 494, line_end: 495 }: "\n"
Token { kind: Heading(Heading2), char_start: 16442, char_end: 16444, byte_start: 16443, byte_end: 16445, column_start: 1, column_end: 3, line_start: 495, line_end: 495 }: ##
Token { kind: Space, char_start: 16444, char_end: 16445, byte_start: 16445, byte_end: 16446, column_start: 3, column_end: 4, line_start: 495, line_end: 495 }: " "
Token { kind: Text, char_start: 16445, char_end: 16448, byte_start: 16446, byte_end: 16449, column_start: 4, column_end: 7, line_start: 495, line_end: 495 }: 1.3
Token { kind: Space, char_start: 16448, char_end: 16449, byte_start: 16449, byte_end: 16450, column_start: 7, column_end: 8, line_start: 495, line_end: 495 }: " "
Token { kind: Lparen, char_start: 16449, char_end: 16450, byte_start: 16450, byte_end: 16451, column_start: 8, column_end: 9, line_start: 495, line_end: 495 }: (
Token { kind: Text, char_start: 16450, char_end: 16451, byte_start: 16451, byte_end: 16452, column_start: 9, column_end: 10, line_start: 495, line_end: 495 }: 8
Token { kind: Space, char_start: 16451, char_end: 16452, byte_start: 16452, byte_end: 16453, column_start: 10, column_end: 11, line_start: 495, line_end: 495 }: " "
Token { kind: Text, char_start: 16452, char_end: 16459, byte_start: 16453, byte_end: 16460, column_start: 11, column_end: 18, line_start: 495, line_end: 495 }: January
Token { kind: Space, char_start: 16459, char_end: 16460, byte_start: 16460, byte_end: 16461, column_start: 18, column_end: 19, line_start: 495, line_end: 495 }: " "
Token { kind: Text, char_start: 16460, char_end: 16464, byte_start: 16461, byte_end: 16465, column_start: 19, column_end: 23, line_start: 495, line_end: 495 }: 2017
Token { kind: Rparen, char_start: 16464, char_end: 16465, byte_start: 16465, byte_end: 16466, column_start: 23, column_end: 24, line_start: 495, line_end: 495 }: )
Token { kind: Newline, char_start: 16465, char_end: 16466, byte_start: 16466, byte_end: 16467, column_start: 24, column_end: 1, line_start: 495, line_end: 496 }: "\n"
Token { kind: Newline, char_start: 16466, char_end: 16467, byte_start: 16467, byte_end: 16468, column_start: 1, column_end: 1, line_start: 496, line_end: 497 }: "\n"
Token { kind: Hyphen, char_start: 16467, char_end: 16468, byte_start: 16468, byte_end: 16469, column_start: 1, column_end: 2, line_start: 497, line_end: 497 }: -
Token { kind: Space, char_start: 16468, char_end: 16469, byte_start: 16469, byte_end: 16470, column_start: 2, column_end: 3, line_start: 497, line_end: 497 }: " "
Token { kind: Text, char_start: 16469, char_end: 16474, byte_start: 16470, byte_end: 16475, column_start: 3, column_end: 8, line_start: 497, line_end: 497 }: Reset
Token { kind: Space, char_start: 16474, char_end: 16475, byte_start: 16475, byte_end: 16476, column_start: 8, column_end: 9, line_start: 497, line_end: 497 }: " "
Token { kind: Bar, char_start: 16475, char_end: 16476, byte_start: 16476, byte_end: 16477, column_start: 9, column_end: 10, line_start: 497, line_end: 497 }: |
Token { kind: Text, char_start: 16476, char_end: 16489, byte_start: 16477, byte_end: 16490, column_start: 10, column_end: 23, line_start: 497, line_end: 497 }: 'errorformat'
Token { kind: Bar, char_start: 16489, char_end: 16490, byte_start: 16490, byte_end: 16491, column_start: 23, column_end: 24, line_start: 497, line_end: 497 }: |
Token { kind: Space, char_start: 16490, char_end: 16491, byte_start: 16491, byte_end: 16492, column_start: 24, column_end: 25, line_start: 497, line_end: 497 }: " "
Token { kind: Text, char_start: 16491, char_end: 16497, byte_start: 16492, byte_end: 16498, column_start: 25, column_end: 31, line_start: 497, line_end: 497 }: before
Token { kind: Space, char_start: 16497, char_end: 16498, byte_start: 16498, byte_end: 16499, column_start: 31, column_end: 32, line_start: 497, line_end: 497 }: " "
Token { kind: Text, char_start: 16498, char_end: 16502, byte_start: 16499, byte_end: 16503, column_start: 32, column_end: 36, line_start: 497, line_end: 497 }: each
Token { kind: Space, char_start: 16502, char_end: 16503, byte_start: 16503, byte_end: 16504, column_start: 36, column_end: 37, line_start: 497, line_end: 497 }: " "
Token { kind: Text, char_start: 16503, char_end: 16509, byte_start: 16504, byte_end: 16510, column_start: 37, column_end: 43, line_start: 497, line_end: 497 }: search
Token { kind: Space, char_start: 16509, char_end: 16510, byte_start: 16510, byte_end: 16511, column_start: 43, column_end: 44, line_start: 497, line_end: 497 }: " "
Token { kind: Lparen, char_start: 16510, char_end: 16511, byte_start: 16511, byte_end: 16512, column_start: 44, column_end: 45, line_start: 497, line_end: 497 }: (
Token { kind: Text, char_start: 16511, char_end: 16516, byte_start: 16512, byte_end: 16517, column_start: 45, column_end: 50, line_start: 497, line_end: 497 }: fixes
Token { kind: Space, char_start: 16516, char_end: 16517, byte_start: 16517, byte_end: 16518, column_start: 50, column_end: 51, line_start: 497, line_end: 497 }: " "
Token { kind: Text, char_start: 16517, char_end: 16522, byte_start: 16518, byte_end: 16523, column_start: 51, column_end: 56, line_start: 497, line_end: 497 }: issue
Token { kind: Space, char_start: 16522, char_end: 16523, byte_start: 16523, byte_end: 16524, column_start: 56, column_end: 57, line_start: 497, line_end: 497 }: " "
Token { kind: Heading(Heading1), char_start: 16523, char_end: 16524, byte_start: 16524, byte_end: 16525, column_start: 57, column_end: 58, line_start: 497, line_end: 497 }: #
Token { kind: Text, char_start: 16524, char_end: 16526, byte_start: 16525, byte_end: 16527, column_start: 58, column_end: 60, line_start: 497, line_end: 497 }: 31
Token { kind: Rparen, char_start: 16526, char_end: 16527, byte_start: 16527, byte_end: 16528, column_start: 60, column_end: 61, line_start: 497, line_end: 497 }: )
Token { kind: Text, char_start: 16527, char_end: 16528, byte_start: 16528, byte_end: 16529, column_start: 61, column_end: 62, line_start: 497, line_end: 497 }: .
Token { kind: Newline, char_start: 16528, char_end: 16529, byte_start: 16529, byte_end: 16530, column_start: 62, column_end: 1, line_start: 497, line_end: 498 }: "\n"
Token { kind: Hyphen, char_start: 16529, char_end: 16530, byte_start: 16530, byte_end: 16531, column_start: 1, column_end: 2, line_start: 498, line_end: 498 }: -
Token { kind: Space, char_start: 16530, char_end: 16531, byte_start: 16531, byte_end: 16532, column_start: 2, column_end: 3, line_start: 498, line_end: 498 }: " "
Token { kind: Text, char_start: 16531, char_end: 16536, byte_start: 16532, byte_end: 16537, column_start: 3, column_end: 8, line_start: 498, line_end: 498 }: Added
Token { kind: Space, char_start: 16536, char_end: 16537, byte_start: 16537, byte_end: 16538, column_start: 8, column_end: 9, line_start: 498, line_end: 498 }: " "
Token { kind: Bar, char_start: 16537, char_end: 16538, byte_start: 16538, byte_end: 16539, column_start: 9, column_end: 10, line_start: 498, line_end: 498 }: |
Token { kind: Text, char_start: 16538, char_end: 16543, byte_start: 16539, byte_end: 16544, column_start: 10, column_end: 15, line_start: 498, line_end: 498 }: :Back
Token { kind: Bar, char_start: 16543, char_end: 16544, byte_start: 16544, byte_end: 16545, column_start: 15, column_end: 16, line_start: 498, line_end: 498 }: |
Token { kind: Space, char_start: 16544, char_end: 16545, byte_start: 16545, byte_end: 16546, column_start: 16, column_end: 17, line_start: 498, line_end: 498 }: " "
Token { kind: Text, char_start: 16545, char_end: 16548, byte_start: 16546, byte_end: 16549, column_start: 17, column_end: 20, line_start: 498, line_end: 498 }: and
Token { kind: Space, char_start: 16548, char_end: 16549, byte_start: 16549, byte_end: 16550, column_start: 20, column_end: 21, line_start: 498, line_end: 498 }: " "
Token { kind: Bar, char_start: 16549, char_end: 16550, byte_start: 16550, byte_end: 16551, column_start: 21, column_end: 22, line_start: 498, line_end: 498 }: |
Token { kind: Text, char_start: 16550, char_end: 16556, byte_start: 16551, byte_end: 16557, column_start: 22, column_end: 28, line_start: 498, line_end: 498 }: :Black
Token { kind: Bar, char_start: 16556, char_end: 16557, byte_start: 16557, byte_end: 16558, column_start: 28, column_end: 29, line_start: 498, line_end: 498 }: |
Token { kind: Space, char_start: 16557, char_end: 16558, byte_start: 16558, byte_end: 16559, column_start: 29, column_end: 30, line_start: 498, line_end: 498 }: " "
Token { kind: Text, char_start: 16558, char_end: 16567, byte_start: 16559, byte_end: 16568, column_start: 30, column_end: 39, line_start: 498, line_end: 498 }: commands,
Token { kind: Space, char_start: 16567, char_end: 16568, byte_start: 16568, byte_end: 16569, column_start: 39, column_end: 40, line_start: 498, line_end: 498 }: " "
Token { kind: Text, char_start: 16568, char_end: 16577, byte_start: 16569, byte_end: 16578, column_start: 40, column_end: 49, line_start: 498, line_end: 498 }: analogous
Token { kind: Space, char_start: 16577, char_end: 16578, byte_start: 16578, byte_end: 16579, column_start: 49, column_end: 50, line_start: 498, line_end: 498 }: " "
Token { kind: Text, char_start: 16578, char_end: 16580, byte_start: 16579, byte_end: 16581, column_start: 50, column_end: 52, line_start: 498, line_end: 498 }: to
Token { kind: Space, char_start: 16580, char_end: 16581, byte_start: 16581, byte_end: 16582, column_start: 52, column_end: 53, line_start: 498, line_end: 498 }: " "
Token { kind: Bar, char_start: 16581, char_end: 16582, byte_start: 16582, byte_end: 16583, column_start: 53, column_end: 54, line_start: 498, line_end: 498 }: |
Token { kind: Text, char_start: 16582, char_end: 16586, byte_start: 16583, byte_end: 16587, column_start: 54, column_end: 58, line_start: 498, line_end: 498 }: :Ack
Token { kind: Bar, char_start: 16586, char_end: 16587, byte_start: 16587, byte_end: 16588, column_start: 58, column_end: 59, line_start: 498, line_end: 498 }: |
Token { kind: Space, char_start: 16587, char_end: 16588, byte_start: 16588, byte_end: 16589, column_start: 59, column_end: 60, line_start: 498, line_end: 498 }: " "
Token { kind: Text, char_start: 16588, char_end: 16591, byte_start: 16589, byte_end: 16592, column_start: 60, column_end: 63, line_start: 498, line_end: 498 }: and
Token { kind: Space, char_start: 16591, char_end: 16592, byte_start: 16592, byte_end: 16593, column_start: 63, column_end: 64, line_start: 498, line_end: 498 }: " "
Token { kind: Bar, char_start: 16592, char_end: 16593, byte_start: 16593, byte_end: 16594, column_start: 64, column_end: 65, line_start: 498, line_end: 498 }: |
Token { kind: Text, char_start: 16593, char_end: 16598, byte_start: 16594, byte_end: 16599, column_start: 65, column_end: 70, line_start: 498, line_end: 498 }: :Lack
Token { kind: Bar, char_start: 16598, char_end: 16599, byte_start: 16599, byte_end: 16600, column_start: 70, column_end: 71, line_start: 498, line_end: 498 }: |
Token { kind: Space, char_start: 16599, char_end: 16600, byte_start: 16600, byte_end: 16601, column_start: 71, column_end: 72, line_start: 498, line_end: 498 }: " "
Token { kind: Text, char_start: 16600, char_end: 16603, byte_start: 16601, byte_end: 16604, column_start: 72, column_end: 75, line_start: 498, line_end: 498 }: but
Token { kind: Newline, char_start: 16603, char_end: 16604, byte_start: 16604, byte_end: 16605, column_start: 75, column_end: 1, line_start: 498, line_end: 499 }: "\n"
Token { kind: Space, char_start: 16604, char_end: 16606, byte_start: 16605, byte_end: 16607, column_start: 1, column_end: 3, line_start: 499, line_end: 499 }: "  "
Token { kind: Text, char_start: 16606, char_end: 16612, byte_start: 16607, byte_end: 16613, column_start: 3, column_end: 9, line_start: 499, line_end: 499 }: scoped
Token { kind: Space, char_start: 16612, char_end: 16613, byte_start: 16613, byte_end: 16614, column_start: 9, column_end: 10, line_start: 499, line_end: 499 }: " "
Token { kind: Text, char_start: 16613, char_end: 16615, byte_start: 16614, byte_end: 16616, column_start: 10, column_end: 12, line_start: 499, line_end: 499 }: to
Token { kind: Space, char_start: 16615, char_end: 16616, byte_start: 16616, byte_end: 16617, column_start: 12, column_end: 13, line_start: 499, line_end: 499 }: " "
Token { kind: Text, char_start: 16616, char_end: 16622, byte_start: 16617, byte_end: 16623, column_start: 13, column_end: 19, line_start: 499, line_end: 499 }: search
Token { kind: Space, char_start: 16622, char_end: 16623, byte_start: 16623, byte_end: 16624, column_start: 19, column_end: 20, line_start: 499, line_end: 499 }: " "
Token { kind: Text, char_start: 16623, char_end: 16629, byte_start: 16624, byte_end: 16630, column_start: 20, column_end: 26, line_start: 499, line_end: 499 }: within
Token { kind: Space, char_start: 16629, char_end: 16630, byte_start: 16630, byte_end: 16631, column_start: 26, column_end: 27, line_start: 499, line_end: 499 }: " "
Token { kind: Text, char_start: 16630, char_end: 16639, byte_start: 16631, byte_end: 16640, column_start: 27, column_end: 36, line_start: 499, line_end: 499 }: currently
Token { kind: Space, char_start: 16639, char_end: 16640, byte_start: 16640, byte_end: 16641, column_start: 36, column_end: 37, line_start: 499, line_end: 499 }: " "
Token { kind: Text, char_start: 16640, char_end: 16644, byte_start: 16641, byte_end: 16645, column_start: 37, column_end: 41, line_start: 499, line_end: 499 }: open
Token { kind: Space, char_start: 16644, char_end: 16645, byte_start: 16645, byte_end: 16646, column_start: 41, column_end: 42, line_start: 499, line_end: 499 }: " "
Token { kind: Text, char_start: 16645, char_end: 16652, byte_start: 16646, byte_end: 16653, column_start: 42, column_end: 49, line_start: 499, line_end: 499 }: buffers
Token { kind: Space, char_start: 16652, char_end: 16653, byte_start: 16653, byte_end: 16654, column_start: 49, column_end: 50, line_start: 499, line_end: 499 }: " "
Token { kind: Text, char_start: 16653, char_end: 16658, byte_start: 16654, byte_end: 16659, column_start: 50, column_end: 55, line_start: 499, line_end: 499 }: only.
Token { kind: Newline, char_start: 16658, char_end: 16659, byte_start: 16659, byte_end: 16660, column_start: 55, column_end: 1, line_start: 499, line_end: 500 }: "\n"
Token { kind: Hyphen, char_start: 16659, char_end: 16660, byte_start: 16660, byte_end: 16661, column_start: 1, column_end: 2, line_start: 500, line_end: 500 }: -
Token { kind: Space, char_start: 16660, char_end: 16661, byte_start: 16661, byte_end: 16662, column_start: 2, column_end: 3, line_start: 500, line_end: 500 }: " "
Token { kind: Text, char_start: 16661, char_end: 16667, byte_start: 16662, byte_end: 16668, column_start: 3, column_end: 9, line_start: 500, line_end: 500 }: Change
Token { kind: Space, char_start: 16667, char_end: 16668, byte_start: 16668, byte_end: 16669, column_start: 9, column_end: 10, line_start: 500, line_end: 500 }: " "
Token { kind: Bar, char_start: 16668, char_end: 16669, byte_start: 16669, byte_end: 16670, column_start: 10, column_end: 11, line_start: 500, line_end: 500 }: |
Token { kind: Text, char_start: 16669, char_end: 16674, byte_start: 16670, byte_end: 16675, column_start: 11, column_end: 16, line_start: 500, line_end: 500 }: :Acks
Token { kind: Bar, char_start: 16674, char_end: 16675, byte_start: 16675, byte_end: 16676, column_start: 16, column_end: 17, line_start: 500, line_end: 500 }: |
Token { kind: Space, char_start: 16675, char_end: 16676, byte_start: 16676, byte_end: 16677, column_start: 17, column_end: 18, line_start: 500, line_end: 500 }: " "
Token { kind: Text, char_start: 16676, char_end: 16678, byte_start: 16677, byte_end: 16679, column_start: 18, column_end: 20, line_start: 500, line_end: 500 }: to
Token { kind: Space, char_start: 16678, char_end: 16679, byte_start: 16679, byte_end: 16680, column_start: 20, column_end: 21, line_start: 500, line_end: 500 }: " "
Token { kind: Text, char_start: 16679, char_end: 16682, byte_start: 16680, byte_end: 16683, column_start: 21, column_end: 24, line_start: 500, line_end: 500 }: use
Token { kind: Space, char_start: 16682, char_end: 16683, byte_start: 16683, byte_end: 16684, column_start: 24, column_end: 25, line_start: 500, line_end: 500 }: " "
Token { kind: Bar, char_start: 16683, char_end: 16684, byte_start: 16684, byte_end: 16685, column_start: 25, column_end: 26, line_start: 500, line_end: 500 }: |
Token { kind: Text, char_start: 16684, char_end: 16689, byte_start: 16685, byte_end: 16690, column_start: 26, column_end: 31, line_start: 500, line_end: 500 }: :cfdo
Token { kind: Bar, char_start: 16689, char_end: 16690, byte_start: 16690, byte_end: 16691, column_start: 31, column_end: 32, line_start: 500, line_end: 500 }: |
Token { kind: Space, char_start: 16690, char_end: 16691, byte_start: 16691, byte_end: 16692, column_start: 32, column_end: 33, line_start: 500, line_end: 500 }: " "
Token { kind: Text, char_start: 16691, char_end: 16695, byte_start: 16692, byte_end: 16696, column_start: 33, column_end: 37, line_start: 500, line_end: 500 }: when
Token { kind: Space, char_start: 16695, char_end: 16696, byte_start: 16696, byte_end: 16697, column_start: 37, column_end: 38, line_start: 500, line_end: 500 }: " "
Token { kind: Text, char_start: 16696, char_end: 16705, byte_start: 16697, byte_end: 16706, column_start: 38, column_end: 47, line_start: 500, line_end: 500 }: available
Token { kind: Space, char_start: 16705, char_end: 16706, byte_start: 16706, byte_end: 16707, column_start: 47, column_end: 48, line_start: 500, line_end: 500 }: " "
Token { kind: Text, char_start: 16706, char_end: 16712, byte_start: 16707, byte_end: 16713, column_start: 48, column_end: 54, line_start: 500, line_end: 500 }: rather
Token { kind: Space, char_start: 16712, char_end: 16713, byte_start: 16713, byte_end: 16714, column_start: 54, column_end: 55, line_start: 500, line_end: 500 }: " "
Token { kind: Text, char_start: 16713, char_end: 16717, byte_start: 16714, byte_end: 16718, column_start: 55, column_end: 59, line_start: 500, line_end: 500 }: than
Token { kind: Space, char_start: 16717, char_end: 16718, byte_start: 16718, byte_end: 16719, column_start: 59, column_end: 60, line_start: 500, line_end: 500 }: " "
Token { kind: Bar, char_start: 16718, char_end: 16719, byte_start: 16719, byte_end: 16720, column_start: 60, column_end: 61, line_start: 500, line_end: 500 }: |
Token { kind: Text, char_start: 16719, char_end: 16725, byte_start: 16720, byte_end: 16726, column_start: 61, column_end: 67, line_start: 500, line_end: 500 }: :Qargs
Token { kind: Bar, char_start: 16725, char_end: 16726, byte_start: 16726, byte_end: 16727, column_start: 67, column_end: 68, line_start: 500, line_end: 500 }: |
Token { kind: Space, char_start: 16726, char_end: 16727, byte_start: 16727, byte_end: 16728, column_start: 68, column_end: 69, line_start: 500, line_end: 500 }: " "
Token { kind: Text, char_start: 16727, char_end: 16730, byte_start: 16728, byte_end: 16731, column_start: 69, column_end: 72, line_start: 500, line_end: 500 }: and
Token { kind: Newline, char_start: 16730, char_end: 16731, byte_start: 16731, byte_end: 16732, column_start: 72, column_end: 1, line_start: 500, line_end: 501 }: "\n"
Token { kind: Space, char_start: 16731, char_end: 16733, byte_start: 16732, byte_end: 16734, column_start: 1, column_end: 3, line_start: 501, line_end: 501 }: "  "
Token { kind: Bar, char_start: 16733, char_end: 16734, byte_start: 16734, byte_end: 16735, column_start: 3, column_end: 4, line_start: 501, line_end: 501 }: |
Token { kind: Text, char_start: 16734, char_end: 16740, byte_start: 16735, byte_end: 16741, column_start: 4, column_end: 10, line_start: 501, line_end: 501 }: :argdo
Token { kind: Bar, char_start: 16740, char_end: 16741, byte_start: 16741, byte_end: 16742, column_start: 10, column_end: 11, line_start: 501, line_end: 501 }: |
Token { kind: Text, char_start: 16741, char_end: 16742, byte_start: 16742, byte_end: 16743, column_start: 11, column_end: 12, line_start: 501, line_end: 501 }: ,
Token { kind: Space, char_start: 16742, char_end: 16743, byte_start: 16743, byte_end: 16744, column_start: 12, column_end: 13, line_start: 501, line_end: 501 }: " "
Token { kind: Text, char_start: 16743, char_end: 16745, byte_start: 16744, byte_end: 16746, column_start: 13, column_end: 15, line_start: 501, line_end: 501 }: to
Token { kind: Space, char_start: 16745, char_end: 16746, byte_start: 16746, byte_end: 16747, column_start: 15, column_end: 16, line_start: 501, line_end: 501 }: " "
Token { kind: Text, char_start: 16746, char_end: 16751, byte_start: 16747, byte_end: 16752, column_start: 16, column_end: 21, line_start: 501, line_end: 501 }: avoid
Token { kind: Space, char_start: 16751, char_end: 16752, byte_start: 16752, byte_end: 16753, column_start: 21, column_end: 22, line_start: 501, line_end: 501 }: " "
Token { kind: Text, char_start: 16752, char_end: 16761, byte_start: 16753, byte_end: 16762, column_start: 22, column_end: 31, line_start: 501, line_end: 501 }: polluting
Token { kind: Space, char_start: 16761, char_end: 16762, byte_start: 16762, byte_end: 16763, column_start: 31, column_end: 32, line_start: 501, line_end: 501 }: " "
Token { kind: Text, char_start: 16762, char_end: 16765, byte_start: 16763, byte_end: 16766, column_start: 32, column_end: 35, line_start: 501, line_end: 501 }: the
Token { kind: Space, char_start: 16765, char_end: 16766, byte_start: 16766, byte_end: 16767, column_start: 35, column_end: 36, line_start: 501, line_end: 501 }: " "
Token { kind: Bar, char_start: 16766, char_end: 16767, byte_start: 16767, byte_end: 16768, column_start: 36, column_end: 37, line_start: 501, line_end: 501 }: |
Token { kind: Text, char_start: 16767, char_end: 16774, byte_start: 16768, byte_end: 16775, column_start: 37, column_end: 44, line_start: 501, line_end: 501 }: arglist
Token { kind: Bar, char_start: 16774, char_end: 16775, byte_start: 16775, byte_end: 16776, column_start: 44, column_end: 45, line_start: 501, line_end: 501 }: |
Token { kind: Text, char_start: 16775, char_end: 16776, byte_start: 16776, byte_end: 16777, column_start: 45, column_end: 46, line_start: 501, line_end: 501 }: .
Token { kind: Newline, char_start: 16776, char_end: 16777, byte_start: 16777, byte_end: 16778, column_start: 46, column_end: 1, line_start: 501, line_end: 502 }: "\n"
Token { kind: Hyphen, char_start: 16777, char_end: 16778, byte_start: 16778, byte_end: 16779, column_start: 1, column_end: 2, line_start: 502, line_end: 502 }: -
Token { kind: Space, char_start: 16778, char_end: 16779, byte_start: 16779, byte_end: 16780, column_start: 2, column_end: 3, line_start: 502, line_end: 502 }: " "
Token { kind: Text, char_start: 16779, char_end: 16785, byte_start: 16780, byte_end: 16786, column_start: 3, column_end: 9, line_start: 502, line_end: 502 }: Remove
Token { kind: Space, char_start: 16785, char_end: 16786, byte_start: 16786, byte_end: 16787, column_start: 9, column_end: 10, line_start: 502, line_end: 502 }: " "
Token { kind: Text, char_start: 16786, char_end: 16797, byte_start: 16787, byte_end: 16798, column_start: 10, column_end: 21, line_start: 502, line_end: 502 }: superfluous
Token { kind: Space, char_start: 16797, char_end: 16798, byte_start: 16798, byte_end: 16799, column_start: 21, column_end: 22, line_start: 502, line_end: 502 }: " "
Token { kind: Bar, char_start: 16798, char_end: 16799, byte_start: 16799, byte_end: 16800, column_start: 22, column_end: 23, line_start: 502, line_end: 502 }: |
Token { kind: Text, char_start: 16799, char_end: 16814, byte_start: 16800, byte_end: 16815, column_start: 23, column_end: 38, line_start: 502, line_end: 502 }: QuickFixCmdPost
Token { kind: Bar, char_start: 16814, char_end: 16815, byte_start: 16815, byte_end: 16816, column_start: 38, column_end: 39, line_start: 502, line_end: 502 }: |
Token { kind: Space, char_start: 16815, char_end: 16816, byte_start: 16816, byte_end: 16817, column_start: 39, column_end: 40, line_start: 502, line_end: 502 }: " "
Token { kind: Text, char_start: 16816, char_end: 16829, byte_start: 16817, byte_end: 16830, column_start: 40, column_end: 53, line_start: 502, line_end: 502 }: autocommands,
Token { kind: Space, char_start: 16829, char_end: 16830, byte_start: 16830, byte_end: 16831, column_start: 53, column_end: 54, line_start: 502, line_end: 502 }: " "
Token { kind: Text, char_start: 16830, char_end: 16839, byte_start: 16831, byte_end: 16840, column_start: 54, column_end: 63, line_start: 502, line_end: 502 }: resolving
Token { kind: Space, char_start: 16839, char_end: 16840, byte_start: 16840, byte_end: 16841, column_start: 63, column_end: 64, line_start: 502, line_end: 502 }: " "
Token { kind: Text, char_start: 16840, char_end: 16845, byte_start: 16841, byte_end: 16846, column_start: 64, column_end: 69, line_start: 502, line_end: 502 }: clash
Token { kind: Space, char_start: 16845, char_end: 16846, byte_start: 16846, byte_end: 16847, column_start: 69, column_end: 70, line_start: 502, line_end: 502 }: " "
Token { kind: Text, char_start: 16846, char_end: 16850, byte_start: 16847, byte_end: 16851, column_start: 70, column_end: 74, line_start: 502, line_end: 502 }: with
Token { kind: Newline, char_start: 16850, char_end: 16851, byte_start: 16851, byte_end: 16852, column_start: 74, column_end: 1, line_start: 502, line_end: 503 }: "\n"
Token { kind: Space, char_start: 16851, char_end: 16853, byte_start: 16852, byte_end: 16854, column_start: 1, column_end: 3, line_start: 503, line_end: 503 }: "  "
Token { kind: Text, char_start: 16853, char_end: 16860, byte_start: 16854, byte_end: 16861, column_start: 3, column_end: 10, line_start: 503, line_end: 503 }: Neomake
Token { kind: Space, char_start: 16860, char_end: 16861, byte_start: 16861, byte_end: 16862, column_start: 10, column_end: 11, line_start: 503, line_end: 503 }: " "
Token { kind: Text, char_start: 16861, char_end: 16865, byte_start: 16862, byte_end: 16866, column_start: 11, column_end: 15, line_start: 503, line_end: 503 }: plug
Token { kind: Hyphen, char_start: 16865, char_end: 16866, byte_start: 16866, byte_end: 16867, column_start: 15, column_end: 16, line_start: 503, line_end: 503 }: -
Token { kind: Text, char_start: 16866, char_end: 16868, byte_start: 16867, byte_end: 16869, column_start: 16, column_end: 18, line_start: 503, line_end: 503 }: in
Token { kind: Space, char_start: 16868, char_end: 16869, byte_start: 16869, byte_end: 16870, column_start: 18, column_end: 19, line_start: 503, line_end: 503 }: " "
Token { kind: Lparen, char_start: 16869, char_end: 16870, byte_start: 16870, byte_end: 16871, column_start: 19, column_end: 20, line_start: 503, line_end: 503 }: (
Token { kind: Text, char_start: 16870, char_end: 16875, byte_start: 16871, byte_end: 16876, column_start: 20, column_end: 25, line_start: 503, line_end: 503 }: patch
Token { kind: Space, char_start: 16875, char_end: 16876, byte_start: 16876, byte_end: 16877, column_start: 25, column_end: 26, line_start: 503, line_end: 503 }: " "
Token { kind: Text, char_start: 16876, char_end: 16880, byte_start: 16877, byte_end: 16881, column_start: 26, column_end: 30, line_start: 503, line_end: 503 }: from
Token { kind: Space, char_start: 16880, char_end: 16881, byte_start: 16881, byte_end: 16882, column_start: 30, column_end: 31, line_start: 503, line_end: 503 }: " "
Token { kind: Text, char_start: 16881, char_end: 16884, byte_start: 16882, byte_end: 16885, column_start: 31, column_end: 34, line_start: 503, line_end: 503 }: Tom
Token { kind: Space, char_start: 16884, char_end: 16885, byte_start: 16885, byte_end: 16886, column_start: 34, column_end: 35, line_start: 503, line_end: 503 }: " "
Token { kind: Text, char_start: 16885, char_end: 16892, byte_start: 16886, byte_end: 16893, column_start: 35, column_end: 42, line_start: 503, line_end: 503 }: Dooner,
Token { kind: Space, char_start: 16892, char_end: 16893, byte_start: 16893, byte_end: 16894, column_start: 42, column_end: 43, line_start: 503, line_end: 503 }: " "
Token { kind: Heading(Heading1), char_start: 16893, char_end: 16894, byte_start: 16894, byte_end: 16895, column_start: 43, column_end: 44, line_start: 503, line_end: 503 }: #
Token { kind: Text, char_start: 16894, char_end: 16896, byte_start: 16895, byte_end: 16897, column_start: 44, column_end: 46, line_start: 503, line_end: 503 }: 36
Token { kind: Rparen, char_start: 16896, char_end: 16897, byte_start: 16897, byte_end: 16898, column_start: 46, column_end: 47, line_start: 503, line_end: 503 }: )
Token { kind: Text, char_start: 16897, char_end: 16898, byte_start: 16898, byte_end: 16899, column_start: 47, column_end: 48, line_start: 503, line_end: 503 }: .
Token { kind: Newline, char_start: 16898, char_end: 16899, byte_start: 16899, byte_end: 16900, column_start: 48, column_end: 1, line_start: 503, line_end: 504 }: "\n"
Token { kind: Hyphen, char_start: 16899, char_end: 16900, byte_start: 16900, byte_end: 16901, column_start: 1, column_end: 2, line_start: 504, line_end: 504 }: -
Token { kind: Space, char_start: 16900, char_end: 16901, byte_start: 16901, byte_end: 16902, column_start: 2, column_end: 3, line_start: 504, line_end: 504 }: " "
Token { kind: Text, char_start: 16901, char_end: 16904, byte_start: 16902, byte_end: 16905, column_start: 3, column_end: 6, line_start: 504, line_end: 504 }: Add
Token { kind: Space, char_start: 16904, char_end: 16905, byte_start: 16905, byte_end: 16906, column_start: 6, column_end: 7, line_start: 504, line_end: 504 }: " "
Token { kind: Text, char_start: 16905, char_end: 16912, byte_start: 16906, byte_end: 16913, column_start: 7, column_end: 14, line_start: 504, line_end: 504 }: support
Token { kind: Space, char_start: 16912, char_end: 16913, byte_start: 16913, byte_end: 16914, column_start: 14, column_end: 15, line_start: 504, line_end: 504 }: " "
Token { kind: Text, char_start: 16913, char_end: 16916, byte_start: 16914, byte_end: 16917, column_start: 15, column_end: 18, line_start: 504, line_end: 504 }: for
Token { kind: Space, char_start: 16916, char_end: 16917, byte_start: 16917, byte_end: 16918, column_start: 18, column_end: 19, line_start: 504, line_end: 504 }: " "
Token { kind: Text, char_start: 16917, char_end: 16926, byte_start: 16918, byte_end: 16927, column_start: 19, column_end: 28, line_start: 504, line_end: 504 }: searching
Token { kind: Space, char_start: 16926, char_end: 16927, byte_start: 16927, byte_end: 16928, column_start: 28, column_end: 29, line_start: 504, line_end: 504 }: " "
Token { kind: Text, char_start: 16927, char_end: 16931, byte_start: 16928, byte_end: 16932, column_start: 29, column_end: 33, line_start: 504, line_end: 504 }: with
Token { kind: Space, char_start: 16931, char_end: 16932, byte_start: 16932, byte_end: 16933, column_start: 33, column_end: 34, line_start: 504, line_end: 504 }: " "
Token { kind: Text, char_start: 16932, char_end: 16939, byte_start: 16933, byte_end: 16940, column_start: 34, column_end: 41, line_start: 504, line_end: 504 }: ripgrep
Token { kind: Space, char_start: 16939, char_end: 16940, byte_start: 16940, byte_end: 16941, column_start: 41, column_end: 42, line_start: 504, line_end: 504 }: " "
Token { kind: Lparen, char_start: 16940, char_end: 16941, byte_start: 16941, byte_end: 16942, column_start: 42, column_end: 43, line_start: 504, line_end: 504 }: (
Token { kind: Backtick, char_start: 16941, char_end: 16942, byte_start: 16942, byte_end: 16943, column_start: 43, column_end: 44, line_start: 504, line_end: 504 }: `
Token { kind: Text, char_start: 16942, char_end: 16944, byte_start: 16943, byte_end: 16945, column_start: 44, column_end: 46, line_start: 504, line_end: 504 }: rg
Token { kind: Backtick, char_start: 16944, char_end: 16945, byte_start: 16945, byte_end: 16946, column_start: 46, column_end: 47, line_start: 504, line_end: 504 }: `
Token { kind: Rparen, char_start: 16945, char_end: 16946, byte_start: 16946, byte_end: 16947, column_start: 47, column_end: 48, line_start: 504, line_end: 504 }: )
Token { kind: Text, char_start: 16946, char_end: 16947, byte_start: 16947, byte_end: 16948, column_start: 48, column_end: 49, line_start: 504, line_end: 504 }: .
Token { kind: Newline, char_start: 16947, char_end: 16948, byte_start: 16948, byte_end: 16949, column_start: 49, column_end: 1, line_start: 504, line_end: 505 }: "\n"
Token { kind: Newline, char_start: 16948, char_end: 16949, byte_start: 16949, byte_end: 16950, column_start: 1, column_end: 1, line_start: 505, line_end: 506 }: "\n"
Token { kind: Heading(Heading2), char_start: 16949, char_end: 16951, byte_start: 16950, byte_end: 16952, column_start: 1, column_end: 3, line_start: 506, line_end: 506 }: ##
Token { kind: Space, char_start: 16951, char_end: 16952, byte_start: 16952, byte_end: 16953, column_start: 3, column_end: 4, line_start: 506, line_end: 506 }: " "
Token { kind: Text, char_start: 16952, char_end: 16956, byte_start: 16953, byte_end: 16957, column_start: 4, column_end: 8, line_start: 506, line_end: 506 }: 1.2a
Token { kind: Space, char_start: 16956, char_end: 16957, byte_start: 16957, byte_end: 16958, column_start: 8, column_end: 9, line_start: 506, line_end: 506 }: " "
Token { kind: Lparen, char_start: 16957, char_end: 16958, byte_start: 16958, byte_end: 16959, column_start: 9, column_end: 10, line_start: 506, line_end: 506 }: (
Token { kind: Text, char_start: 16958, char_end: 16960, byte_start: 16959, byte_end: 16961, column_start: 10, column_end: 12, line_start: 506, line_end: 506 }: 16
Token { kind: Space, char_start: 16960, char_end: 16961, byte_start: 16961, byte_end: 16962, column_start: 12, column_end: 13, line_start: 506, line_end: 506 }: " "
Token { kind: Text, char_start: 16961, char_end: 16964, byte_start: 16962, byte_end: 16965, column_start: 13, column_end: 16, line_start: 506, line_end: 506 }: May
Token { kind: Space, char_start: 16964, char_end: 16965, byte_start: 16965, byte_end: 16966, column_start: 16, column_end: 17, line_start: 506, line_end: 506 }: " "
Token { kind: Text, char_start: 16965, char_end: 16969, byte_start: 16966, byte_end: 16970, column_start: 17, column_end: 21, line_start: 506, line_end: 506 }: 2016
Token { kind: Rparen, char_start: 16969, char_end: 16970, byte_start: 16970, byte_end: 16971, column_start: 21, column_end: 22, line_start: 506, line_end: 506 }: )
Token { kind: Newline, char_start: 16970, char_end: 16971, byte_start: 16971, byte_end: 16972, column_start: 22, column_end: 1, line_start: 506, line_end: 507 }: "\n"
Token { kind: Newline, char_start: 16971, char_end: 16972, byte_start: 16972, byte_end: 16973, column_start: 1, column_end: 1, line_start: 507, line_end: 508 }: "\n"
Token { kind: Hyphen, char_start: 16972, char_end: 16973, byte_start: 16973, byte_end: 16974, column_start: 1, column_end: 2, line_start: 508, line_end: 508 }: -
Token { kind: Space, char_start: 16973, char_end: 16974, byte_start: 16974, byte_end: 16975, column_start: 2, column_end: 3, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 16974, char_end: 16977, byte_start: 16975, byte_end: 16978, column_start: 3, column_end: 6, line_start: 508, line_end: 508 }: Add
Token { kind: Space, char_start: 16977, char_end: 16978, byte_start: 16978, byte_end: 16979, column_start: 6, column_end: 7, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 16978, char_end: 16986, byte_start: 16979, byte_end: 16987, column_start: 7, column_end: 15, line_start: 508, line_end: 508 }: optional
Token { kind: Space, char_start: 16986, char_end: 16987, byte_start: 16987, byte_end: 16988, column_start: 15, column_end: 16, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 16987, char_end: 16994, byte_start: 16988, byte_end: 16995, column_start: 16, column_end: 23, line_start: 508, line_end: 508 }: support
Token { kind: Space, char_start: 16994, char_end: 16995, byte_start: 16995, byte_end: 16996, column_start: 23, column_end: 24, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 16995, char_end: 16998, byte_start: 16996, byte_end: 16999, column_start: 24, column_end: 27, line_start: 508, line_end: 508 }: for
Token { kind: Space, char_start: 16998, char_end: 16999, byte_start: 16999, byte_end: 17000, column_start: 27, column_end: 28, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 16999, char_end: 17006, byte_start: 17000, byte_end: 17007, column_start: 28, column_end: 35, line_start: 508, line_end: 508 }: running
Token { kind: Space, char_start: 17006, char_end: 17007, byte_start: 17007, byte_end: 17008, column_start: 35, column_end: 36, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 17007, char_end: 17015, byte_start: 17008, byte_end: 17016, column_start: 36, column_end: 44, line_start: 508, line_end: 508 }: searches
Token { kind: Space, char_start: 17015, char_end: 17016, byte_start: 17016, byte_end: 17017, column_start: 44, column_end: 45, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 17016, char_end: 17030, byte_start: 17017, byte_end: 17031, column_start: 45, column_end: 59, line_start: 508, line_end: 508 }: asynchronously
Token { kind: Space, char_start: 17030, char_end: 17031, byte_start: 17031, byte_end: 17032, column_start: 59, column_end: 60, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 17031, char_end: 17036, byte_start: 17032, byte_end: 17037, column_start: 60, column_end: 65, line_start: 508, line_end: 508 }: using
Token { kind: Space, char_start: 17036, char_end: 17037, byte_start: 17037, byte_end: 17038, column_start: 65, column_end: 66, line_start: 508, line_end: 508 }: " "
Token { kind: Text, char_start: 17037, char_end: 17042, byte_start: 17038, byte_end: 17043, column_start: 66, column_end: 71, line_start: 508, line_end: 508 }: Vim's
Token { kind: Space, char_start: 17042, char_end: 17043, byte_start: 17043, byte_end: 17044, column_start: 71, column_end: 72, line_start: 508, line_end: 508 }: " "
Token { kind: Bar, char_start: 17043, char_end: 17044, byte_start: 17044, byte_end: 17045, column_start: 72, column_end: 73, line_start: 508, line_end: 508 }: |
Token { kind: Text, char_start: 17044, char_end: 17048, byte_start: 17045, byte_end: 17049, column_start: 73, column_end: 77, line_start: 508, line_end: 508 }: +job
Token { kind: Bar, char_start: 17048, char_end: 17049, byte_start: 17049, byte_end: 17050, column_start: 77, column_end: 78, line_start: 508, line_end: 508 }: |
Token { kind: Newline, char_start: 17049, char_end: 17050, byte_start: 17050, byte_end: 17051, column_start: 78, column_end: 1, line_start: 508, line_end: 509 }: "\n"
Token { kind: Space, char_start: 17050, char_end: 17052, byte_start: 17051, byte_end: 17053, column_start: 1, column_end: 3, line_start: 509, line_end: 509 }: "  "
Token { kind: Text, char_start: 17052, char_end: 17059, byte_start: 17053, byte_end: 17060, column_start: 3, column_end: 10, line_start: 509, line_end: 509 }: feature
Token { kind: Space, char_start: 17059, char_end: 17060, byte_start: 17060, byte_end: 17061, column_start: 10, column_end: 11, line_start: 509, line_end: 509 }: " "
Token { kind: Lparen, char_start: 17060, char_end: 17061, byte_start: 17061, byte_end: 17062, column_start: 11, column_end: 12, line_start: 509, line_end: 509 }: (
Token { kind: Text, char_start: 17061, char_end: 17068, byte_start: 17062, byte_end: 17069, column_start: 12, column_end: 19, line_start: 509, line_end: 509 }: enabled
Token { kind: Space, char_start: 17068, char_end: 17069, byte_start: 17069, byte_end: 17070, column_start: 19, column_end: 20, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17069, char_end: 17071, byte_start: 17070, byte_end: 17072, column_start: 20, column_end: 22, line_start: 509, line_end: 509 }: by
Token { kind: Space, char_start: 17071, char_end: 17072, byte_start: 17072, byte_end: 17073, column_start: 22, column_end: 23, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17072, char_end: 17079, byte_start: 17073, byte_end: 17080, column_start: 23, column_end: 30, line_start: 509, line_end: 509 }: default
Token { kind: Space, char_start: 17079, char_end: 17080, byte_start: 17080, byte_end: 17081, column_start: 30, column_end: 31, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17080, char_end: 17082, byte_start: 17081, byte_end: 17083, column_start: 31, column_end: 33, line_start: 509, line_end: 509 }: in
Token { kind: Space, char_start: 17082, char_end: 17083, byte_start: 17083, byte_end: 17084, column_start: 33, column_end: 34, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17083, char_end: 17095, byte_start: 17084, byte_end: 17096, column_start: 34, column_end: 46, line_start: 509, line_end: 509 }: sufficiently
Token { kind: Space, char_start: 17095, char_end: 17096, byte_start: 17096, byte_end: 17097, column_start: 46, column_end: 47, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17096, char_end: 17102, byte_start: 17097, byte_end: 17103, column_start: 47, column_end: 53, line_start: 509, line_end: 509 }: recent
Token { kind: Space, char_start: 17102, char_end: 17103, byte_start: 17103, byte_end: 17104, column_start: 53, column_end: 54, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17103, char_end: 17111, byte_start: 17104, byte_end: 17112, column_start: 54, column_end: 62, line_start: 509, line_end: 509 }: versions
Token { kind: Space, char_start: 17111, char_end: 17112, byte_start: 17112, byte_end: 17113, column_start: 62, column_end: 63, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17112, char_end: 17114, byte_start: 17113, byte_end: 17115, column_start: 63, column_end: 65, line_start: 509, line_end: 509 }: of
Token { kind: Space, char_start: 17114, char_end: 17115, byte_start: 17115, byte_end: 17116, column_start: 65, column_end: 66, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17115, char_end: 17118, byte_start: 17116, byte_end: 17119, column_start: 66, column_end: 69, line_start: 509, line_end: 509 }: Vim
Token { kind: Rparen, char_start: 17118, char_end: 17119, byte_start: 17119, byte_end: 17120, column_start: 69, column_end: 70, line_start: 509, line_end: 509 }: )
Token { kind: Text, char_start: 17119, char_end: 17120, byte_start: 17120, byte_end: 17121, column_start: 70, column_end: 71, line_start: 509, line_end: 509 }: ;
Token { kind: Space, char_start: 17120, char_end: 17121, byte_start: 17121, byte_end: 17122, column_start: 71, column_end: 72, line_start: 509, line_end: 509 }: " "
Token { kind: Text, char_start: 17121, char_end: 17124, byte_start: 17122, byte_end: 17125, column_start: 72, column_end: 75, line_start: 509, line_end: 509 }: see
Token { kind: Newline, char_start: 17124, char_end: 17125, byte_start: 17125, byte_end: 17126, column_start: 75, column_end: 1, line_start: 509, line_end: 510 }: "\n"
Token { kind: Space, char_start: 17125, char_end: 17127, byte_start: 17126, byte_end: 17128, column_start: 1, column_end: 3, line_start: 510, line_end: 510 }: "  "
Token { kind: Bar, char_start: 17127, char_end: 17128, byte_start: 17128, byte_end: 17129, column_start: 3, column_end: 4, line_start: 510, line_end: 510 }: |
Token { kind: Text, char_start: 17128, char_end: 17139, byte_start: 17129, byte_end: 17140, column_start: 4, column_end: 15, line_start: 510, line_end: 510 }: g:FerretJob
Token { kind: Bar, char_start: 17139, char_end: 17140, byte_start: 17140, byte_end: 17141, column_start: 15, column_end: 16, line_start: 510, line_end: 510 }: |
Token { kind: Text, char_start: 17140, char_end: 17141, byte_start: 17141, byte_end: 17142, column_start: 16, column_end: 17, line_start: 510, line_end: 510 }: ,
Token { kind: Space, char_start: 17141, char_end: 17142, byte_start: 17142, byte_end: 17143, column_start: 17, column_end: 18, line_start: 510, line_end: 510 }: " "
Token { kind: Bar, char_start: 17142, char_end: 17143, byte_start: 17143, byte_end: 17144, column_start: 18, column_end: 19, line_start: 510, line_end: 510 }: |
Token { kind: Text, char_start: 17143, char_end: 17161, byte_start: 17144, byte_end: 17162, column_start: 19, column_end: 37, line_start: 510, line_end: 510 }: :FerretCancelAsync
Token { kind: Bar, char_start: 17161, char_end: 17162, byte_start: 17162, byte_end: 17163, column_start: 37, column_end: 38, line_start: 510, line_end: 510 }: |
Token { kind: Space, char_start: 17162, char_end: 17163, byte_start: 17163, byte_end: 17164, column_start: 38, column_end: 39, line_start: 510, line_end: 510 }: " "
Token { kind: Text, char_start: 17163, char_end: 17166, byte_start: 17164, byte_end: 17167, column_start: 39, column_end: 42, line_start: 510, line_end: 510 }: and
Token { kind: Space, char_start: 17166, char_end: 17167, byte_start: 17167, byte_end: 17168, column_start: 42, column_end: 43, line_start: 510, line_end: 510 }: " "
Token { kind: Bar, char_start: 17167, char_end: 17168, byte_start: 17168, byte_end: 17169, column_start: 43, column_end: 44, line_start: 510, line_end: 510 }: |
Token { kind: Text, char_start: 17168, char_end: 17184, byte_start: 17169, byte_end: 17185, column_start: 44, column_end: 60, line_start: 510, line_end: 510 }: :FerretPullAsync
Token { kind: Bar, char_start: 17184, char_end: 17185, byte_start: 17185, byte_end: 17186, column_start: 60, column_end: 61, line_start: 510, line_end: 510 }: |
Token { kind: Text, char_start: 17185, char_end: 17186, byte_start: 17186, byte_end: 17187, column_start: 61, column_end: 62, line_start: 510, line_end: 510 }: .
Token { kind: Newline, char_start: 17186, char_end: 17187, byte_start: 17187, byte_end: 17188, column_start: 62, column_end: 1, line_start: 510, line_end: 511 }: "\n"
Token { kind: Newline, char_start: 17187, char_end: 17188, byte_start: 17188, byte_end: 17189, column_start: 1, column_end: 1, line_start: 511, line_end: 512 }: "\n"
Token { kind: Heading(Heading2), char_start: 17188, char_end: 17190, byte_start: 17189, byte_end: 17191, column_start: 1, column_end: 3, line_start: 512, line_end: 512 }: ##
Token { kind: Space, char_start: 17190, char_end: 17191, byte_start: 17191, byte_end: 17192, column_start: 3, column_end: 4, line_start: 512, line_end: 512 }: " "
Token { kind: Text, char_start: 17191, char_end: 17196, byte_start: 17192, byte_end: 17197, column_start: 4, column_end: 9, line_start: 512, line_end: 512 }: 1.1.1
Token { kind: Space, char_start: 17196, char_end: 17197, byte_start: 17197, byte_end: 17198, column_start: 9, column_end: 10, line_start: 512, line_end: 512 }: " "
Token { kind: Lparen, char_start: 17197, char_end: 17198, byte_start: 17198, byte_end: 17199, column_start: 10, column_end: 11, line_start: 512, line_end: 512 }: (
Token { kind: Text, char_start: 17198, char_end: 17199, byte_start: 17199, byte_end: 17200, column_start: 11, column_end: 12, line_start: 512, line_end: 512 }: 7
Token { kind: Space, char_start: 17199, char_end: 17200, byte_start: 17200, byte_end: 17201, column_start: 12, column_end: 13, line_start: 512, line_end: 512 }: " "
Token { kind: Text, char_start: 17200, char_end: 17205, byte_start: 17201, byte_end: 17206, column_start: 13, column_end: 18, line_start: 512, line_end: 512 }: March
Token { kind: Space, char_start: 17205, char_end: 17206, byte_start: 17206, byte_end: 17207, column_start: 18, column_end: 19, line_start: 512, line_end: 512 }: " "
Token { kind: Text, char_start: 17206, char_end: 17210, byte_start: 17207, byte_end: 17211, column_start: 19, column_end: 23, line_start: 512, line_end: 512 }: 2016
Token { kind: Rparen, char_start: 17210, char_end: 17211, byte_start: 17211, byte_end: 17212, column_start: 23, column_end: 24, line_start: 512, line_end: 512 }: )
Token { kind: Newline, char_start: 17211, char_end: 17212, byte_start: 17212, byte_end: 17213, column_start: 24, column_end: 1, line_start: 512, line_end: 513 }: "\n"
Token { kind: Newline, char_start: 17212, char_end: 17213, byte_start: 17213, byte_end: 17214, column_start: 1, column_end: 1, line_start: 513, line_end: 514 }: "\n"
Token { kind: Hyphen, char_start: 17213, char_end: 17214, byte_start: 17214, byte_end: 17215, column_start: 1, column_end: 2, line_start: 514, line_end: 514 }: -
Token { kind: Space, char_start: 17214, char_end: 17215, byte_start: 17215, byte_end: 17216, column_start: 2, column_end: 3, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17215, char_end: 17218, byte_start: 17216, byte_end: 17219, column_start: 3, column_end: 6, line_start: 514, line_end: 514 }: Fix
Token { kind: Space, char_start: 17218, char_end: 17219, byte_start: 17219, byte_end: 17220, column_start: 6, column_end: 7, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17219, char_end: 17226, byte_start: 17220, byte_end: 17227, column_start: 7, column_end: 14, line_start: 514, line_end: 514 }: another
Token { kind: Space, char_start: 17226, char_end: 17227, byte_start: 17227, byte_end: 17228, column_start: 14, column_end: 15, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17227, char_end: 17231, byte_start: 17228, byte_end: 17232, column_start: 15, column_end: 19, line_start: 514, line_end: 514 }: edge
Token { kind: Space, char_start: 17231, char_end: 17232, byte_start: 17232, byte_end: 17233, column_start: 19, column_end: 20, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17232, char_end: 17236, byte_start: 17233, byte_end: 17237, column_start: 20, column_end: 24, line_start: 514, line_end: 514 }: case
Token { kind: Space, char_start: 17236, char_end: 17237, byte_start: 17237, byte_end: 17238, column_start: 24, column_end: 25, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17237, char_end: 17241, byte_start: 17238, byte_end: 17242, column_start: 25, column_end: 29, line_start: 514, line_end: 514 }: when
Token { kind: Space, char_start: 17241, char_end: 17242, byte_start: 17242, byte_end: 17243, column_start: 29, column_end: 30, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17242, char_end: 17251, byte_start: 17243, byte_end: 17252, column_start: 30, column_end: 39, line_start: 514, line_end: 514 }: searching
Token { kind: Space, char_start: 17251, char_end: 17252, byte_start: 17252, byte_end: 17253, column_start: 39, column_end: 40, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17252, char_end: 17255, byte_start: 17253, byte_end: 17256, column_start: 40, column_end: 43, line_start: 514, line_end: 514 }: for
Token { kind: Space, char_start: 17255, char_end: 17256, byte_start: 17256, byte_end: 17257, column_start: 43, column_end: 44, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17256, char_end: 17264, byte_start: 17257, byte_end: 17265, column_start: 44, column_end: 52, line_start: 514, line_end: 514 }: patterns
Token { kind: Space, char_start: 17264, char_end: 17265, byte_start: 17265, byte_end: 17266, column_start: 52, column_end: 53, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17265, char_end: 17275, byte_start: 17266, byte_end: 17276, column_start: 53, column_end: 63, line_start: 514, line_end: 514 }: containing
Token { kind: Space, char_start: 17275, char_end: 17276, byte_start: 17276, byte_end: 17277, column_start: 63, column_end: 64, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17276, char_end: 17277, byte_start: 17277, byte_end: 17278, column_start: 64, column_end: 65, line_start: 514, line_end: 514 }: "
Token { kind: Heading(Heading1), char_start: 17277, char_end: 17278, byte_start: 17278, byte_end: 17279, column_start: 65, column_end: 66, line_start: 514, line_end: 514 }: #
Token { kind: Text, char_start: 17278, char_end: 17280, byte_start: 17279, byte_end: 17281, column_start: 66, column_end: 68, line_start: 514, line_end: 514 }: ",
Token { kind: Space, char_start: 17280, char_end: 17281, byte_start: 17281, byte_end: 17282, column_start: 68, column_end: 69, line_start: 514, line_end: 514 }: " "
Token { kind: Text, char_start: 17281, char_end: 17285, byte_start: 17282, byte_end: 17286, column_start: 69, column_end: 73, line_start: 514, line_end: 514 }: only
Token { kind: Newline, char_start: 17285, char_end: 17286, byte_start: 17286, byte_end: 17287, column_start: 73, column_end: 1, line_start: 514, line_end: 515 }: "\n"
Token { kind: Space, char_start: 17286, char_end: 17288, byte_start: 17287, byte_end: 17289, column_start: 1, column_end: 3, line_start: 515, line_end: 515 }: "  "
Token { kind: Text, char_start: 17288, char_end: 17299, byte_start: 17289, byte_end: 17300, column_start: 3, column_end: 14, line_start: 515, line_end: 515 }: manifesting
Token { kind: Space, char_start: 17299, char_end: 17300, byte_start: 17300, byte_end: 17301, column_start: 14, column_end: 15, line_start: 515, line_end: 515 }: " "
Token { kind: Text, char_start: 17300, char_end: 17305, byte_start: 17301, byte_end: 17306, column_start: 15, column_end: 20, line_start: 515, line_end: 515 }: under
Token { kind: Space, char_start: 17305, char_end: 17306, byte_start: 17306, byte_end: 17307, column_start: 20, column_end: 21, line_start: 515, line_end: 515 }: " "
Token { kind: Text, char_start: 17306, char_end: 17319, byte_start: 17307, byte_end: 17320, column_start: 21, column_end: 34, line_start: 515, line_end: 515 }: dispatch.vim.
Token { kind: Newline, char_start: 17319, char_end: 17320, byte_start: 17320, byte_end: 17321, column_start: 34, column_end: 1, line_start: 515, line_end: 516 }: "\n"
Token { kind: Newline, char_start: 17320, char_end: 17321, byte_start: 17321, byte_end: 17322, column_start: 1, column_end: 1, line_start: 516, line_end: 517 }: "\n"
Token { kind: Heading(Heading2), char_start: 17321, char_end: 17323, byte_start: 17322, byte_end: 17324, column_start: 1, column_end: 3, line_start: 517, line_end: 517 }: ##
Token { kind: Space, char_start: 17323, char_end: 17324, byte_start: 17324, byte_end: 17325, column_start: 3, column_end: 4, line_start: 517, line_end: 517 }: " "
Token { kind: Text, char_start: 17324, char_end: 17327, byte_start: 17325, byte_end: 17328, column_start: 4, column_end: 7, line_start: 517, line_end: 517 }: 1.1
Token { kind: Space, char_start: 17327, char_end: 17328, byte_start: 17328, byte_end: 17329, column_start: 7, column_end: 8, line_start: 517, line_end: 517 }: " "
Token { kind: Lparen, char_start: 17328, char_end: 17329, byte_start: 17329, byte_end: 17330, column_start: 8, column_end: 9, line_start: 517, line_end: 517 }: (
Token { kind: Text, char_start: 17329, char_end: 17330, byte_start: 17330, byte_end: 17331, column_start: 9, column_end: 10, line_start: 517, line_end: 517 }: 7
Token { kind: Space, char_start: 17330, char_end: 17331, byte_start: 17331, byte_end: 17332, column_start: 10, column_end: 11, line_start: 517, line_end: 517 }: " "
Token { kind: Text, char_start: 17331, char_end: 17336, byte_start: 17332, byte_end: 17337, column_start: 11, column_end: 16, line_start: 517, line_end: 517 }: March
Token { kind: Space, char_start: 17336, char_end: 17337, byte_start: 17337, byte_end: 17338, column_start: 16, column_end: 17, line_start: 517, line_end: 517 }: " "
Token { kind: Text, char_start: 17337, char_end: 17341, byte_start: 17338, byte_end: 17342, column_start: 17, column_end: 21, line_start: 517, line_end: 517 }: 2016
Token { kind: Rparen, char_start: 17341, char_end: 17342, byte_start: 17342, byte_end: 17343, column_start: 21, column_end: 22, line_start: 517, line_end: 517 }: )
Token { kind: Newline, char_start: 17342, char_end: 17343, byte_start: 17343, byte_end: 17344, column_start: 22, column_end: 1, line_start: 517, line_end: 518 }: "\n"
Token { kind: Newline, char_start: 17343, char_end: 17344, byte_start: 17344, byte_end: 17345, column_start: 1, column_end: 1, line_start: 518, line_end: 519 }: "\n"
Token { kind: Hyphen, char_start: 17344, char_end: 17345, byte_start: 17345, byte_end: 17346, column_start: 1, column_end: 2, line_start: 519, line_end: 519 }: -
Token { kind: Space, char_start: 17345, char_end: 17346, byte_start: 17346, byte_end: 17347, column_start: 2, column_end: 3, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17346, char_end: 17349, byte_start: 17347, byte_end: 17350, column_start: 3, column_end: 6, line_start: 519, line_end: 519 }: Fix
Token { kind: Space, char_start: 17349, char_end: 17350, byte_start: 17350, byte_end: 17351, column_start: 6, column_end: 7, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17350, char_end: 17354, byte_start: 17351, byte_end: 17355, column_start: 7, column_end: 11, line_start: 519, line_end: 519 }: edge
Token { kind: Space, char_start: 17354, char_end: 17355, byte_start: 17355, byte_end: 17356, column_start: 11, column_end: 12, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17355, char_end: 17359, byte_start: 17356, byte_end: 17360, column_start: 12, column_end: 16, line_start: 519, line_end: 519 }: case
Token { kind: Space, char_start: 17359, char_end: 17360, byte_start: 17360, byte_end: 17361, column_start: 16, column_end: 17, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17360, char_end: 17364, byte_start: 17361, byte_end: 17365, column_start: 17, column_end: 21, line_start: 519, line_end: 519 }: when
Token { kind: Space, char_start: 17364, char_end: 17365, byte_start: 17365, byte_end: 17366, column_start: 21, column_end: 22, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17365, char_end: 17374, byte_start: 17366, byte_end: 17375, column_start: 22, column_end: 31, line_start: 519, line_end: 519 }: searching
Token { kind: Space, char_start: 17374, char_end: 17375, byte_start: 17375, byte_end: 17376, column_start: 31, column_end: 32, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17375, char_end: 17378, byte_start: 17376, byte_end: 17379, column_start: 32, column_end: 35, line_start: 519, line_end: 519 }: for
Token { kind: Space, char_start: 17378, char_end: 17379, byte_start: 17379, byte_end: 17380, column_start: 35, column_end: 36, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17379, char_end: 17386, byte_start: 17380, byte_end: 17387, column_start: 36, column_end: 43, line_start: 519, line_end: 519 }: strings
Token { kind: Space, char_start: 17386, char_end: 17387, byte_start: 17387, byte_end: 17388, column_start: 43, column_end: 44, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17387, char_end: 17389, byte_start: 17388, byte_end: 17390, column_start: 44, column_end: 46, line_start: 519, line_end: 519 }: of
Token { kind: Space, char_start: 17389, char_end: 17390, byte_start: 17390, byte_end: 17391, column_start: 46, column_end: 47, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17390, char_end: 17393, byte_start: 17391, byte_end: 17394, column_start: 47, column_end: 50, line_start: 519, line_end: 519 }: the
Token { kind: Space, char_start: 17393, char_end: 17394, byte_start: 17394, byte_end: 17395, column_start: 50, column_end: 51, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17394, char_end: 17398, byte_start: 17395, byte_end: 17399, column_start: 51, column_end: 55, line_start: 519, line_end: 519 }: form
Token { kind: Space, char_start: 17398, char_end: 17399, byte_start: 17399, byte_end: 17400, column_start: 55, column_end: 56, line_start: 519, line_end: 519 }: " "
Token { kind: Text, char_start: 17399, char_end: 17400, byte_start: 17400, byte_end: 17401, column_start: 56, column_end: 57, line_start: 519, line_end: 519 }: "
Token { kind: BlockQuote, char_start: 17400, char_end: 17401, byte_start: 17401, byte_end: 17402, column_start: 57, column_end: 58, line_start: 519, line_end: 519 }: <
Token { kind: Text, char_start: 17401, char_end: 17404, byte_start: 17402, byte_end: 17405, column_start: 58, column_end: 61, line_start: 519, line_end: 519 }: foo
Token { kind: BlockQuote, char_start: 17404, char_end: 17405, byte_start: 17405, byte_end: 17406, column_start: 61, column_end: 62, line_start: 519, line_end: 519 }: >
Token { kind: Text, char_start: 17405, char_end: 17407, byte_start: 17406, byte_end: 17408, column_start: 62, column_end: 64, line_start: 519, line_end: 519 }: ".
Token { kind: Newline, char_start: 17407, char_end: 17408, byte_start: 17408, byte_end: 17409, column_start: 64, column_end: 1, line_start: 519, line_end: 520 }: "\n"
Token { kind: Hyphen, char_start: 17408, char_end: 17409, byte_start: 17409, byte_end: 17410, column_start: 1, column_end: 2, line_start: 520, line_end: 520 }: -
Token { kind: Space, char_start: 17409, char_end: 17410, byte_start: 17410, byte_end: 17411, column_start: 2, column_end: 3, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17410, char_end: 17413, byte_start: 17411, byte_end: 17414, column_start: 3, column_end: 6, line_start: 520, line_end: 520 }: Fix
Token { kind: Space, char_start: 17413, char_end: 17414, byte_start: 17414, byte_end: 17415, column_start: 6, column_end: 7, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17414, char_end: 17418, byte_start: 17415, byte_end: 17419, column_start: 7, column_end: 11, line_start: 520, line_end: 520 }: edge
Token { kind: Space, char_start: 17418, char_end: 17419, byte_start: 17419, byte_end: 17420, column_start: 11, column_end: 12, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17419, char_end: 17423, byte_start: 17420, byte_end: 17424, column_start: 12, column_end: 16, line_start: 520, line_end: 520 }: case
Token { kind: Space, char_start: 17423, char_end: 17424, byte_start: 17424, byte_end: 17425, column_start: 16, column_end: 17, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17424, char_end: 17428, byte_start: 17425, byte_end: 17429, column_start: 17, column_end: 21, line_start: 520, line_end: 520 }: when
Token { kind: Space, char_start: 17428, char_end: 17429, byte_start: 17429, byte_end: 17430, column_start: 21, column_end: 22, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17429, char_end: 17438, byte_start: 17430, byte_end: 17439, column_start: 22, column_end: 31, line_start: 520, line_end: 520 }: searching
Token { kind: Space, char_start: 17438, char_end: 17439, byte_start: 17439, byte_end: 17440, column_start: 31, column_end: 32, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17439, char_end: 17442, byte_start: 17440, byte_end: 17443, column_start: 32, column_end: 35, line_start: 520, line_end: 520 }: for
Token { kind: Space, char_start: 17442, char_end: 17443, byte_start: 17443, byte_end: 17444, column_start: 35, column_end: 36, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17443, char_end: 17451, byte_start: 17444, byte_end: 17452, column_start: 36, column_end: 44, line_start: 520, line_end: 520 }: patterns
Token { kind: Space, char_start: 17451, char_end: 17452, byte_start: 17452, byte_end: 17453, column_start: 44, column_end: 45, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17452, char_end: 17462, byte_start: 17453, byte_end: 17463, column_start: 45, column_end: 55, line_start: 520, line_end: 520 }: containing
Token { kind: Space, char_start: 17462, char_end: 17463, byte_start: 17463, byte_end: 17464, column_start: 55, column_end: 56, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17463, char_end: 17464, byte_start: 17464, byte_end: 17465, column_start: 56, column_end: 57, line_start: 520, line_end: 520 }: "
Token { kind: Heading(Heading1), char_start: 17464, char_end: 17465, byte_start: 17465, byte_end: 17466, column_start: 57, column_end: 58, line_start: 520, line_end: 520 }: #
Token { kind: Text, char_start: 17465, char_end: 17466, byte_start: 17466, byte_end: 17467, column_start: 58, column_end: 59, line_start: 520, line_end: 520 }: "
Token { kind: Space, char_start: 17466, char_end: 17467, byte_start: 17467, byte_end: 17468, column_start: 59, column_end: 60, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17467, char_end: 17470, byte_start: 17468, byte_end: 17471, column_start: 60, column_end: 63, line_start: 520, line_end: 520 }: and
Token { kind: Space, char_start: 17470, char_end: 17471, byte_start: 17471, byte_end: 17472, column_start: 63, column_end: 64, line_start: 520, line_end: 520 }: " "
Token { kind: Text, char_start: 17471, char_end: 17475, byte_start: 17472, byte_end: 17476, column_start: 64, column_end: 68, line_start: 520, line_end: 520 }: "%".
Token { kind: Newline, char_start: 17475, char_end: 17476, byte_start: 17476, byte_end: 17477, column_start: 68, column_end: 1, line_start: 520, line_end: 521 }: "\n"
Token { kind: Hyphen, char_start: 17476, char_end: 17477, byte_start: 17477, byte_end: 17478, column_start: 1, column_end: 2, line_start: 521, line_end: 521 }: -
Token { kind: Space, char_start: 17477, char_end: 17478, byte_start: 17478, byte_end: 17479, column_start: 2, column_end: 3, line_start: 521, line_end: 521 }: " "
Token { kind: Text, char_start: 17478, char_end: 17485, byte_start: 17479, byte_end: 17486, column_start: 3, column_end: 10, line_start: 521, line_end: 521 }: Provide
Token { kind: Space, char_start: 17485, char_end: 17486, byte_start: 17486, byte_end: 17487, column_start: 10, column_end: 11, line_start: 521, line_end: 521 }: " "
Token { kind: Text, char_start: 17486, char_end: 17496, byte_start: 17487, byte_end: 17497, column_start: 11, column_end: 21, line_start: 521, line_end: 521 }: completion
Token { kind: Space, char_start: 17496, char_end: 17497, byte_start: 17497, byte_end: 17498, column_start: 21, column_end: 22, line_start: 521, line_end: 521 }: " "
Token { kind: Text, char_start: 17497, char_end: 17500, byte_start: 17498, byte_end: 17501, column_start: 22, column_end: 25, line_start: 521, line_end: 521 }: for
Token { kind: Space, char_start: 17500, char_end: 17501, byte_start: 17501, byte_end: 17502, column_start: 25, column_end: 26, line_start: 521, line_end: 521 }: " "
Token { kind: Backtick, char_start: 17501, char_end: 17502, byte_start: 17502, byte_end: 17503, column_start: 26, column_end: 27, line_start: 521, line_end: 521 }: `
Token { kind: Text, char_start: 17502, char_end: 17504, byte_start: 17503, byte_end: 17505, column_start: 27, column_end: 29, line_start: 521, line_end: 521 }: ag
Token { kind: Backtick, char_start: 17504, char_end: 17505, byte_start: 17505, byte_end: 17506, column_start: 29, column_end: 30, line_start: 521, line_end: 521 }: `
Token { kind: Space, char_start: 17505, char_end: 17506, byte_start: 17506, byte_end: 17507, column_start: 30, column_end: 31, line_start: 521, line_end: 521 }: " "
Token { kind: Text, char_start: 17506, char_end: 17509, byte_start: 17507, byte_end: 17510, column_start: 31, column_end: 34, line_start: 521, line_end: 521 }: and
Token { kind: Space, char_start: 17509, char_end: 17510, byte_start: 17510, byte_end: 17511, column_start: 34, column_end: 35, line_start: 521, line_end: 521 }: " "
Token { kind: Backtick, char_start: 17510, char_end: 17511, byte_start: 17511, byte_end: 17512, column_start: 35, column_end: 36, line_start: 521, line_end: 521 }: `
Token { kind: Text, char_start: 17511, char_end: 17514, byte_start: 17512, byte_end: 17515, column_start: 36, column_end: 39, line_start: 521, line_end: 521 }: ack
Token { kind: Backtick, char_start: 17514, char_end: 17515, byte_start: 17515, byte_end: 17516, column_start: 39, column_end: 40, line_start: 521, line_end: 521 }: `
Token { kind: Space, char_start: 17515, char_end: 17516, byte_start: 17516, byte_end: 17517, column_start: 40, column_end: 41, line_start: 521, line_end: 521 }: " "
Token { kind: Text, char_start: 17516, char_end: 17523, byte_start: 17517, byte_end: 17524, column_start: 41, column_end: 48, line_start: 521, line_end: 521 }: options
Token { kind: Space, char_start: 17523, char_end: 17524, byte_start: 17524, byte_end: 17525, column_start: 48, column_end: 49, line_start: 521, line_end: 521 }: " "
Token { kind: Text, char_start: 17524, char_end: 17528, byte_start: 17525, byte_end: 17529, column_start: 49, column_end: 53, line_start: 521, line_end: 521 }: when
Token { kind: Space, char_start: 17528, char_end: 17529, byte_start: 17529, byte_end: 17530, column_start: 53, column_end: 54, line_start: 521, line_end: 521 }: " "
Token { kind: Text, char_start: 17529, char_end: 17534, byte_start: 17530, byte_end: 17535, column_start: 54, column_end: 59, line_start: 521, line_end: 521 }: using
Token { kind: Space, char_start: 17534, char_end: 17535, byte_start: 17535, byte_end: 17536, column_start: 59, column_end: 60, line_start: 521, line_end: 521 }: " "
Token { kind: Bar, char_start: 17535, char_end: 17536, byte_start: 17536, byte_end: 17537, column_start: 60, column_end: 61, line_start: 521, line_end: 521 }: |
Token { kind: Text, char_start: 17536, char_end: 17540, byte_start: 17537, byte_end: 17541, column_start: 61, column_end: 65, line_start: 521, line_end: 521 }: :Ack
Token { kind: Bar, char_start: 17540, char_end: 17541, byte_start: 17541, byte_end: 17542, column_start: 65, column_end: 66, line_start: 521, line_end: 521 }: |
Token { kind: Space, char_start: 17541, char_end: 17542, byte_start: 17542, byte_end: 17543, column_start: 66, column_end: 67, line_start: 521, line_end: 521 }: " "
Token { kind: Text, char_start: 17542, char_end: 17545, byte_start: 17543, byte_end: 17546, column_start: 67, column_end: 70, line_start: 521, line_end: 521 }: and
Token { kind: Space, char_start: 17545, char_end: 17546, byte_start: 17546, byte_end: 17547, column_start: 70, column_end: 71, line_start: 521, line_end: 521 }: " "
Token { kind: Bar, char_start: 17546, char_end: 17547, byte_start: 17547, byte_end: 17548, column_start: 71, column_end: 72, line_start: 521, line_end: 521 }: |
Token { kind: Text, char_start: 17547, char_end: 17552, byte_start: 17548, byte_end: 17553, column_start: 72, column_end: 77, line_start: 521, line_end: 521 }: :Lack
Token { kind: Bar, char_start: 17552, char_end: 17553, byte_start: 17553, byte_end: 17554, column_start: 77, column_end: 78, line_start: 521, line_end: 521 }: |
Token { kind: Text, char_start: 17553, char_end: 17554, byte_start: 17554, byte_end: 17555, column_start: 78, column_end: 79, line_start: 521, line_end: 521 }: .
Token { kind: Newline, char_start: 17554, char_end: 17555, byte_start: 17555, byte_end: 17556, column_start: 79, column_end: 1, line_start: 521, line_end: 522 }: "\n"
Token { kind: Hyphen, char_start: 17555, char_end: 17556, byte_start: 17556, byte_end: 17557, column_start: 1, column_end: 2, line_start: 522, line_end: 522 }: -
Token { kind: Space, char_start: 17556, char_end: 17557, byte_start: 17557, byte_end: 17558, column_start: 2, column_end: 3, line_start: 522, line_end: 522 }: " "
Token { kind: Text, char_start: 17557, char_end: 17560, byte_start: 17558, byte_end: 17561, column_start: 3, column_end: 6, line_start: 522, line_end: 522 }: Fix
Token { kind: Space, char_start: 17560, char_end: 17561, byte_start: 17561, byte_end: 17562, column_start: 6, column_end: 7, line_start: 522, line_end: 522 }: " "
Token { kind: Text, char_start: 17561, char_end: 17568, byte_start: 17562, byte_end: 17569, column_start: 7, column_end: 14, line_start: 522, line_end: 522 }: display
Token { kind: Space, char_start: 17568, char_end: 17569, byte_start: 17569, byte_end: 17570, column_start: 14, column_end: 15, line_start: 522, line_end: 522 }: " "
Token { kind: Text, char_start: 17569, char_end: 17571, byte_start: 17570, byte_end: 17572, column_start: 15, column_end: 17, line_start: 522, line_end: 522 }: of
Token { kind: Space, char_start: 17571, char_end: 17572, byte_start: 17572, byte_end: 17573, column_start: 17, column_end: 18, line_start: 522, line_end: 522 }: " "
Token { kind: Text, char_start: 17572, char_end: 17577, byte_start: 17573, byte_end: 17578, column_start: 18, column_end: 23, line_start: 522, line_end: 522 }: error
Token { kind: Space, char_start: 17577, char_end: 17578, byte_start: 17578, byte_end: 17579, column_start: 23, column_end: 24, line_start: 522, line_end: 522 }: " "
Token { kind: Text, char_start: 17578, char_end: 17586, byte_start: 17579, byte_end: 17587, column_start: 24, column_end: 32, line_start: 522, line_end: 522 }: messages
Token { kind: Space, char_start: 17586, char_end: 17587, byte_start: 17587, byte_end: 17588, column_start: 32, column_end: 33, line_start: 522, line_end: 522 }: " "
Token { kind: Text, char_start: 17587, char_end: 17592, byte_start: 17588, byte_end: 17593, column_start: 33, column_end: 38, line_start: 522, line_end: 522 }: under
Token { kind: Space, char_start: 17592, char_end: 17593, byte_start: 17593, byte_end: 17594, column_start: 38, column_end: 39, line_start: 522, line_end: 522 }: " "
Token { kind: Text, char_start: 17593, char_end: 17606, byte_start: 17594, byte_end: 17607, column_start: 39, column_end: 52, line_start: 522, line_end: 522 }: dispatch.vim.
Token { kind: Newline, char_start: 17606, char_end: 17607, byte_start: 17607, byte_end: 17608, column_start: 52, column_end: 1, line_start: 522, line_end: 523 }: "\n"
Token { kind: Newline, char_start: 17607, char_end: 17608, byte_start: 17608, byte_end: 17609, column_start: 1, column_end: 1, line_start: 523, line_end: 524 }: "\n"
Token { kind: Heading(Heading2), char_start: 17608, char_end: 17610, byte_start: 17609, byte_end: 17611, column_start: 1, column_end: 3, line_start: 524, line_end: 524 }: ##
Token { kind: Space, char_start: 17610, char_end: 17611, byte_start: 17611, byte_end: 17612, column_start: 3, column_end: 4, line_start: 524, line_end: 524 }: " "
Token { kind: Text, char_start: 17611, char_end: 17614, byte_start: 17612, byte_end: 17615, column_start: 4, column_end: 7, line_start: 524, line_end: 524 }: 1.0
Token { kind: Space, char_start: 17614, char_end: 17615, byte_start: 17615, byte_end: 17616, column_start: 7, column_end: 8, line_start: 524, line_end: 524 }: " "
Token { kind: Lparen, char_start: 17615, char_end: 17616, byte_start: 17616, byte_end: 17617, column_start: 8, column_end: 9, line_start: 524, line_end: 524 }: (
Token { kind: Text, char_start: 17616, char_end: 17618, byte_start: 17617, byte_end: 17619, column_start: 9, column_end: 11, line_start: 524, line_end: 524 }: 28
Token { kind: Space, char_start: 17618, char_end: 17619, byte_start: 17619, byte_end: 17620, column_start: 11, column_end: 12, line_start: 524, line_end: 524 }: " "
Token { kind: Text, char_start: 17619, char_end: 17627, byte_start: 17620, byte_end: 17628, column_start: 12, column_end: 20, line_start: 524, line_end: 524 }: December
Token { kind: Space, char_start: 17627, char_end: 17628, byte_start: 17628, byte_end: 17629, column_start: 20, column_end: 21, line_start: 524, line_end: 524 }: " "
Token { kind: Text, char_start: 17628, char_end: 17632, byte_start: 17629, byte_end: 17633, column_start: 21, column_end: 25, line_start: 524, line_end: 524 }: 2015
Token { kind: Rparen, char_start: 17632, char_end: 17633, byte_start: 17633, byte_end: 17634, column_start: 25, column_end: 26, line_start: 524, line_end: 524 }: )
Token { kind: Newline, char_start: 17633, char_end: 17634, byte_start: 17634, byte_end: 17635, column_start: 26, column_end: 1, line_start: 524, line_end: 525 }: "\n"
Token { kind: Newline, char_start: 17634, char_end: 17635, byte_start: 17635, byte_end: 17636, column_start: 1, column_end: 1, line_start: 525, line_end: 526 }: "\n"
Token { kind: Hyphen, char_start: 17635, char_end: 17636, byte_start: 17636, byte_end: 17637, column_start: 1, column_end: 2, line_start: 526, line_end: 526 }: -
Token { kind: Space, char_start: 17636, char_end: 17637, byte_start: 17637, byte_end: 17638, column_start: 2, column_end: 3, line_start: 526, line_end: 526 }: " "
Token { kind: Text, char_start: 17637, char_end: 17640, byte_start: 17638, byte_end: 17641, column_start: 3, column_end: 6, line_start: 526, line_end: 526 }: Fix
Token { kind: Space, char_start: 17640, char_end: 17641, byte_start: 17641, byte_end: 17642, column_start: 6, column_end: 7, line_start: 526, line_end: 526 }: " "
Token { kind: Text, char_start: 17641, char_end: 17647, byte_start: 17642, byte_end: 17648, column_start: 7, column_end: 13, line_start: 526, line_end: 526 }: broken
Token { kind: Space, char_start: 17647, char_end: 17648, byte_start: 17648, byte_end: 17649, column_start: 13, column_end: 14, line_start: 526, line_end: 526 }: " "
Token { kind: Bar, char_start: 17648, char_end: 17649, byte_start: 17649, byte_end: 17650, column_start: 14, column_end: 15, line_start: 526, line_end: 526 }: |
Token { kind: Text, char_start: 17649, char_end: 17655, byte_start: 17650, byte_end: 17656, column_start: 15, column_end: 21, line_start: 526, line_end: 526 }: :Qargs
Token { kind: Bar, char_start: 17655, char_end: 17656, byte_start: 17656, byte_end: 17657, column_start: 21, column_end: 22, line_start: 526, line_end: 526 }: |
Token { kind: Space, char_start: 17656, char_end: 17657, byte_start: 17657, byte_end: 17658, column_start: 22, column_end: 23, line_start: 526, line_end: 526 }: " "
Token { kind: Text, char_start: 17657, char_end: 17664, byte_start: 17658, byte_end: 17665, column_start: 23, column_end: 30, line_start: 526, line_end: 526 }: command
Token { kind: Space, char_start: 17664, char_end: 17665, byte_start: 17665, byte_end: 17666, column_start: 30, column_end: 31, line_start: 526, line_end: 526 }: " "
Token { kind: Lparen, char_start: 17665, char_end: 17666, byte_start: 17666, byte_end: 17667, column_start: 31, column_end: 32, line_start: 526, line_end: 526 }: (
Token { kind: Text, char_start: 17666, char_end: 17671, byte_start: 17667, byte_end: 17672, column_start: 32, column_end: 37, line_start: 526, line_end: 526 }: patch
Token { kind: Space, char_start: 17671, char_end: 17672, byte_start: 17672, byte_end: 17673, column_start: 37, column_end: 38, line_start: 526, line_end: 526 }: " "
Token { kind: Text, char_start: 17672, char_end: 17676, byte_start: 17673, byte_end: 17677, column_start: 38, column_end: 42, line_start: 526, line_end: 526 }: from
Token { kind: Space, char_start: 17676, char_end: 17677, byte_start: 17677, byte_end: 17678, column_start: 42, column_end: 43, line_start: 526, line_end: 526 }: " "
Token { kind: Text, char_start: 17677, char_end: 17683, byte_start: 17678, byte_end: 17684, column_start: 43, column_end: 49, line_start: 526, line_end: 526 }: Daniel
Token { kind: Space, char_start: 17683, char_end: 17684, byte_start: 17684, byte_end: 17685, column_start: 49, column_end: 50, line_start: 526, line_end: 526 }: " "
Token { kind: Text, char_start: 17684, char_end: 17689, byte_start: 17685, byte_end: 17690, column_start: 50, column_end: 55, line_start: 526, line_end: 526 }: Silva
Token { kind: Rparen, char_start: 17689, char_end: 17690, byte_start: 17690, byte_end: 17691, column_start: 55, column_end: 56, line_start: 526, line_end: 526 }: )
Token { kind: Text, char_start: 17690, char_end: 17691, byte_start: 17691, byte_end: 17692, column_start: 56, column_end: 57, line_start: 526, line_end: 526 }: .
Token { kind: Newline, char_start: 17691, char_end: 17692, byte_start: 17692, byte_end: 17693, column_start: 57, column_end: 1, line_start: 526, line_end: 527 }: "\n"
Token { kind: Hyphen, char_start: 17692, char_end: 17693, byte_start: 17693, byte_end: 17694, column_start: 1, column_end: 2, line_start: 527, line_end: 527 }: -
Token { kind: Space, char_start: 17693, char_end: 17694, byte_start: 17694, byte_end: 17695, column_start: 2, column_end: 3, line_start: 527, line_end: 527 }: " "
Token { kind: Text, char_start: 17694, char_end: 17697, byte_start: 17695, byte_end: 17698, column_start: 3, column_end: 6, line_start: 527, line_end: 527 }: Add
Token { kind: Space, char_start: 17697, char_end: 17698, byte_start: 17698, byte_end: 17699, column_start: 6, column_end: 7, line_start: 527, line_end: 527 }: " "
Token { kind: Bar, char_start: 17698, char_end: 17699, byte_start: 17699, byte_end: 17700, column_start: 7, column_end: 8, line_start: 527, line_end: 527 }: |
Token { kind: Text, char_start: 17699, char_end: 17716, byte_start: 17700, byte_end: 17717, column_start: 8, column_end: 25, line_start: 527, line_end: 527 }: g:FerretQFHandler
Token { kind: Bar, char_start: 17716, char_end: 17717, byte_start: 17717, byte_end: 17718, column_start: 25, column_end: 26, line_start: 527, line_end: 527 }: |
Token { kind: Space, char_start: 17717, char_end: 17718, byte_start: 17718, byte_end: 17719, column_start: 26, column_end: 27, line_start: 527, line_end: 527 }: " "
Token { kind: Text, char_start: 17718, char_end: 17721, byte_start: 17719, byte_end: 17722, column_start: 27, column_end: 30, line_start: 527, line_end: 527 }: and
Token { kind: Space, char_start: 17721, char_end: 17722, byte_start: 17722, byte_end: 17723, column_start: 30, column_end: 31, line_start: 527, line_end: 527 }: " "
Token { kind: Bar, char_start: 17722, char_end: 17723, byte_start: 17723, byte_end: 17724, column_start: 31, column_end: 32, line_start: 527, line_end: 527 }: |
Token { kind: Text, char_start: 17723, char_end: 17740, byte_start: 17724, byte_end: 17741, column_start: 32, column_end: 49, line_start: 527, line_end: 527 }: g:FerretLLHandler
Token { kind: Bar, char_start: 17740, char_end: 17741, byte_start: 17741, byte_end: 17742, column_start: 49, column_end: 50, line_start: 527, line_end: 527 }: |
Token { kind: Space, char_start: 17741, char_end: 17742, byte_start: 17742, byte_end: 17743, column_start: 50, column_end: 51, line_start: 527, line_end: 527 }: " "
Token { kind: Text, char_start: 17742, char_end: 17749, byte_start: 17743, byte_end: 17750, column_start: 51, column_end: 58, line_start: 527, line_end: 527 }: options
Token { kind: Space, char_start: 17749, char_end: 17750, byte_start: 17750, byte_end: 17751, column_start: 58, column_end: 59, line_start: 527, line_end: 527 }: " "
Token { kind: Lparen, char_start: 17750, char_end: 17751, byte_start: 17751, byte_end: 17752, column_start: 59, column_end: 60, line_start: 527, line_end: 527 }: (
Token { kind: Text, char_start: 17751, char_end: 17756, byte_start: 17752, byte_end: 17757, column_start: 60, column_end: 65, line_start: 527, line_end: 527 }: patch
Token { kind: Space, char_start: 17756, char_end: 17757, byte_start: 17757, byte_end: 17758, column_start: 65, column_end: 66, line_start: 527, line_end: 527 }: " "
Token { kind: Text, char_start: 17757, char_end: 17761, byte_start: 17758, byte_end: 17762, column_start: 66, column_end: 70, line_start: 527, line_end: 527 }: from
Token { kind: Space, char_start: 17761, char_end: 17762, byte_start: 17762, byte_end: 17763, column_start: 70, column_end: 71, line_start: 527, line_end: 527 }: " "
Token { kind: Text, char_start: 17762, char_end: 17768, byte_start: 17763, byte_end: 17769, column_start: 71, column_end: 77, line_start: 527, line_end: 527 }: Daniel
Token { kind: Newline, char_start: 17768, char_end: 17769, byte_start: 17769, byte_end: 17770, column_start: 77, column_end: 1, line_start: 527, line_end: 528 }: "\n"
Token { kind: Space, char_start: 17769, char_end: 17771, byte_start: 17770, byte_end: 17772, column_start: 1, column_end: 3, line_start: 528, line_end: 528 }: "  "
Token { kind: Text, char_start: 17771, char_end: 17776, byte_start: 17772, byte_end: 17777, column_start: 3, column_end: 8, line_start: 528, line_end: 528 }: Silva
Token { kind: Rparen, char_start: 17776, char_end: 17777, byte_start: 17777, byte_end: 17778, column_start: 8, column_end: 9, line_start: 528, line_end: 528 }: )
Token { kind: Text, char_start: 17777, char_end: 17778, byte_start: 17778, byte_end: 17779, column_start: 9, column_end: 10, line_start: 528, line_end: 528 }: .
Token { kind: Newline, char_start: 17778, char_end: 17779, byte_start: 17779, byte_end: 17780, column_start: 10, column_end: 1, line_start: 528, line_end: 529 }: "\n"
Token { kind: Hyphen, char_start: 17779, char_end: 17780, byte_start: 17780, byte_end: 17781, column_start: 1, column_end: 2, line_start: 529, line_end: 529 }: -
Token { kind: Space, char_start: 17780, char_end: 17781, byte_start: 17781, byte_end: 17782, column_start: 2, column_end: 3, line_start: 529, line_end: 529 }: " "
Token { kind: Text, char_start: 17781, char_end: 17785, byte_start: 17782, byte_end: 17786, column_start: 3, column_end: 7, line_start: 529, line_end: 529 }: Make
Token { kind: Space, char_start: 17785, char_end: 17786, byte_start: 17786, byte_end: 17787, column_start: 7, column_end: 8, line_start: 529, line_end: 529 }: " "
Token { kind: Bar, char_start: 17786, char_end: 17787, byte_start: 17787, byte_end: 17788, column_start: 8, column_end: 9, line_start: 529, line_end: 529 }: |
Token { kind: BlockQuote, char_start: 17787, char_end: 17788, byte_start: 17788, byte_end: 17789, column_start: 9, column_end: 10, line_start: 529, line_end: 529 }: <
Token { kind: Text, char_start: 17788, char_end: 17792, byte_start: 17789, byte_end: 17793, column_start: 10, column_end: 14, line_start: 529, line_end: 529 }: Plug
Token { kind: BlockQuote, char_start: 17792, char_end: 17793, byte_start: 17793, byte_end: 17794, column_start: 14, column_end: 15, line_start: 529, line_end: 529 }: >
Token { kind: Bar, char_start: 17793, char_end: 17794, byte_start: 17794, byte_end: 17795, column_start: 15, column_end: 16, line_start: 529, line_end: 529 }: |
Token { kind: Space, char_start: 17794, char_end: 17795, byte_start: 17795, byte_end: 17796, column_start: 16, column_end: 17, line_start: 529, line_end: 529 }: " "
Token { kind: Text, char_start: 17795, char_end: 17803, byte_start: 17796, byte_end: 17804, column_start: 17, column_end: 25, line_start: 529, line_end: 529 }: mappings
Token { kind: Space, char_start: 17803, char_end: 17804, byte_start: 17804, byte_end: 17805, column_start: 25, column_end: 26, line_start: 529, line_end: 529 }: " "
Token { kind: Text, char_start: 17804, char_end: 17814, byte_start: 17805, byte_end: 17815, column_start: 26, column_end: 36, line_start: 529, line_end: 529 }: accessible
Token { kind: Space, char_start: 17814, char_end: 17815, byte_start: 17815, byte_end: 17816, column_start: 36, column_end: 37, line_start: 529, line_end: 529 }: " "
Token { kind: Text, char_start: 17815, char_end: 17819, byte_start: 17816, byte_end: 17820, column_start: 37, column_end: 41, line_start: 529, line_end: 529 }: even
Token { kind: Space, char_start: 17819, char_end: 17820, byte_start: 17820, byte_end: 17821, column_start: 41, column_end: 42, line_start: 529, line_end: 529 }: " "
Token { kind: Bar, char_start: 17820, char_end: 17821, byte_start: 17821, byte_end: 17822, column_start: 42, column_end: 43, line_start: 529, line_end: 529 }: |
Token { kind: Text, char_start: 17821, char_end: 17832, byte_start: 17822, byte_end: 17833, column_start: 43, column_end: 54, line_start: 529, line_end: 529 }: g:FerretMap
Token { kind: Bar, char_start: 17832, char_end: 17833, byte_start: 17833, byte_end: 17834, column_start: 54, column_end: 55, line_start: 529, line_end: 529 }: |
Token { kind: Space, char_start: 17833, char_end: 17834, byte_start: 17834, byte_end: 17835, column_start: 55, column_end: 56, line_start: 529, line_end: 529 }: " "
Token { kind: Text, char_start: 17834, char_end: 17836, byte_start: 17835, byte_end: 17837, column_start: 56, column_end: 58, line_start: 529, line_end: 529 }: is
Token { kind: Space, char_start: 17836, char_end: 17837, byte_start: 17837, byte_end: 17838, column_start: 58, column_end: 59, line_start: 529, line_end: 529 }: " "
Token { kind: Text, char_start: 17837, char_end: 17840, byte_start: 17838, byte_end: 17841, column_start: 59, column_end: 62, line_start: 529, line_end: 529 }: set
Token { kind: Space, char_start: 17840, char_end: 17841, byte_start: 17841, byte_end: 17842, column_start: 62, column_end: 63, line_start: 529, line_end: 529 }: " "
Token { kind: Text, char_start: 17841, char_end: 17843, byte_start: 17842, byte_end: 17844, column_start: 63, column_end: 65, line_start: 529, line_end: 529 }: to
Token { kind: Space, char_start: 17843, char_end: 17844, byte_start: 17844, byte_end: 17845, column_start: 65, column_end: 66, line_start: 529, line_end: 529 }: " "
Token { kind: Text, char_start: 17844, char_end: 17846, byte_start: 17845, byte_end: 17847, column_start: 66, column_end: 68, line_start: 529, line_end: 529 }: 0.
Token { kind: Newline, char_start: 17846, char_end: 17847, byte_start: 17847, byte_end: 17848, column_start: 68, column_end: 1, line_start: 529, line_end: 530 }: "\n"
Token { kind: Hyphen, char_start: 17847, char_end: 17848, byte_start: 17848, byte_end: 17849, column_start: 1, column_end: 2, line_start: 530, line_end: 530 }: -
Token { kind: Space, char_start: 17848, char_end: 17849, byte_start: 17849, byte_end: 17850, column_start: 2, column_end: 3, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17849, char_end: 17852, byte_start: 17850, byte_end: 17853, column_start: 3, column_end: 6, line_start: 530, line_end: 530 }: Fix
Token { kind: Space, char_start: 17852, char_end: 17853, byte_start: 17853, byte_end: 17854, column_start: 6, column_end: 7, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17853, char_end: 17860, byte_start: 17854, byte_end: 17861, column_start: 7, column_end: 14, line_start: 530, line_end: 530 }: failure
Token { kind: Space, char_start: 17860, char_end: 17861, byte_start: 17861, byte_end: 17862, column_start: 14, column_end: 15, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17861, char_end: 17863, byte_start: 17862, byte_end: 17864, column_start: 15, column_end: 17, line_start: 530, line_end: 530 }: to
Token { kind: Space, char_start: 17863, char_end: 17864, byte_start: 17864, byte_end: 17865, column_start: 17, column_end: 18, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17864, char_end: 17870, byte_start: 17865, byte_end: 17871, column_start: 18, column_end: 24, line_start: 530, line_end: 530 }: report
Token { kind: Space, char_start: 17870, char_end: 17871, byte_start: 17871, byte_end: 17872, column_start: 24, column_end: 25, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17871, char_end: 17879, byte_start: 17872, byte_end: 17880, column_start: 25, column_end: 33, line_start: 530, line_end: 530 }: filename
Token { kind: Space, char_start: 17879, char_end: 17880, byte_start: 17880, byte_end: 17881, column_start: 33, column_end: 34, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17880, char_end: 17884, byte_start: 17881, byte_end: 17885, column_start: 34, column_end: 38, line_start: 530, line_end: 530 }: when
Token { kind: Space, char_start: 17884, char_end: 17885, byte_start: 17885, byte_end: 17886, column_start: 38, column_end: 39, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17885, char_end: 17890, byte_start: 17886, byte_end: 17891, column_start: 39, column_end: 44, line_start: 530, line_end: 530 }: using
Token { kind: Space, char_start: 17890, char_end: 17891, byte_start: 17891, byte_end: 17892, column_start: 44, column_end: 45, line_start: 530, line_end: 530 }: " "
Token { kind: Backtick, char_start: 17891, char_end: 17892, byte_start: 17892, byte_end: 17893, column_start: 45, column_end: 46, line_start: 530, line_end: 530 }: `
Token { kind: Text, char_start: 17892, char_end: 17895, byte_start: 17893, byte_end: 17896, column_start: 46, column_end: 49, line_start: 530, line_end: 530 }: ack
Token { kind: Backtick, char_start: 17895, char_end: 17896, byte_start: 17896, byte_end: 17897, column_start: 49, column_end: 50, line_start: 530, line_end: 530 }: `
Token { kind: Space, char_start: 17896, char_end: 17897, byte_start: 17897, byte_end: 17898, column_start: 50, column_end: 51, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17897, char_end: 17900, byte_start: 17898, byte_end: 17901, column_start: 51, column_end: 54, line_start: 530, line_end: 530 }: and
Token { kind: Space, char_start: 17900, char_end: 17901, byte_start: 17901, byte_end: 17902, column_start: 54, column_end: 55, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17901, char_end: 17911, byte_start: 17902, byte_end: 17912, column_start: 55, column_end: 65, line_start: 530, line_end: 530 }: explicitly
Token { kind: Space, char_start: 17911, char_end: 17912, byte_start: 17912, byte_end: 17913, column_start: 65, column_end: 66, line_start: 530, line_end: 530 }: " "
Token { kind: Text, char_start: 17912, char_end: 17919, byte_start: 17913, byte_end: 17920, column_start: 66, column_end: 73, line_start: 530, line_end: 530 }: scoping
Token { kind: Newline, char_start: 17919, char_end: 17920, byte_start: 17920, byte_end: 17921, column_start: 73, column_end: 1, line_start: 530, line_end: 531 }: "\n"
Token { kind: Space, char_start: 17920, char_end: 17922, byte_start: 17921, byte_end: 17923, column_start: 1, column_end: 3, line_start: 531, line_end: 531 }: "  "
Token { kind: Text, char_start: 17922, char_end: 17928, byte_start: 17923, byte_end: 17929, column_start: 3, column_end: 9, line_start: 531, line_end: 531 }: search
Token { kind: Space, char_start: 17928, char_end: 17929, byte_start: 17929, byte_end: 17930, column_start: 9, column_end: 10, line_start: 531, line_end: 531 }: " "
Token { kind: Text, char_start: 17929, char_end: 17931, byte_start: 17930, byte_end: 17932, column_start: 10, column_end: 12, line_start: 531, line_end: 531 }: to
Token { kind: Space, char_start: 17931, char_end: 17932, byte_start: 17932, byte_end: 17933, column_start: 12, column_end: 13, line_start: 531, line_end: 531 }: " "
Token { kind: Text, char_start: 17932, char_end: 17933, byte_start: 17933, byte_end: 17934, column_start: 13, column_end: 14, line_start: 531, line_end: 531 }: a
Token { kind: Space, char_start: 17933, char_end: 17934, byte_start: 17934, byte_end: 17935, column_start: 14, column_end: 15, line_start: 531, line_end: 531 }: " "
Token { kind: Text, char_start: 17934, char_end: 17940, byte_start: 17935, byte_end: 17941, column_start: 15, column_end: 21, line_start: 531, line_end: 531 }: single
Token { kind: Space, char_start: 17940, char_end: 17941, byte_start: 17941, byte_end: 17942, column_start: 21, column_end: 22, line_start: 531, line_end: 531 }: " "
Token { kind: Text, char_start: 17941, char_end: 17945, byte_start: 17942, byte_end: 17946, column_start: 22, column_end: 26, line_start: 531, line_end: 531 }: file
Token { kind: Space, char_start: 17945, char_end: 17946, byte_start: 17946, byte_end: 17947, column_start: 26, column_end: 27, line_start: 531, line_end: 531 }: " "
Token { kind: Lparen, char_start: 17946, char_end: 17947, byte_start: 17947, byte_end: 17948, column_start: 27, column_end: 28, line_start: 531, line_end: 531 }: (
Token { kind: Text, char_start: 17947, char_end: 17952, byte_start: 17948, byte_end: 17953, column_start: 28, column_end: 33, line_start: 531, line_end: 531 }: patch
Token { kind: Space, char_start: 17952, char_end: 17953, byte_start: 17953, byte_end: 17954, column_start: 33, column_end: 34, line_start: 531, line_end: 531 }: " "
Token { kind: Text, char_start: 17953, char_end: 17957, byte_start: 17954, byte_end: 17958, column_start: 34, column_end: 38, line_start: 531, line_end: 531 }: from
Token { kind: Space, char_start: 17957, char_end: 17958, byte_start: 17958, byte_end: 17959, column_start: 38, column_end: 39, line_start: 531, line_end: 531 }: " "
Token { kind: Text, char_start: 17958, char_end: 17964, byte_start: 17959, byte_end: 17965, column_start: 39, column_end: 45, line_start: 531, line_end: 531 }: Daniel
Token { kind: Space, char_start: 17964, char_end: 17965, byte_start: 17965, byte_end: 17966, column_start: 45, column_end: 46, line_start: 531, line_end: 531 }: " "
Token { kind: Text, char_start: 17965, char_end: 17970, byte_start: 17966, byte_end: 17971, column_start: 46, column_end: 51, line_start: 531, line_end: 531 }: Silva
Token { kind: Rparen, char_start: 17970, char_end: 17971, byte_start: 17971, byte_end: 17972, column_start: 51, column_end: 52, line_start: 531, line_end: 531 }: )
Token { kind: Text, char_start: 17971, char_end: 17972, byte_start: 17972, byte_end: 17973, column_start: 52, column_end: 53, line_start: 531, line_end: 531 }: .
Token { kind: Newline, char_start: 17972, char_end: 17973, byte_start: 17973, byte_end: 17974, column_start: 53, column_end: 1, line_start: 531, line_end: 532 }: "\n"
Token { kind: Hyphen, char_start: 17973, char_end: 17974, byte_start: 17974, byte_end: 17975, column_start: 1, column_end: 2, line_start: 532, line_end: 532 }: -
Token { kind: Space, char_start: 17974, char_end: 17975, byte_start: 17975, byte_end: 17976, column_start: 2, column_end: 3, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 17975, char_end: 17979, byte_start: 17976, byte_end: 17980, column_start: 3, column_end: 7, line_start: 532, line_end: 532 }: When
Token { kind: Space, char_start: 17979, char_end: 17980, byte_start: 17980, byte_end: 17981, column_start: 7, column_end: 8, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 17980, char_end: 17985, byte_start: 17981, byte_end: 17986, column_start: 8, column_end: 13, line_start: 532, line_end: 532 }: using
Token { kind: Space, char_start: 17985, char_end: 17986, byte_start: 17986, byte_end: 17987, column_start: 13, column_end: 14, line_start: 532, line_end: 532 }: " "
Token { kind: Backtick, char_start: 17986, char_end: 17987, byte_start: 17987, byte_end: 17988, column_start: 14, column_end: 15, line_start: 532, line_end: 532 }: `
Token { kind: Text, char_start: 17987, char_end: 17989, byte_start: 17988, byte_end: 17990, column_start: 15, column_end: 17, line_start: 532, line_end: 532 }: ag
Token { kind: Backtick, char_start: 17989, char_end: 17990, byte_start: 17990, byte_end: 17991, column_start: 17, column_end: 18, line_start: 532, line_end: 532 }: `
Token { kind: Text, char_start: 17990, char_end: 17991, byte_start: 17991, byte_end: 17992, column_start: 18, column_end: 19, line_start: 532, line_end: 532 }: ,
Token { kind: Space, char_start: 17991, char_end: 17992, byte_start: 17992, byte_end: 17993, column_start: 19, column_end: 20, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 17992, char_end: 17998, byte_start: 17993, byte_end: 17999, column_start: 20, column_end: 26, line_start: 532, line_end: 532 }: report
Token { kind: Space, char_start: 17998, char_end: 17999, byte_start: 17999, byte_end: 18000, column_start: 26, column_end: 27, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 17999, char_end: 18007, byte_start: 18000, byte_end: 18008, column_start: 27, column_end: 35, line_start: 532, line_end: 532 }: multiple
Token { kind: Space, char_start: 18007, char_end: 18008, byte_start: 18008, byte_end: 18009, column_start: 35, column_end: 36, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 18008, char_end: 18015, byte_start: 18009, byte_end: 18016, column_start: 36, column_end: 43, line_start: 532, line_end: 532 }: matches
Token { kind: Space, char_start: 18015, char_end: 18016, byte_start: 18016, byte_end: 18017, column_start: 43, column_end: 44, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 18016, char_end: 18019, byte_start: 18017, byte_end: 18020, column_start: 44, column_end: 47, line_start: 532, line_end: 532 }: per
Token { kind: Space, char_start: 18019, char_end: 18020, byte_start: 18020, byte_end: 18021, column_start: 47, column_end: 48, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 18020, char_end: 18024, byte_start: 18021, byte_end: 18025, column_start: 48, column_end: 52, line_start: 532, line_end: 532 }: line
Token { kind: Space, char_start: 18024, char_end: 18025, byte_start: 18025, byte_end: 18026, column_start: 52, column_end: 53, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 18025, char_end: 18032, byte_start: 18026, byte_end: 18033, column_start: 53, column_end: 60, line_start: 532, line_end: 532 }: instead
Token { kind: Space, char_start: 18032, char_end: 18033, byte_start: 18033, byte_end: 18034, column_start: 60, column_end: 61, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 18033, char_end: 18035, byte_start: 18034, byte_end: 18036, column_start: 61, column_end: 63, line_start: 532, line_end: 532 }: of
Token { kind: Space, char_start: 18035, char_end: 18036, byte_start: 18036, byte_end: 18037, column_start: 63, column_end: 64, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 18036, char_end: 18040, byte_start: 18037, byte_end: 18041, column_start: 64, column_end: 68, line_start: 532, line_end: 532 }: just
Token { kind: Space, char_start: 18040, char_end: 18041, byte_start: 18041, byte_end: 18042, column_start: 68, column_end: 69, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 18041, char_end: 18044, byte_start: 18042, byte_end: 18045, column_start: 69, column_end: 72, line_start: 532, line_end: 532 }: the
Token { kind: Space, char_start: 18044, char_end: 18045, byte_start: 18045, byte_end: 18046, column_start: 72, column_end: 73, line_start: 532, line_end: 532 }: " "
Token { kind: Text, char_start: 18045, char_end: 18050, byte_start: 18046, byte_end: 18051, column_start: 73, column_end: 78, line_start: 532, line_end: 532 }: first
Token { kind: Newline, char_start: 18050, char_end: 18051, byte_start: 18051, byte_end: 18052, column_start: 78, column_end: 1, line_start: 532, line_end: 533 }: "\n"
Token { kind: Space, char_start: 18051, char_end: 18053, byte_start: 18052, byte_end: 18054, column_start: 1, column_end: 3, line_start: 533, line_end: 533 }: "  "
Token { kind: Lparen, char_start: 18053, char_end: 18054, byte_start: 18054, byte_end: 18055, column_start: 3, column_end: 4, line_start: 533, line_end: 533 }: (
Token { kind: Text, char_start: 18054, char_end: 18059, byte_start: 18055, byte_end: 18060, column_start: 4, column_end: 9, line_start: 533, line_end: 533 }: patch
Token { kind: Space, char_start: 18059, char_end: 18060, byte_start: 18060, byte_end: 18061, column_start: 9, column_end: 10, line_start: 533, line_end: 533 }: " "
Token { kind: Text, char_start: 18060, char_end: 18064, byte_start: 18061, byte_end: 18065, column_start: 10, column_end: 14, line_start: 533, line_end: 533 }: from
Token { kind: Space, char_start: 18064, char_end: 18065, byte_start: 18065, byte_end: 18066, column_start: 14, column_end: 15, line_start: 533, line_end: 533 }: " "
Token { kind: Text, char_start: 18065, char_end: 18071, byte_start: 18066, byte_end: 18072, column_start: 15, column_end: 21, line_start: 533, line_end: 533 }: Daniel
Token { kind: Space, char_start: 18071, char_end: 18072, byte_start: 18072, byte_end: 18073, column_start: 21, column_end: 22, line_start: 533, line_end: 533 }: " "
Token { kind: Text, char_start: 18072, char_end: 18077, byte_start: 18073, byte_end: 18078, column_start: 22, column_end: 27, line_start: 533, line_end: 533 }: Silva
Token { kind: Rparen, char_start: 18077, char_end: 18078, byte_start: 18078, byte_end: 18079, column_start: 27, column_end: 28, line_start: 533, line_end: 533 }: )
Token { kind: Text, char_start: 18078, char_end: 18079, byte_start: 18079, byte_end: 18080, column_start: 28, column_end: 29, line_start: 533, line_end: 533 }: .
Token { kind: Newline, char_start: 18079, char_end: 18080, byte_start: 18080, byte_end: 18081, column_start: 29, column_end: 1, line_start: 533, line_end: 534 }: "\n"
Token { kind: Hyphen, char_start: 18080, char_end: 18081, byte_start: 18081, byte_end: 18082, column_start: 1, column_end: 2, line_start: 534, line_end: 534 }: -
Token { kind: Space, char_start: 18081, char_end: 18082, byte_start: 18082, byte_end: 18083, column_start: 2, column_end: 3, line_start: 534, line_end: 534 }: " "
Token { kind: Text, char_start: 18082, char_end: 18089, byte_start: 18083, byte_end: 18090, column_start: 3, column_end: 10, line_start: 534, line_end: 534 }: Improve
Token { kind: Space, char_start: 18089, char_end: 18090, byte_start: 18090, byte_end: 18091, column_start: 10, column_end: 11, line_start: 534, line_end: 534 }: " "
Token { kind: Text, char_start: 18090, char_end: 18097, byte_start: 18091, byte_end: 18098, column_start: 11, column_end: 18, line_start: 534, line_end: 534 }: content
Token { kind: Space, char_start: 18097, char_end: 18098, byte_start: 18098, byte_end: 18099, column_start: 18, column_end: 19, line_start: 534, line_end: 534 }: " "
Token { kind: Text, char_start: 18098, char_end: 18101, byte_start: 18099, byte_end: 18102, column_start: 19, column_end: 22, line_start: 534, line_end: 534 }: and
Token { kind: Space, char_start: 18101, char_end: 18102, byte_start: 18102, byte_end: 18103, column_start: 22, column_end: 23, line_start: 534, line_end: 534 }: " "
Token { kind: Text, char_start: 18102, char_end: 18109, byte_start: 18103, byte_end: 18110, column_start: 23, column_end: 30, line_start: 534, line_end: 534 }: display
Token { kind: Space, char_start: 18109, char_end: 18110, byte_start: 18110, byte_end: 18111, column_start: 30, column_end: 31, line_start: 534, line_end: 534 }: " "
Token { kind: Text, char_start: 18110, char_end: 18112, byte_start: 18111, byte_end: 18113, column_start: 31, column_end: 33, line_start: 534, line_end: 534 }: of
Token { kind: Space, char_start: 18112, char_end: 18113, byte_start: 18113, byte_end: 18114, column_start: 33, column_end: 34, line_start: 534, line_end: 534 }: " "
Token { kind: Text, char_start: 18113, char_end: 18118, byte_start: 18114, byte_end: 18119, column_start: 34, column_end: 39, line_start: 534, line_end: 534 }: error
Token { kind: Space, char_start: 18118, char_end: 18119, byte_start: 18119, byte_end: 18120, column_start: 39, column_end: 40, line_start: 534, line_end: 534 }: " "
Token { kind: Text, char_start: 18119, char_end: 18128, byte_start: 18120, byte_end: 18129, column_start: 40, column_end: 49, line_start: 534, line_end: 534 }: messages.
Token { kind: Newline, char_start: 18128, char_end: 18129, byte_start: 18129, byte_end: 18130, column_start: 49, column_end: 1, line_start: 534, line_end: 535 }: "\n"
Token { kind: Newline, char_start: 18129, char_end: 18130, byte_start: 18130, byte_end: 18131, column_start: 1, column_end: 1, line_start: 535, line_end: 536 }: "\n"
Token { kind: Heading(Heading2), char_start: 18130, char_end: 18132, byte_start: 18131, byte_end: 18133, column_start: 1, column_end: 3, line_start: 536, line_end: 536 }: ##
Token { kind: Space, char_start: 18132, char_end: 18133, byte_start: 18133, byte_end: 18134, column_start: 3, column_end: 4, line_start: 536, line_end: 536 }: " "
Token { kind: Text, char_start: 18133, char_end: 18136, byte_start: 18134, byte_end: 18137, column_start: 4, column_end: 7, line_start: 536, line_end: 536 }: 0.3
Token { kind: Space, char_start: 18136, char_end: 18137, byte_start: 18137, byte_end: 18138, column_start: 7, column_end: 8, line_start: 536, line_end: 536 }: " "
Token { kind: Lparen, char_start: 18137, char_end: 18138, byte_start: 18138, byte_end: 18139, column_start: 8, column_end: 9, line_start: 536, line_end: 536 }: (
Token { kind: Text, char_start: 18138, char_end: 18140, byte_start: 18139, byte_end: 18141, column_start: 9, column_end: 11, line_start: 536, line_end: 536 }: 24
Token { kind: Space, char_start: 18140, char_end: 18141, byte_start: 18141, byte_end: 18142, column_start: 11, column_end: 12, line_start: 536, line_end: 536 }: " "
Token { kind: Text, char_start: 18141, char_end: 18145, byte_start: 18142, byte_end: 18146, column_start: 12, column_end: 16, line_start: 536, line_end: 536 }: July
Token { kind: Space, char_start: 18145, char_end: 18146, byte_start: 18146, byte_end: 18147, column_start: 16, column_end: 17, line_start: 536, line_end: 536 }: " "
Token { kind: Text, char_start: 18146, char_end: 18150, byte_start: 18147, byte_end: 18151, column_start: 17, column_end: 21, line_start: 536, line_end: 536 }: 2015
Token { kind: Rparen, char_start: 18150, char_end: 18151, byte_start: 18151, byte_end: 18152, column_start: 21, column_end: 22, line_start: 536, line_end: 536 }: )
Token { kind: Newline, char_start: 18151, char_end: 18152, byte_start: 18152, byte_end: 18153, column_start: 22, column_end: 1, line_start: 536, line_end: 537 }: "\n"
Token { kind: Newline, char_start: 18152, char_end: 18153, byte_start: 18153, byte_end: 18154, column_start: 1, column_end: 1, line_start: 537, line_end: 538 }: "\n"
Token { kind: Hyphen, char_start: 18153, char_end: 18154, byte_start: 18154, byte_end: 18155, column_start: 1, column_end: 2, line_start: 538, line_end: 538 }: -
Token { kind: Space, char_start: 18154, char_end: 18155, byte_start: 18155, byte_end: 18156, column_start: 2, column_end: 3, line_start: 538, line_end: 538 }: " "
Token { kind: Text, char_start: 18155, char_end: 18160, byte_start: 18156, byte_end: 18161, column_start: 3, column_end: 8, line_start: 538, line_end: 538 }: Added
Token { kind: Space, char_start: 18160, char_end: 18161, byte_start: 18161, byte_end: 18162, column_start: 8, column_end: 9, line_start: 538, line_end: 538 }: " "
Token { kind: Text, char_start: 18161, char_end: 18173, byte_start: 18162, byte_end: 18174, column_start: 9, column_end: 21, line_start: 538, line_end: 538 }: highlighting
Token { kind: Space, char_start: 18173, char_end: 18174, byte_start: 18174, byte_end: 18175, column_start: 21, column_end: 22, line_start: 538, line_end: 538 }: " "
Token { kind: Text, char_start: 18174, char_end: 18176, byte_start: 18175, byte_end: 18177, column_start: 22, column_end: 24, line_start: 538, line_end: 538 }: of
Token { kind: Space, char_start: 18176, char_end: 18177, byte_start: 18177, byte_end: 18178, column_start: 24, column_end: 25, line_start: 538, line_end: 538 }: " "
Token { kind: Text, char_start: 18177, char_end: 18183, byte_start: 18178, byte_end: 18184, column_start: 25, column_end: 31, line_start: 538, line_end: 538 }: search
Token { kind: Space, char_start: 18183, char_end: 18184, byte_start: 18184, byte_end: 18185, column_start: 31, column_end: 32, line_start: 538, line_end: 538 }: " "
Token { kind: Text, char_start: 18184, char_end: 18191, byte_start: 18185, byte_end: 18192, column_start: 32, column_end: 39, line_start: 538, line_end: 538 }: pattern
Token { kind: Space, char_start: 18191, char_end: 18192, byte_start: 18192, byte_end: 18193, column_start: 39, column_end: 40, line_start: 538, line_end: 538 }: " "
Token { kind: Text, char_start: 18192, char_end: 18195, byte_start: 18193, byte_end: 18196, column_start: 40, column_end: 43, line_start: 538, line_end: 538 }: and
Token { kind: Space, char_start: 18195, char_end: 18196, byte_start: 18196, byte_end: 18197, column_start: 43, column_end: 44, line_start: 538, line_end: 538 }: " "
Token { kind: Text, char_start: 18196, char_end: 18203, byte_start: 18197, byte_end: 18204, column_start: 44, column_end: 51, line_start: 538, line_end: 538 }: related
Token { kind: Space, char_start: 18203, char_end: 18204, byte_start: 18204, byte_end: 18205, column_start: 51, column_end: 52, line_start: 538, line_end: 538 }: " "
Token { kind: Bar, char_start: 18204, char_end: 18205, byte_start: 18205, byte_end: 18206, column_start: 52, column_end: 53, line_start: 538, line_end: 538 }: |
Token { kind: Text, char_start: 18205, char_end: 18221, byte_start: 18206, byte_end: 18222, column_start: 53, column_end: 69, line_start: 538, line_end: 538 }: g:FerretHlsearch
Token { kind: Bar, char_start: 18221, char_end: 18222, byte_start: 18222, byte_end: 18223, column_start: 69, column_end: 70, line_start: 538, line_end: 538 }: |
Token { kind: Space, char_start: 18222, char_end: 18223, byte_start: 18223, byte_end: 18224, column_start: 70, column_end: 71, line_start: 538, line_end: 538 }: " "
Token { kind: Text, char_start: 18223, char_end: 18229, byte_start: 18224, byte_end: 18230, column_start: 71, column_end: 77, line_start: 538, line_end: 538 }: option
Token { kind: Newline, char_start: 18229, char_end: 18230, byte_start: 18230, byte_end: 18231, column_start: 77, column_end: 1, line_start: 538, line_end: 539 }: "\n"
Token { kind: Space, char_start: 18230, char_end: 18232, byte_start: 18231, byte_end: 18233, column_start: 1, column_end: 3, line_start: 539, line_end: 539 }: "  "
Token { kind: Lparen, char_start: 18232, char_end: 18233, byte_start: 18233, byte_end: 18234, column_start: 3, column_end: 4, line_start: 539, line_end: 539 }: (
Token { kind: Text, char_start: 18233, char_end: 18238, byte_start: 18234, byte_end: 18239, column_start: 4, column_end: 9, line_start: 539, line_end: 539 }: patch
Token { kind: Space, char_start: 18238, char_end: 18239, byte_start: 18239, byte_end: 18240, column_start: 9, column_end: 10, line_start: 539, line_end: 539 }: " "
Token { kind: Text, char_start: 18239, char_end: 18243, byte_start: 18240, byte_end: 18244, column_start: 10, column_end: 14, line_start: 539, line_end: 539 }: from
Token { kind: Space, char_start: 18243, char_end: 18244, byte_start: 18244, byte_end: 18245, column_start: 14, column_end: 15, line_start: 539, line_end: 539 }: " "
Token { kind: Text, char_start: 18244, char_end: 18248, byte_start: 18245, byte_end: 18249, column_start: 15, column_end: 19, line_start: 539, line_end: 539 }: Nelo
Token { kind: Hyphen, char_start: 18248, char_end: 18249, byte_start: 18249, byte_end: 18250, column_start: 19, column_end: 20, line_start: 539, line_end: 539 }: -
Token { kind: Text, char_start: 18249, char_end: 18254, byte_start: 18250, byte_end: 18255, column_start: 20, column_end: 25, line_start: 539, line_end: 539 }: Thara
Token { kind: Space, char_start: 18254, char_end: 18255, byte_start: 18255, byte_end: 18256, column_start: 25, column_end: 26, line_start: 539, line_end: 539 }: " "
Token { kind: Text, char_start: 18255, char_end: 18261, byte_start: 18256, byte_end: 18262, column_start: 26, column_end: 32, line_start: 539, line_end: 539 }: Wallus
Token { kind: Rparen, char_start: 18261, char_end: 18262, byte_start: 18262, byte_end: 18263, column_start: 32, column_end: 33, line_start: 539, line_end: 539 }: )
Token { kind: Text, char_start: 18262, char_end: 18263, byte_start: 18263, byte_end: 18264, column_start: 33, column_end: 34, line_start: 539, line_end: 539 }: .
Token { kind: Newline, char_start: 18263, char_end: 18264, byte_start: 18264, byte_end: 18265, column_start: 34, column_end: 1, line_start: 539, line_end: 540 }: "\n"
Token { kind: Hyphen, char_start: 18264, char_end: 18265, byte_start: 18265, byte_end: 18266, column_start: 1, column_end: 2, line_start: 540, line_end: 540 }: -
Token { kind: Space, char_start: 18265, char_end: 18266, byte_start: 18266, byte_end: 18267, column_start: 2, column_end: 3, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18266, char_end: 18269, byte_start: 18267, byte_end: 18270, column_start: 3, column_end: 6, line_start: 540, line_end: 540 }: Add
Token { kind: Space, char_start: 18269, char_end: 18270, byte_start: 18270, byte_end: 18271, column_start: 6, column_end: 7, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18270, char_end: 18276, byte_start: 18271, byte_end: 18277, column_start: 7, column_end: 13, line_start: 540, line_end: 540 }: better
Token { kind: Space, char_start: 18276, char_end: 18277, byte_start: 18277, byte_end: 18278, column_start: 13, column_end: 14, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18277, char_end: 18282, byte_start: 18278, byte_end: 18283, column_start: 14, column_end: 19, line_start: 540, line_end: 540 }: error
Token { kind: Space, char_start: 18282, char_end: 18283, byte_start: 18283, byte_end: 18284, column_start: 19, column_end: 20, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18283, char_end: 18292, byte_start: 18284, byte_end: 18293, column_start: 20, column_end: 29, line_start: 540, line_end: 540 }: reporting
Token { kind: Space, char_start: 18292, char_end: 18293, byte_start: 18293, byte_end: 18294, column_start: 29, column_end: 30, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18293, char_end: 18296, byte_start: 18294, byte_end: 18297, column_start: 30, column_end: 33, line_start: 540, line_end: 540 }: for
Token { kind: Space, char_start: 18296, char_end: 18297, byte_start: 18297, byte_end: 18298, column_start: 33, column_end: 34, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18297, char_end: 18303, byte_start: 18298, byte_end: 18304, column_start: 34, column_end: 40, line_start: 540, line_end: 540 }: failed
Token { kind: Space, char_start: 18303, char_end: 18304, byte_start: 18304, byte_end: 18305, column_start: 40, column_end: 41, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18304, char_end: 18306, byte_start: 18305, byte_end: 18307, column_start: 41, column_end: 43, line_start: 540, line_end: 540 }: or
Token { kind: Space, char_start: 18306, char_end: 18307, byte_start: 18307, byte_end: 18308, column_start: 43, column_end: 44, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18307, char_end: 18316, byte_start: 18308, byte_end: 18317, column_start: 44, column_end: 53, line_start: 540, line_end: 540 }: incorrect
Token { kind: Space, char_start: 18316, char_end: 18317, byte_start: 18317, byte_end: 18318, column_start: 53, column_end: 54, line_start: 540, line_end: 540 }: " "
Token { kind: Text, char_start: 18317, char_end: 18326, byte_start: 18318, byte_end: 18327, column_start: 54, column_end: 63, line_start: 540, line_end: 540 }: searches.
Token { kind: Newline, char_start: 18326, char_end: 18327, byte_start: 18327, byte_end: 18328, column_start: 63, column_end: 1, line_start: 540, line_end: 541 }: "\n"
Token { kind: Newline, char_start: 18327, char_end: 18328, byte_start: 18328, byte_end: 18329, column_start: 1, column_end: 1, line_start: 541, line_end: 542 }: "\n"
Token { kind: Heading(Heading2), char_start: 18328, char_end: 18330, byte_start: 18329, byte_end: 18331, column_start: 1, column_end: 3, line_start: 542, line_end: 542 }: ##
Token { kind: Space, char_start: 18330, char_end: 18331, byte_start: 18331, byte_end: 18332, column_start: 3, column_end: 4, line_start: 542, line_end: 542 }: " "
Token { kind: Text, char_start: 18331, char_end: 18334, byte_start: 18332, byte_end: 18335, column_start: 4, column_end: 7, line_start: 542, line_end: 542 }: 0.2
Token { kind: Space, char_start: 18334, char_end: 18335, byte_start: 18335, byte_end: 18336, column_start: 7, column_end: 8, line_start: 542, line_end: 542 }: " "
Token { kind: Lparen, char_start: 18335, char_end: 18336, byte_start: 18336, byte_end: 18337, column_start: 8, column_end: 9, line_start: 542, line_end: 542 }: (
Token { kind: Text, char_start: 18336, char_end: 18338, byte_start: 18337, byte_end: 18339, column_start: 9, column_end: 11, line_start: 542, line_end: 542 }: 16
Token { kind: Space, char_start: 18338, char_end: 18339, byte_start: 18339, byte_end: 18340, column_start: 11, column_end: 12, line_start: 542, line_end: 542 }: " "
Token { kind: Text, char_start: 18339, char_end: 18343, byte_start: 18340, byte_end: 18344, column_start: 12, column_end: 16, line_start: 542, line_end: 542 }: July
Token { kind: Space, char_start: 18343, char_end: 18344, byte_start: 18344, byte_end: 18345, column_start: 16, column_end: 17, line_start: 542, line_end: 542 }: " "
Token { kind: Text, char_start: 18344, char_end: 18348, byte_start: 18345, byte_end: 18349, column_start: 17, column_end: 21, line_start: 542, line_end: 542 }: 2015
Token { kind: Rparen, char_start: 18348, char_end: 18349, byte_start: 18349, byte_end: 18350, column_start: 21, column_end: 22, line_start: 542, line_end: 542 }: )
Token { kind: Newline, char_start: 18349, char_end: 18350, byte_start: 18350, byte_end: 18351, column_start: 22, column_end: 1, line_start: 542, line_end: 543 }: "\n"
Token { kind: Newline, char_start: 18350, char_end: 18351, byte_start: 18351, byte_end: 18352, column_start: 1, column_end: 1, line_start: 543, line_end: 544 }: "\n"
Token { kind: Hyphen, char_start: 18351, char_end: 18352, byte_start: 18352, byte_end: 18353, column_start: 1, column_end: 2, line_start: 544, line_end: 544 }: -
Token { kind: Space, char_start: 18352, char_end: 18353, byte_start: 18353, byte_end: 18354, column_start: 2, column_end: 3, line_start: 544, line_end: 544 }: " "
Token { kind: Text, char_start: 18353, char_end: 18358, byte_start: 18354, byte_end: 18359, column_start: 3, column_end: 8, line_start: 544, line_end: 544 }: Added
Token { kind: Space, char_start: 18358, char_end: 18359, byte_start: 18359, byte_end: 18360, column_start: 8, column_end: 9, line_start: 544, line_end: 544 }: " "
Token { kind: Bar, char_start: 18359, char_end: 18360, byte_start: 18360, byte_end: 18361, column_start: 9, column_end: 10, line_start: 544, line_end: 544 }: |
Token { kind: Text, char_start: 18360, char_end: 18374, byte_start: 18361, byte_end: 18375, column_start: 10, column_end: 24, line_start: 544, line_end: 544 }: FerretDidWrite
Token { kind: Bar, char_start: 18374, char_end: 18375, byte_start: 18375, byte_end: 18376, column_start: 24, column_end: 25, line_start: 544, line_end: 544 }: |
Token { kind: Space, char_start: 18375, char_end: 18376, byte_start: 18376, byte_end: 18377, column_start: 25, column_end: 26, line_start: 544, line_end: 544 }: " "
Token { kind: Text, char_start: 18376, char_end: 18379, byte_start: 18377, byte_end: 18380, column_start: 26, column_end: 29, line_start: 544, line_end: 544 }: and
Token { kind: Space, char_start: 18379, char_end: 18380, byte_start: 18380, byte_end: 18381, column_start: 29, column_end: 30, line_start: 544, line_end: 544 }: " "
Token { kind: Bar, char_start: 18380, char_end: 18381, byte_start: 18381, byte_end: 18382, column_start: 30, column_end: 31, line_start: 544, line_end: 544 }: |
Token { kind: Text, char_start: 18381, char_end: 18396, byte_start: 18382, byte_end: 18397, column_start: 31, column_end: 46, line_start: 544, line_end: 544 }: FerretWillWrite
Token { kind: Bar, char_start: 18396, char_end: 18397, byte_start: 18397, byte_end: 18398, column_start: 46, column_end: 47, line_start: 544, line_end: 544 }: |
Token { kind: Space, char_start: 18397, char_end: 18398, byte_start: 18398, byte_end: 18399, column_start: 47, column_end: 48, line_start: 544, line_end: 544 }: " "
Token { kind: Text, char_start: 18398, char_end: 18410, byte_start: 18399, byte_end: 18411, column_start: 48, column_end: 60, line_start: 544, line_end: 544 }: autocommands
Token { kind: Space, char_start: 18410, char_end: 18411, byte_start: 18411, byte_end: 18412, column_start: 60, column_end: 61, line_start: 544, line_end: 544 }: " "
Token { kind: Lparen, char_start: 18411, char_end: 18412, byte_start: 18412, byte_end: 18413, column_start: 61, column_end: 62, line_start: 544, line_end: 544 }: (
Token { kind: Text, char_start: 18412, char_end: 18417, byte_start: 18413, byte_end: 18418, column_start: 62, column_end: 67, line_start: 544, line_end: 544 }: patch
Token { kind: Space, char_start: 18417, char_end: 18418, byte_start: 18418, byte_end: 18419, column_start: 67, column_end: 68, line_start: 544, line_end: 544 }: " "
Token { kind: Text, char_start: 18418, char_end: 18422, byte_start: 18419, byte_end: 18423, column_start: 68, column_end: 72, line_start: 544, line_end: 544 }: from
Token { kind: Space, char_start: 18422, char_end: 18423, byte_start: 18423, byte_end: 18424, column_start: 72, column_end: 73, line_start: 544, line_end: 544 }: " "
Token { kind: Text, char_start: 18423, char_end: 18426, byte_start: 18424, byte_end: 18427, column_start: 73, column_end: 76, line_start: 544, line_end: 544 }: Joe
Token { kind: Newline, char_start: 18426, char_end: 18427, byte_start: 18427, byte_end: 18428, column_start: 76, column_end: 1, line_start: 544, line_end: 545 }: "\n"
Token { kind: Space, char_start: 18427, char_end: 18429, byte_start: 18428, byte_end: 18430, column_start: 1, column_end: 3, line_start: 545, line_end: 545 }: "  "
Token { kind: Text, char_start: 18429, char_end: 18437, byte_start: 18430, byte_end: 18438, column_start: 3, column_end: 11, line_start: 545, line_end: 545 }: Lencioni
Token { kind: Rparen, char_start: 18437, char_end: 18438, byte_start: 18438, byte_end: 18439, column_start: 11, column_end: 12, line_start: 545, line_end: 545 }: )
Token { kind: Text, char_start: 18438, char_end: 18439, byte_start: 18439, byte_end: 18440, column_start: 12, column_end: 13, line_start: 545, line_end: 545 }: .
Token { kind: Newline, char_start: 18439, char_end: 18440, byte_start: 18440, byte_end: 18441, column_start: 13, column_end: 1, line_start: 545, line_end: 546 }: "\n"
Token { kind: Hyphen, char_start: 18440, char_end: 18441, byte_start: 18441, byte_end: 18442, column_start: 1, column_end: 2, line_start: 546, line_end: 546 }: -
Token { kind: Space, char_start: 18441, char_end: 18442, byte_start: 18442, byte_end: 18443, column_start: 2, column_end: 3, line_start: 546, line_end: 546 }: " "
Token { kind: Text, char_start: 18442, char_end: 18445, byte_start: 18443, byte_end: 18446, column_start: 3, column_end: 6, line_start: 546, line_end: 546 }: Add
Token { kind: Space, char_start: 18445, char_end: 18446, byte_start: 18446, byte_end: 18447, column_start: 6, column_end: 7, line_start: 546, line_end: 546 }: " "
Token { kind: Bar, char_start: 18446, char_end: 18447, byte_start: 18447, byte_end: 18448, column_start: 7, column_end: 8, line_start: 546, line_end: 546 }: |
Token { kind: BlockQuote, char_start: 18447, char_end: 18448, byte_start: 18448, byte_end: 18449, column_start: 8, column_end: 9, line_start: 546, line_end: 546 }: <
Token { kind: Text, char_start: 18448, char_end: 18452, byte_start: 18449, byte_end: 18453, column_start: 9, column_end: 13, line_start: 546, line_end: 546 }: Plug
Token { kind: BlockQuote, char_start: 18452, char_end: 18453, byte_start: 18453, byte_end: 18454, column_start: 13, column_end: 14, line_start: 546, line_end: 546 }: >
Token { kind: Lparen, char_start: 18453, char_end: 18454, byte_start: 18454, byte_end: 18455, column_start: 14, column_end: 15, line_start: 546, line_end: 546 }: (
Token { kind: Text, char_start: 18454, char_end: 18464, byte_start: 18455, byte_end: 18465, column_start: 15, column_end: 25, line_start: 546, line_end: 546 }: FerretAcks
Token { kind: Rparen, char_start: 18464, char_end: 18465, byte_start: 18465, byte_end: 18466, column_start: 25, column_end: 26, line_start: 546, line_end: 546 }: )
Token { kind: Bar, char_start: 18465, char_end: 18466, byte_start: 18466, byte_end: 18467, column_start: 26, column_end: 27, line_start: 546, line_end: 546 }: |
Token { kind: Space, char_start: 18466, char_end: 18467, byte_start: 18467, byte_end: 18468, column_start: 27, column_end: 28, line_start: 546, line_end: 546 }: " "
Token { kind: Text, char_start: 18467, char_end: 18474, byte_start: 18468, byte_end: 18475, column_start: 28, column_end: 35, line_start: 546, line_end: 546 }: mapping
Token { kind: Space, char_start: 18474, char_end: 18475, byte_start: 18475, byte_end: 18476, column_start: 35, column_end: 36, line_start: 546, line_end: 546 }: " "
Token { kind: Lparen, char_start: 18475, char_end: 18476, byte_start: 18476, byte_end: 18477, column_start: 36, column_end: 37, line_start: 546, line_end: 546 }: (
Token { kind: Text, char_start: 18476, char_end: 18481, byte_start: 18477, byte_end: 18482, column_start: 37, column_end: 42, line_start: 546, line_end: 546 }: patch
Token { kind: Space, char_start: 18481, char_end: 18482, byte_start: 18482, byte_end: 18483, column_start: 42, column_end: 43, line_start: 546, line_end: 546 }: " "
Token { kind: Text, char_start: 18482, char_end: 18486, byte_start: 18483, byte_end: 18487, column_start: 43, column_end: 47, line_start: 546, line_end: 546 }: from
Token { kind: Space, char_start: 18486, char_end: 18487, byte_start: 18487, byte_end: 18488, column_start: 47, column_end: 48, line_start: 546, line_end: 546 }: " "
Token { kind: Text, char_start: 18487, char_end: 18491, byte_start: 18488, byte_end: 18492, column_start: 48, column_end: 52, line_start: 546, line_end: 546 }: Nelo
Token { kind: Hyphen, char_start: 18491, char_end: 18492, byte_start: 18492, byte_end: 18493, column_start: 52, column_end: 53, line_start: 546, line_end: 546 }: -
Token { kind: Text, char_start: 18492, char_end: 18497, byte_start: 18493, byte_end: 18498, column_start: 53, column_end: 58, line_start: 546, line_end: 546 }: Thara
Token { kind: Space, char_start: 18497, char_end: 18498, byte_start: 18498, byte_end: 18499, column_start: 58, column_end: 59, line_start: 546, line_end: 546 }: " "
Token { kind: Text, char_start: 18498, char_end: 18504, byte_start: 18499, byte_end: 18505, column_start: 59, column_end: 65, line_start: 546, line_end: 546 }: Wallus
Token { kind: Rparen, char_start: 18504, char_end: 18505, byte_start: 18505, byte_end: 18506, column_start: 65, column_end: 66, line_start: 546, line_end: 546 }: )
Token { kind: Text, char_start: 18505, char_end: 18506, byte_start: 18506, byte_end: 18507, column_start: 66, column_end: 67, line_start: 546, line_end: 546 }: .
Token { kind: Newline, char_start: 18506, char_end: 18507, byte_start: 18507, byte_end: 18508, column_start: 67, column_end: 1, line_start: 546, line_end: 547 }: "\n"
Token { kind: Newline, char_start: 18507, char_end: 18508, byte_start: 18508, byte_end: 18509, column_start: 1, column_end: 1, line_start: 547, line_end: 548 }: "\n"
Token { kind: Heading(Heading2), char_start: 18508, char_end: 18510, byte_start: 18509, byte_end: 18511, column_start: 1, column_end: 3, line_start: 548, line_end: 548 }: ##
Token { kind: Space, char_start: 18510, char_end: 18511, byte_start: 18511, byte_end: 18512, column_start: 3, column_end: 4, line_start: 548, line_end: 548 }: " "
Token { kind: Text, char_start: 18511, char_end: 18514, byte_start: 18512, byte_end: 18515, column_start: 4, column_end: 7, line_start: 548, line_end: 548 }: 0.1
Token { kind: Space, char_start: 18514, char_end: 18515, byte_start: 18515, byte_end: 18516, column_start: 7, column_end: 8, line_start: 548, line_end: 548 }: " "
Token { kind: Lparen, char_start: 18515, char_end: 18516, byte_start: 18516, byte_end: 18517, column_start: 8, column_end: 9, line_start: 548, line_end: 548 }: (
Token { kind: Text, char_start: 18516, char_end: 18517, byte_start: 18517, byte_end: 18518, column_start: 9, column_end: 10, line_start: 548, line_end: 548 }: 8
Token { kind: Space, char_start: 18517, char_end: 18518, byte_start: 18518, byte_end: 18519, column_start: 10, column_end: 11, line_start: 548, line_end: 548 }: " "
Token { kind: Text, char_start: 18518, char_end: 18522, byte_start: 18519, byte_end: 18523, column_start: 11, column_end: 15, line_start: 548, line_end: 548 }: July
Token { kind: Space, char_start: 18522, char_end: 18523, byte_start: 18523, byte_end: 18524, column_start: 15, column_end: 16, line_start: 548, line_end: 548 }: " "
Token { kind: Text, char_start: 18523, char_end: 18527, byte_start: 18524, byte_end: 18528, column_start: 16, column_end: 20, line_start: 548, line_end: 548 }: 2015
Token { kind: Rparen, char_start: 18527, char_end: 18528, byte_start: 18528, byte_end: 18529, column_start: 20, column_end: 21, line_start: 548, line_end: 548 }: )
Token { kind: Newline, char_start: 18528, char_end: 18529, byte_start: 18529, byte_end: 18530, column_start: 21, column_end: 1, line_start: 548, line_end: 549 }: "\n"
Token { kind: Newline, char_start: 18529, char_end: 18530, byte_start: 18530, byte_end: 18531, column_start: 1, column_end: 1, line_start: 549, line_end: 550 }: "\n"
Token { kind: Hyphen, char_start: 18530, char_end: 18531, byte_start: 18531, byte_end: 18532, column_start: 1, column_end: 2, line_start: 550, line_end: 550 }: -
Token { kind: Space, char_start: 18531, char_end: 18532, byte_start: 18532, byte_end: 18533, column_start: 2, column_end: 3, line_start: 550, line_end: 550 }: " "
Token { kind: Text, char_start: 18532, char_end: 18539, byte_start: 18533, byte_end: 18540, column_start: 3, column_end: 10, line_start: 550, line_end: 550 }: Initial
Token { kind: Space, char_start: 18539, char_end: 18540, byte_start: 18540, byte_end: 18541, column_start: 10, column_end: 11, line_start: 550, line_end: 550 }: " "
Token { kind: Text, char_start: 18540, char_end: 18548, byte_start: 18541, byte_end: 18549, column_start: 11, column_end: 19, line_start: 550, line_end: 550 }: release,
Token { kind: Space, char_start: 18548, char_end: 18549, byte_start: 18549, byte_end: 18550, column_start: 19, column_end: 20, line_start: 550, line_end: 550 }: " "
Token { kind: Text, char_start: 18549, char_end: 18558, byte_start: 18550, byte_end: 18559, column_start: 20, column_end: 29, line_start: 550, line_end: 550 }: extracted
Token { kind: Space, char_start: 18558, char_end: 18559, byte_start: 18559, byte_end: 18560, column_start: 29, column_end: 30, line_start: 550, line_end: 550 }: " "
Token { kind: Text, char_start: 18559, char_end: 18563, byte_start: 18560, byte_end: 18564, column_start: 30, column_end: 34, line_start: 550, line_end: 550 }: from
Token { kind: Space, char_start: 18563, char_end: 18564, byte_start: 18564, byte_end: 18565, column_start: 34, column_end: 35, line_start: 550, line_end: 550 }: " "
Token { kind: Text, char_start: 18564, char_end: 18566, byte_start: 18565, byte_end: 18567, column_start: 35, column_end: 37, line_start: 550, line_end: 550 }: my
Token { kind: Space, char_start: 18566, char_end: 18567, byte_start: 18567, byte_end: 18568, column_start: 37, column_end: 38, line_start: 550, line_end: 550 }: " "
Token { kind: Text, char_start: 18567, char_end: 18575, byte_start: 18568, byte_end: 18576, column_start: 38, column_end: 46, line_start: 550, line_end: 550 }: dotfiles
Token { kind: Newline, char_start: 18575, char_end: 18576, byte_start: 18576, byte_end: 18577, column_start: 46, column_end: 1, line_start: 550, line_end: 551 }: "\n"
Token { kind: Space, char_start: 18576, char_end: 18578, byte_start: 18577, byte_end: 18579, column_start: 1, column_end: 3, line_start: 551, line_end: 551 }: "  "
Token { kind: Lparen, char_start: 18578, char_end: 18579, byte_start: 18579, byte_end: 18580, column_start: 3, column_end: 4, line_start: 551, line_end: 551 }: (
Token { kind: Text, char_start: 18579, char_end: 18613, byte_start: 18580, byte_end: 18614, column_start: 4, column_end: 38, line_start: 551, line_end: 551 }: https://github.com/wincent/wincent
Token { kind: Rparen, char_start: 18613, char_end: 18614, byte_start: 18614, byte_end: 18615, column_start: 38, column_end: 39, line_start: 551, line_end: 551 }: )
Token { kind: Text, char_start: 18614, char_end: 18615, byte_start: 18615, byte_end: 18616, column_start: 39, column_end: 40, line_start: 551, line_end: 551 }: .
Token { kind: Newline, char_start: 18615, char_end: 18616, byte_start: 18616, byte_end: 18617, column_start: 40, column_end: 1, line_start: 551, line_end: 552 }: "\n"
Token { kind: Newline, char_start: 18616, char_end: 18617, byte_start: 18617, byte_end: 18618, column_start: 1, column_end: 1, line_start: 552, line_end: 553 }: "\n"
Token { kind: At, char_start: 18617, char_end: 18618, byte_start: 18618, byte_end: 18619, column_start: 1, column_end: 2, line_start: 553, line_end: 553 }: @
Token { kind: Text, char_start: 18618, char_end: 18624, byte_start: 18619, byte_end: 18625, column_start: 2, column_end: 8, line_start: 553, line_end: 553 }: option
Token { kind: Space, char_start: 18624, char_end: 18625, byte_start: 18625, byte_end: 18626, column_start: 8, column_end: 9, line_start: 553, line_end: 553 }: " "
Token { kind: Text, char_start: 18625, char_end: 18639, byte_start: 18626, byte_end: 18640, column_start: 9, column_end: 23, line_start: 553, line_end: 553 }: g:FerretLoaded
Token { kind: Space, char_start: 18639, char_end: 18640, byte_start: 18640, byte_end: 18641, column_start: 23, column_end: 24, line_start: 553, line_end: 553 }: " "
Token { kind: Text, char_start: 18640, char_end: 18643, byte_start: 18641, byte_end: 18644, column_start: 24, column_end: 27, line_start: 553, line_end: 553 }: any
Token { kind: Newline, char_start: 18643, char_end: 18644, byte_start: 18644, byte_end: 18645, column_start: 27, column_end: 1, line_start: 553, line_end: 554 }: "\n"
Token { kind: Newline, char_start: 18644, char_end: 18645, byte_start: 18645, byte_end: 18646, column_start: 1, column_end: 1, line_start: 554, line_end: 555 }: "\n"
Token { kind: Text, char_start: 18645, char_end: 18647, byte_start: 18646, byte_end: 18648, column_start: 1, column_end: 3, line_start: 555, line_end: 555 }: To
Token { kind: Space, char_start: 18647, char_end: 18648, byte_start: 18648, byte_end: 18649, column_start: 3, column_end: 4, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18648, char_end: 18655, byte_start: 18649, byte_end: 18656, column_start: 4, column_end: 11, line_start: 555, line_end: 555 }: prevent
Token { kind: Space, char_start: 18655, char_end: 18656, byte_start: 18656, byte_end: 18657, column_start: 11, column_end: 12, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18656, char_end: 18662, byte_start: 18657, byte_end: 18663, column_start: 12, column_end: 18, line_start: 555, line_end: 555 }: Ferret
Token { kind: Space, char_start: 18662, char_end: 18663, byte_start: 18663, byte_end: 18664, column_start: 18, column_end: 19, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18663, char_end: 18667, byte_start: 18664, byte_end: 18668, column_start: 19, column_end: 23, line_start: 555, line_end: 555 }: from
Token { kind: Space, char_start: 18667, char_end: 18668, byte_start: 18668, byte_end: 18669, column_start: 23, column_end: 24, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18668, char_end: 18673, byte_start: 18669, byte_end: 18674, column_start: 24, column_end: 29, line_start: 555, line_end: 555 }: being
Token { kind: Space, char_start: 18673, char_end: 18674, byte_start: 18674, byte_end: 18675, column_start: 29, column_end: 30, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18674, char_end: 18681, byte_start: 18675, byte_end: 18682, column_start: 30, column_end: 37, line_start: 555, line_end: 555 }: loaded,
Token { kind: Space, char_start: 18681, char_end: 18682, byte_start: 18682, byte_end: 18683, column_start: 37, column_end: 38, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18682, char_end: 18685, byte_start: 18683, byte_end: 18686, column_start: 38, column_end: 41, line_start: 555, line_end: 555 }: set
Token { kind: Space, char_start: 18685, char_end: 18686, byte_start: 18686, byte_end: 18687, column_start: 41, column_end: 42, line_start: 555, line_end: 555 }: " "
Token { kind: Bar, char_start: 18686, char_end: 18687, byte_start: 18687, byte_end: 18688, column_start: 42, column_end: 43, line_start: 555, line_end: 555 }: |
Token { kind: Text, char_start: 18687, char_end: 18701, byte_start: 18688, byte_end: 18702, column_start: 43, column_end: 57, line_start: 555, line_end: 555 }: g:FerretLoaded
Token { kind: Bar, char_start: 18701, char_end: 18702, byte_start: 18702, byte_end: 18703, column_start: 57, column_end: 58, line_start: 555, line_end: 555 }: |
Token { kind: Space, char_start: 18702, char_end: 18703, byte_start: 18703, byte_end: 18704, column_start: 58, column_end: 59, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18703, char_end: 18705, byte_start: 18704, byte_end: 18706, column_start: 59, column_end: 61, line_start: 555, line_end: 555 }: to
Token { kind: Space, char_start: 18705, char_end: 18706, byte_start: 18706, byte_end: 18707, column_start: 61, column_end: 62, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18706, char_end: 18709, byte_start: 18707, byte_end: 18710, column_start: 62, column_end: 65, line_start: 555, line_end: 555 }: any
Token { kind: Space, char_start: 18709, char_end: 18710, byte_start: 18710, byte_end: 18711, column_start: 65, column_end: 66, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18710, char_end: 18715, byte_start: 18711, byte_end: 18716, column_start: 66, column_end: 71, line_start: 555, line_end: 555 }: value
Token { kind: Space, char_start: 18715, char_end: 18716, byte_start: 18716, byte_end: 18717, column_start: 71, column_end: 72, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18716, char_end: 18718, byte_start: 18717, byte_end: 18719, column_start: 72, column_end: 74, line_start: 555, line_end: 555 }: in
Token { kind: Space, char_start: 18718, char_end: 18719, byte_start: 18719, byte_end: 18720, column_start: 74, column_end: 75, line_start: 555, line_end: 555 }: " "
Token { kind: Text, char_start: 18719, char_end: 18723, byte_start: 18720, byte_end: 18724, column_start: 75, column_end: 79, line_start: 555, line_end: 555 }: your
Token { kind: Newline, char_start: 18723, char_end: 18724, byte_start: 18724, byte_end: 18725, column_start: 79, column_end: 1, line_start: 555, line_end: 556 }: "\n"
Token { kind: Bar, char_start: 18724, char_end: 18725, byte_start: 18725, byte_end: 18726, column_start: 1, column_end: 2, line_start: 556, line_end: 556 }: |
Token { kind: Text, char_start: 18725, char_end: 18731, byte_start: 18726, byte_end: 18732, column_start: 2, column_end: 8, line_start: 556, line_end: 556 }: .vimrc
Token { kind: Bar, char_start: 18731, char_end: 18732, byte_start: 18732, byte_end: 18733, column_start: 8, column_end: 9, line_start: 556, line_end: 556 }: |
Token { kind: Text, char_start: 18732, char_end: 18733, byte_start: 18733, byte_end: 18734, column_start: 9, column_end: 10, line_start: 556, line_end: 556 }: .
Token { kind: Space, char_start: 18733, char_end: 18734, byte_start: 18734, byte_end: 18735, column_start: 10, column_end: 11, line_start: 556, line_end: 556 }: " "
Token { kind: Text, char_start: 18734, char_end: 18737, byte_start: 18735, byte_end: 18738, column_start: 11, column_end: 14, line_start: 556, line_end: 556 }: For
Token { kind: Space, char_start: 18737, char_end: 18738, byte_start: 18738, byte_end: 18739, column_start: 14, column_end: 15, line_start: 556, line_end: 556 }: " "
Token { kind: Text, char_start: 18738, char_end: 18746, byte_start: 18739, byte_end: 18747, column_start: 15, column_end: 23, line_start: 556, line_end: 556 }: example:
Token { kind: Newline, char_start: 18746, char_end: 18747, byte_start: 18747, byte_end: 18748, column_start: 23, column_end: 1, line_start: 556, line_end: 557 }: "\n"
Token { kind: Newline, char_start: 18747, char_end: 18748, byte_start: 18748, byte_end: 18749, column_start: 1, column_end: 1, line_start: 557, line_end: 558 }: "\n"
Token { kind: CodeFence, char_start: 18748, char_end: 18751, byte_start: 18749, byte_end: 18752, column_start: 1, column_end: 4, line_start: 558, line_end: 558 }: ```
Token { kind: Newline, char_start: 18751, char_end: 18752, byte_start: 18752, byte_end: 18753, column_start: 4, column_end: 1, line_start: 558, line_end: 559 }: "\n"
Token { kind: Text, char_start: 18752, char_end: 18755, byte_start: 18753, byte_end: 18756, column_start: 1, column_end: 4, line_start: 559, line_end: 559 }: let
Token { kind: Space, char_start: 18755, char_end: 18756, byte_start: 18756, byte_end: 18757, column_start: 4, column_end: 5, line_start: 559, line_end: 559 }: " "
Token { kind: Text, char_start: 18756, char_end: 18772, byte_start: 18757, byte_end: 18773, column_start: 5, column_end: 21, line_start: 559, line_end: 559 }: g:FerretLoaded=1
Token { kind: Newline, char_start: 18772, char_end: 18773, byte_start: 18773, byte_end: 18774, column_start: 21, column_end: 1, line_start: 559, line_end: 560 }: "\n"
Token { kind: CodeFence, char_start: 18773, char_end: 18776, byte_start: 18774, byte_end: 18777, column_start: 1, column_end: 4, line_start: 560, line_end: 560 }: ```
Token { kind: Newline, char_start: 18776, char_end: 18777, byte_start: 18777, byte_end: 18778, column_start: 4, column_end: 1, line_start: 560, line_end: 561 }: "\n"
Token { kind: Newline, char_start: 18777, char_end: 18778, byte_start: 18778, byte_end: 18779, column_start: 1, column_end: 1, line_start: 561, line_end: 562 }: "\n"
Token { kind: At, char_start: 18778, char_end: 18779, byte_start: 18779, byte_end: 18780, column_start: 1, column_end: 2, line_start: 562, line_end: 562 }: @
Token { kind: Text, char_start: 18779, char_end: 18785, byte_start: 18780, byte_end: 18786, column_start: 2, column_end: 8, line_start: 562, line_end: 562 }: option
Token { kind: Space, char_start: 18785, char_end: 18786, byte_start: 18786, byte_end: 18787, column_start: 8, column_end: 9, line_start: 562, line_end: 562 }: " "
Token { kind: Text, char_start: 18786, char_end: 18802, byte_start: 18787, byte_end: 18803, column_start: 9, column_end: 25, line_start: 562, line_end: 562 }: g:FerretLazyInit
Token { kind: Space, char_start: 18802, char_end: 18803, byte_start: 18803, byte_end: 18804, column_start: 25, column_end: 26, line_start: 562, line_end: 562 }: " "
Token { kind: Text, char_start: 18803, char_end: 18810, byte_start: 18804, byte_end: 18811, column_start: 26, column_end: 33, line_start: 562, line_end: 562 }: boolean
Token { kind: Space, char_start: 18810, char_end: 18811, byte_start: 18811, byte_end: 18812, column_start: 33, column_end: 34, line_start: 562, line_end: 562 }: " "
Token { kind: Text, char_start: 18811, char_end: 18812, byte_start: 18812, byte_end: 18813, column_start: 34, column_end: 35, line_start: 562, line_end: 562 }: 1
Token { kind: Newline, char_start: 18812, char_end: 18813, byte_start: 18813, byte_end: 18814, column_start: 35, column_end: 1, line_start: 562, line_end: 563 }: "\n"
Token { kind: Newline, char_start: 18813, char_end: 18814, byte_start: 18814, byte_end: 18815, column_start: 1, column_end: 1, line_start: 563, line_end: 564 }: "\n"
Token { kind: Text, char_start: 18814, char_end: 18816, byte_start: 18815, byte_end: 18817, column_start: 1, column_end: 3, line_start: 564, line_end: 564 }: In
Token { kind: Space, char_start: 18816, char_end: 18817, byte_start: 18817, byte_end: 18818, column_start: 3, column_end: 4, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18817, char_end: 18822, byte_start: 18818, byte_end: 18823, column_start: 4, column_end: 9, line_start: 564, line_end: 564 }: order
Token { kind: Space, char_start: 18822, char_end: 18823, byte_start: 18823, byte_end: 18824, column_start: 9, column_end: 10, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18823, char_end: 18825, byte_start: 18824, byte_end: 18826, column_start: 10, column_end: 12, line_start: 564, line_end: 564 }: to
Token { kind: Space, char_start: 18825, char_end: 18826, byte_start: 18826, byte_end: 18827, column_start: 12, column_end: 13, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18826, char_end: 18834, byte_start: 18827, byte_end: 18835, column_start: 13, column_end: 21, line_start: 564, line_end: 564 }: minimize
Token { kind: Space, char_start: 18834, char_end: 18835, byte_start: 18835, byte_end: 18836, column_start: 21, column_end: 22, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18835, char_end: 18841, byte_start: 18836, byte_end: 18842, column_start: 22, column_end: 28, line_start: 564, line_end: 564 }: impact
Token { kind: Space, char_start: 18841, char_end: 18842, byte_start: 18842, byte_end: 18843, column_start: 28, column_end: 29, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18842, char_end: 18844, byte_start: 18843, byte_end: 18845, column_start: 29, column_end: 31, line_start: 564, line_end: 564 }: on
Token { kind: Space, char_start: 18844, char_end: 18845, byte_start: 18845, byte_end: 18846, column_start: 31, column_end: 32, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18845, char_end: 18848, byte_start: 18846, byte_end: 18849, column_start: 32, column_end: 35, line_start: 564, line_end: 564 }: Vim
Token { kind: Space, char_start: 18848, char_end: 18849, byte_start: 18849, byte_end: 18850, column_start: 35, column_end: 36, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18849, char_end: 18854, byte_start: 18850, byte_end: 18855, column_start: 36, column_end: 41, line_start: 564, line_end: 564 }: start
Token { kind: Hyphen, char_start: 18854, char_end: 18855, byte_start: 18855, byte_end: 18856, column_start: 41, column_end: 42, line_start: 564, line_end: 564 }: -
Token { kind: Text, char_start: 18855, char_end: 18857, byte_start: 18856, byte_end: 18858, column_start: 42, column_end: 44, line_start: 564, line_end: 564 }: up
Token { kind: Space, char_start: 18857, char_end: 18858, byte_start: 18858, byte_end: 18859, column_start: 44, column_end: 45, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18858, char_end: 18862, byte_start: 18859, byte_end: 18863, column_start: 45, column_end: 49, line_start: 564, line_end: 564 }: time
Token { kind: Space, char_start: 18862, char_end: 18863, byte_start: 18863, byte_end: 18864, column_start: 49, column_end: 50, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18863, char_end: 18869, byte_start: 18864, byte_end: 18870, column_start: 50, column_end: 56, line_start: 564, line_end: 564 }: Ferret
Token { kind: Space, char_start: 18869, char_end: 18870, byte_start: 18870, byte_end: 18871, column_start: 56, column_end: 57, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18870, char_end: 18874, byte_start: 18871, byte_end: 18875, column_start: 57, column_end: 61, line_start: 564, line_end: 564 }: will
Token { kind: Space, char_start: 18874, char_end: 18875, byte_start: 18875, byte_end: 18876, column_start: 61, column_end: 62, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18875, char_end: 18885, byte_start: 18876, byte_end: 18886, column_start: 62, column_end: 72, line_start: 564, line_end: 564 }: initialize
Token { kind: Space, char_start: 18885, char_end: 18886, byte_start: 18886, byte_end: 18887, column_start: 72, column_end: 73, line_start: 564, line_end: 564 }: " "
Token { kind: Text, char_start: 18886, char_end: 18892, byte_start: 18887, byte_end: 18893, column_start: 73, column_end: 79, line_start: 564, line_end: 564 }: itself
Token { kind: Newline, char_start: 18892, char_end: 18893, byte_start: 18893, byte_end: 18894, column_start: 79, column_end: 1, line_start: 564, line_end: 565 }: "\n"
Token { kind: Text, char_start: 18893, char_end: 18899, byte_start: 18894, byte_end: 18900, column_start: 1, column_end: 7, line_start: 565, line_end: 565 }: lazily
Token { kind: Space, char_start: 18899, char_end: 18900, byte_start: 18900, byte_end: 18901, column_start: 7, column_end: 8, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18900, char_end: 18902, byte_start: 18901, byte_end: 18903, column_start: 8, column_end: 10, line_start: 565, line_end: 565 }: on
Token { kind: Space, char_start: 18902, char_end: 18903, byte_start: 18903, byte_end: 18904, column_start: 10, column_end: 11, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18903, char_end: 18908, byte_start: 18904, byte_end: 18909, column_start: 11, column_end: 16, line_start: 565, line_end: 565 }: first
Token { kind: Space, char_start: 18908, char_end: 18909, byte_start: 18909, byte_end: 18910, column_start: 16, column_end: 17, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18909, char_end: 18912, byte_start: 18910, byte_end: 18913, column_start: 17, column_end: 20, line_start: 565, line_end: 565 }: use
Token { kind: Space, char_start: 18912, char_end: 18913, byte_start: 18913, byte_end: 18914, column_start: 20, column_end: 21, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18913, char_end: 18915, byte_start: 18914, byte_end: 18916, column_start: 21, column_end: 23, line_start: 565, line_end: 565 }: by
Token { kind: Space, char_start: 18915, char_end: 18916, byte_start: 18916, byte_end: 18917, column_start: 23, column_end: 24, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18916, char_end: 18924, byte_start: 18917, byte_end: 18925, column_start: 24, column_end: 32, line_start: 565, line_end: 565 }: default.
Token { kind: Space, char_start: 18924, char_end: 18925, byte_start: 18925, byte_end: 18926, column_start: 32, column_end: 33, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18925, char_end: 18927, byte_start: 18926, byte_end: 18928, column_start: 33, column_end: 35, line_start: 565, line_end: 565 }: If
Token { kind: Space, char_start: 18927, char_end: 18928, byte_start: 18928, byte_end: 18929, column_start: 35, column_end: 36, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18928, char_end: 18931, byte_start: 18929, byte_end: 18932, column_start: 36, column_end: 39, line_start: 565, line_end: 565 }: you
Token { kind: Space, char_start: 18931, char_end: 18932, byte_start: 18932, byte_end: 18933, column_start: 39, column_end: 40, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18932, char_end: 18936, byte_start: 18933, byte_end: 18937, column_start: 40, column_end: 44, line_start: 565, line_end: 565 }: wish
Token { kind: Space, char_start: 18936, char_end: 18937, byte_start: 18937, byte_end: 18938, column_start: 44, column_end: 45, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18937, char_end: 18939, byte_start: 18938, byte_end: 18940, column_start: 45, column_end: 47, line_start: 565, line_end: 565 }: to
Token { kind: Space, char_start: 18939, char_end: 18940, byte_start: 18940, byte_end: 18941, column_start: 47, column_end: 48, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18940, char_end: 18945, byte_start: 18941, byte_end: 18946, column_start: 48, column_end: 53, line_start: 565, line_end: 565 }: force
Token { kind: Space, char_start: 18945, char_end: 18946, byte_start: 18946, byte_end: 18947, column_start: 53, column_end: 54, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18946, char_end: 18955, byte_start: 18947, byte_end: 18956, column_start: 54, column_end: 63, line_start: 565, line_end: 565 }: immediate
Token { kind: Space, char_start: 18955, char_end: 18956, byte_start: 18956, byte_end: 18957, column_start: 63, column_end: 64, line_start: 565, line_end: 565 }: " "
Token { kind: Text, char_start: 18956, char_end: 18970, byte_start: 18957, byte_end: 18971, column_start: 64, column_end: 78, line_start: 565, line_end: 565 }: initialization
Token { kind: Newline, char_start: 18970, char_end: 18971, byte_start: 18971, byte_end: 18972, column_start: 78, column_end: 1, line_start: 565, line_end: 566 }: "\n"
Token { kind: Lparen, char_start: 18971, char_end: 18972, byte_start: 18972, byte_end: 18973, column_start: 1, column_end: 2, line_start: 566, line_end: 566 }: (
Token { kind: Text, char_start: 18972, char_end: 18975, byte_start: 18973, byte_end: 18976, column_start: 2, column_end: 5, line_start: 566, line_end: 566 }: for
Token { kind: Space, char_start: 18975, char_end: 18976, byte_start: 18976, byte_end: 18977, column_start: 5, column_end: 6, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 18976, char_end: 18984, byte_start: 18977, byte_end: 18985, column_start: 6, column_end: 14, line_start: 566, line_end: 566 }: example,
Token { kind: Space, char_start: 18984, char_end: 18985, byte_start: 18985, byte_end: 18986, column_start: 14, column_end: 15, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 18985, char_end: 18987, byte_start: 18986, byte_end: 18988, column_start: 15, column_end: 17, line_start: 566, line_end: 566 }: to
Token { kind: Space, char_start: 18987, char_end: 18988, byte_start: 18988, byte_end: 18989, column_start: 17, column_end: 18, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 18988, char_end: 18993, byte_start: 18989, byte_end: 18994, column_start: 18, column_end: 23, line_start: 566, line_end: 566 }: cause
Token { kind: Space, char_start: 18993, char_end: 18994, byte_start: 18994, byte_end: 18995, column_start: 23, column_end: 24, line_start: 566, line_end: 566 }: " "
Token { kind: Bar, char_start: 18994, char_end: 18995, byte_start: 18995, byte_end: 18996, column_start: 24, column_end: 25, line_start: 566, line_end: 566 }: |
Token { kind: Text, char_start: 18995, char_end: 19004, byte_start: 18996, byte_end: 19005, column_start: 25, column_end: 34, line_start: 566, line_end: 566 }: 'grepprg'
Token { kind: Bar, char_start: 19004, char_end: 19005, byte_start: 19005, byte_end: 19006, column_start: 34, column_end: 35, line_start: 566, line_end: 566 }: |
Token { kind: Space, char_start: 19005, char_end: 19006, byte_start: 19006, byte_end: 19007, column_start: 35, column_end: 36, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 19006, char_end: 19009, byte_start: 19007, byte_end: 19010, column_start: 36, column_end: 39, line_start: 566, line_end: 566 }: and
Token { kind: Space, char_start: 19009, char_end: 19010, byte_start: 19010, byte_end: 19011, column_start: 39, column_end: 40, line_start: 566, line_end: 566 }: " "
Token { kind: Bar, char_start: 19010, char_end: 19011, byte_start: 19011, byte_end: 19012, column_start: 40, column_end: 41, line_start: 566, line_end: 566 }: |
Token { kind: Text, char_start: 19011, char_end: 19023, byte_start: 19012, byte_end: 19024, column_start: 41, column_end: 53, line_start: 566, line_end: 566 }: 'grepformat'
Token { kind: Bar, char_start: 19023, char_end: 19024, byte_start: 19024, byte_end: 19025, column_start: 53, column_end: 54, line_start: 566, line_end: 566 }: |
Token { kind: Space, char_start: 19024, char_end: 19025, byte_start: 19025, byte_end: 19026, column_start: 54, column_end: 55, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 19025, char_end: 19027, byte_start: 19026, byte_end: 19028, column_start: 55, column_end: 57, line_start: 566, line_end: 566 }: to
Token { kind: Space, char_start: 19027, char_end: 19028, byte_start: 19028, byte_end: 19029, column_start: 57, column_end: 58, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 19028, char_end: 19030, byte_start: 19029, byte_end: 19031, column_start: 58, column_end: 60, line_start: 566, line_end: 566 }: be
Token { kind: Space, char_start: 19030, char_end: 19031, byte_start: 19031, byte_end: 19032, column_start: 60, column_end: 61, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 19031, char_end: 19034, byte_start: 19032, byte_end: 19035, column_start: 61, column_end: 64, line_start: 566, line_end: 566 }: set
Token { kind: Space, char_start: 19034, char_end: 19035, byte_start: 19035, byte_end: 19036, column_start: 64, column_end: 65, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 19035, char_end: 19037, byte_start: 19036, byte_end: 19038, column_start: 65, column_end: 67, line_start: 566, line_end: 566 }: as
Token { kind: Space, char_start: 19037, char_end: 19038, byte_start: 19038, byte_end: 19039, column_start: 67, column_end: 68, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 19038, char_end: 19042, byte_start: 19039, byte_end: 19043, column_start: 68, column_end: 72, line_start: 566, line_end: 566 }: soon
Token { kind: Space, char_start: 19042, char_end: 19043, byte_start: 19043, byte_end: 19044, column_start: 72, column_end: 73, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 19043, char_end: 19045, byte_start: 19044, byte_end: 19046, column_start: 73, column_end: 75, line_start: 566, line_end: 566 }: as
Token { kind: Space, char_start: 19045, char_end: 19046, byte_start: 19046, byte_end: 19047, column_start: 75, column_end: 76, line_start: 566, line_end: 566 }: " "
Token { kind: Text, char_start: 19046, char_end: 19049, byte_start: 19047, byte_end: 19050, column_start: 76, column_end: 79, line_start: 566, line_end: 566 }: Vim
Token { kind: Newline, char_start: 19049, char_end: 19050, byte_start: 19050, byte_end: 19051, column_start: 79, column_end: 1, line_start: 566, line_end: 567 }: "\n"
Token { kind: Text, char_start: 19050, char_end: 19058, byte_start: 19051, byte_end: 19059, column_start: 1, column_end: 9, line_start: 567, line_end: 567 }: launches
Token { kind: Rparen, char_start: 19058, char_end: 19059, byte_start: 19059, byte_end: 19060, column_start: 9, column_end: 10, line_start: 567, line_end: 567 }: )
Token { kind: Text, char_start: 19059, char_end: 19060, byte_start: 19060, byte_end: 19061, column_start: 10, column_end: 11, line_start: 567, line_end: 567 }: ,
Token { kind: Space, char_start: 19060, char_end: 19061, byte_start: 19061, byte_end: 19062, column_start: 11, column_end: 12, line_start: 567, line_end: 567 }: " "
Token { kind: Text, char_start: 19061, char_end: 19065, byte_start: 19062, byte_end: 19066, column_start: 12, column_end: 16, line_start: 567, line_end: 567 }: then
Token { kind: Space, char_start: 19065, char_end: 19066, byte_start: 19066, byte_end: 19067, column_start: 16, column_end: 17, line_start: 567, line_end: 567 }: " "
Token { kind: Text, char_start: 19066, char_end: 19069, byte_start: 19067, byte_end: 19070, column_start: 17, column_end: 20, line_start: 567, line_end: 567 }: set
Token { kind: Space, char_start: 19069, char_end: 19070, byte_start: 19070, byte_end: 19071, column_start: 20, column_end: 21, line_start: 567, line_end: 567 }: " "
Token { kind: Bar, char_start: 19070, char_end: 19071, byte_start: 19071, byte_end: 19072, column_start: 21, column_end: 22, line_start: 567, line_end: 567 }: |
Token { kind: Text, char_start: 19071, char_end: 19087, byte_start: 19072, byte_end: 19088, column_start: 22, column_end: 38, line_start: 567, line_end: 567 }: g:FerretLazyInit
Token { kind: Bar, char_start: 19087, char_end: 19088, byte_start: 19088, byte_end: 19089, column_start: 38, column_end: 39, line_start: 567, line_end: 567 }: |
Token { kind: Space, char_start: 19088, char_end: 19089, byte_start: 19089, byte_end: 19090, column_start: 39, column_end: 40, line_start: 567, line_end: 567 }: " "
Token { kind: Text, char_start: 19089, char_end: 19091, byte_start: 19090, byte_end: 19092, column_start: 40, column_end: 42, line_start: 567, line_end: 567 }: to
Token { kind: Space, char_start: 19091, char_end: 19092, byte_start: 19092, byte_end: 19093, column_start: 42, column_end: 43, line_start: 567, line_end: 567 }: " "
Token { kind: Text, char_start: 19092, char_end: 19093, byte_start: 19093, byte_end: 19094, column_start: 43, column_end: 44, line_start: 567, line_end: 567 }: 0
Token { kind: Space, char_start: 19093, char_end: 19094, byte_start: 19094, byte_end: 19095, column_start: 44, column_end: 45, line_start: 567, line_end: 567 }: " "
Token { kind: Text, char_start: 19094, char_end: 19096, byte_start: 19095, byte_end: 19097, column_start: 45, column_end: 47, line_start: 567, line_end: 567 }: in
Token { kind: Space, char_start: 19096, char_end: 19097, byte_start: 19097, byte_end: 19098, column_start: 47, column_end: 48, line_start: 567, line_end: 567 }: " "
Token { kind: Text, char_start: 19097, char_end: 19101, byte_start: 19098, byte_end: 19102, column_start: 48, column_end: 52, line_start: 567, line_end: 567 }: your
Token { kind: Space, char_start: 19101, char_end: 19102, byte_start: 19102, byte_end: 19103, column_start: 52, column_end: 53, line_start: 567, line_end: 567 }: " "
Token { kind: Bar, char_start: 19102, char_end: 19103, byte_start: 19103, byte_end: 19104, column_start: 53, column_end: 54, line_start: 567, line_end: 567 }: |
Token { kind: Text, char_start: 19103, char_end: 19109, byte_start: 19104, byte_end: 19110, column_start: 54, column_end: 60, line_start: 567, line_end: 567 }: .vimrc
Token { kind: Bar, char_start: 19109, char_end: 19110, byte_start: 19110, byte_end: 19111, column_start: 60, column_end: 61, line_start: 567, line_end: 567 }: |
Token { kind: Text, char_start: 19110, char_end: 19111, byte_start: 19111, byte_end: 19112, column_start: 61, column_end: 62, line_start: 567, line_end: 567 }: :
Token { kind: Newline, char_start: 19111, char_end: 19112, byte_start: 19112, byte_end: 19113, column_start: 62, column_end: 1, line_start: 567, line_end: 568 }: "\n"
Token { kind: Newline, char_start: 19112, char_end: 19113, byte_start: 19113, byte_end: 19114, column_start: 1, column_end: 1, line_start: 568, line_end: 569 }: "\n"
Token { kind: CodeFence, char_start: 19113, char_end: 19116, byte_start: 19114, byte_end: 19117, column_start: 1, column_end: 4, line_start: 569, line_end: 569 }: ```
Token { kind: Newline, char_start: 19116, char_end: 19117, byte_start: 19117, byte_end: 19118, column_start: 4, column_end: 1, line_start: 569, line_end: 570 }: "\n"
Token { kind: Text, char_start: 19117, char_end: 19120, byte_start: 19118, byte_end: 19121, column_start: 1, column_end: 4, line_start: 570, line_end: 570 }: let
Token { kind: Space, char_start: 19120, char_end: 19121, byte_start: 19121, byte_end: 19122, column_start: 4, column_end: 5, line_start: 570, line_end: 570 }: " "
Token { kind: Text, char_start: 19121, char_end: 19139, byte_start: 19122, byte_end: 19140, column_start: 5, column_end: 23, line_start: 570, line_end: 570 }: g:FerretLazyInit=0
Token { kind: Newline, char_start: 19139, char_end: 19140, byte_start: 19140, byte_end: 19141, column_start: 23, column_end: 1, line_start: 570, line_end: 571 }: "\n"
Token { kind: CodeFence, char_start: 19140, char_end: 19143, byte_start: 19141, byte_end: 19144, column_start: 1, column_end: 4, line_start: 571, line_end: 571 }: ```
Token { kind: Newline, char_start: 19143, char_end: 19144, byte_start: 19144, byte_end: 19145, column_start: 4, column_end: 1, line_start: 571, line_end: 572 }: "\n"
Token { kind: Newline, char_start: 19144, char_end: 19145, byte_start: 19145, byte_end: 19146, column_start: 1, column_end: 1, line_start: 572, line_end: 573 }: "\n"
Token { kind: At, char_start: 19145, char_end: 19146, byte_start: 19146, byte_end: 19147, column_start: 1, column_end: 2, line_start: 573, line_end: 573 }: @
Token { kind: Text, char_start: 19146, char_end: 19152, byte_start: 19147, byte_end: 19153, column_start: 2, column_end: 8, line_start: 573, line_end: 573 }: option
Token { kind: Space, char_start: 19152, char_end: 19153, byte_start: 19153, byte_end: 19154, column_start: 8, column_end: 9, line_start: 573, line_end: 573 }: " "
Token { kind: Text, char_start: 19153, char_end: 19173, byte_start: 19154, byte_end: 19174, column_start: 9, column_end: 29, line_start: 573, line_end: 573 }: g:FerretCommandNames
Token { kind: Space, char_start: 19173, char_end: 19174, byte_start: 19174, byte_end: 19175, column_start: 29, column_end: 30, line_start: 573, line_end: 573 }: " "
Token { kind: Text, char_start: 19174, char_end: 19184, byte_start: 19175, byte_end: 19185, column_start: 30, column_end: 40, line_start: 573, line_end: 573 }: dictionary
Token { kind: Space, char_start: 19184, char_end: 19185, byte_start: 19185, byte_end: 19186, column_start: 40, column_end: 41, line_start: 573, line_end: 573 }: " "
Token { kind: Text, char_start: 19185, char_end: 19187, byte_start: 19186, byte_end: 19188, column_start: 41, column_end: 43, line_start: 573, line_end: 573 }: {}
Token { kind: Newline, char_start: 19187, char_end: 19188, byte_start: 19188, byte_end: 19189, column_start: 43, column_end: 1, line_start: 573, line_end: 574 }: "\n"
Token { kind: Newline, char_start: 19188, char_end: 19189, byte_start: 19189, byte_end: 19190, column_start: 1, column_end: 1, line_start: 574, line_end: 575 }: "\n"
Token { kind: Text, char_start: 19189, char_end: 19197, byte_start: 19190, byte_end: 19198, column_start: 1, column_end: 9, line_start: 575, line_end: 575 }: Ferret's
Token { kind: Space, char_start: 19197, char_end: 19198, byte_start: 19198, byte_end: 19199, column_start: 9, column_end: 10, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19198, char_end: 19205, byte_start: 19199, byte_end: 19206, column_start: 10, column_end: 17, line_start: 575, line_end: 575 }: command
Token { kind: Space, char_start: 19205, char_end: 19206, byte_start: 19206, byte_end: 19207, column_start: 17, column_end: 18, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19206, char_end: 19211, byte_start: 19207, byte_end: 19212, column_start: 18, column_end: 23, line_start: 575, line_end: 575 }: names
Token { kind: Space, char_start: 19211, char_end: 19212, byte_start: 19212, byte_end: 19213, column_start: 23, column_end: 24, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19212, char_end: 19215, byte_start: 19213, byte_end: 19216, column_start: 24, column_end: 27, line_start: 575, line_end: 575 }: are
Token { kind: Space, char_start: 19215, char_end: 19216, byte_start: 19216, byte_end: 19217, column_start: 27, column_end: 28, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19216, char_end: 19222, byte_start: 19217, byte_end: 19223, column_start: 28, column_end: 34, line_start: 575, line_end: 575 }: mostly
Token { kind: Space, char_start: 19222, char_end: 19223, byte_start: 19223, byte_end: 19224, column_start: 34, column_end: 35, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19223, char_end: 19229, byte_start: 19224, byte_end: 19230, column_start: 35, column_end: 41, line_start: 575, line_end: 575 }: chosen
Token { kind: Space, char_start: 19229, char_end: 19230, byte_start: 19230, byte_end: 19231, column_start: 41, column_end: 42, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19230, char_end: 19237, byte_start: 19231, byte_end: 19238, column_start: 42, column_end: 49, line_start: 575, line_end: 575 }: because
Token { kind: Space, char_start: 19237, char_end: 19238, byte_start: 19238, byte_end: 19239, column_start: 49, column_end: 50, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19238, char_end: 19241, byte_start: 19239, byte_end: 19242, column_start: 50, column_end: 53, line_start: 575, line_end: 575 }: the
Token { kind: Space, char_start: 19241, char_end: 19242, byte_start: 19242, byte_end: 19243, column_start: 53, column_end: 54, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19242, char_end: 19248, byte_start: 19243, byte_end: 19249, column_start: 54, column_end: 60, line_start: 575, line_end: 575 }: plugin
Token { kind: Space, char_start: 19248, char_end: 19249, byte_start: 19249, byte_end: 19250, column_start: 60, column_end: 61, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19249, char_end: 19256, byte_start: 19250, byte_end: 19257, column_start: 61, column_end: 68, line_start: 575, line_end: 575 }: started
Token { kind: Space, char_start: 19256, char_end: 19257, byte_start: 19257, byte_end: 19258, column_start: 68, column_end: 69, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19257, char_end: 19259, byte_start: 19258, byte_end: 19260, column_start: 69, column_end: 71, line_start: 575, line_end: 575 }: as
Token { kind: Space, char_start: 19259, char_end: 19260, byte_start: 19260, byte_end: 19261, column_start: 71, column_end: 72, line_start: 575, line_end: 575 }: " "
Token { kind: Text, char_start: 19260, char_end: 19261, byte_start: 19261, byte_end: 19262, column_start: 72, column_end: 73, line_start: 575, line_end: 575 }: a
Token { kind: Newline, char_start: 19261, char_end: 19262, byte_start: 19262, byte_end: 19263, column_start: 73, column_end: 1, line_start: 575, line_end: 576 }: "\n"
Token { kind: Text, char_start: 19262, char_end: 19268, byte_start: 19263, byte_end: 19269, column_start: 1, column_end: 7, line_start: 576, line_end: 576 }: simple
Token { kind: Space, char_start: 19268, char_end: 19269, byte_start: 19269, byte_end: 19270, column_start: 7, column_end: 8, line_start: 576, line_end: 576 }: " "
Token { kind: Backtick, char_start: 19269, char_end: 19270, byte_start: 19270, byte_end: 19271, column_start: 8, column_end: 9, line_start: 576, line_end: 576 }: `
Token { kind: Text, char_start: 19270, char_end: 19273, byte_start: 19271, byte_end: 19274, column_start: 9, column_end: 12, line_start: 576, line_end: 576 }: ack
Token { kind: Backtick, char_start: 19273, char_end: 19274, byte_start: 19274, byte_end: 19275, column_start: 12, column_end: 13, line_start: 576, line_end: 576 }: `
Token { kind: Space, char_start: 19274, char_end: 19275, byte_start: 19275, byte_end: 19276, column_start: 13, column_end: 14, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19275, char_end: 19283, byte_start: 19276, byte_end: 19284, column_start: 14, column_end: 22, line_start: 576, line_end: 576 }: wrapper.
Token { kind: Space, char_start: 19283, char_end: 19284, byte_start: 19284, byte_end: 19285, column_start: 22, column_end: 23, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19284, char_end: 19286, byte_start: 19285, byte_end: 19287, column_start: 23, column_end: 25, line_start: 576, line_end: 576 }: As
Token { kind: Space, char_start: 19286, char_end: 19287, byte_start: 19287, byte_end: 19288, column_start: 25, column_end: 26, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19287, char_end: 19294, byte_start: 19288, byte_end: 19295, column_start: 26, column_end: 33, line_start: 576, line_end: 576 }: related
Token { kind: Space, char_start: 19294, char_end: 19295, byte_start: 19295, byte_end: 19296, column_start: 33, column_end: 34, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19295, char_end: 19303, byte_start: 19296, byte_end: 19304, column_start: 34, column_end: 42, line_start: 576, line_end: 576 }: commands
Token { kind: Space, char_start: 19303, char_end: 19304, byte_start: 19304, byte_end: 19305, column_start: 42, column_end: 43, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19304, char_end: 19308, byte_start: 19305, byte_end: 19309, column_start: 43, column_end: 47, line_start: 576, line_end: 576 }: were
Token { kind: Space, char_start: 19308, char_end: 19309, byte_start: 19309, byte_end: 19310, column_start: 47, column_end: 48, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19309, char_end: 19314, byte_start: 19310, byte_end: 19315, column_start: 48, column_end: 53, line_start: 576, line_end: 576 }: added
Token { kind: Space, char_start: 19314, char_end: 19315, byte_start: 19315, byte_end: 19316, column_start: 53, column_end: 54, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19315, char_end: 19319, byte_start: 19316, byte_end: 19320, column_start: 54, column_end: 58, line_start: 576, line_end: 576 }: over
Token { kind: Space, char_start: 19319, char_end: 19320, byte_start: 19320, byte_end: 19321, column_start: 58, column_end: 59, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19320, char_end: 19325, byte_start: 19321, byte_end: 19326, column_start: 59, column_end: 64, line_start: 576, line_end: 576 }: time,
Token { kind: Space, char_start: 19325, char_end: 19326, byte_start: 19326, byte_end: 19327, column_start: 64, column_end: 65, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19326, char_end: 19327, byte_start: 19327, byte_end: 19328, column_start: 65, column_end: 66, line_start: 576, line_end: 576 }: a
Token { kind: Space, char_start: 19327, char_end: 19328, byte_start: 19328, byte_end: 19329, column_start: 66, column_end: 67, line_start: 576, line_end: 576 }: " "
Token { kind: Text, char_start: 19328, char_end: 19335, byte_start: 19329, byte_end: 19336, column_start: 67, column_end: 74, line_start: 576, line_end: 576 }: pattern
Token { kind: Newline, char_start: 19335, char_end: 19336, byte_start: 19336, byte_end: 19337, column_start: 74, column_end: 1, line_start: 576, line_end: 577 }: "\n"
Token { kind: Text, char_start: 19336, char_end: 19345, byte_start: 19337, byte_end: 19346, column_start: 1, column_end: 10, line_start: 577, line_end: 577 }: involving
Token { kind: Space, char_start: 19345, char_end: 19346, byte_start: 19346, byte_end: 19347, column_start: 10, column_end: 11, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19346, char_end: 19352, byte_start: 19347, byte_end: 19353, column_start: 11, column_end: 17, line_start: 577, line_end: 577 }: common
Token { kind: Space, char_start: 19352, char_end: 19353, byte_start: 19353, byte_end: 19354, column_start: 17, column_end: 18, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19353, char_end: 19361, byte_start: 19354, byte_end: 19362, column_start: 18, column_end: 26, line_start: 577, line_end: 577 }: suffixes
Token { kind: Space, char_start: 19361, char_end: 19362, byte_start: 19362, byte_end: 19363, column_start: 26, column_end: 27, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19362, char_end: 19370, byte_start: 19363, byte_end: 19371, column_start: 27, column_end: 35, line_start: 577, line_end: 577 }: evolved,
Token { kind: Space, char_start: 19370, char_end: 19371, byte_start: 19371, byte_end: 19372, column_start: 35, column_end: 36, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19371, char_end: 19373, byte_start: 19372, byte_end: 19374, column_start: 36, column_end: 38, line_start: 577, line_end: 577 }: to
Token { kind: Space, char_start: 19373, char_end: 19374, byte_start: 19374, byte_end: 19375, column_start: 38, column_end: 39, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19374, char_end: 19378, byte_start: 19375, byte_end: 19379, column_start: 39, column_end: 43, line_start: 577, line_end: 577 }: make
Token { kind: Space, char_start: 19378, char_end: 19379, byte_start: 19379, byte_end: 19380, column_start: 43, column_end: 44, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19379, char_end: 19382, byte_start: 19380, byte_end: 19383, column_start: 44, column_end: 47, line_start: 577, line_end: 577 }: the
Token { kind: Space, char_start: 19382, char_end: 19383, byte_start: 19383, byte_end: 19384, column_start: 47, column_end: 48, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19383, char_end: 19391, byte_start: 19384, byte_end: 19392, column_start: 48, column_end: 56, line_start: 577, line_end: 577 }: commands
Token { kind: Space, char_start: 19391, char_end: 19392, byte_start: 19392, byte_end: 19393, column_start: 56, column_end: 57, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19392, char_end: 19396, byte_start: 19393, byte_end: 19397, column_start: 57, column_end: 61, line_start: 577, line_end: 577 }: easy
Token { kind: Space, char_start: 19396, char_end: 19397, byte_start: 19397, byte_end: 19398, column_start: 61, column_end: 62, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19397, char_end: 19399, byte_start: 19398, byte_end: 19400, column_start: 62, column_end: 64, line_start: 577, line_end: 577 }: to
Token { kind: Space, char_start: 19399, char_end: 19400, byte_start: 19400, byte_end: 19401, column_start: 64, column_end: 65, line_start: 577, line_end: 577 }: " "
Token { kind: Text, char_start: 19400, char_end: 19408, byte_start: 19401, byte_end: 19409, column_start: 65, column_end: 73, line_start: 577, line_end: 577 }: remember
Token { kind: Newline, char_start: 19408, char_end: 19409, byte_start: 19409, byte_end: 19410, column_start: 73, column_end: 1, line_start: 577, line_end: 578 }: "\n"
Token { kind: Lparen, char_start: 19409, char_end: 19410, byte_start: 19410, byte_end: 19411, column_start: 1, column_end: 2, line_start: 578, line_end: 578 }: (
Token { kind: Text, char_start: 19410, char_end: 19414, byte_start: 19411, byte_end: 19415, column_start: 2, column_end: 6, line_start: 578, line_end: 578 }: even
Token { kind: Space, char_start: 19414, char_end: 19415, byte_start: 19415, byte_end: 19416, column_start: 6, column_end: 7, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19415, char_end: 19419, byte_start: 19416, byte_end: 19420, column_start: 7, column_end: 11, line_start: 578, line_end: 578 }: once
Token { kind: Space, char_start: 19419, char_end: 19420, byte_start: 19420, byte_end: 19421, column_start: 11, column_end: 12, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19420, char_end: 19426, byte_start: 19421, byte_end: 19427, column_start: 12, column_end: 18, line_start: 578, line_end: 578 }: Ferret
Token { kind: Space, char_start: 19426, char_end: 19427, byte_start: 19427, byte_end: 19428, column_start: 18, column_end: 19, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19427, char_end: 19434, byte_start: 19428, byte_end: 19435, column_start: 19, column_end: 26, line_start: 578, line_end: 578 }: started
Token { kind: Space, char_start: 19434, char_end: 19435, byte_start: 19435, byte_end: 19436, column_start: 26, column_end: 27, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19435, char_end: 19443, byte_start: 19436, byte_end: 19444, column_start: 27, column_end: 35, line_start: 578, line_end: 578 }: offering
Token { kind: Space, char_start: 19443, char_end: 19444, byte_start: 19444, byte_end: 19445, column_start: 35, column_end: 36, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19444, char_end: 19451, byte_start: 19445, byte_end: 19452, column_start: 36, column_end: 43, line_start: 578, line_end: 578 }: support
Token { kind: Space, char_start: 19451, char_end: 19452, byte_start: 19452, byte_end: 19453, column_start: 43, column_end: 44, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19452, char_end: 19455, byte_start: 19453, byte_end: 19456, column_start: 44, column_end: 47, line_start: 578, line_end: 578 }: for
Token { kind: Space, char_start: 19455, char_end: 19456, byte_start: 19456, byte_end: 19457, column_start: 47, column_end: 48, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19456, char_end: 19459, byte_start: 19457, byte_end: 19460, column_start: 48, column_end: 51, line_start: 578, line_end: 578 }: non
Token { kind: Hyphen, char_start: 19459, char_end: 19460, byte_start: 19460, byte_end: 19461, column_start: 51, column_end: 52, line_start: 578, line_end: 578 }: -
Token { kind: Backtick, char_start: 19460, char_end: 19461, byte_start: 19461, byte_end: 19462, column_start: 52, column_end: 53, line_start: 578, line_end: 578 }: `
Token { kind: Text, char_start: 19461, char_end: 19464, byte_start: 19462, byte_end: 19465, column_start: 53, column_end: 56, line_start: 578, line_end: 578 }: ack
Token { kind: Backtick, char_start: 19464, char_end: 19465, byte_start: 19465, byte_end: 19466, column_start: 56, column_end: 57, line_start: 578, line_end: 578 }: `
Token { kind: Space, char_start: 19465, char_end: 19466, byte_start: 19466, byte_end: 19467, column_start: 57, column_end: 58, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19466, char_end: 19472, byte_start: 19467, byte_end: 19473, column_start: 58, column_end: 64, line_start: 578, line_end: 578 }: tools,
Token { kind: Space, char_start: 19472, char_end: 19473, byte_start: 19473, byte_end: 19474, column_start: 64, column_end: 65, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19473, char_end: 19477, byte_start: 19474, byte_end: 19478, column_start: 65, column_end: 69, line_start: 578, line_end: 578 }: such
Token { kind: Space, char_start: 19477, char_end: 19478, byte_start: 19478, byte_end: 19479, column_start: 69, column_end: 70, line_start: 578, line_end: 578 }: " "
Token { kind: Text, char_start: 19478, char_end: 19480, byte_start: 19479, byte_end: 19481, column_start: 70, column_end: 72, line_start: 578, line_end: 578 }: as
Token { kind: Newline, char_start: 19480, char_end: 19481, byte_start: 19481, byte_end: 19482, column_start: 72, column_end: 1, line_start: 578, line_end: 579 }: "\n"
Token { kind: Backtick, char_start: 19481, char_end: 19482, byte_start: 19482, byte_end: 19483, column_start: 1, column_end: 2, line_start: 579, line_end: 579 }: `
Token { kind: Text, char_start: 19482, char_end: 19484, byte_start: 19483, byte_end: 19485, column_start: 2, column_end: 4, line_start: 579, line_end: 579 }: ag
Token { kind: Backtick, char_start: 19484, char_end: 19485, byte_start: 19485, byte_end: 19486, column_start: 4, column_end: 5, line_start: 579, line_end: 579 }: `
Token { kind: Space, char_start: 19485, char_end: 19486, byte_start: 19486, byte_end: 19487, column_start: 5, column_end: 6, line_start: 579, line_end: 579 }: " "
Token { kind: Text, char_start: 19486, char_end: 19489, byte_start: 19487, byte_end: 19490, column_start: 6, column_end: 9, line_start: 579, line_end: 579 }: and
Token { kind: Space, char_start: 19489, char_end: 19490, byte_start: 19490, byte_end: 19491, column_start: 9, column_end: 10, line_start: 579, line_end: 579 }: " "
Token { kind: Backtick, char_start: 19490, char_end: 19491, byte_start: 19491, byte_end: 19492, column_start: 10, column_end: 11, line_start: 579, line_end: 579 }: `
Token { kind: Text, char_start: 19491, char_end: 19493, byte_start: 19492, byte_end: 19494, column_start: 11, column_end: 13, line_start: 579, line_end: 579 }: rg
Token { kind: Backtick, char_start: 19493, char_end: 19494, byte_start: 19494, byte_end: 19495, column_start: 13, column_end: 14, line_start: 579, line_end: 579 }: `
Token { kind: Rparen, char_start: 19494, char_end: 19495, byte_start: 19495, byte_end: 19496, column_start: 14, column_end: 15, line_start: 579, line_end: 579 }: )
Token { kind: Text, char_start: 19495, char_end: 19496, byte_start: 19496, byte_end: 19497, column_start: 15, column_end: 16, line_start: 579, line_end: 579 }: .
Token { kind: Space, char_start: 19496, char_end: 19497, byte_start: 19497, byte_end: 19498, column_start: 16, column_end: 17, line_start: 579, line_end: 579 }: " "
Token { kind: Text, char_start: 19497, char_end: 19499, byte_start: 19498, byte_end: 19500, column_start: 17, column_end: 19, line_start: 579, line_end: 579 }: As
Token { kind: Space, char_start: 19499, char_end: 19500, byte_start: 19500, byte_end: 19501, column_start: 19, column_end: 20, line_start: 579, line_end: 579 }: " "
Token { kind: Text, char_start: 19500, char_end: 19505, byte_start: 19501, byte_end: 19506, column_start: 20, column_end: 25, line_start: 579, line_end: 579 }: such,
Token { kind: Space, char_start: 19505, char_end: 19506, byte_start: 19506, byte_end: 19507, column_start: 25, column_end: 26, line_start: 579, line_end: 579 }: " "
Token { kind: Bar, char_start: 19506, char_end: 19507, byte_start: 19507, byte_end: 19508, column_start: 26, column_end: 27, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19507, char_end: 19511, byte_start: 19508, byte_end: 19512, column_start: 27, column_end: 31, line_start: 579, line_end: 579 }: :Ack
Token { kind: Bar, char_start: 19511, char_end: 19512, byte_start: 19512, byte_end: 19513, column_start: 31, column_end: 32, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19512, char_end: 19513, byte_start: 19513, byte_end: 19514, column_start: 32, column_end: 33, line_start: 579, line_end: 579 }: ,
Token { kind: Space, char_start: 19513, char_end: 19514, byte_start: 19514, byte_end: 19515, column_start: 33, column_end: 34, line_start: 579, line_end: 579 }: " "
Token { kind: Bar, char_start: 19514, char_end: 19515, byte_start: 19515, byte_end: 19516, column_start: 34, column_end: 35, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19515, char_end: 19520, byte_start: 19516, byte_end: 19521, column_start: 35, column_end: 40, line_start: 579, line_end: 579 }: :Back
Token { kind: Bar, char_start: 19520, char_end: 19521, byte_start: 19521, byte_end: 19522, column_start: 40, column_end: 41, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19521, char_end: 19522, byte_start: 19522, byte_end: 19523, column_start: 41, column_end: 42, line_start: 579, line_end: 579 }: ,
Token { kind: Space, char_start: 19522, char_end: 19523, byte_start: 19523, byte_end: 19524, column_start: 42, column_end: 43, line_start: 579, line_end: 579 }: " "
Token { kind: Bar, char_start: 19523, char_end: 19524, byte_start: 19524, byte_end: 19525, column_start: 43, column_end: 44, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19524, char_end: 19530, byte_start: 19525, byte_end: 19531, column_start: 44, column_end: 50, line_start: 579, line_end: 579 }: :Black
Token { kind: Bar, char_start: 19530, char_end: 19531, byte_start: 19531, byte_end: 19532, column_start: 50, column_end: 51, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19531, char_end: 19532, byte_start: 19532, byte_end: 19533, column_start: 51, column_end: 52, line_start: 579, line_end: 579 }: ,
Token { kind: Space, char_start: 19532, char_end: 19533, byte_start: 19533, byte_end: 19534, column_start: 52, column_end: 53, line_start: 579, line_end: 579 }: " "
Token { kind: Bar, char_start: 19533, char_end: 19534, byte_start: 19534, byte_end: 19535, column_start: 53, column_end: 54, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19534, char_end: 19539, byte_start: 19535, byte_end: 19540, column_start: 54, column_end: 59, line_start: 579, line_end: 579 }: :Lack
Token { kind: Bar, char_start: 19539, char_end: 19540, byte_start: 19540, byte_end: 19541, column_start: 59, column_end: 60, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19540, char_end: 19541, byte_start: 19541, byte_end: 19542, column_start: 60, column_end: 61, line_start: 579, line_end: 579 }: ,
Token { kind: Space, char_start: 19541, char_end: 19542, byte_start: 19542, byte_end: 19543, column_start: 61, column_end: 62, line_start: 579, line_end: 579 }: " "
Token { kind: Text, char_start: 19542, char_end: 19545, byte_start: 19543, byte_end: 19546, column_start: 62, column_end: 65, line_start: 579, line_end: 579 }: and
Token { kind: Space, char_start: 19545, char_end: 19546, byte_start: 19546, byte_end: 19547, column_start: 65, column_end: 66, line_start: 579, line_end: 579 }: " "
Token { kind: Bar, char_start: 19546, char_end: 19547, byte_start: 19547, byte_end: 19548, column_start: 66, column_end: 67, line_start: 579, line_end: 579 }: |
Token { kind: Text, char_start: 19547, char_end: 19553, byte_start: 19548, byte_end: 19554, column_start: 67, column_end: 73, line_start: 579, line_end: 579 }: :Quack
Token { kind: Bar, char_start: 19553, char_end: 19554, byte_start: 19554, byte_end: 19555, column_start: 73, column_end: 74, line_start: 579, line_end: 579 }: |
Token { kind: Newline, char_start: 19554, char_end: 19555, byte_start: 19555, byte_end: 19556, column_start: 74, column_end: 1, line_start: 579, line_end: 580 }: "\n"
Token { kind: Text, char_start: 19555, char_end: 19558, byte_start: 19556, byte_end: 19559, column_start: 1, column_end: 4, line_start: 580, line_end: 580 }: are
Token { kind: Space, char_start: 19558, char_end: 19559, byte_start: 19559, byte_end: 19560, column_start: 4, column_end: 5, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19559, char_end: 19562, byte_start: 19560, byte_end: 19563, column_start: 5, column_end: 8, line_start: 580, line_end: 580 }: all
Token { kind: Space, char_start: 19562, char_end: 19563, byte_start: 19563, byte_end: 19564, column_start: 8, column_end: 9, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19563, char_end: 19572, byte_start: 19564, byte_end: 19573, column_start: 9, column_end: 18, line_start: 580, line_end: 580 }: commands,
Token { kind: Space, char_start: 19572, char_end: 19573, byte_start: 19573, byte_end: 19574, column_start: 18, column_end: 19, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19573, char_end: 19575, byte_start: 19574, byte_end: 19576, column_start: 19, column_end: 21, line_start: 580, line_end: 580 }: as
Token { kind: Space, char_start: 19575, char_end: 19576, byte_start: 19576, byte_end: 19577, column_start: 21, column_end: 22, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19576, char_end: 19579, byte_start: 19577, byte_end: 19580, column_start: 22, column_end: 25, line_start: 580, line_end: 580 }: are
Token { kind: Space, char_start: 19579, char_end: 19580, byte_start: 19580, byte_end: 19581, column_start: 25, column_end: 26, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19580, char_end: 19583, byte_start: 19581, byte_end: 19584, column_start: 26, column_end: 29, line_start: 580, line_end: 580 }: the
Token { kind: Space, char_start: 19583, char_end: 19584, byte_start: 19584, byte_end: 19585, column_start: 29, column_end: 30, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19584, char_end: 19592, byte_start: 19585, byte_end: 19593, column_start: 30, column_end: 38, line_start: 580, line_end: 580 }: variants
Token { kind: Space, char_start: 19592, char_end: 19593, byte_start: 19593, byte_end: 19594, column_start: 38, column_end: 39, line_start: 580, line_end: 580 }: " "
Token { kind: Bar, char_start: 19593, char_end: 19594, byte_start: 19594, byte_end: 19595, column_start: 39, column_end: 40, line_start: 580, line_end: 580 }: |
Token { kind: Text, char_start: 19594, char_end: 19599, byte_start: 19595, byte_end: 19600, column_start: 40, column_end: 45, line_start: 580, line_end: 580 }: :Acks
Token { kind: Bar, char_start: 19599, char_end: 19600, byte_start: 19600, byte_end: 19601, column_start: 45, column_end: 46, line_start: 580, line_end: 580 }: |
Token { kind: Space, char_start: 19600, char_end: 19601, byte_start: 19601, byte_end: 19602, column_start: 46, column_end: 47, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19601, char_end: 19604, byte_start: 19602, byte_end: 19605, column_start: 47, column_end: 50, line_start: 580, line_end: 580 }: and
Token { kind: Space, char_start: 19604, char_end: 19605, byte_start: 19605, byte_end: 19606, column_start: 50, column_end: 51, line_start: 580, line_end: 580 }: " "
Token { kind: Bar, char_start: 19605, char_end: 19606, byte_start: 19606, byte_end: 19607, column_start: 51, column_end: 52, line_start: 580, line_end: 580 }: |
Token { kind: Text, char_start: 19606, char_end: 19612, byte_start: 19607, byte_end: 19613, column_start: 52, column_end: 58, line_start: 580, line_end: 580 }: :Lacks
Token { kind: Bar, char_start: 19612, char_end: 19613, byte_start: 19613, byte_end: 19614, column_start: 58, column_end: 59, line_start: 580, line_end: 580 }: |
Token { kind: Text, char_start: 19613, char_end: 19614, byte_start: 19614, byte_end: 19615, column_start: 59, column_end: 60, line_start: 580, line_end: 580 }: ,
Token { kind: Space, char_start: 19614, char_end: 19615, byte_start: 19615, byte_end: 19616, column_start: 60, column_end: 61, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19615, char_end: 19620, byte_start: 19616, byte_end: 19621, column_start: 61, column_end: 66, line_start: 580, line_end: 580 }: along
Token { kind: Space, char_start: 19620, char_end: 19621, byte_start: 19621, byte_end: 19622, column_start: 66, column_end: 67, line_start: 580, line_end: 580 }: " "
Token { kind: Text, char_start: 19621, char_end: 19625, byte_start: 19622, byte_end: 19626, column_start: 67, column_end: 71, line_start: 580, line_end: 580 }: with
Token { kind: Newline, char_start: 19625, char_end: 19626, byte_start: 19626, byte_end: 19627, column_start: 71, column_end: 1, line_start: 580, line_end: 581 }: "\n"
Token { kind: Bar, char_start: 19626, char_end: 19627, byte_start: 19627, byte_end: 19628, column_start: 1, column_end: 2, line_start: 581, line_end: 581 }: |
Token { kind: Text, char_start: 19627, char_end: 19633, byte_start: 19628, byte_end: 19634, column_start: 2, column_end: 8, line_start: 581, line_end: 581 }: :Qargs
Token { kind: Bar, char_start: 19633, char_end: 19634, byte_start: 19634, byte_end: 19635, column_start: 8, column_end: 9, line_start: 581, line_end: 581 }: |
Token { kind: Space, char_start: 19634, char_end: 19635, byte_start: 19635, byte_end: 19636, column_start: 9, column_end: 10, line_start: 581, line_end: 581 }: " "
Token { kind: Text, char_start: 19635, char_end: 19638, byte_start: 19636, byte_end: 19639, column_start: 10, column_end: 13, line_start: 581, line_end: 581 }: and
Token { kind: Space, char_start: 19638, char_end: 19639, byte_start: 19639, byte_end: 19640, column_start: 13, column_end: 14, line_start: 581, line_end: 581 }: " "
Token { kind: Bar, char_start: 19639, char_end: 19640, byte_start: 19640, byte_end: 19641, column_start: 14, column_end: 15, line_start: 581, line_end: 581 }: |
Token { kind: Text, char_start: 19640, char_end: 19646, byte_start: 19641, byte_end: 19647, column_start: 15, column_end: 21, line_start: 581, line_end: 581 }: :Largs
Token { kind: Bar, char_start: 19646, char_end: 19647, byte_start: 19647, byte_end: 19648, column_start: 21, column_end: 22, line_start: 581, line_end: 581 }: |
Token { kind: Text, char_start: 19647, char_end: 19648, byte_start: 19648, byte_end: 19649, column_start: 22, column_end: 23, line_start: 581, line_end: 581 }: .
Token { kind: Space, char_start: 19648, char_end: 19649, byte_start: 19649, byte_end: 19650, column_start: 23, column_end: 24, line_start: 581, line_end: 581 }: " "
Token { kind: Text, char_start: 19649, char_end: 19659, byte_start: 19650, byte_end: 19660, column_start: 24, column_end: 34, line_start: 581, line_end: 581 }: Exceptions
Token { kind: Space, char_start: 19659, char_end: 19660, byte_start: 19660, byte_end: 19661, column_start: 34, column_end: 35, line_start: 581, line_end: 581 }: " "
Token { kind: Text, char_start: 19660, char_end: 19662, byte_start: 19661, byte_end: 19663, column_start: 35, column_end: 37, line_start: 581, line_end: 581 }: to
Token { kind: Space, char_start: 19662, char_end: 19663, byte_start: 19663, byte_end: 19664, column_start: 37, column_end: 38, line_start: 581, line_end: 581 }: " "
Token { kind: Text, char_start: 19663, char_end: 19666, byte_start: 19664, byte_end: 19667, column_start: 38, column_end: 41, line_start: 581, line_end: 581 }: the
Token { kind: Space, char_start: 19666, char_end: 19667, byte_start: 19667, byte_end: 19668, column_start: 41, column_end: 42, line_start: 581, line_end: 581 }: " "
Token { kind: Text, char_start: 19667, char_end: 19674, byte_start: 19668, byte_end: 19675, column_start: 42, column_end: 49, line_start: 581, line_end: 581 }: pattern
Token { kind: Space, char_start: 19674, char_end: 19675, byte_start: 19675, byte_end: 19676, column_start: 49, column_end: 50, line_start: 581, line_end: 581 }: " "
Token { kind: Text, char_start: 19675, char_end: 19678, byte_start: 19676, byte_end: 19679, column_start: 50, column_end: 53, line_start: 581, line_end: 581 }: are
Token { kind: Space, char_start: 19678, char_end: 19679, byte_start: 19679, byte_end: 19680, column_start: 53, column_end: 54, line_start: 581, line_end: 581 }: " "
Token { kind: Bar, char_start: 19679, char_end: 19680, byte_start: 19680, byte_end: 19681, column_start: 54, column_end: 55, line_start: 581, line_end: 581 }: |
Token { kind: Text, char_start: 19680, char_end: 19698, byte_start: 19681, byte_end: 19699, column_start: 55, column_end: 73, line_start: 581, line_end: 581 }: :FerretCancelAsync
Token { kind: Bar, char_start: 19698, char_end: 19699, byte_start: 19699, byte_end: 19700, column_start: 73, column_end: 74, line_start: 581, line_end: 581 }: |
Token { kind: Space, char_start: 19699, char_end: 19700, byte_start: 19700, byte_end: 19701, column_start: 74, column_end: 75, line_start: 581, line_end: 581 }: " "
Token { kind: Text, char_start: 19700, char_end: 19703, byte_start: 19701, byte_end: 19704, column_start: 75, column_end: 78, line_start: 581, line_end: 581 }: and
Token { kind: Newline, char_start: 19703, char_end: 19704, byte_start: 19704, byte_end: 19705, column_start: 78, column_end: 1, line_start: 581, line_end: 582 }: "\n"
Token { kind: Bar, char_start: 19704, char_end: 19705, byte_start: 19705, byte_end: 19706, column_start: 1, column_end: 2, line_start: 582, line_end: 582 }: |
Token { kind: Text, char_start: 19705, char_end: 19721, byte_start: 19706, byte_end: 19722, column_start: 2, column_end: 18, line_start: 582, line_end: 582 }: :FerretPullAsync
Token { kind: Bar, char_start: 19721, char_end: 19722, byte_start: 19722, byte_end: 19723, column_start: 18, column_end: 19, line_start: 582, line_end: 582 }: |
Token { kind: Text, char_start: 19722, char_end: 19723, byte_start: 19723, byte_end: 19724, column_start: 19, column_end: 20, line_start: 582, line_end: 582 }: .
Token { kind: Newline, char_start: 19723, char_end: 19724, byte_start: 19724, byte_end: 19725, column_start: 20, column_end: 1, line_start: 582, line_end: 583 }: "\n"
Token { kind: Newline, char_start: 19724, char_end: 19725, byte_start: 19725, byte_end: 19726, column_start: 1, column_end: 1, line_start: 583, line_end: 584 }: "\n"
Token { kind: Text, char_start: 19725, char_end: 19731, byte_start: 19726, byte_end: 19732, column_start: 1, column_end: 7, line_start: 584, line_end: 584 }: Should
Token { kind: Space, char_start: 19731, char_end: 19732, byte_start: 19732, byte_end: 19733, column_start: 7, column_end: 8, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19732, char_end: 19735, byte_start: 19733, byte_end: 19736, column_start: 8, column_end: 11, line_start: 584, line_end: 584 }: you
Token { kind: Space, char_start: 19735, char_end: 19736, byte_start: 19736, byte_end: 19737, column_start: 11, column_end: 12, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19736, char_end: 19740, byte_start: 19737, byte_end: 19741, column_start: 12, column_end: 16, line_start: 584, line_end: 584 }: wish
Token { kind: Space, char_start: 19740, char_end: 19741, byte_start: 19741, byte_end: 19742, column_start: 16, column_end: 17, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19741, char_end: 19743, byte_start: 19742, byte_end: 19744, column_start: 17, column_end: 19, line_start: 584, line_end: 584 }: to
Token { kind: Space, char_start: 19743, char_end: 19744, byte_start: 19744, byte_end: 19745, column_start: 19, column_end: 20, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19744, char_end: 19752, byte_start: 19745, byte_end: 19753, column_start: 20, column_end: 28, line_start: 584, line_end: 584 }: override
Token { kind: Space, char_start: 19752, char_end: 19753, byte_start: 19753, byte_end: 19754, column_start: 28, column_end: 29, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19753, char_end: 19756, byte_start: 19754, byte_end: 19757, column_start: 29, column_end: 32, line_start: 584, line_end: 584 }: any
Token { kind: Space, char_start: 19756, char_end: 19757, byte_start: 19757, byte_end: 19758, column_start: 32, column_end: 33, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19757, char_end: 19759, byte_start: 19758, byte_end: 19760, column_start: 33, column_end: 35, line_start: 584, line_end: 584 }: or
Token { kind: Space, char_start: 19759, char_end: 19760, byte_start: 19760, byte_end: 19761, column_start: 35, column_end: 36, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19760, char_end: 19763, byte_start: 19761, byte_end: 19764, column_start: 36, column_end: 39, line_start: 584, line_end: 584 }: all
Token { kind: Space, char_start: 19763, char_end: 19764, byte_start: 19764, byte_end: 19765, column_start: 39, column_end: 40, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19764, char_end: 19766, byte_start: 19765, byte_end: 19767, column_start: 40, column_end: 42, line_start: 584, line_end: 584 }: of
Token { kind: Space, char_start: 19766, char_end: 19767, byte_start: 19767, byte_end: 19768, column_start: 42, column_end: 43, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19767, char_end: 19772, byte_start: 19768, byte_end: 19773, column_start: 43, column_end: 48, line_start: 584, line_end: 584 }: these
Token { kind: Space, char_start: 19772, char_end: 19773, byte_start: 19773, byte_end: 19774, column_start: 48, column_end: 49, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19773, char_end: 19779, byte_start: 19774, byte_end: 19780, column_start: 49, column_end: 55, line_start: 584, line_end: 584 }: names,
Token { kind: Space, char_start: 19779, char_end: 19780, byte_start: 19780, byte_end: 19781, column_start: 55, column_end: 56, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19780, char_end: 19783, byte_start: 19781, byte_end: 19784, column_start: 56, column_end: 59, line_start: 584, line_end: 584 }: you
Token { kind: Space, char_start: 19783, char_end: 19784, byte_start: 19784, byte_end: 19785, column_start: 59, column_end: 60, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19784, char_end: 19787, byte_start: 19785, byte_end: 19788, column_start: 60, column_end: 63, line_start: 584, line_end: 584 }: may
Token { kind: Space, char_start: 19787, char_end: 19788, byte_start: 19788, byte_end: 19789, column_start: 63, column_end: 64, line_start: 584, line_end: 584 }: " "
Token { kind: Text, char_start: 19788, char_end: 19794, byte_start: 19789, byte_end: 19795, column_start: 64, column_end: 70, line_start: 584, line_end: 584 }: define
Token { kind: Newline, char_start: 19794, char_end: 19795, byte_start: 19795, byte_end: 19796, column_start: 70, column_end: 1, line_start: 584, line_end: 585 }: "\n"
Token { kind: Bar, char_start: 19795, char_end: 19796, byte_start: 19796, byte_end: 19797, column_start: 1, column_end: 2, line_start: 585, line_end: 585 }: |
Token { kind: Text, char_start: 19796, char_end: 19816, byte_start: 19797, byte_end: 19817, column_start: 2, column_end: 22, line_start: 585, line_end: 585 }: g:FerretCommandNames
Token { kind: Bar, char_start: 19816, char_end: 19817, byte_start: 19817, byte_end: 19818, column_start: 22, column_end: 23, line_start: 585, line_end: 585 }: |
Token { kind: Space, char_start: 19817, char_end: 19818, byte_start: 19818, byte_end: 19819, column_start: 23, column_end: 24, line_start: 585, line_end: 585 }: " "
Token { kind: Text, char_start: 19818, char_end: 19823, byte_start: 19819, byte_end: 19824, column_start: 24, column_end: 29, line_start: 585, line_end: 585 }: early
Token { kind: Space, char_start: 19823, char_end: 19824, byte_start: 19824, byte_end: 19825, column_start: 29, column_end: 30, line_start: 585, line_end: 585 }: " "
Token { kind: Text, char_start: 19824, char_end: 19826, byte_start: 19825, byte_end: 19827, column_start: 30, column_end: 32, line_start: 585, line_end: 585 }: on
Token { kind: Space, char_start: 19826, char_end: 19827, byte_start: 19827, byte_end: 19828, column_start: 32, column_end: 33, line_start: 585, line_end: 585 }: " "
Token { kind: Text, char_start: 19827, char_end: 19829, byte_start: 19828, byte_end: 19830, column_start: 33, column_end: 35, line_start: 585, line_end: 585 }: in
Token { kind: Space, char_start: 19829, char_end: 19830, byte_start: 19830, byte_end: 19831, column_start: 35, column_end: 36, line_start: 585, line_end: 585 }: " "
Token { kind: Text, char_start: 19830, char_end: 19834, byte_start: 19831, byte_end: 19835, column_start: 36, column_end: 40, line_start: 585, line_end: 585 }: your
Token { kind: Space, char_start: 19834, char_end: 19835, byte_start: 19835, byte_end: 19836, column_start: 40, column_end: 41, line_start: 585, line_end: 585 }: " "
Token { kind: Bar, char_start: 19835, char_end: 19836, byte_start: 19836, byte_end: 19837, column_start: 41, column_end: 42, line_start: 585, line_end: 585 }: |
Token { kind: Text, char_start: 19836, char_end: 19842, byte_start: 19837, byte_end: 19843, column_start: 42, column_end: 48, line_start: 585, line_end: 585 }: .vimrc
Token { kind: Bar, char_start: 19842, char_end: 19843, byte_start: 19843, byte_end: 19844, column_start: 48, column_end: 49, line_start: 585, line_end: 585 }: |
Token { kind: Space, char_start: 19843, char_end: 19844, byte_start: 19844, byte_end: 19845, column_start: 49, column_end: 50, line_start: 585, line_end: 585 }: " "
Token { kind: Lparen, char_start: 19844, char_end: 19845, byte_start: 19845, byte_end: 19846, column_start: 50, column_end: 51, line_start: 585, line_end: 585 }: (
Token { kind: Text, char_start: 19845, char_end: 19851, byte_start: 19846, byte_end: 19852, column_start: 51, column_end: 57, line_start: 585, line_end: 585 }: before
Token { kind: Space, char_start: 19851, char_end: 19852, byte_start: 19852, byte_end: 19853, column_start: 57, column_end: 58, line_start: 585, line_end: 585 }: " "
Token { kind: Text, char_start: 19852, char_end: 19858, byte_start: 19853, byte_end: 19859, column_start: 58, column_end: 64, line_start: 585, line_end: 585 }: Ferret
Token { kind: Space, char_start: 19858, char_end: 19859, byte_start: 19859, byte_end: 19860, column_start: 64, column_end: 65, line_start: 585, line_end: 585 }: " "
Token { kind: Text, char_start: 19859, char_end: 19861, byte_start: 19860, byte_end: 19862, column_start: 65, column_end: 67, line_start: 585, line_end: 585 }: is
Token { kind: Space, char_start: 19861, char_end: 19862, byte_start: 19862, byte_end: 19863, column_start: 67, column_end: 68, line_start: 585, line_end: 585 }: " "
Token { kind: Text, char_start: 19862, char_end: 19868, byte_start: 19863, byte_end: 19869, column_start: 68, column_end: 74, line_start: 585, line_end: 585 }: loaded
Token { kind: Rparen, char_start: 19868, char_end: 19869, byte_start: 19869, byte_end: 19870, column_start: 74, column_end: 75, line_start: 585, line_end: 585 }: )
Token { kind: Text, char_start: 19869, char_end: 19870, byte_start: 19870, byte_end: 19871, column_start: 75, column_end: 76, line_start: 585, line_end: 585 }: ,
Token { kind: Newline, char_start: 19870, char_end: 19871, byte_start: 19871, byte_end: 19872, column_start: 76, column_end: 1, line_start: 585, line_end: 586 }: "\n"
Token { kind: Text, char_start: 19871, char_end: 19874, byte_start: 19872, byte_end: 19875, column_start: 1, column_end: 4, line_start: 586, line_end: 586 }: and
Token { kind: Space, char_start: 19874, char_end: 19875, byte_start: 19875, byte_end: 19876, column_start: 4, column_end: 5, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19875, char_end: 19877, byte_start: 19876, byte_end: 19878, column_start: 5, column_end: 7, line_start: 586, line_end: 586 }: it
Token { kind: Space, char_start: 19877, char_end: 19878, byte_start: 19878, byte_end: 19879, column_start: 7, column_end: 8, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19878, char_end: 19882, byte_start: 19879, byte_end: 19883, column_start: 8, column_end: 12, line_start: 586, line_end: 586 }: will
Token { kind: Space, char_start: 19882, char_end: 19883, byte_start: 19883, byte_end: 19884, column_start: 12, column_end: 13, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19883, char_end: 19886, byte_start: 19884, byte_end: 19887, column_start: 13, column_end: 16, line_start: 586, line_end: 586 }: use
Token { kind: Space, char_start: 19886, char_end: 19887, byte_start: 19887, byte_end: 19888, column_start: 16, column_end: 17, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19887, char_end: 19890, byte_start: 19888, byte_end: 19891, column_start: 17, column_end: 20, line_start: 586, line_end: 586 }: the
Token { kind: Space, char_start: 19890, char_end: 19891, byte_start: 19891, byte_end: 19892, column_start: 20, column_end: 21, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19891, char_end: 19900, byte_start: 19892, byte_end: 19901, column_start: 21, column_end: 30, line_start: 586, line_end: 586 }: specified
Token { kind: Space, char_start: 19900, char_end: 19901, byte_start: 19901, byte_end: 19902, column_start: 30, column_end: 31, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19901, char_end: 19906, byte_start: 19902, byte_end: 19907, column_start: 31, column_end: 36, line_start: 586, line_end: 586 }: names
Token { kind: Space, char_start: 19906, char_end: 19907, byte_start: 19907, byte_end: 19908, column_start: 36, column_end: 37, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19907, char_end: 19915, byte_start: 19908, byte_end: 19916, column_start: 37, column_end: 45, line_start: 586, line_end: 586 }: instead,
Token { kind: Space, char_start: 19915, char_end: 19916, byte_start: 19916, byte_end: 19917, column_start: 45, column_end: 46, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19916, char_end: 19923, byte_start: 19917, byte_end: 19924, column_start: 46, column_end: 53, line_start: 586, line_end: 586 }: falling
Token { kind: Space, char_start: 19923, char_end: 19924, byte_start: 19924, byte_end: 19925, column_start: 53, column_end: 54, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19924, char_end: 19928, byte_start: 19925, byte_end: 19929, column_start: 54, column_end: 58, line_start: 586, line_end: 586 }: back
Token { kind: Space, char_start: 19928, char_end: 19929, byte_start: 19929, byte_end: 19930, column_start: 58, column_end: 59, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19929, char_end: 19931, byte_start: 19930, byte_end: 19932, column_start: 59, column_end: 61, line_start: 586, line_end: 586 }: to
Token { kind: Space, char_start: 19931, char_end: 19932, byte_start: 19932, byte_end: 19933, column_start: 61, column_end: 62, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19932, char_end: 19935, byte_start: 19933, byte_end: 19936, column_start: 62, column_end: 65, line_start: 586, line_end: 586 }: the
Token { kind: Space, char_start: 19935, char_end: 19936, byte_start: 19936, byte_end: 19937, column_start: 65, column_end: 66, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19936, char_end: 19944, byte_start: 19937, byte_end: 19945, column_start: 66, column_end: 74, line_start: 586, line_end: 586 }: defaults
Token { kind: Space, char_start: 19944, char_end: 19945, byte_start: 19945, byte_end: 19946, column_start: 74, column_end: 75, line_start: 586, line_end: 586 }: " "
Token { kind: Text, char_start: 19945, char_end: 19948, byte_start: 19946, byte_end: 19949, column_start: 75, column_end: 78, line_start: 586, line_end: 586 }: for
Token { kind: Newline, char_start: 19948, char_end: 19949, byte_start: 19949, byte_end: 19950, column_start: 78, column_end: 1, line_start: 586, line_end: 587 }: "\n"
Token { kind: Text, char_start: 19949, char_end: 19952, byte_start: 19950, byte_end: 19953, column_start: 1, column_end: 4, line_start: 587, line_end: 587 }: any
Token { kind: Space, char_start: 19952, char_end: 19953, byte_start: 19953, byte_end: 19954, column_start: 4, column_end: 5, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 19953, char_end: 19962, byte_start: 19954, byte_end: 19963, column_start: 5, column_end: 14, line_start: 587, line_end: 587 }: undefined
Token { kind: Space, char_start: 19962, char_end: 19963, byte_start: 19963, byte_end: 19964, column_start: 14, column_end: 15, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 19963, char_end: 19972, byte_start: 19964, byte_end: 19973, column_start: 15, column_end: 24, line_start: 587, line_end: 587 }: commands.
Token { kind: Space, char_start: 19972, char_end: 19973, byte_start: 19973, byte_end: 19974, column_start: 24, column_end: 25, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 19973, char_end: 19976, byte_start: 19974, byte_end: 19977, column_start: 25, column_end: 28, line_start: 587, line_end: 587 }: For
Token { kind: Space, char_start: 19976, char_end: 19977, byte_start: 19977, byte_end: 19978, column_start: 28, column_end: 29, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 19977, char_end: 19985, byte_start: 19978, byte_end: 19986, column_start: 29, column_end: 37, line_start: 587, line_end: 587 }: example,
Token { kind: Space, char_start: 19985, char_end: 19986, byte_start: 19986, byte_end: 19987, column_start: 37, column_end: 38, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 19986, char_end: 19988, byte_start: 19987, byte_end: 19989, column_start: 38, column_end: 40, line_start: 587, line_end: 587 }: to
Token { kind: Space, char_start: 19988, char_end: 19989, byte_start: 19989, byte_end: 19990, column_start: 40, column_end: 41, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 19989, char_end: 19992, byte_start: 19990, byte_end: 19993, column_start: 41, column_end: 44, line_start: 587, line_end: 587 }: use
Token { kind: Space, char_start: 19992, char_end: 19993, byte_start: 19993, byte_end: 19994, column_start: 44, column_end: 45, line_start: 587, line_end: 587 }: " "
Token { kind: Backtick, char_start: 19993, char_end: 19994, byte_start: 19994, byte_end: 19995, column_start: 45, column_end: 46, line_start: 587, line_end: 587 }: `
Token { kind: Text, char_start: 19994, char_end: 19997, byte_start: 19995, byte_end: 19998, column_start: 46, column_end: 49, line_start: 587, line_end: 587 }: :Rg
Token { kind: Backtick, char_start: 19997, char_end: 19998, byte_start: 19998, byte_end: 19999, column_start: 49, column_end: 50, line_start: 587, line_end: 587 }: `
Token { kind: Space, char_start: 19998, char_end: 19999, byte_start: 19999, byte_end: 20000, column_start: 50, column_end: 51, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 19999, char_end: 20001, byte_start: 20000, byte_end: 20002, column_start: 51, column_end: 53, line_start: 587, line_end: 587 }: in
Token { kind: Space, char_start: 20001, char_end: 20002, byte_start: 20002, byte_end: 20003, column_start: 53, column_end: 54, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 20002, char_end: 20007, byte_start: 20003, byte_end: 20008, column_start: 54, column_end: 59, line_start: 587, line_end: 587 }: place
Token { kind: Space, char_start: 20007, char_end: 20008, byte_start: 20008, byte_end: 20009, column_start: 59, column_end: 60, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 20008, char_end: 20010, byte_start: 20009, byte_end: 20011, column_start: 60, column_end: 62, line_start: 587, line_end: 587 }: of
Token { kind: Space, char_start: 20010, char_end: 20011, byte_start: 20011, byte_end: 20012, column_start: 62, column_end: 63, line_start: 587, line_end: 587 }: " "
Token { kind: Text, char_start: 20011, char_end: 20014, byte_start: 20012, byte_end: 20015, column_start: 63, column_end: 66, line_start: 587, line_end: 587 }: the
Token { kind: Space, char_start: 20014, char_end: 20015, byte_start: 20015, byte_end: 20016, column_start: 66, column_end: 67, line_start: 587, line_end: 587 }: " "
Token { kind: Bar, char_start: 20015, char_end: 20016, byte_start: 20016, byte_end: 20017, column_start: 67, column_end: 68, line_start: 587, line_end: 587 }: |
Token { kind: Text, char_start: 20016, char_end: 20020, byte_start: 20017, byte_end: 20021, column_start: 68, column_end: 72, line_start: 587, line_end: 587 }: :Ack
Token { kind: Bar, char_start: 20020, char_end: 20021, byte_start: 20021, byte_end: 20022, column_start: 72, column_end: 73, line_start: 587, line_end: 587 }: |
Token { kind: Newline, char_start: 20021, char_end: 20022, byte_start: 20022, byte_end: 20023, column_start: 73, column_end: 1, line_start: 587, line_end: 588 }: "\n"
Token { kind: Text, char_start: 20022, char_end: 20030, byte_start: 20023, byte_end: 20031, column_start: 1, column_end: 9, line_start: 588, line_end: 588 }: command,
Token { kind: Space, char_start: 20030, char_end: 20031, byte_start: 20031, byte_end: 20032, column_start: 9, column_end: 10, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20031, char_end: 20034, byte_start: 20032, byte_end: 20035, column_start: 10, column_end: 13, line_start: 588, line_end: 588 }: and
Token { kind: Space, char_start: 20034, char_end: 20035, byte_start: 20035, byte_end: 20036, column_start: 13, column_end: 14, line_start: 588, line_end: 588 }: " "
Token { kind: Backtick, char_start: 20035, char_end: 20036, byte_start: 20036, byte_end: 20037, column_start: 14, column_end: 15, line_start: 588, line_end: 588 }: `
Token { kind: Text, char_start: 20036, char_end: 20040, byte_start: 20037, byte_end: 20041, column_start: 15, column_end: 19, line_start: 588, line_end: 588 }: :Rgb
Token { kind: Backtick, char_start: 20040, char_end: 20041, byte_start: 20041, byte_end: 20042, column_start: 19, column_end: 20, line_start: 588, line_end: 588 }: `
Token { kind: Space, char_start: 20041, char_end: 20042, byte_start: 20042, byte_end: 20043, column_start: 20, column_end: 21, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20042, char_end: 20044, byte_start: 20043, byte_end: 20045, column_start: 21, column_end: 23, line_start: 588, line_end: 588 }: in
Token { kind: Space, char_start: 20044, char_end: 20045, byte_start: 20045, byte_end: 20046, column_start: 23, column_end: 24, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20045, char_end: 20050, byte_start: 20046, byte_end: 20051, column_start: 24, column_end: 29, line_start: 588, line_end: 588 }: place
Token { kind: Space, char_start: 20050, char_end: 20051, byte_start: 20051, byte_end: 20052, column_start: 29, column_end: 30, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20051, char_end: 20053, byte_start: 20052, byte_end: 20054, column_start: 30, column_end: 32, line_start: 588, line_end: 588 }: of
Token { kind: Space, char_start: 20053, char_end: 20054, byte_start: 20054, byte_end: 20055, column_start: 32, column_end: 33, line_start: 588, line_end: 588 }: " "
Token { kind: Bar, char_start: 20054, char_end: 20055, byte_start: 20055, byte_end: 20056, column_start: 33, column_end: 34, line_start: 588, line_end: 588 }: |
Token { kind: Text, char_start: 20055, char_end: 20060, byte_start: 20056, byte_end: 20061, column_start: 34, column_end: 39, line_start: 588, line_end: 588 }: :Back
Token { kind: Bar, char_start: 20060, char_end: 20061, byte_start: 20061, byte_end: 20062, column_start: 39, column_end: 40, line_start: 588, line_end: 588 }: |
Token { kind: Text, char_start: 20061, char_end: 20062, byte_start: 20062, byte_end: 20063, column_start: 40, column_end: 41, line_start: 588, line_end: 588 }: ,
Token { kind: Space, char_start: 20062, char_end: 20063, byte_start: 20063, byte_end: 20064, column_start: 41, column_end: 42, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20063, char_end: 20066, byte_start: 20064, byte_end: 20067, column_start: 42, column_end: 45, line_start: 588, line_end: 588 }: but
Token { kind: Space, char_start: 20066, char_end: 20067, byte_start: 20067, byte_end: 20068, column_start: 45, column_end: 46, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20067, char_end: 20071, byte_start: 20068, byte_end: 20072, column_start: 46, column_end: 50, line_start: 588, line_end: 588 }: keep
Token { kind: Space, char_start: 20071, char_end: 20072, byte_start: 20072, byte_end: 20073, column_start: 50, column_end: 51, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20072, char_end: 20077, byte_start: 20073, byte_end: 20078, column_start: 51, column_end: 56, line_start: 588, line_end: 588 }: using
Token { kind: Space, char_start: 20077, char_end: 20078, byte_start: 20078, byte_end: 20079, column_start: 56, column_end: 57, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20078, char_end: 20081, byte_start: 20079, byte_end: 20082, column_start: 57, column_end: 60, line_start: 588, line_end: 588 }: the
Token { kind: Space, char_start: 20081, char_end: 20082, byte_start: 20082, byte_end: 20083, column_start: 60, column_end: 61, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20082, char_end: 20090, byte_start: 20083, byte_end: 20091, column_start: 61, column_end: 69, line_start: 588, line_end: 588 }: standard
Token { kind: Space, char_start: 20090, char_end: 20091, byte_start: 20091, byte_end: 20092, column_start: 69, column_end: 70, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20091, char_end: 20096, byte_start: 20092, byte_end: 20097, column_start: 70, column_end: 75, line_start: 588, line_end: 588 }: names
Token { kind: Space, char_start: 20096, char_end: 20097, byte_start: 20097, byte_end: 20098, column_start: 75, column_end: 76, line_start: 588, line_end: 588 }: " "
Token { kind: Text, char_start: 20097, char_end: 20100, byte_start: 20098, byte_end: 20101, column_start: 76, column_end: 79, line_start: 588, line_end: 588 }: for
Token { kind: Newline, char_start: 20100, char_end: 20101, byte_start: 20101, byte_end: 20102, column_start: 79, column_end: 1, line_start: 588, line_end: 589 }: "\n"
Token { kind: Text, char_start: 20101, char_end: 20104, byte_start: 20102, byte_end: 20105, column_start: 1, column_end: 4, line_start: 589, line_end: 589 }: all
Token { kind: Space, char_start: 20104, char_end: 20105, byte_start: 20105, byte_end: 20106, column_start: 4, column_end: 5, line_start: 589, line_end: 589 }: " "
Token { kind: Text, char_start: 20105, char_end: 20110, byte_start: 20106, byte_end: 20111, column_start: 5, column_end: 10, line_start: 589, line_end: 589 }: other
Token { kind: Space, char_start: 20110, char_end: 20111, byte_start: 20111, byte_end: 20112, column_start: 10, column_end: 11, line_start: 589, line_end: 589 }: " "
Token { kind: Text, char_start: 20111, char_end: 20120, byte_start: 20112, byte_end: 20121, column_start: 11, column_end: 20, line_start: 589, line_end: 589 }: commands,
Token { kind: Space, char_start: 20120, char_end: 20121, byte_start: 20121, byte_end: 20122, column_start: 20, column_end: 21, line_start: 589, line_end: 589 }: " "
Token { kind: Text, char_start: 20121, char_end: 20124, byte_start: 20122, byte_end: 20125, column_start: 21, column_end: 24, line_start: 589, line_end: 589 }: you
Token { kind: Space, char_start: 20124, char_end: 20125, byte_start: 20125, byte_end: 20126, column_start: 24, column_end: 25, line_start: 589, line_end: 589 }: " "
Token { kind: Text, char_start: 20125, char_end: 20130, byte_start: 20126, byte_end: 20131, column_start: 25, column_end: 30, line_start: 589, line_end: 589 }: would
Token { kind: Space, char_start: 20130, char_end: 20131, byte_start: 20131, byte_end: 20132, column_start: 30, column_end: 31, line_start: 589, line_end: 589 }: " "
Token { kind: Text, char_start: 20131, char_end: 20137, byte_start: 20132, byte_end: 20138, column_start: 31, column_end: 37, line_start: 589, line_end: 589 }: write:
Token { kind: Newline, char_start: 20137, char_end: 20138, byte_start: 20138, byte_end: 20139, column_start: 37, column_end: 1, line_start: 589, line_end: 590 }: "\n"
Token { kind: Newline, char_start: 20138, char_end: 20139, byte_start: 20139, byte_end: 20140, column_start: 1, column_end: 1, line_start: 590, line_end: 591 }: "\n"
Token { kind: CodeFence, char_start: 20139, char_end: 20142, byte_start: 20140, byte_end: 20143, column_start: 1, column_end: 4, line_start: 591, line_end: 591 }: ```
Token { kind: Newline, char_start: 20142, char_end: 20143, byte_start: 20143, byte_end: 20144, column_start: 4, column_end: 1, line_start: 591, line_end: 592 }: "\n"
Token { kind: Text, char_start: 20143, char_end: 20146, byte_start: 20144, byte_end: 20147, column_start: 1, column_end: 4, line_start: 592, line_end: 592 }: let
Token { kind: Space, char_start: 20146, char_end: 20147, byte_start: 20147, byte_end: 20148, column_start: 4, column_end: 5, line_start: 592, line_end: 592 }: " "
Token { kind: Text, char_start: 20147, char_end: 20175, byte_start: 20148, byte_end: 20176, column_start: 5, column_end: 33, line_start: 592, line_end: 592 }: g:FerretCommandNames={'Ack':
Token { kind: Space, char_start: 20175, char_end: 20176, byte_start: 20176, byte_end: 20177, column_start: 33, column_end: 34, line_start: 592, line_end: 592 }: " "
Token { kind: Text, char_start: 20176, char_end: 20181, byte_start: 20177, byte_end: 20182, column_start: 34, column_end: 39, line_start: 592, line_end: 592 }: 'Rg',
Token { kind: Space, char_start: 20181, char_end: 20182, byte_start: 20182, byte_end: 20183, column_start: 39, column_end: 40, line_start: 592, line_end: 592 }: " "
Token { kind: Text, char_start: 20182, char_end: 20189, byte_start: 20183, byte_end: 20190, column_start: 40, column_end: 47, line_start: 592, line_end: 592 }: 'Back':
Token { kind: Space, char_start: 20189, char_end: 20190, byte_start: 20190, byte_end: 20191, column_start: 47, column_end: 48, line_start: 592, line_end: 592 }: " "
Token { kind: Text, char_start: 20190, char_end: 20196, byte_start: 20191, byte_end: 20197, column_start: 48, column_end: 54, line_start: 592, line_end: 592 }: 'Rgb'}
Token { kind: Newline, char_start: 20196, char_end: 20197, byte_start: 20197, byte_end: 20198, column_start: 54, column_end: 1, line_start: 592, line_end: 593 }: "\n"
Token { kind: CodeFence, char_start: 20197, char_end: 20200, byte_start: 20198, byte_end: 20201, column_start: 1, column_end: 4, line_start: 593, line_end: 593 }: ```
Token { kind: Newline, char_start: 20200, char_end: 20201, byte_start: 20201, byte_end: 20202, column_start: 4, column_end: 1, line_start: 593, line_end: 594 }: "\n"
Token { kind: Newline, char_start: 20201, char_end: 20202, byte_start: 20202, byte_end: 20203, column_start: 1, column_end: 1, line_start: 594, line_end: 595 }: "\n"
Token { kind: Text, char_start: 20202, char_end: 20212, byte_start: 20203, byte_end: 20213, column_start: 1, column_end: 11, line_start: 595, line_end: 595 }: Overriding
Token { kind: Space, char_start: 20212, char_end: 20213, byte_start: 20213, byte_end: 20214, column_start: 11, column_end: 12, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20213, char_end: 20216, byte_start: 20214, byte_end: 20217, column_start: 12, column_end: 15, line_start: 595, line_end: 595 }: may
Token { kind: Space, char_start: 20216, char_end: 20217, byte_start: 20217, byte_end: 20218, column_start: 15, column_end: 16, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20217, char_end: 20219, byte_start: 20218, byte_end: 20220, column_start: 16, column_end: 18, line_start: 595, line_end: 595 }: be
Token { kind: Space, char_start: 20219, char_end: 20220, byte_start: 20220, byte_end: 20221, column_start: 18, column_end: 19, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20220, char_end: 20226, byte_start: 20221, byte_end: 20227, column_start: 19, column_end: 25, line_start: 595, line_end: 595 }: useful
Token { kind: Space, char_start: 20226, char_end: 20227, byte_start: 20227, byte_end: 20228, column_start: 25, column_end: 26, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20227, char_end: 20229, byte_start: 20228, byte_end: 20230, column_start: 26, column_end: 28, line_start: 595, line_end: 595 }: to
Token { kind: Space, char_start: 20229, char_end: 20230, byte_start: 20230, byte_end: 20231, column_start: 28, column_end: 29, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20230, char_end: 20235, byte_start: 20231, byte_end: 20236, column_start: 29, column_end: 34, line_start: 595, line_end: 595 }: avoid
Token { kind: Space, char_start: 20235, char_end: 20236, byte_start: 20236, byte_end: 20237, column_start: 34, column_end: 35, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20236, char_end: 20245, byte_start: 20237, byte_end: 20246, column_start: 35, column_end: 44, line_start: 595, line_end: 595 }: conflicts
Token { kind: Space, char_start: 20245, char_end: 20246, byte_start: 20246, byte_end: 20247, column_start: 44, column_end: 45, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20246, char_end: 20250, byte_start: 20247, byte_end: 20251, column_start: 45, column_end: 49, line_start: 595, line_end: 595 }: with
Token { kind: Space, char_start: 20250, char_end: 20251, byte_start: 20251, byte_end: 20252, column_start: 49, column_end: 50, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20251, char_end: 20256, byte_start: 20252, byte_end: 20257, column_start: 50, column_end: 55, line_start: 595, line_end: 595 }: other
Token { kind: Space, char_start: 20256, char_end: 20257, byte_start: 20257, byte_end: 20258, column_start: 55, column_end: 56, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20257, char_end: 20261, byte_start: 20258, byte_end: 20262, column_start: 56, column_end: 60, line_start: 595, line_end: 595 }: plug
Token { kind: Hyphen, char_start: 20261, char_end: 20262, byte_start: 20262, byte_end: 20263, column_start: 60, column_end: 61, line_start: 595, line_end: 595 }: -
Token { kind: Text, char_start: 20262, char_end: 20265, byte_start: 20263, byte_end: 20266, column_start: 61, column_end: 64, line_start: 595, line_end: 595 }: ins
Token { kind: Space, char_start: 20265, char_end: 20266, byte_start: 20266, byte_end: 20267, column_start: 64, column_end: 65, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20266, char_end: 20270, byte_start: 20267, byte_end: 20271, column_start: 65, column_end: 69, line_start: 595, line_end: 595 }: that
Token { kind: Space, char_start: 20270, char_end: 20271, byte_start: 20271, byte_end: 20272, column_start: 69, column_end: 70, line_start: 595, line_end: 595 }: " "
Token { kind: Text, char_start: 20271, char_end: 20278, byte_start: 20272, byte_end: 20279, column_start: 70, column_end: 77, line_start: 595, line_end: 595 }: compete
Token { kind: Newline, char_start: 20278, char_end: 20279, byte_start: 20279, byte_end: 20280, column_start: 77, column_end: 1, line_start: 595, line_end: 596 }: "\n"
Token { kind: Text, char_start: 20279, char_end: 20281, byte_start: 20280, byte_end: 20282, column_start: 1, column_end: 3, line_start: 596, line_end: 596 }: to
Token { kind: Space, char_start: 20281, char_end: 20282, byte_start: 20282, byte_end: 20283, column_start: 3, column_end: 4, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20282, char_end: 20288, byte_start: 20283, byte_end: 20289, column_start: 4, column_end: 10, line_start: 596, line_end: 596 }: define
Token { kind: Space, char_start: 20288, char_end: 20289, byte_start: 20289, byte_end: 20290, column_start: 10, column_end: 11, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20289, char_end: 20297, byte_start: 20290, byte_end: 20298, column_start: 11, column_end: 19, line_start: 596, line_end: 596 }: commands
Token { kind: Space, char_start: 20297, char_end: 20298, byte_start: 20298, byte_end: 20299, column_start: 19, column_end: 20, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20298, char_end: 20302, byte_start: 20299, byte_end: 20303, column_start: 20, column_end: 24, line_start: 596, line_end: 596 }: with
Token { kind: Space, char_start: 20302, char_end: 20303, byte_start: 20303, byte_end: 20304, column_start: 24, column_end: 25, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20303, char_end: 20306, byte_start: 20304, byte_end: 20307, column_start: 25, column_end: 28, line_start: 596, line_end: 596 }: the
Token { kind: Space, char_start: 20306, char_end: 20307, byte_start: 20307, byte_end: 20308, column_start: 28, column_end: 29, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20307, char_end: 20311, byte_start: 20308, byte_end: 20312, column_start: 29, column_end: 33, line_start: 596, line_end: 596 }: same
Token { kind: Space, char_start: 20311, char_end: 20312, byte_start: 20312, byte_end: 20313, column_start: 33, column_end: 34, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20312, char_end: 20318, byte_start: 20313, byte_end: 20319, column_start: 34, column_end: 40, line_start: 596, line_end: 596 }: names,
Token { kind: Space, char_start: 20318, char_end: 20319, byte_start: 20319, byte_end: 20320, column_start: 40, column_end: 41, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20319, char_end: 20321, byte_start: 20320, byte_end: 20322, column_start: 41, column_end: 43, line_start: 596, line_end: 596 }: or
Token { kind: Space, char_start: 20321, char_end: 20322, byte_start: 20322, byte_end: 20323, column_start: 43, column_end: 44, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20322, char_end: 20328, byte_start: 20323, byte_end: 20329, column_start: 44, column_end: 50, line_start: 596, line_end: 596 }: simply
Token { kind: Space, char_start: 20328, char_end: 20329, byte_start: 20329, byte_end: 20330, column_start: 50, column_end: 51, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20329, char_end: 20331, byte_start: 20330, byte_end: 20332, column_start: 51, column_end: 53, line_start: 596, line_end: 596 }: to
Token { kind: Space, char_start: 20331, char_end: 20332, byte_start: 20332, byte_end: 20333, column_start: 53, column_end: 54, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20332, char_end: 20337, byte_start: 20333, byte_end: 20338, column_start: 54, column_end: 59, line_start: 596, line_end: 596 }: match
Token { kind: Space, char_start: 20337, char_end: 20338, byte_start: 20338, byte_end: 20339, column_start: 59, column_end: 60, line_start: 596, line_end: 596 }: " "
Token { kind: Text, char_start: 20338, char_end: 20346, byte_start: 20339, byte_end: 20347, column_start: 60, column_end: 68, line_start: 596, line_end: 596 }: personal
Token { kind: Newline, char_start: 20346, char_end: 20347, byte_start: 20347, byte_end: 20348, column_start: 68, column_end: 1, line_start: 596, line_end: 597 }: "\n"
Token { kind: Text, char_start: 20347, char_end: 20359, byte_start: 20348, byte_end: 20360, column_start: 1, column_end: 13, line_start: 597, line_end: 597 }: preferences.
Token { kind: Newline, char_start: 20359, char_end: 20360, byte_start: 20360, byte_end: 20361, column_start: 13, column_end: 1, line_start: 597, line_end: 598 }: "\n"
Token { kind: Newline, char_start: 20360, char_end: 20361, byte_start: 20361, byte_end: 20362, column_start: 1, column_end: 1, line_start: 598, line_end: 599 }: "\n"
Token { kind: At, char_start: 20361, char_end: 20362, byte_start: 20362, byte_end: 20363, column_start: 1, column_end: 2, line_start: 599, line_end: 599 }: @
Token { kind: Text, char_start: 20362, char_end: 20369, byte_start: 20363, byte_end: 20370, column_start: 2, column_end: 9, line_start: 599, line_end: 599 }: command
Token { kind: Space, char_start: 20369, char_end: 20370, byte_start: 20370, byte_end: 20371, column_start: 9, column_end: 10, line_start: 599, line_end: 599 }: " "
Token { kind: Text, char_start: 20370, char_end: 20374, byte_start: 20371, byte_end: 20375, column_start: 10, column_end: 14, line_start: 599, line_end: 599 }: :Ack
Token { kind: Space, char_start: 20374, char_end: 20375, byte_start: 20375, byte_end: 20376, column_start: 14, column_end: 15, line_start: 599, line_end: 599 }: " "
Token { kind: Text, char_start: 20375, char_end: 20384, byte_start: 20376, byte_end: 20385, column_start: 15, column_end: 24, line_start: 599, line_end: 599 }: {pattern}
Token { kind: Space, char_start: 20384, char_end: 20385, byte_start: 20385, byte_end: 20386, column_start: 24, column_end: 25, line_start: 599, line_end: 599 }: " "
Token { kind: Text, char_start: 20385, char_end: 20394, byte_start: 20386, byte_end: 20395, column_start: 25, column_end: 34, line_start: 599, line_end: 599 }: {options}
Token { kind: Newline, char_start: 20394, char_end: 20395, byte_start: 20395, byte_end: 20396, column_start: 34, column_end: 1, line_start: 599, line_end: 600 }: "\n"
Token { kind: Newline, char_start: 20395, char_end: 20396, byte_start: 20396, byte_end: 20397, column_start: 1, column_end: 1, line_start: 600, line_end: 601 }: "\n"
Token { kind: Text, char_start: 20396, char_end: 20404, byte_start: 20397, byte_end: 20405, column_start: 1, column_end: 9, line_start: 601, line_end: 601 }: Searches
Token { kind: Space, char_start: 20404, char_end: 20405, byte_start: 20405, byte_end: 20406, column_start: 9, column_end: 10, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20405, char_end: 20408, byte_start: 20406, byte_end: 20409, column_start: 10, column_end: 13, line_start: 601, line_end: 601 }: for
Token { kind: Space, char_start: 20408, char_end: 20409, byte_start: 20409, byte_end: 20410, column_start: 13, column_end: 14, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20409, char_end: 20418, byte_start: 20410, byte_end: 20419, column_start: 14, column_end: 23, line_start: 601, line_end: 601 }: {pattern}
Token { kind: Space, char_start: 20418, char_end: 20419, byte_start: 20419, byte_end: 20420, column_start: 23, column_end: 24, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20419, char_end: 20421, byte_start: 20420, byte_end: 20422, column_start: 24, column_end: 26, line_start: 601, line_end: 601 }: in
Token { kind: Space, char_start: 20421, char_end: 20422, byte_start: 20422, byte_end: 20423, column_start: 26, column_end: 27, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20422, char_end: 20425, byte_start: 20423, byte_end: 20426, column_start: 27, column_end: 30, line_start: 601, line_end: 601 }: all
Token { kind: Space, char_start: 20425, char_end: 20426, byte_start: 20426, byte_end: 20427, column_start: 30, column_end: 31, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20426, char_end: 20429, byte_start: 20427, byte_end: 20430, column_start: 31, column_end: 34, line_start: 601, line_end: 601 }: the
Token { kind: Space, char_start: 20429, char_end: 20430, byte_start: 20430, byte_end: 20431, column_start: 34, column_end: 35, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20430, char_end: 20435, byte_start: 20431, byte_end: 20436, column_start: 35, column_end: 40, line_start: 601, line_end: 601 }: files
Token { kind: Space, char_start: 20435, char_end: 20436, byte_start: 20436, byte_end: 20437, column_start: 40, column_end: 41, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20436, char_end: 20441, byte_start: 20437, byte_end: 20442, column_start: 41, column_end: 46, line_start: 601, line_end: 601 }: under
Token { kind: Space, char_start: 20441, char_end: 20442, byte_start: 20442, byte_end: 20443, column_start: 46, column_end: 47, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20442, char_end: 20445, byte_start: 20443, byte_end: 20446, column_start: 47, column_end: 50, line_start: 601, line_end: 601 }: the
Token { kind: Space, char_start: 20445, char_end: 20446, byte_start: 20446, byte_end: 20447, column_start: 50, column_end: 51, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20446, char_end: 20453, byte_start: 20447, byte_end: 20454, column_start: 51, column_end: 58, line_start: 601, line_end: 601 }: current
Token { kind: Space, char_start: 20453, char_end: 20454, byte_start: 20454, byte_end: 20455, column_start: 58, column_end: 59, line_start: 601, line_end: 601 }: " "
Token { kind: Text, char_start: 20454, char_end: 20463, byte_start: 20455, byte_end: 20464, column_start: 59, column_end: 68, line_start: 601, line_end: 601 }: directory
Token { kind: Space, char_start: 20463, char_end: 20464, byte_start: 20464, byte_end: 20465, column_start: 68, column_end: 69, line_start: 601, line_end: 601 }: " "
Token { kind: Lparen, char_start: 20464, char_end: 20465, byte_start: 20465, byte_end: 20466, column_start: 69, column_end: 70, line_start: 601, line_end: 601 }: (
Token { kind: Text, char_start: 20465, char_end: 20468, byte_start: 20466, byte_end: 20469, column_start: 70, column_end: 73, line_start: 601, line_end: 601 }: see
Token { kind: Newline, char_start: 20468, char_end: 20469, byte_start: 20469, byte_end: 20470, column_start: 73, column_end: 1, line_start: 601, line_end: 602 }: "\n"
Token { kind: Bar, char_start: 20469, char_end: 20470, byte_start: 20470, byte_end: 20471, column_start: 1, column_end: 2, line_start: 602, line_end: 602 }: |
Token { kind: Text, char_start: 20470, char_end: 20474, byte_start: 20471, byte_end: 20475, column_start: 2, column_end: 6, line_start: 602, line_end: 602 }: :pwd
Token { kind: Bar, char_start: 20474, char_end: 20475, byte_start: 20475, byte_end: 20476, column_start: 6, column_end: 7, line_start: 602, line_end: 602 }: |
Token { kind: Rparen, char_start: 20475, char_end: 20476, byte_start: 20476, byte_end: 20477, column_start: 7, column_end: 8, line_start: 602, line_end: 602 }: )
Token { kind: Text, char_start: 20476, char_end: 20477, byte_start: 20477, byte_end: 20478, column_start: 8, column_end: 9, line_start: 602, line_end: 602 }: ,
Token { kind: Space, char_start: 20477, char_end: 20478, byte_start: 20478, byte_end: 20479, column_start: 9, column_end: 10, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20478, char_end: 20484, byte_start: 20479, byte_end: 20485, column_start: 10, column_end: 16, line_start: 602, line_end: 602 }: unless
Token { kind: Space, char_start: 20484, char_end: 20485, byte_start: 20485, byte_end: 20486, column_start: 16, column_end: 17, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20485, char_end: 20494, byte_start: 20486, byte_end: 20495, column_start: 17, column_end: 26, line_start: 602, line_end: 602 }: otherwise
Token { kind: Space, char_start: 20494, char_end: 20495, byte_start: 20495, byte_end: 20496, column_start: 26, column_end: 27, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20495, char_end: 20505, byte_start: 20496, byte_end: 20506, column_start: 27, column_end: 37, line_start: 602, line_end: 602 }: overridden
Token { kind: Space, char_start: 20505, char_end: 20506, byte_start: 20506, byte_end: 20507, column_start: 37, column_end: 38, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20506, char_end: 20509, byte_start: 20507, byte_end: 20510, column_start: 38, column_end: 41, line_start: 602, line_end: 602 }: via
Token { kind: Space, char_start: 20509, char_end: 20510, byte_start: 20510, byte_end: 20511, column_start: 41, column_end: 42, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20510, char_end: 20520, byte_start: 20511, byte_end: 20521, column_start: 42, column_end: 52, line_start: 602, line_end: 602 }: {options},
Token { kind: Space, char_start: 20520, char_end: 20521, byte_start: 20521, byte_end: 20522, column_start: 52, column_end: 53, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20521, char_end: 20524, byte_start: 20522, byte_end: 20525, column_start: 53, column_end: 56, line_start: 602, line_end: 602 }: and
Token { kind: Space, char_start: 20524, char_end: 20525, byte_start: 20525, byte_end: 20526, column_start: 56, column_end: 57, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20525, char_end: 20533, byte_start: 20526, byte_end: 20534, column_start: 57, column_end: 65, line_start: 602, line_end: 602 }: displays
Token { kind: Space, char_start: 20533, char_end: 20534, byte_start: 20534, byte_end: 20535, column_start: 65, column_end: 66, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20534, char_end: 20537, byte_start: 20535, byte_end: 20538, column_start: 66, column_end: 69, line_start: 602, line_end: 602 }: the
Token { kind: Space, char_start: 20537, char_end: 20538, byte_start: 20538, byte_end: 20539, column_start: 69, column_end: 70, line_start: 602, line_end: 602 }: " "
Token { kind: Text, char_start: 20538, char_end: 20545, byte_start: 20539, byte_end: 20546, column_start: 70, column_end: 77, line_start: 602, line_end: 602 }: results
Token { kind: Newline, char_start: 20545, char_end: 20546, byte_start: 20546, byte_end: 20547, column_start: 77, column_end: 1, line_start: 602, line_end: 603 }: "\n"
Token { kind: Text, char_start: 20546, char_end: 20548, byte_start: 20547, byte_end: 20549, column_start: 1, column_end: 3, line_start: 603, line_end: 603 }: in
Token { kind: Space, char_start: 20548, char_end: 20549, byte_start: 20549, byte_end: 20550, column_start: 3, column_end: 4, line_start: 603, line_end: 603 }: " "
Token { kind: Text, char_start: 20549, char_end: 20552, byte_start: 20550, byte_end: 20553, column_start: 4, column_end: 7, line_start: 603, line_end: 603 }: the
Token { kind: Space, char_start: 20552, char_end: 20553, byte_start: 20553, byte_end: 20554, column_start: 7, column_end: 8, line_start: 603, line_end: 603 }: " "
Token { kind: Bar, char_start: 20553, char_end: 20554, byte_start: 20554, byte_end: 20555, column_start: 8, column_end: 9, line_start: 603, line_end: 603 }: |
Token { kind: Text, char_start: 20554, char_end: 20562, byte_start: 20555, byte_end: 20563, column_start: 9, column_end: 17, line_start: 603, line_end: 603 }: quickfix
Token { kind: Bar, char_start: 20562, char_end: 20563, byte_start: 20563, byte_end: 20564, column_start: 17, column_end: 18, line_start: 603, line_end: 603 }: |
Token { kind: Space, char_start: 20563, char_end: 20564, byte_start: 20564, byte_end: 20565, column_start: 18, column_end: 19, line_start: 603, line_end: 603 }: " "
Token { kind: Text, char_start: 20564, char_end: 20572, byte_start: 20565, byte_end: 20573, column_start: 19, column_end: 27, line_start: 603, line_end: 603 }: listing.
Token { kind: Newline, char_start: 20572, char_end: 20573, byte_start: 20573, byte_end: 20574, column_start: 27, column_end: 1, line_start: 603, line_end: 604 }: "\n"
Token { kind: Newline, char_start: 20573, char_end: 20574, byte_start: 20574, byte_end: 20575, column_start: 1, column_end: 1, line_start: 604, line_end: 605 }: "\n"
Token { kind: Backtick, char_start: 20574, char_end: 20575, byte_start: 20575, byte_end: 20576, column_start: 1, column_end: 2, line_start: 605, line_end: 605 }: `
Token { kind: Text, char_start: 20575, char_end: 20577, byte_start: 20576, byte_end: 20578, column_start: 2, column_end: 4, line_start: 605, line_end: 605 }: rg
Token { kind: Backtick, char_start: 20577, char_end: 20578, byte_start: 20578, byte_end: 20579, column_start: 4, column_end: 5, line_start: 605, line_end: 605 }: `
Token { kind: Space, char_start: 20578, char_end: 20579, byte_start: 20579, byte_end: 20580, column_start: 5, column_end: 6, line_start: 605, line_end: 605 }: " "
Token { kind: Lparen, char_start: 20579, char_end: 20580, byte_start: 20580, byte_end: 20581, column_start: 6, column_end: 7, line_start: 605, line_end: 605 }: (
Token { kind: Text, char_start: 20580, char_end: 20587, byte_start: 20581, byte_end: 20588, column_start: 7, column_end: 14, line_start: 605, line_end: 605 }: ripgrep
Token { kind: Rparen, char_start: 20587, char_end: 20588, byte_start: 20588, byte_end: 20589, column_start: 14, column_end: 15, line_start: 605, line_end: 605 }: )
Token { kind: Space, char_start: 20588, char_end: 20589, byte_start: 20589, byte_end: 20590, column_start: 15, column_end: 16, line_start: 605, line_end: 605 }: " "
Token { kind: Text, char_start: 20589, char_end: 20593, byte_start: 20590, byte_end: 20594, column_start: 16, column_end: 20, line_start: 605, line_end: 605 }: then
Token { kind: Space, char_start: 20593, char_end: 20594, byte_start: 20594, byte_end: 20595, column_start: 20, column_end: 21, line_start: 605, line_end: 605 }: " "
Token { kind: Backtick, char_start: 20594, char_end: 20595, byte_start: 20595, byte_end: 20596, column_start: 21, column_end: 22, line_start: 605, line_end: 605 }: `
Token { kind: Text, char_start: 20595, char_end: 20597, byte_start: 20596, byte_end: 20598, column_start: 22, column_end: 24, line_start: 605, line_end: 605 }: ag
Token { kind: Backtick, char_start: 20597, char_end: 20598, byte_start: 20598, byte_end: 20599, column_start: 24, column_end: 25, line_start: 605, line_end: 605 }: `
Token { kind: Space, char_start: 20598, char_end: 20599, byte_start: 20599, byte_end: 20600, column_start: 25, column_end: 26, line_start: 605, line_end: 605 }: " "
Token { kind: Lparen, char_start: 20599, char_end: 20600, byte_start: 20600, byte_end: 20601, column_start: 26, column_end: 27, line_start: 605, line_end: 605 }: (
Token { kind: Text, char_start: 20600, char_end: 20603, byte_start: 20601, byte_end: 20604, column_start: 27, column_end: 30, line_start: 605, line_end: 605 }: The
Token { kind: Space, char_start: 20603, char_end: 20604, byte_start: 20604, byte_end: 20605, column_start: 30, column_end: 31, line_start: 605, line_end: 605 }: " "
Token { kind: Text, char_start: 20604, char_end: 20610, byte_start: 20605, byte_end: 20611, column_start: 31, column_end: 37, line_start: 605, line_end: 605 }: Silver
Token { kind: Space, char_start: 20610, char_end: 20611, byte_start: 20611, byte_end: 20612, column_start: 37, column_end: 38, line_start: 605, line_end: 605 }: " "
Token { kind: Text, char_start: 20611, char_end: 20619, byte_start: 20612, byte_end: 20620, column_start: 38, column_end: 46, line_start: 605, line_end: 605 }: Searcher
Token { kind: Rparen, char_start: 20619, char_end: 20620, byte_start: 20620, byte_end: 20621, column_start: 46, column_end: 47, line_start: 605, line_end: 605 }: )
Token { kind: Space, char_start: 20620, char_end: 20621, byte_start: 20621, byte_end: 20622, column_start: 47, column_end: 48, line_start: 605, line_end: 605 }: " "
Token { kind: Text, char_start: 20621, char_end: 20625, byte_start: 20622, byte_end: 20626, column_start: 48, column_end: 52, line_start: 605, line_end: 605 }: will
Token { kind: Space, char_start: 20625, char_end: 20626, byte_start: 20626, byte_end: 20627, column_start: 52, column_end: 53, line_start: 605, line_end: 605 }: " "
Token { kind: Text, char_start: 20626, char_end: 20628, byte_start: 20627, byte_end: 20629, column_start: 53, column_end: 55, line_start: 605, line_end: 605 }: be
Token { kind: Space, char_start: 20628, char_end: 20629, byte_start: 20629, byte_end: 20630, column_start: 55, column_end: 56, line_start: 605, line_end: 605 }: " "
Token { kind: Text, char_start: 20629, char_end: 20633, byte_start: 20630, byte_end: 20634, column_start: 56, column_end: 60, line_start: 605, line_end: 605 }: used
Token { kind: Space, char_start: 20633, char_end: 20634, byte_start: 20634, byte_end: 20635, column_start: 60, column_end: 61, line_start: 605, line_end: 605 }: " "
Token { kind: Text, char_start: 20634, char_end: 20648, byte_start: 20635, byte_end: 20649, column_start: 61, column_end: 75, line_start: 605, line_end: 605 }: preferentially
Token { kind: Space, char_start: 20648, char_end: 20649, byte_start: 20649, byte_end: 20650, column_start: 75, column_end: 76, line_start: 605, line_end: 605 }: " "
Token { kind: Text, char_start: 20649, char_end: 20651, byte_start: 20650, byte_end: 20652, column_start: 76, column_end: 78, line_start: 605, line_end: 605 }: if
Token { kind: Newline, char_start: 20651, char_end: 20652, byte_start: 20652, byte_end: 20653, column_start: 78, column_end: 1, line_start: 605, line_end: 606 }: "\n"
Token { kind: Text, char_start: 20652, char_end: 20659, byte_start: 20653, byte_end: 20660, column_start: 1, column_end: 8, line_start: 606, line_end: 606 }: present
Token { kind: Space, char_start: 20659, char_end: 20660, byte_start: 20660, byte_end: 20661, column_start: 8, column_end: 9, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20660, char_end: 20662, byte_start: 20661, byte_end: 20663, column_start: 9, column_end: 11, line_start: 606, line_end: 606 }: on
Token { kind: Space, char_start: 20662, char_end: 20663, byte_start: 20663, byte_end: 20664, column_start: 11, column_end: 12, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20663, char_end: 20666, byte_start: 20664, byte_end: 20667, column_start: 12, column_end: 15, line_start: 606, line_end: 606 }: the
Token { kind: Space, char_start: 20666, char_end: 20667, byte_start: 20667, byte_end: 20668, column_start: 15, column_end: 16, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20667, char_end: 20674, byte_start: 20668, byte_end: 20675, column_start: 16, column_end: 23, line_start: 606, line_end: 606 }: system,
Token { kind: Space, char_start: 20674, char_end: 20675, byte_start: 20675, byte_end: 20676, column_start: 23, column_end: 24, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20675, char_end: 20682, byte_start: 20676, byte_end: 20683, column_start: 24, column_end: 31, line_start: 606, line_end: 606 }: because
Token { kind: Space, char_start: 20682, char_end: 20683, byte_start: 20683, byte_end: 20684, column_start: 31, column_end: 32, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20683, char_end: 20687, byte_start: 20684, byte_end: 20688, column_start: 32, column_end: 36, line_start: 606, line_end: 606 }: they
Token { kind: Space, char_start: 20687, char_end: 20688, byte_start: 20688, byte_end: 20689, column_start: 36, column_end: 37, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20688, char_end: 20691, byte_start: 20689, byte_end: 20692, column_start: 37, column_end: 40, line_start: 606, line_end: 606 }: are
Token { kind: Space, char_start: 20691, char_end: 20692, byte_start: 20692, byte_end: 20693, column_start: 40, column_end: 41, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20692, char_end: 20699, byte_start: 20693, byte_end: 20700, column_start: 41, column_end: 48, line_start: 606, line_end: 606 }: faster,
Token { kind: Space, char_start: 20699, char_end: 20700, byte_start: 20700, byte_end: 20701, column_start: 48, column_end: 49, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20700, char_end: 20707, byte_start: 20701, byte_end: 20708, column_start: 49, column_end: 56, line_start: 606, line_end: 606 }: falling
Token { kind: Space, char_start: 20707, char_end: 20708, byte_start: 20708, byte_end: 20709, column_start: 56, column_end: 57, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20708, char_end: 20712, byte_start: 20709, byte_end: 20713, column_start: 57, column_end: 61, line_start: 606, line_end: 606 }: back
Token { kind: Space, char_start: 20712, char_end: 20713, byte_start: 20713, byte_end: 20714, column_start: 61, column_end: 62, line_start: 606, line_end: 606 }: " "
Token { kind: Text, char_start: 20713, char_end: 20715, byte_start: 20714, byte_end: 20716, column_start: 62, column_end: 64, line_start: 606, line_end: 606 }: to
Token { kind: Newline, char_start: 20715, char_end: 20716, byte_start: 20716, byte_end: 20717, column_start: 64, column_end: 1, line_start: 606, line_end: 607 }: "\n"
Token { kind: Backtick, char_start: 20716, char_end: 20717, byte_start: 20717, byte_end: 20718, column_start: 1, column_end: 2, line_start: 607, line_end: 607 }: `
Token { kind: Text, char_start: 20717, char_end: 20720, byte_start: 20718, byte_end: 20721, column_start: 2, column_end: 5, line_start: 607, line_end: 607 }: ack
Token { kind: Backtick, char_start: 20720, char_end: 20721, byte_start: 20721, byte_end: 20722, column_start: 5, column_end: 6, line_start: 607, line_end: 607 }: `
Token { kind: Text, char_start: 20721, char_end: 20722, byte_start: 20722, byte_end: 20723, column_start: 6, column_end: 7, line_start: 607, line_end: 607 }: /
Token { kind: Backtick, char_start: 20722, char_end: 20723, byte_start: 20723, byte_end: 20724, column_start: 7, column_end: 8, line_start: 607, line_end: 607 }: `
Token { kind: Text, char_start: 20723, char_end: 20726, byte_start: 20724, byte_end: 20727, column_start: 8, column_end: 11, line_start: 607, line_end: 607 }: ack
Token { kind: Hyphen, char_start: 20726, char_end: 20727, byte_start: 20727, byte_end: 20728, column_start: 11, column_end: 12, line_start: 607, line_end: 607 }: -
Token { kind: Text, char_start: 20727, char_end: 20731, byte_start: 20728, byte_end: 20732, column_start: 12, column_end: 16, line_start: 607, line_end: 607 }: grep
Token { kind: Backtick, char_start: 20731, char_end: 20732, byte_start: 20732, byte_end: 20733, column_start: 16, column_end: 17, line_start: 607, line_end: 607 }: `
Token { kind: Space, char_start: 20732, char_end: 20733, byte_start: 20733, byte_end: 20734, column_start: 17, column_end: 18, line_start: 607, line_end: 607 }: " "
Token { kind: Text, char_start: 20733, char_end: 20735, byte_start: 20734, byte_end: 20736, column_start: 18, column_end: 20, line_start: 607, line_end: 607 }: as
Token { kind: Space, char_start: 20735, char_end: 20736, byte_start: 20736, byte_end: 20737, column_start: 20, column_end: 21, line_start: 607, line_end: 607 }: " "
Token { kind: Text, char_start: 20736, char_end: 20743, byte_start: 20737, byte_end: 20744, column_start: 21, column_end: 28, line_start: 607, line_end: 607 }: needed.
Token { kind: Newline, char_start: 20743, char_end: 20744, byte_start: 20744, byte_end: 20745, column_start: 28, column_end: 1, line_start: 607, line_end: 608 }: "\n"
Token { kind: Newline, char_start: 20744, char_end: 20745, byte_start: 20745, byte_end: 20746, column_start: 1, column_end: 1, line_start: 608, line_end: 609 }: "\n"
Token { kind: Text, char_start: 20745, char_end: 20747, byte_start: 20746, byte_end: 20748, column_start: 1, column_end: 3, line_start: 609, line_end: 609 }: On
Token { kind: Space, char_start: 20747, char_end: 20748, byte_start: 20748, byte_end: 20749, column_start: 3, column_end: 4, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20748, char_end: 20753, byte_start: 20749, byte_end: 20754, column_start: 4, column_end: 9, line_start: 609, line_end: 609 }: newer
Token { kind: Space, char_start: 20753, char_end: 20754, byte_start: 20754, byte_end: 20755, column_start: 9, column_end: 10, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20754, char_end: 20762, byte_start: 20755, byte_end: 20763, column_start: 10, column_end: 18, line_start: 609, line_end: 609 }: versions
Token { kind: Space, char_start: 20762, char_end: 20763, byte_start: 20763, byte_end: 20764, column_start: 18, column_end: 19, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20763, char_end: 20765, byte_start: 20764, byte_end: 20766, column_start: 19, column_end: 21, line_start: 609, line_end: 609 }: of
Token { kind: Space, char_start: 20765, char_end: 20766, byte_start: 20766, byte_end: 20767, column_start: 21, column_end: 22, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20766, char_end: 20769, byte_start: 20767, byte_end: 20770, column_start: 22, column_end: 25, line_start: 609, line_end: 609 }: Vim
Token { kind: Space, char_start: 20769, char_end: 20770, byte_start: 20770, byte_end: 20771, column_start: 25, column_end: 26, line_start: 609, line_end: 609 }: " "
Token { kind: Lparen, char_start: 20770, char_end: 20771, byte_start: 20771, byte_end: 20772, column_start: 26, column_end: 27, line_start: 609, line_end: 609 }: (
Token { kind: Text, char_start: 20771, char_end: 20778, byte_start: 20772, byte_end: 20779, column_start: 27, column_end: 34, line_start: 609, line_end: 609 }: version
Token { kind: Space, char_start: 20778, char_end: 20779, byte_start: 20779, byte_end: 20780, column_start: 34, column_end: 35, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20779, char_end: 20780, byte_start: 20780, byte_end: 20781, column_start: 35, column_end: 36, line_start: 609, line_end: 609 }: 8
Token { kind: Space, char_start: 20780, char_end: 20781, byte_start: 20781, byte_end: 20782, column_start: 36, column_end: 37, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20781, char_end: 20784, byte_start: 20782, byte_end: 20785, column_start: 37, column_end: 40, line_start: 609, line_end: 609 }: and
Token { kind: Space, char_start: 20784, char_end: 20785, byte_start: 20785, byte_end: 20786, column_start: 40, column_end: 41, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20785, char_end: 20790, byte_start: 20786, byte_end: 20791, column_start: 41, column_end: 46, line_start: 609, line_end: 609 }: above
Token { kind: Rparen, char_start: 20790, char_end: 20791, byte_start: 20791, byte_end: 20792, column_start: 46, column_end: 47, line_start: 609, line_end: 609 }: )
Token { kind: Text, char_start: 20791, char_end: 20792, byte_start: 20792, byte_end: 20793, column_start: 47, column_end: 48, line_start: 609, line_end: 609 }: ,
Token { kind: Space, char_start: 20792, char_end: 20793, byte_start: 20793, byte_end: 20794, column_start: 48, column_end: 49, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20793, char_end: 20796, byte_start: 20794, byte_end: 20797, column_start: 49, column_end: 52, line_start: 609, line_end: 609 }: the
Token { kind: Space, char_start: 20796, char_end: 20797, byte_start: 20797, byte_end: 20798, column_start: 52, column_end: 53, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20797, char_end: 20803, byte_start: 20798, byte_end: 20804, column_start: 53, column_end: 59, line_start: 609, line_end: 609 }: search
Token { kind: Space, char_start: 20803, char_end: 20804, byte_start: 20804, byte_end: 20805, column_start: 59, column_end: 60, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20804, char_end: 20811, byte_start: 20805, byte_end: 20812, column_start: 60, column_end: 67, line_start: 609, line_end: 609 }: process
Token { kind: Space, char_start: 20811, char_end: 20812, byte_start: 20812, byte_end: 20813, column_start: 67, column_end: 68, line_start: 609, line_end: 609 }: " "
Token { kind: Text, char_start: 20812, char_end: 20816, byte_start: 20813, byte_end: 20817, column_start: 68, column_end: 72, line_start: 609, line_end: 609 }: runs
Token { kind: Newline, char_start: 20816, char_end: 20817, byte_start: 20817, byte_end: 20818, column_start: 72, column_end: 1, line_start: 609, line_end: 610 }: "\n"
Token { kind: Text, char_start: 20817, char_end: 20831, byte_start: 20818, byte_end: 20832, column_start: 1, column_end: 15, line_start: 610, line_end: 610 }: asynchronously
Token { kind: Space, char_start: 20831, char_end: 20832, byte_start: 20832, byte_end: 20833, column_start: 15, column_end: 16, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20832, char_end: 20834, byte_start: 20833, byte_end: 20835, column_start: 16, column_end: 18, line_start: 610, line_end: 610 }: in
Token { kind: Space, char_start: 20834, char_end: 20835, byte_start: 20835, byte_end: 20836, column_start: 18, column_end: 19, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20835, char_end: 20838, byte_start: 20836, byte_end: 20839, column_start: 19, column_end: 22, line_start: 610, line_end: 610 }: the
Token { kind: Space, char_start: 20838, char_end: 20839, byte_start: 20839, byte_end: 20840, column_start: 22, column_end: 23, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20839, char_end: 20849, byte_start: 20840, byte_end: 20850, column_start: 23, column_end: 33, line_start: 610, line_end: 610 }: background
Token { kind: Space, char_start: 20849, char_end: 20850, byte_start: 20850, byte_end: 20851, column_start: 33, column_end: 34, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20850, char_end: 20853, byte_start: 20851, byte_end: 20854, column_start: 34, column_end: 37, line_start: 610, line_end: 610 }: and
Token { kind: Space, char_start: 20853, char_end: 20854, byte_start: 20854, byte_end: 20855, column_start: 37, column_end: 38, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20854, char_end: 20858, byte_start: 20855, byte_end: 20859, column_start: 38, column_end: 42, line_start: 610, line_end: 610 }: does
Token { kind: Space, char_start: 20858, char_end: 20859, byte_start: 20859, byte_end: 20860, column_start: 42, column_end: 43, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20859, char_end: 20862, byte_start: 20860, byte_end: 20863, column_start: 43, column_end: 46, line_start: 610, line_end: 610 }: not
Token { kind: Space, char_start: 20862, char_end: 20863, byte_start: 20863, byte_end: 20864, column_start: 46, column_end: 47, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20863, char_end: 20868, byte_start: 20864, byte_end: 20869, column_start: 47, column_end: 52, line_start: 610, line_end: 610 }: block
Token { kind: Space, char_start: 20868, char_end: 20869, byte_start: 20869, byte_end: 20870, column_start: 52, column_end: 53, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20869, char_end: 20872, byte_start: 20870, byte_end: 20873, column_start: 53, column_end: 56, line_start: 610, line_end: 610 }: the
Token { kind: Space, char_start: 20872, char_end: 20873, byte_start: 20873, byte_end: 20874, column_start: 56, column_end: 57, line_start: 610, line_end: 610 }: " "
Token { kind: Text, char_start: 20873, char_end: 20876, byte_start: 20874, byte_end: 20877, column_start: 57, column_end: 60, line_start: 610, line_end: 610 }: UI.
Token { kind: Newline, char_start: 20876, char_end: 20877, byte_start: 20877, byte_end: 20878, column_start: 60, column_end: 1, line_start: 610, line_end: 611 }: "\n"
Token { kind: Newline, char_start: 20877, char_end: 20878, byte_start: 20878, byte_end: 20879, column_start: 1, column_end: 1, line_start: 611, line_end: 612 }: "\n"
Token { kind: Text, char_start: 20878, char_end: 20890, byte_start: 20879, byte_end: 20891, column_start: 1, column_end: 13, line_start: 612, line_end: 612 }: Asynchronous
Token { kind: Space, char_start: 20890, char_end: 20891, byte_start: 20891, byte_end: 20892, column_start: 13, column_end: 14, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20891, char_end: 20899, byte_start: 20892, byte_end: 20900, column_start: 14, column_end: 22, line_start: 612, line_end: 612 }: searches
Token { kind: Space, char_start: 20899, char_end: 20900, byte_start: 20900, byte_end: 20901, column_start: 22, column_end: 23, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20900, char_end: 20903, byte_start: 20901, byte_end: 20904, column_start: 23, column_end: 26, line_start: 612, line_end: 612 }: are
Token { kind: Space, char_start: 20903, char_end: 20904, byte_start: 20904, byte_end: 20905, column_start: 26, column_end: 27, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20904, char_end: 20913, byte_start: 20905, byte_end: 20914, column_start: 27, column_end: 36, line_start: 612, line_end: 612 }: preferred
Token { kind: Space, char_start: 20913, char_end: 20914, byte_start: 20914, byte_end: 20915, column_start: 36, column_end: 37, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20914, char_end: 20921, byte_start: 20915, byte_end: 20922, column_start: 37, column_end: 44, line_start: 612, line_end: 612 }: because
Token { kind: Space, char_start: 20921, char_end: 20922, byte_start: 20922, byte_end: 20923, column_start: 44, column_end: 45, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20922, char_end: 20926, byte_start: 20923, byte_end: 20927, column_start: 45, column_end: 49, line_start: 612, line_end: 612 }: they
Token { kind: Space, char_start: 20926, char_end: 20927, byte_start: 20927, byte_end: 20928, column_start: 49, column_end: 50, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20927, char_end: 20929, byte_start: 20928, byte_end: 20930, column_start: 50, column_end: 52, line_start: 612, line_end: 612 }: do
Token { kind: Space, char_start: 20929, char_end: 20930, byte_start: 20930, byte_end: 20931, column_start: 52, column_end: 53, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20930, char_end: 20933, byte_start: 20931, byte_end: 20934, column_start: 53, column_end: 56, line_start: 612, line_end: 612 }: not
Token { kind: Space, char_start: 20933, char_end: 20934, byte_start: 20934, byte_end: 20935, column_start: 56, column_end: 57, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20934, char_end: 20940, byte_start: 20935, byte_end: 20941, column_start: 57, column_end: 63, line_start: 612, line_end: 612 }: block,
Token { kind: Space, char_start: 20940, char_end: 20941, byte_start: 20941, byte_end: 20942, column_start: 63, column_end: 64, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20941, char_end: 20948, byte_start: 20942, byte_end: 20949, column_start: 64, column_end: 71, line_start: 612, line_end: 612 }: despite
Token { kind: Space, char_start: 20948, char_end: 20949, byte_start: 20949, byte_end: 20950, column_start: 71, column_end: 72, line_start: 612, line_end: 612 }: " "
Token { kind: Text, char_start: 20949, char_end: 20952, byte_start: 20950, byte_end: 20953, column_start: 72, column_end: 75, line_start: 612, line_end: 612 }: the
Token { kind: Newline, char_start: 20952, char_end: 20953, byte_start: 20953, byte_end: 20954, column_start: 75, column_end: 1, line_start: 612, line_end: 613 }: "\n"
Token { kind: Text, char_start: 20953, char_end: 20957, byte_start: 20954, byte_end: 20958, column_start: 1, column_end: 5, line_start: 613, line_end: 613 }: fact
Token { kind: Space, char_start: 20957, char_end: 20958, byte_start: 20958, byte_end: 20959, column_start: 5, column_end: 6, line_start: 613, line_end: 613 }: " "
Token { kind: Text, char_start: 20958, char_end: 20962, byte_start: 20959, byte_end: 20963, column_start: 6, column_end: 10, line_start: 613, line_end: 613 }: that
Token { kind: Space, char_start: 20962, char_end: 20963, byte_start: 20963, byte_end: 20964, column_start: 10, column_end: 11, line_start: 613, line_end: 613 }: " "
Token { kind: Text, char_start: 20963, char_end: 20966, byte_start: 20964, byte_end: 20967, column_start: 11, column_end: 14, line_start: 613, line_end: 613 }: Vim
Token { kind: Space, char_start: 20966, char_end: 20967, byte_start: 20967, byte_end: 20968, column_start: 14, column_end: 15, line_start: 613, line_end: 613 }: " "
Token { kind: Text, char_start: 20967, char_end: 20973, byte_start: 20968, byte_end: 20974, column_start: 15, column_end: 21, line_start: 613, line_end: 613 }: itself
Token { kind: Space, char_start: 20973, char_end: 20974, byte_start: 20974, byte_end: 20975, column_start: 21, column_end: 22, line_start: 613, line_end: 613 }: " "
Token { kind: Text, char_start: 20974, char_end: 20976, byte_start: 20975, byte_end: 20977, column_start: 22, column_end: 24, line_start: 613, line_end: 613 }: is
Token { kind: Space, char_start: 20976, char_end: 20977, byte_start: 20977, byte_end: 20978, column_start: 24, column_end: 25, line_start: 613, line_end: 613 }: " "
Token { kind: Text, char_start: 20977, char_end: 20983, byte_start: 20978, byte_end: 20984, column_start: 25, column_end: 31, line_start: 613, line_end: 613 }: single
Token { kind: Space, char_start: 20983, char_end: 20984, byte_start: 20984, byte_end: 20985, column_start: 31, column_end: 32, line_start: 613, line_end: 613 }: " "
Token { kind: Text, char_start: 20984, char_end: 20993, byte_start: 20985, byte_end: 20994, column_start: 32, column_end: 41, line_start: 613, line_end: 613 }: threaded.
Token { kind: Newline, char_start: 20993, char_end: 20994, byte_start: 20994, byte_end: 20995, column_start: 41, column_end: 1, line_start: 613, line_end: 614 }: "\n"
Token { kind: Newline, char_start: 20994, char_end: 20995, byte_start: 20995, byte_end: 20996, column_start: 1, column_end: 1, line_start: 614, line_end: 615 }: "\n"
Token { kind: Text, char_start: 20995, char_end: 20998, byte_start: 20996, byte_end: 20999, column_start: 1, column_end: 4, line_start: 615, line_end: 615 }: The
Token { kind: Space, char_start: 20998, char_end: 20999, byte_start: 20999, byte_end: 21000, column_start: 4, column_end: 5, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 20999, char_end: 21008, byte_start: 21000, byte_end: 21009, column_start: 5, column_end: 14, line_start: 615, line_end: 615 }: {pattern}
Token { kind: Space, char_start: 21008, char_end: 21009, byte_start: 21009, byte_end: 21010, column_start: 14, column_end: 15, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21009, char_end: 21011, byte_start: 21010, byte_end: 21012, column_start: 15, column_end: 17, line_start: 615, line_end: 615 }: is
Token { kind: Space, char_start: 21011, char_end: 21012, byte_start: 21012, byte_end: 21013, column_start: 17, column_end: 18, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21012, char_end: 21018, byte_start: 21013, byte_end: 21019, column_start: 18, column_end: 24, line_start: 615, line_end: 615 }: passed
Token { kind: Space, char_start: 21018, char_end: 21019, byte_start: 21019, byte_end: 21020, column_start: 24, column_end: 25, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21019, char_end: 21026, byte_start: 21020, byte_end: 21027, column_start: 25, column_end: 32, line_start: 615, line_end: 615 }: through
Token { kind: Space, char_start: 21026, char_end: 21027, byte_start: 21027, byte_end: 21028, column_start: 32, column_end: 33, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21027, char_end: 21029, byte_start: 21028, byte_end: 21030, column_start: 33, column_end: 35, line_start: 615, line_end: 615 }: as
Token { kind: Hyphen, char_start: 21029, char_end: 21030, byte_start: 21030, byte_end: 21031, column_start: 35, column_end: 36, line_start: 615, line_end: 615 }: -
Token { kind: Text, char_start: 21030, char_end: 21032, byte_start: 21031, byte_end: 21033, column_start: 36, column_end: 38, line_start: 615, line_end: 615 }: is
Token { kind: Space, char_start: 21032, char_end: 21033, byte_start: 21033, byte_end: 21034, column_start: 38, column_end: 39, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21033, char_end: 21035, byte_start: 21034, byte_end: 21036, column_start: 39, column_end: 41, line_start: 615, line_end: 615 }: to
Token { kind: Space, char_start: 21035, char_end: 21036, byte_start: 21036, byte_end: 21037, column_start: 41, column_end: 42, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21036, char_end: 21039, byte_start: 21037, byte_end: 21040, column_start: 42, column_end: 45, line_start: 615, line_end: 615 }: the
Token { kind: Space, char_start: 21039, char_end: 21040, byte_start: 21040, byte_end: 21041, column_start: 45, column_end: 46, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21040, char_end: 21050, byte_start: 21041, byte_end: 21051, column_start: 46, column_end: 56, line_start: 615, line_end: 615 }: underlying
Token { kind: Space, char_start: 21050, char_end: 21051, byte_start: 21051, byte_end: 21052, column_start: 56, column_end: 57, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21051, char_end: 21057, byte_start: 21052, byte_end: 21058, column_start: 57, column_end: 63, line_start: 615, line_end: 615 }: search
Token { kind: Space, char_start: 21057, char_end: 21058, byte_start: 21058, byte_end: 21059, column_start: 63, column_end: 64, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21058, char_end: 21066, byte_start: 21059, byte_end: 21067, column_start: 64, column_end: 72, line_start: 615, line_end: 615 }: program,
Token { kind: Space, char_start: 21066, char_end: 21067, byte_start: 21067, byte_end: 21068, column_start: 72, column_end: 73, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21067, char_end: 21070, byte_start: 21068, byte_end: 21071, column_start: 73, column_end: 76, line_start: 615, line_end: 615 }: and
Token { kind: Space, char_start: 21070, char_end: 21071, byte_start: 21071, byte_end: 21072, column_start: 76, column_end: 77, line_start: 615, line_end: 615 }: " "
Token { kind: Text, char_start: 21071, char_end: 21073, byte_start: 21072, byte_end: 21074, column_start: 77, column_end: 79, line_start: 615, line_end: 615 }: no
Token { kind: Newline, char_start: 21073, char_end: 21074, byte_start: 21074, byte_end: 21075, column_start: 79, column_end: 1, line_start: 615, line_end: 616 }: "\n"
Token { kind: Text, char_start: 21074, char_end: 21082, byte_start: 21075, byte_end: 21083, column_start: 1, column_end: 9, line_start: 616, line_end: 616 }: escaping
Token { kind: Space, char_start: 21082, char_end: 21083, byte_start: 21083, byte_end: 21084, column_start: 9, column_end: 10, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21083, char_end: 21085, byte_start: 21084, byte_end: 21086, column_start: 10, column_end: 12, line_start: 616, line_end: 616 }: is
Token { kind: Space, char_start: 21085, char_end: 21086, byte_start: 21086, byte_end: 21087, column_start: 12, column_end: 13, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21086, char_end: 21094, byte_start: 21087, byte_end: 21095, column_start: 13, column_end: 21, line_start: 616, line_end: 616 }: required
Token { kind: Space, char_start: 21094, char_end: 21095, byte_start: 21095, byte_end: 21096, column_start: 21, column_end: 22, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21095, char_end: 21100, byte_start: 21096, byte_end: 21101, column_start: 22, column_end: 27, line_start: 616, line_end: 616 }: other
Token { kind: Space, char_start: 21100, char_end: 21101, byte_start: 21101, byte_end: 21102, column_start: 27, column_end: 28, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21101, char_end: 21105, byte_start: 21102, byte_end: 21106, column_start: 28, column_end: 32, line_start: 616, line_end: 616 }: than
Token { kind: Space, char_start: 21105, char_end: 21106, byte_start: 21106, byte_end: 21107, column_start: 32, column_end: 33, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21106, char_end: 21115, byte_start: 21107, byte_end: 21116, column_start: 33, column_end: 42, line_start: 616, line_end: 616 }: preceding
Token { kind: Space, char_start: 21115, char_end: 21116, byte_start: 21116, byte_end: 21117, column_start: 42, column_end: 43, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21116, char_end: 21122, byte_start: 21117, byte_end: 21123, column_start: 43, column_end: 49, line_start: 616, line_end: 616 }: spaces
Token { kind: Space, char_start: 21122, char_end: 21123, byte_start: 21123, byte_end: 21124, column_start: 49, column_end: 50, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21123, char_end: 21125, byte_start: 21124, byte_end: 21126, column_start: 50, column_end: 52, line_start: 616, line_end: 616 }: by
Token { kind: Space, char_start: 21125, char_end: 21126, byte_start: 21126, byte_end: 21127, column_start: 52, column_end: 53, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21126, char_end: 21127, byte_start: 21127, byte_end: 21128, column_start: 53, column_end: 54, line_start: 616, line_end: 616 }: a
Token { kind: Space, char_start: 21127, char_end: 21128, byte_start: 21128, byte_end: 21129, column_start: 54, column_end: 55, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21128, char_end: 21134, byte_start: 21129, byte_end: 21135, column_start: 55, column_end: 61, line_start: 616, line_end: 616 }: single
Token { kind: Space, char_start: 21134, char_end: 21135, byte_start: 21135, byte_end: 21136, column_start: 61, column_end: 62, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21135, char_end: 21145, byte_start: 21136, byte_end: 21146, column_start: 62, column_end: 72, line_start: 616, line_end: 616 }: backslash.
Token { kind: Space, char_start: 21145, char_end: 21146, byte_start: 21146, byte_end: 21147, column_start: 72, column_end: 73, line_start: 616, line_end: 616 }: " "
Token { kind: Text, char_start: 21146, char_end: 21149, byte_start: 21147, byte_end: 21150, column_start: 73, column_end: 76, line_start: 616, line_end: 616 }: For
Token { kind: Newline, char_start: 21149, char_end: 21150, byte_start: 21150, byte_end: 21151, column_start: 76, column_end: 1, line_start: 616, line_end: 617 }: "\n"
Token { kind: Text, char_start: 21150, char_end: 21158, byte_start: 21151, byte_end: 21159, column_start: 1, column_end: 9, line_start: 617, line_end: 617 }: example,
Token { kind: Space, char_start: 21158, char_end: 21159, byte_start: 21159, byte_end: 21160, column_start: 9, column_end: 10, line_start: 617, line_end: 617 }: " "
Token { kind: Text, char_start: 21159, char_end: 21161, byte_start: 21160, byte_end: 21162, column_start: 10, column_end: 12, line_start: 617, line_end: 617 }: to
Token { kind: Space, char_start: 21161, char_end: 21162, byte_start: 21162, byte_end: 21163, column_start: 12, column_end: 13, line_start: 617, line_end: 617 }: " "
Token { kind: Text, char_start: 21162, char_end: 21168, byte_start: 21163, byte_end: 21169, column_start: 13, column_end: 19, line_start: 617, line_end: 617 }: search
Token { kind: Space, char_start: 21168, char_end: 21169, byte_start: 21169, byte_end: 21170, column_start: 19, column_end: 20, line_start: 617, line_end: 617 }: " "
Token { kind: Text, char_start: 21169, char_end: 21172, byte_start: 21170, byte_end: 21173, column_start: 20, column_end: 23, line_start: 617, line_end: 617 }: for
Token { kind: Space, char_start: 21172, char_end: 21173, byte_start: 21173, byte_end: 21174, column_start: 23, column_end: 24, line_start: 617, line_end: 617 }: " "
Token { kind: Text, char_start: 21173, char_end: 21179, byte_start: 21174, byte_end: 21180, column_start: 24, column_end: 30, line_start: 617, line_end: 617 }: "\bfoo
Token { kind: Lbracket, char_start: 21179, char_end: 21180, byte_start: 21180, byte_end: 21181, column_start: 30, column_end: 31, line_start: 617, line_end: 617 }: [
Token { kind: Text, char_start: 21180, char_end: 21181, byte_start: 21181, byte_end: 21182, column_start: 31, column_end: 32, line_start: 617, line_end: 617 }: 0
Token { kind: Hyphen, char_start: 21181, char_end: 21182, byte_start: 21182, byte_end: 21183, column_start: 32, column_end: 33, line_start: 617, line_end: 617 }: -
Token { kind: Text, char_start: 21182, char_end: 21183, byte_start: 21183, byte_end: 21184, column_start: 33, column_end: 34, line_start: 617, line_end: 617 }: 9
Token { kind: Rbracket, char_start: 21183, char_end: 21184, byte_start: 21184, byte_end: 21185, column_start: 34, column_end: 35, line_start: 617, line_end: 617 }: ]
Token { kind: Text, char_start: 21184, char_end: 21187, byte_start: 21185, byte_end: 21188, column_start: 35, column_end: 38, line_start: 617, line_end: 617 }: {2}
Token { kind: Space, char_start: 21187, char_end: 21188, byte_start: 21188, byte_end: 21189, column_start: 38, column_end: 39, line_start: 617, line_end: 617 }: " "
Token { kind: Text, char_start: 21188, char_end: 21194, byte_start: 21189, byte_end: 21195, column_start: 39, column_end: 45, line_start: 617, line_end: 617 }: bar\b"
Token { kind: Space, char_start: 21194, char_end: 21195, byte_start: 21195, byte_end: 21196, column_start: 45, column_end: 46, line_start: 617, line_end: 617 }: " "
Token { kind: Lparen, char_start: 21195, char_end: 21196, byte_start: 21196, byte_end: 21197, column_start: 46, column_end: 47, line_start: 617, line_end: 617 }: (
Token { kind: Text, char_start: 21196, char_end: 21199, byte_start: 21197, byte_end: 21200, column_start: 47, column_end: 50, line_start: 617, line_end: 617 }: ie.
Token { kind: Space, char_start: 21199, char_end: 21200, byte_start: 21200, byte_end: 21201, column_start: 50, column_end: 51, line_start: 617, line_end: 617 }: " "
Token { kind: Text, char_start: 21200, char_end: 21205, byte_start: 21201, byte_end: 21206, column_start: 51, column_end: 56, line_start: 617, line_end: 617 }: using
Token { kind: Space, char_start: 21205, char_end: 21206, byte_start: 21206, byte_end: 21207, column_start: 56, column_end: 57, line_start: 617, line_end: 617 }: " "
Token { kind: Backtick, char_start: 21206, char_end: 21207, byte_start: 21207, byte_end: 21208, column_start: 57, column_end: 58, line_start: 617, line_end: 617 }: `
Token { kind: Text, char_start: 21207, char_end: 21209, byte_start: 21208, byte_end: 21210, column_start: 58, column_end: 60, line_start: 617, line_end: 617 }: ag
Token { kind: Backtick, char_start: 21209, char_end: 21210, byte_start: 21210, byte_end: 21211, column_start: 60, column_end: 61, line_start: 617, line_end: 617 }: `
Token { kind: Text, char_start: 21210, char_end: 21212, byte_start: 21211, byte_end: 21213, column_start: 61, column_end: 63, line_start: 617, line_end: 617 }: 's
Token { kind: Space, char_start: 21212, char_end: 21213, byte_start: 21213, byte_end: 21214, column_start: 63, column_end: 64, line_start: 617, line_end: 617 }: " "
Token { kind: Text, char_start: 21213, char_end: 21217, byte_start: 21214, byte_end: 21218, column_start: 64, column_end: 68, line_start: 617, line_end: 617 }: Perl
Token { kind: Hyphen, char_start: 21217, char_end: 21218, byte_start: 21218, byte_end: 21219, column_start: 68, column_end: 69, line_start: 617, line_end: 617 }: -
Token { kind: Text, char_start: 21218, char_end: 21223, byte_start: 21219, byte_end: 21224, column_start: 69, column_end: 74, line_start: 617, line_end: 617 }: style
Token { kind: Newline, char_start: 21223, char_end: 21224, byte_start: 21224, byte_end: 21225, column_start: 74, column_end: 1, line_start: 617, line_end: 618 }: "\n"
Token { kind: Text, char_start: 21224, char_end: 21231, byte_start: 21225, byte_end: 21232, column_start: 1, column_end: 8, line_start: 618, line_end: 618 }: regular
Token { kind: Space, char_start: 21231, char_end: 21232, byte_start: 21232, byte_end: 21233, column_start: 8, column_end: 9, line_start: 618, line_end: 618 }: " "
Token { kind: Text, char_start: 21232, char_end: 21242, byte_start: 21233, byte_end: 21243, column_start: 9, column_end: 19, line_start: 618, line_end: 618 }: expression
Token { kind: Space, char_start: 21242, char_end: 21243, byte_start: 21243, byte_end: 21244, column_start: 19, column_end: 20, line_start: 618, line_end: 618 }: " "
Token { kind: Text, char_start: 21243, char_end: 21249, byte_start: 21244, byte_end: 21250, column_start: 20, column_end: 26, line_start: 618, line_end: 618 }: syntax
Token { kind: Rparen, char_start: 21249, char_end: 21250, byte_start: 21250, byte_end: 21251, column_start: 26, column_end: 27, line_start: 618, line_end: 618 }: )
Token { kind: Text, char_start: 21250, char_end: 21251, byte_start: 21251, byte_end: 21252, column_start: 27, column_end: 28, line_start: 618, line_end: 618 }: ,
Token { kind: Space, char_start: 21251, char_end: 21252, byte_start: 21252, byte_end: 21253, column_start: 28, column_end: 29, line_start: 618, line_end: 618 }: " "
Token { kind: Text, char_start: 21252, char_end: 21255, byte_start: 21253, byte_end: 21256, column_start: 29, column_end: 32, line_start: 618, line_end: 618 }: you
Token { kind: Space, char_start: 21255, char_end: 21256, byte_start: 21256, byte_end: 21257, column_start: 32, column_end: 33, line_start: 618, line_end: 618 }: " "
Token { kind: Text, char_start: 21256, char_end: 21261, byte_start: 21257, byte_end: 21262, column_start: 33, column_end: 38, line_start: 618, line_end: 618 }: could
Token { kind: Space, char_start: 21261, char_end: 21262, byte_start: 21262, byte_end: 21263, column_start: 38, column_end: 39, line_start: 618, line_end: 618 }: " "
Token { kind: Text, char_start: 21262, char_end: 21265, byte_start: 21263, byte_end: 21266, column_start: 39, column_end: 42, line_start: 618, line_end: 618 }: do:
Token { kind: Newline, char_start: 21265, char_end: 21266, byte_start: 21266, byte_end: 21267, column_start: 42, column_end: 1, line_start: 618, line_end: 619 }: "\n"
Token { kind: Newline, char_start: 21266, char_end: 21267, byte_start: 21267, byte_end: 21268, column_start: 1, column_end: 1, line_start: 619, line_end: 620 }: "\n"
Token { kind: CodeFence, char_start: 21267, char_end: 21270, byte_start: 21268, byte_end: 21271, column_start: 1, column_end: 4, line_start: 620, line_end: 620 }: ```
Token { kind: Newline, char_start: 21270, char_end: 21271, byte_start: 21271, byte_end: 21272, column_start: 4, column_end: 1, line_start: 620, line_end: 621 }: "\n"
Token { kind: Text, char_start: 21271, char_end: 21275, byte_start: 21272, byte_end: 21276, column_start: 1, column_end: 5, line_start: 621, line_end: 621 }: :Ack
Token { kind: Space, char_start: 21275, char_end: 21276, byte_start: 21276, byte_end: 21277, column_start: 5, column_end: 6, line_start: 621, line_end: 621 }: " "
Token { kind: Text, char_start: 21276, char_end: 21281, byte_start: 21277, byte_end: 21282, column_start: 6, column_end: 11, line_start: 621, line_end: 621 }: \bfoo
Token { kind: Lbracket, char_start: 21281, char_end: 21282, byte_start: 21282, byte_end: 21283, column_start: 11, column_end: 12, line_start: 621, line_end: 621 }: [
Token { kind: Text, char_start: 21282, char_end: 21283, byte_start: 21283, byte_end: 21284, column_start: 12, column_end: 13, line_start: 621, line_end: 621 }: 0
Token { kind: Hyphen, char_start: 21283, char_end: 21284, byte_start: 21284, byte_end: 21285, column_start: 13, column_end: 14, line_start: 621, line_end: 621 }: -
Token { kind: Text, char_start: 21284, char_end: 21285, byte_start: 21285, byte_end: 21286, column_start: 14, column_end: 15, line_start: 621, line_end: 621 }: 9
Token { kind: Rbracket, char_start: 21285, char_end: 21286, byte_start: 21286, byte_end: 21287, column_start: 15, column_end: 16, line_start: 621, line_end: 621 }: ]
Token { kind: Text, char_start: 21286, char_end: 21290, byte_start: 21287, byte_end: 21291, column_start: 16, column_end: 20, line_start: 621, line_end: 621 }: {2}\
Token { kind: Space, char_start: 21290, char_end: 21291, byte_start: 21291, byte_end: 21292, column_start: 20, column_end: 21, line_start: 621, line_end: 621 }: " "
Token { kind: Text, char_start: 21291, char_end: 21296, byte_start: 21292, byte_end: 21297, column_start: 21, column_end: 26, line_start: 621, line_end: 621 }: bar\b
Token { kind: Newline, char_start: 21296, char_end: 21297, byte_start: 21297, byte_end: 21298, column_start: 26, column_end: 1, line_start: 621, line_end: 622 }: "\n"
Token { kind: CodeFence, char_start: 21297, char_end: 21300, byte_start: 21298, byte_end: 21301, column_start: 1, column_end: 4, line_start: 622, line_end: 622 }: ```
Token { kind: Newline, char_start: 21300, char_end: 21301, byte_start: 21301, byte_end: 21302, column_start: 4, column_end: 1, line_start: 622, line_end: 623 }: "\n"
Token { kind: Newline, char_start: 21301, char_end: 21302, byte_start: 21302, byte_end: 21303, column_start: 1, column_end: 1, line_start: 623, line_end: 624 }: "\n"
Token { kind: Text, char_start: 21302, char_end: 21311, byte_start: 21303, byte_end: 21312, column_start: 1, column_end: 10, line_start: 624, line_end: 624 }: Likewise,
Token { kind: Space, char_start: 21311, char_end: 21312, byte_start: 21312, byte_end: 21313, column_start: 10, column_end: 11, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21312, char_end: 21321, byte_start: 21313, byte_end: 21322, column_start: 11, column_end: 20, line_start: 624, line_end: 624 }: {options}
Token { kind: Space, char_start: 21321, char_end: 21322, byte_start: 21322, byte_end: 21323, column_start: 20, column_end: 21, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21322, char_end: 21325, byte_start: 21323, byte_end: 21326, column_start: 21, column_end: 24, line_start: 624, line_end: 624 }: are
Token { kind: Space, char_start: 21325, char_end: 21326, byte_start: 21326, byte_end: 21327, column_start: 24, column_end: 25, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21326, char_end: 21332, byte_start: 21327, byte_end: 21333, column_start: 25, column_end: 31, line_start: 624, line_end: 624 }: passed
Token { kind: Space, char_start: 21332, char_end: 21333, byte_start: 21333, byte_end: 21334, column_start: 31, column_end: 32, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21333, char_end: 21341, byte_start: 21334, byte_end: 21342, column_start: 32, column_end: 40, line_start: 624, line_end: 624 }: through.
Token { kind: Space, char_start: 21341, char_end: 21342, byte_start: 21342, byte_end: 21343, column_start: 40, column_end: 41, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21342, char_end: 21344, byte_start: 21343, byte_end: 21345, column_start: 41, column_end: 43, line_start: 624, line_end: 624 }: In
Token { kind: Space, char_start: 21344, char_end: 21345, byte_start: 21345, byte_end: 21346, column_start: 43, column_end: 44, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21345, char_end: 21349, byte_start: 21346, byte_end: 21350, column_start: 44, column_end: 48, line_start: 624, line_end: 624 }: this
Token { kind: Space, char_start: 21349, char_end: 21350, byte_start: 21350, byte_end: 21351, column_start: 48, column_end: 49, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21350, char_end: 21358, byte_start: 21351, byte_end: 21359, column_start: 49, column_end: 57, line_start: 624, line_end: 624 }: example,
Token { kind: Space, char_start: 21358, char_end: 21359, byte_start: 21359, byte_end: 21360, column_start: 57, column_end: 58, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21359, char_end: 21361, byte_start: 21360, byte_end: 21362, column_start: 58, column_end: 60, line_start: 624, line_end: 624 }: we
Token { kind: Space, char_start: 21361, char_end: 21362, byte_start: 21362, byte_end: 21363, column_start: 60, column_end: 61, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21362, char_end: 21366, byte_start: 21363, byte_end: 21367, column_start: 61, column_end: 65, line_start: 624, line_end: 624 }: pass
Token { kind: Space, char_start: 21366, char_end: 21367, byte_start: 21367, byte_end: 21368, column_start: 65, column_end: 66, line_start: 624, line_end: 624 }: " "
Token { kind: Text, char_start: 21367, char_end: 21370, byte_start: 21368, byte_end: 21371, column_start: 66, column_end: 69, line_start: 624, line_end: 624 }: the
Token { kind: Space, char_start: 21370, char_end: 21371, byte_start: 21371, byte_end: 21372, column_start: 69, column_end: 70, line_start: 624, line_end: 624 }: " "
Token { kind: Backtick, char_start: 21371, char_end: 21372, byte_start: 21372, byte_end: 21373, column_start: 70, column_end: 71, line_start: 624, line_end: 624 }: `
Token { kind: Hyphen, char_start: 21372, char_end: 21373, byte_start: 21373, byte_end: 21374, column_start: 71, column_end: 72, line_start: 624, line_end: 624 }: -
Token { kind: Text, char_start: 21373, char_end: 21374, byte_start: 21374, byte_end: 21375, column_start: 72, column_end: 73, line_start: 624, line_end: 624 }: w
Token { kind: Backtick, char_start: 21374, char_end: 21375, byte_start: 21375, byte_end: 21376, column_start: 73, column_end: 74, line_start: 624, line_end: 624 }: `
Token { kind: Newline, char_start: 21375, char_end: 21376, byte_start: 21376, byte_end: 21377, column_start: 74, column_end: 1, line_start: 624, line_end: 625 }: "\n"
Token { kind: Text, char_start: 21376, char_end: 21382, byte_start: 21377, byte_end: 21383, column_start: 1, column_end: 7, line_start: 625, line_end: 625 }: option
Token { kind: Space, char_start: 21382, char_end: 21383, byte_start: 21383, byte_end: 21384, column_start: 7, column_end: 8, line_start: 625, line_end: 625 }: " "
Token { kind: Lparen, char_start: 21383, char_end: 21384, byte_start: 21384, byte_end: 21385, column_start: 8, column_end: 9, line_start: 625, line_end: 625 }: (
Token { kind: Text, char_start: 21384, char_end: 21386, byte_start: 21385, byte_end: 21387, column_start: 9, column_end: 11, line_start: 625, line_end: 625 }: to
Token { kind: Space, char_start: 21386, char_end: 21387, byte_start: 21387, byte_end: 21388, column_start: 11, column_end: 12, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21387, char_end: 21393, byte_start: 21388, byte_end: 21394, column_start: 12, column_end: 18, line_start: 625, line_end: 625 }: search
Token { kind: Space, char_start: 21393, char_end: 21394, byte_start: 21394, byte_end: 21395, column_start: 18, column_end: 19, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21394, char_end: 21396, byte_start: 21395, byte_end: 21397, column_start: 19, column_end: 21, line_start: 625, line_end: 625 }: on
Token { kind: Space, char_start: 21396, char_end: 21397, byte_start: 21397, byte_end: 21398, column_start: 21, column_end: 22, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21397, char_end: 21401, byte_start: 21398, byte_end: 21402, column_start: 22, column_end: 26, line_start: 625, line_end: 625 }: word
Token { kind: Space, char_start: 21401, char_end: 21402, byte_start: 21402, byte_end: 21403, column_start: 26, column_end: 27, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21402, char_end: 21412, byte_start: 21403, byte_end: 21413, column_start: 27, column_end: 37, line_start: 625, line_end: 625 }: boundaries
Token { kind: Rparen, char_start: 21412, char_end: 21413, byte_start: 21413, byte_end: 21414, column_start: 37, column_end: 38, line_start: 625, line_end: 625 }: )
Token { kind: Text, char_start: 21413, char_end: 21414, byte_start: 21414, byte_end: 21415, column_start: 38, column_end: 39, line_start: 625, line_end: 625 }: ,
Token { kind: Space, char_start: 21414, char_end: 21415, byte_start: 21415, byte_end: 21416, column_start: 39, column_end: 40, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21415, char_end: 21418, byte_start: 21416, byte_end: 21419, column_start: 40, column_end: 43, line_start: 625, line_end: 625 }: and
Token { kind: Space, char_start: 21418, char_end: 21419, byte_start: 21419, byte_end: 21420, column_start: 43, column_end: 44, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21419, char_end: 21424, byte_start: 21420, byte_end: 21425, column_start: 44, column_end: 49, line_start: 625, line_end: 625 }: scope
Token { kind: Space, char_start: 21424, char_end: 21425, byte_start: 21425, byte_end: 21426, column_start: 49, column_end: 50, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21425, char_end: 21428, byte_start: 21426, byte_end: 21429, column_start: 50, column_end: 53, line_start: 625, line_end: 625 }: the
Token { kind: Space, char_start: 21428, char_end: 21429, byte_start: 21429, byte_end: 21430, column_start: 53, column_end: 54, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21429, char_end: 21435, byte_start: 21430, byte_end: 21436, column_start: 54, column_end: 60, line_start: 625, line_end: 625 }: search
Token { kind: Space, char_start: 21435, char_end: 21436, byte_start: 21436, byte_end: 21437, column_start: 60, column_end: 61, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21436, char_end: 21438, byte_start: 21437, byte_end: 21439, column_start: 61, column_end: 63, line_start: 625, line_end: 625 }: to
Token { kind: Space, char_start: 21438, char_end: 21439, byte_start: 21439, byte_end: 21440, column_start: 63, column_end: 64, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21439, char_end: 21442, byte_start: 21440, byte_end: 21443, column_start: 64, column_end: 67, line_start: 625, line_end: 625 }: the
Token { kind: Space, char_start: 21442, char_end: 21443, byte_start: 21443, byte_end: 21444, column_start: 67, column_end: 68, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21443, char_end: 21448, byte_start: 21444, byte_end: 21449, column_start: 68, column_end: 73, line_start: 625, line_end: 625 }: "foo"
Token { kind: Space, char_start: 21448, char_end: 21449, byte_start: 21449, byte_end: 21450, column_start: 73, column_end: 74, line_start: 625, line_end: 625 }: " "
Token { kind: Text, char_start: 21449, char_end: 21452, byte_start: 21450, byte_end: 21453, column_start: 74, column_end: 77, line_start: 625, line_end: 625 }: and
Token { kind: Newline, char_start: 21452, char_end: 21453, byte_start: 21453, byte_end: 21454, column_start: 77, column_end: 1, line_start: 625, line_end: 626 }: "\n"
Token { kind: Text, char_start: 21453, char_end: 21458, byte_start: 21454, byte_end: 21459, column_start: 1, column_end: 6, line_start: 626, line_end: 626 }: "bar"
Token { kind: Space, char_start: 21458, char_end: 21459, byte_start: 21459, byte_end: 21460, column_start: 6, column_end: 7, line_start: 626, line_end: 626 }: " "
Token { kind: Text, char_start: 21459, char_end: 21474, byte_start: 21460, byte_end: 21475, column_start: 7, column_end: 22, line_start: 626, line_end: 626 }: subdirectories:
Token { kind: Newline, char_start: 21474, char_end: 21475, byte_start: 21475, byte_end: 21476, column_start: 22, column_end: 1, line_start: 626, line_end: 627 }: "\n"
Token { kind: Newline, char_start: 21475, char_end: 21476, byte_start: 21476, byte_end: 21477, column_start: 1, column_end: 1, line_start: 627, line_end: 628 }: "\n"
Token { kind: CodeFence, char_start: 21476, char_end: 21479, byte_start: 21477, byte_end: 21480, column_start: 1, column_end: 4, line_start: 628, line_end: 628 }: ```
Token { kind: Newline, char_start: 21479, char_end: 21480, byte_start: 21480, byte_end: 21481, column_start: 4, column_end: 1, line_start: 628, line_end: 629 }: "\n"
Token { kind: Text, char_start: 21480, char_end: 21484, byte_start: 21481, byte_end: 21485, column_start: 1, column_end: 5, line_start: 629, line_end: 629 }: :Ack
Token { kind: Space, char_start: 21484, char_end: 21485, byte_start: 21485, byte_end: 21486, column_start: 5, column_end: 6, line_start: 629, line_end: 629 }: " "
Token { kind: Hyphen, char_start: 21485, char_end: 21486, byte_start: 21486, byte_end: 21487, column_start: 6, column_end: 7, line_start: 629, line_end: 629 }: -
Token { kind: Text, char_start: 21486, char_end: 21487, byte_start: 21487, byte_end: 21488, column_start: 7, column_end: 8, line_start: 629, line_end: 629 }: w
Token { kind: Space, char_start: 21487, char_end: 21488, byte_start: 21488, byte_end: 21489, column_start: 8, column_end: 9, line_start: 629, line_end: 629 }: " "
Token { kind: Text, char_start: 21488, char_end: 21497, byte_start: 21489, byte_end: 21498, column_start: 9, column_end: 18, line_start: 629, line_end: 629 }: something
Token { kind: Space, char_start: 21497, char_end: 21498, byte_start: 21498, byte_end: 21499, column_start: 18, column_end: 19, line_start: 629, line_end: 629 }: " "
Token { kind: Text, char_start: 21498, char_end: 21501, byte_start: 21499, byte_end: 21502, column_start: 19, column_end: 22, line_start: 629, line_end: 629 }: foo
Token { kind: Space, char_start: 21501, char_end: 21502, byte_start: 21502, byte_end: 21503, column_start: 22, column_end: 23, line_start: 629, line_end: 629 }: " "
Token { kind: Text, char_start: 21502, char_end: 21505, byte_start: 21503, byte_end: 21506, column_start: 23, column_end: 26, line_start: 629, line_end: 629 }: bar
Token { kind: Newline, char_start: 21505, char_end: 21506, byte_start: 21506, byte_end: 21507, column_start: 26, column_end: 1, line_start: 629, line_end: 630 }: "\n"
Token { kind: CodeFence, char_start: 21506, char_end: 21509, byte_start: 21507, byte_end: 21510, column_start: 1, column_end: 4, line_start: 630, line_end: 630 }: ```
Token { kind: Newline, char_start: 21509, char_end: 21510, byte_start: 21510, byte_end: 21511, column_start: 4, column_end: 1, line_start: 630, line_end: 631 }: "\n"
Token { kind: Newline, char_start: 21510, char_end: 21511, byte_start: 21511, byte_end: 21512, column_start: 1, column_end: 1, line_start: 631, line_end: 632 }: "\n"
Token { kind: Text, char_start: 21511, char_end: 21513, byte_start: 21512, byte_end: 21514, column_start: 1, column_end: 3, line_start: 632, line_end: 632 }: As
Token { kind: Space, char_start: 21513, char_end: 21514, byte_start: 21514, byte_end: 21515, column_start: 3, column_end: 4, line_start: 632, line_end: 632 }: " "
Token { kind: Text, char_start: 21514, char_end: 21515, byte_start: 21515, byte_end: 21516, column_start: 4, column_end: 5, line_start: 632, line_end: 632 }: a
Token { kind: Space, char_start: 21515, char_end: 21516, byte_start: 21516, byte_end: 21517, column_start: 5, column_end: 6, line_start: 632, line_end: 632 }: " "
Token { kind: Text, char_start: 21516, char_end: 21527, byte_start: 21517, byte_end: 21528, column_start: 6, column_end: 17, line_start: 632, line_end: 632 }: convenience
Token { kind: Space, char_start: 21527, char_end: 21528, byte_start: 21528, byte_end: 21529, column_start: 17, column_end: 18, line_start: 632, line_end: 632 }: " "
Token { kind: Backtick, char_start: 21528, char_end: 21529, byte_start: 21529, byte_end: 21530, column_start: 18, column_end: 19, line_start: 632, line_end: 632 }: `
Token { kind: BlockQuote, char_start: 21529, char_end: 21530, byte_start: 21530, byte_end: 21531, column_start: 19, column_end: 20, line_start: 632, line_end: 632 }: <
Token { kind: Text, char_start: 21530, char_end: 21536, byte_start: 21531, byte_end: 21537, column_start: 20, column_end: 26, line_start: 632, line_end: 632 }: Leader
Token { kind: BlockQuote, char_start: 21536, char_end: 21537, byte_start: 21537, byte_end: 21538, column_start: 26, column_end: 27, line_start: 632, line_end: 632 }: >
Token { kind: Text, char_start: 21537, char_end: 21538, byte_start: 21538, byte_end: 21539, column_start: 27, column_end: 28, line_start: 632, line_end: 632 }: a
Token { kind: Backtick, char_start: 21538, char_end: 21539, byte_start: 21539, byte_end: 21540, column_start: 28, column_end: 29, line_start: 632, line_end: 632 }: `
Token { kind: Space, char_start: 21539, char_end: 21540, byte_start: 21540, byte_end: 21541, column_start: 29, column_end: 30, line_start: 632, line_end: 632 }: " "
Token { kind: Text, char_start: 21540, char_end: 21542, byte_start: 21541, byte_end: 21543, column_start: 30, column_end: 32, line_start: 632, line_end: 632 }: is
Token { kind: Space, char_start: 21542, char_end: 21543, byte_start: 21543, byte_end: 21544, column_start: 32, column_end: 33, line_start: 632, line_end: 632 }: " "
Token { kind: Text, char_start: 21543, char_end: 21546, byte_start: 21544, byte_end: 21547, column_start: 33, column_end: 36, line_start: 632, line_end: 632 }: set
Token { kind: Hyphen, char_start: 21546, char_end: 21547, byte_start: 21547, byte_end: 21548, column_start: 36, column_end: 37, line_start: 632, line_end: 632 }: -
Token { kind: Text, char_start: 21547, char_end: 21549, byte_start: 21548, byte_end: 21550, column_start: 37, column_end: 39, line_start: 632, line_end: 632 }: up
Token { kind: Space, char_start: 21549, char_end: 21550, byte_start: 21550, byte_end: 21551, column_start: 39, column_end: 40, line_start: 632, line_end: 632 }: " "
Token { kind: Lparen, char_start: 21550, char_end: 21551, byte_start: 21551, byte_end: 21552, column_start: 40, column_end: 41, line_start: 632, line_end: 632 }: (
Token { kind: Bar, char_start: 21551, char_end: 21552, byte_start: 21552, byte_end: 21553, column_start: 41, column_end: 42, line_start: 632, line_end: 632 }: |
Token { kind: BlockQuote, char_start: 21552, char_end: 21553, byte_start: 21553, byte_end: 21554, column_start: 42, column_end: 43, line_start: 632, line_end: 632 }: <
Token { kind: Text, char_start: 21553, char_end: 21557, byte_start: 21554, byte_end: 21558, column_start: 43, column_end: 47, line_start: 632, line_end: 632 }: Plug
Token { kind: BlockQuote, char_start: 21557, char_end: 21558, byte_start: 21558, byte_end: 21559, column_start: 47, column_end: 48, line_start: 632, line_end: 632 }: >
Token { kind: Lparen, char_start: 21558, char_end: 21559, byte_start: 21559, byte_end: 21560, column_start: 48, column_end: 49, line_start: 632, line_end: 632 }: (
Token { kind: Text, char_start: 21559, char_end: 21568, byte_start: 21560, byte_end: 21569, column_start: 49, column_end: 58, line_start: 632, line_end: 632 }: FerretAck
Token { kind: Rparen, char_start: 21568, char_end: 21569, byte_start: 21569, byte_end: 21570, column_start: 58, column_end: 59, line_start: 632, line_end: 632 }: )
Token { kind: Bar, char_start: 21569, char_end: 21570, byte_start: 21570, byte_end: 21571, column_start: 59, column_end: 60, line_start: 632, line_end: 632 }: |
Token { kind: Rparen, char_start: 21570, char_end: 21571, byte_start: 21571, byte_end: 21572, column_start: 60, column_end: 61, line_start: 632, line_end: 632 }: )
Token { kind: Space, char_start: 21571, char_end: 21572, byte_start: 21572, byte_end: 21573, column_start: 61, column_end: 62, line_start: 632, line_end: 632 }: " "
Token { kind: Text, char_start: 21572, char_end: 21574, byte_start: 21573, byte_end: 21575, column_start: 62, column_end: 64, line_start: 632, line_end: 632 }: as
Token { kind: Space, char_start: 21574, char_end: 21575, byte_start: 21575, byte_end: 21576, column_start: 64, column_end: 65, line_start: 632, line_end: 632 }: " "
Token { kind: Text, char_start: 21575, char_end: 21576, byte_start: 21576, byte_end: 21577, column_start: 65, column_end: 66, line_start: 632, line_end: 632 }: a
Token { kind: Space, char_start: 21576, char_end: 21577, byte_start: 21577, byte_end: 21578, column_start: 66, column_end: 67, line_start: 632, line_end: 632 }: " "
Token { kind: Text, char_start: 21577, char_end: 21585, byte_start: 21578, byte_end: 21586, column_start: 67, column_end: 75, line_start: 632, line_end: 632 }: shortcut
Token { kind: Space, char_start: 21585, char_end: 21586, byte_start: 21586, byte_end: 21587, column_start: 75, column_end: 76, line_start: 632, line_end: 632 }: " "
Token { kind: Text, char_start: 21586, char_end: 21588, byte_start: 21587, byte_end: 21589, column_start: 76, column_end: 78, line_start: 632, line_end: 632 }: to
Token { kind: Newline, char_start: 21588, char_end: 21589, byte_start: 21589, byte_end: 21590, column_start: 78, column_end: 1, line_start: 632, line_end: 633 }: "\n"
Token { kind: Text, char_start: 21589, char_end: 21594, byte_start: 21590, byte_end: 21595, column_start: 1, column_end: 6, line_start: 633, line_end: 633 }: enter
Token { kind: Space, char_start: 21594, char_end: 21595, byte_start: 21595, byte_end: 21596, column_start: 6, column_end: 7, line_start: 633, line_end: 633 }: " "
Token { kind: Bar, char_start: 21595, char_end: 21596, byte_start: 21596, byte_end: 21597, column_start: 7, column_end: 8, line_start: 633, line_end: 633 }: |
Token { kind: Text, char_start: 21596, char_end: 21603, byte_start: 21597, byte_end: 21604, column_start: 8, column_end: 15, line_start: 633, line_end: 633 }: Cmdline
Token { kind: Hyphen, char_start: 21603, char_end: 21604, byte_start: 21604, byte_end: 21605, column_start: 15, column_end: 16, line_start: 633, line_end: 633 }: -
Token { kind: Text, char_start: 21604, char_end: 21608, byte_start: 21605, byte_end: 21609, column_start: 16, column_end: 20, line_start: 633, line_end: 633 }: mode
Token { kind: Bar, char_start: 21608, char_end: 21609, byte_start: 21609, byte_end: 21610, column_start: 20, column_end: 21, line_start: 633, line_end: 633 }: |
Token { kind: Space, char_start: 21609, char_end: 21610, byte_start: 21610, byte_end: 21611, column_start: 21, column_end: 22, line_start: 633, line_end: 633 }: " "
Token { kind: Text, char_start: 21610, char_end: 21614, byte_start: 21611, byte_end: 21615, column_start: 22, column_end: 26, line_start: 633, line_end: 633 }: with
Token { kind: Space, char_start: 21614, char_end: 21615, byte_start: 21615, byte_end: 21616, column_start: 26, column_end: 27, line_start: 633, line_end: 633 }: " "
Token { kind: Backtick, char_start: 21615, char_end: 21616, byte_start: 21616, byte_end: 21617, column_start: 27, column_end: 28, line_start: 633, line_end: 633 }: `
Token { kind: Text, char_start: 21616, char_end: 21620, byte_start: 21617, byte_end: 21621, column_start: 28, column_end: 32, line_start: 633, line_end: 633 }: :Ack
Token { kind: Backtick, char_start: 21620, char_end: 21621, byte_start: 21621, byte_end: 21622, column_start: 32, column_end: 33, line_start: 633, line_end: 633 }: `
Token { kind: Space, char_start: 21621, char_end: 21622, byte_start: 21622, byte_end: 21623, column_start: 33, column_end: 34, line_start: 633, line_end: 633 }: " "
Token { kind: Text, char_start: 21622, char_end: 21630, byte_start: 21623, byte_end: 21631, column_start: 34, column_end: 42, line_start: 633, line_end: 633 }: inserted
Token { kind: Space, char_start: 21630, char_end: 21631, byte_start: 21631, byte_end: 21632, column_start: 42, column_end: 43, line_start: 633, line_end: 633 }: " "
Token { kind: Text, char_start: 21631, char_end: 21633, byte_start: 21632, byte_end: 21634, column_start: 43, column_end: 45, line_start: 633, line_end: 633 }: on
Token { kind: Space, char_start: 21633, char_end: 21634, byte_start: 21634, byte_end: 21635, column_start: 45, column_end: 46, line_start: 633, line_end: 633 }: " "
Token { kind: Text, char_start: 21634, char_end: 21637, byte_start: 21635, byte_end: 21638, column_start: 46, column_end: 49, line_start: 633, line_end: 633 }: the
Token { kind: Space, char_start: 21637, char_end: 21638, byte_start: 21638, byte_end: 21639, column_start: 49, column_end: 50, line_start: 633, line_end: 633 }: " "
Token { kind: Bar, char_start: 21638, char_end: 21639, byte_start: 21639, byte_end: 21640, column_start: 50, column_end: 51, line_start: 633, line_end: 633 }: |
Token { kind: Text, char_start: 21639, char_end: 21646, byte_start: 21640, byte_end: 21647, column_start: 51, column_end: 58, line_start: 633, line_end: 633 }: Cmdline
Token { kind: Bar, char_start: 21646, char_end: 21647, byte_start: 21647, byte_end: 21648, column_start: 58, column_end: 59, line_start: 633, line_end: 633 }: |
Token { kind: Text, char_start: 21647, char_end: 21648, byte_start: 21648, byte_end: 21649, column_start: 59, column_end: 60, line_start: 633, line_end: 633 }: .
Token { kind: Space, char_start: 21648, char_end: 21649, byte_start: 21649, byte_end: 21650, column_start: 60, column_end: 61, line_start: 633, line_end: 633 }: " "
Token { kind: Text, char_start: 21649, char_end: 21657, byte_start: 21650, byte_end: 21658, column_start: 61, column_end: 69, line_start: 633, line_end: 633 }: Likewise
Token { kind: Space, char_start: 21657, char_end: 21658, byte_start: 21658, byte_end: 21659, column_start: 69, column_end: 70, line_start: 633, line_end: 633 }: " "
Token { kind: Backtick, char_start: 21658, char_end: 21659, byte_start: 21659, byte_end: 21660, column_start: 70, column_end: 71, line_start: 633, line_end: 633 }: `
Token { kind: BlockQuote, char_start: 21659, char_end: 21660, byte_start: 21660, byte_end: 21661, column_start: 71, column_end: 72, line_start: 633, line_end: 633 }: <
Token { kind: Text, char_start: 21660, char_end: 21666, byte_start: 21661, byte_end: 21667, column_start: 72, column_end: 78, line_start: 633, line_end: 633 }: Leader
Token { kind: BlockQuote, char_start: 21666, char_end: 21667, byte_start: 21667, byte_end: 21668, column_start: 78, column_end: 79, line_start: 633, line_end: 633 }: >
Token { kind: Text, char_start: 21667, char_end: 21668, byte_start: 21668, byte_end: 21669, column_start: 79, column_end: 80, line_start: 633, line_end: 633 }: s
Token { kind: Backtick, char_start: 21668, char_end: 21669, byte_start: 21669, byte_end: 21670, column_start: 80, column_end: 81, line_start: 633, line_end: 633 }: `
Token { kind: Newline, char_start: 21669, char_end: 21670, byte_start: 21670, byte_end: 21671, column_start: 81, column_end: 1, line_start: 633, line_end: 634 }: "\n"
Token { kind: Lparen, char_start: 21670, char_end: 21671, byte_start: 21671, byte_end: 21672, column_start: 1, column_end: 2, line_start: 634, line_end: 634 }: (
Token { kind: Bar, char_start: 21671, char_end: 21672, byte_start: 21672, byte_end: 21673, column_start: 2, column_end: 3, line_start: 634, line_end: 634 }: |
Token { kind: BlockQuote, char_start: 21672, char_end: 21673, byte_start: 21673, byte_end: 21674, column_start: 3, column_end: 4, line_start: 634, line_end: 634 }: <
Token { kind: Text, char_start: 21673, char_end: 21677, byte_start: 21674, byte_end: 21678, column_start: 4, column_end: 8, line_start: 634, line_end: 634 }: Plug
Token { kind: BlockQuote, char_start: 21677, char_end: 21678, byte_start: 21678, byte_end: 21679, column_start: 8, column_end: 9, line_start: 634, line_end: 634 }: >
Token { kind: Lparen, char_start: 21678, char_end: 21679, byte_start: 21679, byte_end: 21680, column_start: 9, column_end: 10, line_start: 634, line_end: 634 }: (
Token { kind: Text, char_start: 21679, char_end: 21692, byte_start: 21680, byte_end: 21693, column_start: 10, column_end: 23, line_start: 634, line_end: 634 }: FerretAckWord
Token { kind: Rparen, char_start: 21692, char_end: 21693, byte_start: 21693, byte_end: 21694, column_start: 23, column_end: 24, line_start: 634, line_end: 634 }: )
Token { kind: Bar, char_start: 21693, char_end: 21694, byte_start: 21694, byte_end: 21695, column_start: 24, column_end: 25, line_start: 634, line_end: 634 }: |
Token { kind: Rparen, char_start: 21694, char_end: 21695, byte_start: 21695, byte_end: 21696, column_start: 25, column_end: 26, line_start: 634, line_end: 634 }: )
Token { kind: Space, char_start: 21695, char_end: 21696, byte_start: 21696, byte_end: 21697, column_start: 26, column_end: 27, line_start: 634, line_end: 634 }: " "
Token { kind: Text, char_start: 21696, char_end: 21698, byte_start: 21697, byte_end: 21699, column_start: 27, column_end: 29, line_start: 634, line_end: 634 }: is
Token { kind: Space, char_start: 21698, char_end: 21699, byte_start: 21699, byte_end: 21700, column_start: 29, column_end: 30, line_start: 634, line_end: 634 }: " "
Token { kind: Text, char_start: 21699, char_end: 21700, byte_start: 21700, byte_end: 21701, column_start: 30, column_end: 31, line_start: 634, line_end: 634 }: a
Token { kind: Space, char_start: 21700, char_end: 21701, byte_start: 21701, byte_end: 21702, column_start: 31, column_end: 32, line_start: 634, line_end: 634 }: " "
Token { kind: Text, char_start: 21701, char_end: 21709, byte_start: 21702, byte_end: 21710, column_start: 32, column_end: 40, line_start: 634, line_end: 634 }: shortcut
Token { kind: Space, char_start: 21709, char_end: 21710, byte_start: 21710, byte_end: 21711, column_start: 40, column_end: 41, line_start: 634, line_end: 634 }: " "
Token { kind: Text, char_start: 21710, char_end: 21713, byte_start: 21711, byte_end: 21714, column_start: 41, column_end: 44, line_start: 634, line_end: 634 }: for
Token { kind: Space, char_start: 21713, char_end: 21714, byte_start: 21714, byte_end: 21715, column_start: 44, column_end: 45, line_start: 634, line_end: 634 }: " "
Token { kind: Text, char_start: 21714, char_end: 21721, byte_start: 21715, byte_end: 21722, column_start: 45, column_end: 52, line_start: 634, line_end: 634 }: running
Token { kind: Space, char_start: 21721, char_end: 21722, byte_start: 21722, byte_end: 21723, column_start: 52, column_end: 53, line_start: 634, line_end: 634 }: " "
Token { kind: Bar, char_start: 21722, char_end: 21723, byte_start: 21723, byte_end: 21724, column_start: 53, column_end: 54, line_start: 634, line_end: 634 }: |
Token { kind: Text, char_start: 21723, char_end: 21727, byte_start: 21724, byte_end: 21728, column_start: 54, column_end: 58, line_start: 634, line_end: 634 }: :Ack
Token { kind: Bar, char_start: 21727, char_end: 21728, byte_start: 21728, byte_end: 21729, column_start: 58, column_end: 59, line_start: 634, line_end: 634 }: |
Token { kind: Space, char_start: 21728, char_end: 21729, byte_start: 21729, byte_end: 21730, column_start: 59, column_end: 60, line_start: 634, line_end: 634 }: " "
Token { kind: Text, char_start: 21729, char_end: 21733, byte_start: 21730, byte_end: 21734, column_start: 60, column_end: 64, line_start: 634, line_end: 634 }: with
Token { kind: Space, char_start: 21733, char_end: 21734, byte_start: 21734, byte_end: 21735, column_start: 64, column_end: 65, line_start: 634, line_end: 634 }: " "
Token { kind: Text, char_start: 21734, char_end: 21737, byte_start: 21735, byte_end: 21738, column_start: 65, column_end: 68, line_start: 634, line_end: 634 }: the
Token { kind: Space, char_start: 21737, char_end: 21738, byte_start: 21738, byte_end: 21739, column_start: 68, column_end: 69, line_start: 634, line_end: 634 }: " "
Token { kind: Text, char_start: 21738, char_end: 21742, byte_start: 21739, byte_end: 21743, column_start: 69, column_end: 73, line_start: 634, line_end: 634 }: word
Token { kind: Newline, char_start: 21742, char_end: 21743, byte_start: 21743, byte_end: 21744, column_start: 73, column_end: 1, line_start: 634, line_end: 635 }: "\n"
Token { kind: Text, char_start: 21743, char_end: 21752, byte_start: 21744, byte_end: 21753, column_start: 1, column_end: 10, line_start: 635, line_end: 635 }: currently
Token { kind: Space, char_start: 21752, char_end: 21753, byte_start: 21753, byte_end: 21754, column_start: 10, column_end: 11, line_start: 635, line_end: 635 }: " "
Token { kind: Text, char_start: 21753, char_end: 21758, byte_start: 21754, byte_end: 21759, column_start: 11, column_end: 16, line_start: 635, line_end: 635 }: under
Token { kind: Space, char_start: 21758, char_end: 21759, byte_start: 21759, byte_end: 21760, column_start: 16, column_end: 17, line_start: 635, line_end: 635 }: " "
Token { kind: Text, char_start: 21759, char_end: 21762, byte_start: 21760, byte_end: 21763, column_start: 17, column_end: 20, line_start: 635, line_end: 635 }: the
Token { kind: Space, char_start: 21762, char_end: 21763, byte_start: 21763, byte_end: 21764, column_start: 20, column_end: 21, line_start: 635, line_end: 635 }: " "
Token { kind: Text, char_start: 21763, char_end: 21770, byte_start: 21764, byte_end: 21771, column_start: 21, column_end: 28, line_start: 635, line_end: 635 }: cursor.
Token { kind: Newline, char_start: 21770, char_end: 21771, byte_start: 21771, byte_end: 21772, column_start: 28, column_end: 1, line_start: 635, line_end: 636 }: "\n"
Token { kind: Newline, char_start: 21771, char_end: 21772, byte_start: 21772, byte_end: 21773, column_start: 1, column_end: 1, line_start: 636, line_end: 637 }: "\n"
Token { kind: At, char_start: 21772, char_end: 21773, byte_start: 21773, byte_end: 21774, column_start: 1, column_end: 2, line_start: 637, line_end: 637 }: @
Token { kind: Text, char_start: 21773, char_end: 21780, byte_start: 21774, byte_end: 21781, column_start: 2, column_end: 9, line_start: 637, line_end: 637 }: command
Token { kind: Space, char_start: 21780, char_end: 21781, byte_start: 21781, byte_end: 21782, column_start: 9, column_end: 10, line_start: 637, line_end: 637 }: " "
Token { kind: Text, char_start: 21781, char_end: 21785, byte_start: 21782, byte_end: 21786, column_start: 10, column_end: 14, line_start: 637, line_end: 637 }: :Ack
Token { kind: Bang, char_start: 21785, char_end: 21786, byte_start: 21786, byte_end: 21787, column_start: 14, column_end: 15, line_start: 637, line_end: 637 }: !
Token { kind: Space, char_start: 21786, char_end: 21787, byte_start: 21787, byte_end: 21788, column_start: 15, column_end: 16, line_start: 637, line_end: 637 }: " "
Token { kind: Text, char_start: 21787, char_end: 21796, byte_start: 21788, byte_end: 21797, column_start: 16, column_end: 25, line_start: 637, line_end: 637 }: {pattern}
Token { kind: Space, char_start: 21796, char_end: 21797, byte_start: 21797, byte_end: 21798, column_start: 25, column_end: 26, line_start: 637, line_end: 637 }: " "
Token { kind: Text, char_start: 21797, char_end: 21806, byte_start: 21798, byte_end: 21807, column_start: 26, column_end: 35, line_start: 637, line_end: 637 }: {options}
Token { kind: Newline, char_start: 21806, char_end: 21807, byte_start: 21807, byte_end: 21808, column_start: 35, column_end: 1, line_start: 637, line_end: 638 }: "\n"
Token { kind: Newline, char_start: 21807, char_end: 21808, byte_start: 21808, byte_end: 21809, column_start: 1, column_end: 1, line_start: 638, line_end: 639 }: "\n"
Token { kind: Text, char_start: 21808, char_end: 21812, byte_start: 21809, byte_end: 21813, column_start: 1, column_end: 5, line_start: 639, line_end: 639 }: Like
Token { kind: Space, char_start: 21812, char_end: 21813, byte_start: 21813, byte_end: 21814, column_start: 5, column_end: 6, line_start: 639, line_end: 639 }: " "
Token { kind: Bar, char_start: 21813, char_end: 21814, byte_start: 21814, byte_end: 21815, column_start: 6, column_end: 7, line_start: 639, line_end: 639 }: |
Token { kind: Text, char_start: 21814, char_end: 21818, byte_start: 21815, byte_end: 21819, column_start: 7, column_end: 11, line_start: 639, line_end: 639 }: :Ack
Token { kind: Bar, char_start: 21818, char_end: 21819, byte_start: 21819, byte_end: 21820, column_start: 11, column_end: 12, line_start: 639, line_end: 639 }: |
Token { kind: Text, char_start: 21819, char_end: 21820, byte_start: 21820, byte_end: 21821, column_start: 12, column_end: 13, line_start: 639, line_end: 639 }: ,
Token { kind: Space, char_start: 21820, char_end: 21821, byte_start: 21821, byte_end: 21822, column_start: 13, column_end: 14, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21821, char_end: 21824, byte_start: 21822, byte_end: 21825, column_start: 14, column_end: 17, line_start: 639, line_end: 639 }: but
Token { kind: Space, char_start: 21824, char_end: 21825, byte_start: 21825, byte_end: 21826, column_start: 17, column_end: 18, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21825, char_end: 21832, byte_start: 21826, byte_end: 21833, column_start: 18, column_end: 25, line_start: 639, line_end: 639 }: returns
Token { kind: Space, char_start: 21832, char_end: 21833, byte_start: 21833, byte_end: 21834, column_start: 25, column_end: 26, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21833, char_end: 21836, byte_start: 21834, byte_end: 21837, column_start: 26, column_end: 29, line_start: 639, line_end: 639 }: all
Token { kind: Space, char_start: 21836, char_end: 21837, byte_start: 21837, byte_end: 21838, column_start: 29, column_end: 30, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21837, char_end: 21844, byte_start: 21838, byte_end: 21845, column_start: 30, column_end: 37, line_start: 639, line_end: 639 }: results
Token { kind: Space, char_start: 21844, char_end: 21845, byte_start: 21845, byte_end: 21846, column_start: 37, column_end: 38, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21845, char_end: 21857, byte_start: 21846, byte_end: 21858, column_start: 38, column_end: 50, line_start: 639, line_end: 639 }: irrespective
Token { kind: Space, char_start: 21857, char_end: 21858, byte_start: 21858, byte_end: 21859, column_start: 50, column_end: 51, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21858, char_end: 21860, byte_start: 21859, byte_end: 21861, column_start: 51, column_end: 53, line_start: 639, line_end: 639 }: of
Token { kind: Space, char_start: 21860, char_end: 21861, byte_start: 21861, byte_end: 21862, column_start: 53, column_end: 54, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21861, char_end: 21864, byte_start: 21862, byte_end: 21865, column_start: 54, column_end: 57, line_start: 639, line_end: 639 }: the
Token { kind: Space, char_start: 21864, char_end: 21865, byte_start: 21865, byte_end: 21866, column_start: 57, column_end: 58, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21865, char_end: 21870, byte_start: 21866, byte_end: 21871, column_start: 58, column_end: 63, line_start: 639, line_end: 639 }: value
Token { kind: Space, char_start: 21870, char_end: 21871, byte_start: 21871, byte_end: 21872, column_start: 63, column_end: 64, line_start: 639, line_end: 639 }: " "
Token { kind: Text, char_start: 21871, char_end: 21873, byte_start: 21872, byte_end: 21874, column_start: 64, column_end: 66, line_start: 639, line_end: 639 }: of
Token { kind: Newline, char_start: 21873, char_end: 21874, byte_start: 21874, byte_end: 21875, column_start: 66, column_end: 1, line_start: 639, line_end: 640 }: "\n"
Token { kind: Bar, char_start: 21874, char_end: 21875, byte_start: 21875, byte_end: 21876, column_start: 1, column_end: 2, line_start: 640, line_end: 640 }: |
Token { kind: Text, char_start: 21875, char_end: 21893, byte_start: 21876, byte_end: 21894, column_start: 2, column_end: 20, line_start: 640, line_end: 640 }: g:FerretMaxResults
Token { kind: Bar, char_start: 21893, char_end: 21894, byte_start: 21894, byte_end: 21895, column_start: 20, column_end: 21, line_start: 640, line_end: 640 }: |
Token { kind: Text, char_start: 21894, char_end: 21895, byte_start: 21895, byte_end: 21896, column_start: 21, column_end: 22, line_start: 640, line_end: 640 }: .
Token { kind: Newline, char_start: 21895, char_end: 21896, byte_start: 21896, byte_end: 21897, column_start: 22, column_end: 1, line_start: 640, line_end: 641 }: "\n"
Token { kind: Newline, char_start: 21896, char_end: 21897, byte_start: 21897, byte_end: 21898, column_start: 1, column_end: 1, line_start: 641, line_end: 642 }: "\n"
Token { kind: At, char_start: 21897, char_end: 21898, byte_start: 21898, byte_end: 21899, column_start: 1, column_end: 2, line_start: 642, line_end: 642 }: @
Token { kind: Text, char_start: 21898, char_end: 21905, byte_start: 21899, byte_end: 21906, column_start: 2, column_end: 9, line_start: 642, line_end: 642 }: command
Token { kind: Space, char_start: 21905, char_end: 21906, byte_start: 21906, byte_end: 21907, column_start: 9, column_end: 10, line_start: 642, line_end: 642 }: " "
Token { kind: Text, char_start: 21906, char_end: 21911, byte_start: 21907, byte_end: 21912, column_start: 10, column_end: 15, line_start: 642, line_end: 642 }: :Lack
Token { kind: Space, char_start: 21911, char_end: 21912, byte_start: 21912, byte_end: 21913, column_start: 15, column_end: 16, line_start: 642, line_end: 642 }: " "
Token { kind: Text, char_start: 21912, char_end: 21921, byte_start: 21913, byte_end: 21922, column_start: 16, column_end: 25, line_start: 642, line_end: 642 }: {pattern}
Token { kind: Space, char_start: 21921, char_end: 21922, byte_start: 21922, byte_end: 21923, column_start: 25, column_end: 26, line_start: 642, line_end: 642 }: " "
Token { kind: Text, char_start: 21922, char_end: 21931, byte_start: 21923, byte_end: 21932, column_start: 26, column_end: 35, line_start: 642, line_end: 642 }: {options}
Token { kind: Newline, char_start: 21931, char_end: 21932, byte_start: 21932, byte_end: 21933, column_start: 35, column_end: 1, line_start: 642, line_end: 643 }: "\n"
Token { kind: Newline, char_start: 21932, char_end: 21933, byte_start: 21933, byte_end: 21934, column_start: 1, column_end: 1, line_start: 643, line_end: 644 }: "\n"
Token { kind: Text, char_start: 21933, char_end: 21937, byte_start: 21934, byte_end: 21938, column_start: 1, column_end: 5, line_start: 644, line_end: 644 }: Just
Token { kind: Space, char_start: 21937, char_end: 21938, byte_start: 21938, byte_end: 21939, column_start: 5, column_end: 6, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 21938, char_end: 21942, byte_start: 21939, byte_end: 21943, column_start: 6, column_end: 10, line_start: 644, line_end: 644 }: like
Token { kind: Space, char_start: 21942, char_end: 21943, byte_start: 21943, byte_end: 21944, column_start: 10, column_end: 11, line_start: 644, line_end: 644 }: " "
Token { kind: Bar, char_start: 21943, char_end: 21944, byte_start: 21944, byte_end: 21945, column_start: 11, column_end: 12, line_start: 644, line_end: 644 }: |
Token { kind: Text, char_start: 21944, char_end: 21948, byte_start: 21945, byte_end: 21949, column_start: 12, column_end: 16, line_start: 644, line_end: 644 }: :Ack
Token { kind: Bar, char_start: 21948, char_end: 21949, byte_start: 21949, byte_end: 21950, column_start: 16, column_end: 17, line_start: 644, line_end: 644 }: |
Token { kind: Text, char_start: 21949, char_end: 21950, byte_start: 21950, byte_end: 21951, column_start: 17, column_end: 18, line_start: 644, line_end: 644 }: ,
Token { kind: Space, char_start: 21950, char_end: 21951, byte_start: 21951, byte_end: 21952, column_start: 18, column_end: 19, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 21951, char_end: 21954, byte_start: 21952, byte_end: 21955, column_start: 19, column_end: 22, line_start: 644, line_end: 644 }: but
Token { kind: Space, char_start: 21954, char_end: 21955, byte_start: 21955, byte_end: 21956, column_start: 22, column_end: 23, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 21955, char_end: 21962, byte_start: 21956, byte_end: 21963, column_start: 23, column_end: 30, line_start: 644, line_end: 644 }: instead
Token { kind: Space, char_start: 21962, char_end: 21963, byte_start: 21963, byte_end: 21964, column_start: 30, column_end: 31, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 21963, char_end: 21965, byte_start: 21964, byte_end: 21966, column_start: 31, column_end: 33, line_start: 644, line_end: 644 }: of
Token { kind: Space, char_start: 21965, char_end: 21966, byte_start: 21966, byte_end: 21967, column_start: 33, column_end: 34, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 21966, char_end: 21971, byte_start: 21967, byte_end: 21972, column_start: 34, column_end: 39, line_start: 644, line_end: 644 }: using
Token { kind: Space, char_start: 21971, char_end: 21972, byte_start: 21972, byte_end: 21973, column_start: 39, column_end: 40, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 21972, char_end: 21975, byte_start: 21973, byte_end: 21976, column_start: 40, column_end: 43, line_start: 644, line_end: 644 }: the
Token { kind: Space, char_start: 21975, char_end: 21976, byte_start: 21976, byte_end: 21977, column_start: 43, column_end: 44, line_start: 644, line_end: 644 }: " "
Token { kind: Bar, char_start: 21976, char_end: 21977, byte_start: 21977, byte_end: 21978, column_start: 44, column_end: 45, line_start: 644, line_end: 644 }: |
Token { kind: Text, char_start: 21977, char_end: 21985, byte_start: 21978, byte_end: 21986, column_start: 45, column_end: 53, line_start: 644, line_end: 644 }: quickfix
Token { kind: Bar, char_start: 21985, char_end: 21986, byte_start: 21986, byte_end: 21987, column_start: 53, column_end: 54, line_start: 644, line_end: 644 }: |
Token { kind: Space, char_start: 21986, char_end: 21987, byte_start: 21987, byte_end: 21988, column_start: 54, column_end: 55, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 21987, char_end: 21995, byte_start: 21988, byte_end: 21996, column_start: 55, column_end: 63, line_start: 644, line_end: 644 }: listing,
Token { kind: Space, char_start: 21995, char_end: 21996, byte_start: 21996, byte_end: 21997, column_start: 63, column_end: 64, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 21996, char_end: 22001, byte_start: 21997, byte_end: 22002, column_start: 64, column_end: 69, line_start: 644, line_end: 644 }: which
Token { kind: Space, char_start: 22001, char_end: 22002, byte_start: 22002, byte_end: 22003, column_start: 69, column_end: 70, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 22002, char_end: 22004, byte_start: 22003, byte_end: 22005, column_start: 70, column_end: 72, line_start: 644, line_end: 644 }: is
Token { kind: Space, char_start: 22004, char_end: 22005, byte_start: 22005, byte_end: 22006, column_start: 72, column_end: 73, line_start: 644, line_end: 644 }: " "
Token { kind: Text, char_start: 22005, char_end: 22011, byte_start: 22006, byte_end: 22012, column_start: 73, column_end: 79, line_start: 644, line_end: 644 }: global
Token { kind: Newline, char_start: 22011, char_end: 22012, byte_start: 22012, byte_end: 22013, column_start: 79, column_end: 1, line_start: 644, line_end: 645 }: "\n"
Token { kind: Text, char_start: 22012, char_end: 22018, byte_start: 22013, byte_end: 22019, column_start: 1, column_end: 7, line_start: 645, line_end: 645 }: across
Token { kind: Space, char_start: 22018, char_end: 22019, byte_start: 22019, byte_end: 22020, column_start: 7, column_end: 8, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22019, char_end: 22021, byte_start: 22020, byte_end: 22022, column_start: 8, column_end: 10, line_start: 645, line_end: 645 }: an
Token { kind: Space, char_start: 22021, char_end: 22022, byte_start: 22022, byte_end: 22023, column_start: 10, column_end: 11, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22022, char_end: 22028, byte_start: 22023, byte_end: 22029, column_start: 11, column_end: 17, line_start: 645, line_end: 645 }: entire
Token { kind: Space, char_start: 22028, char_end: 22029, byte_start: 22029, byte_end: 22030, column_start: 17, column_end: 18, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22029, char_end: 22032, byte_start: 22030, byte_end: 22033, column_start: 18, column_end: 21, line_start: 645, line_end: 645 }: Vim
Token { kind: Space, char_start: 22032, char_end: 22033, byte_start: 22033, byte_end: 22034, column_start: 21, column_end: 22, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22033, char_end: 22042, byte_start: 22034, byte_end: 22043, column_start: 22, column_end: 31, line_start: 645, line_end: 645 }: instance,
Token { kind: Space, char_start: 22042, char_end: 22043, byte_start: 22043, byte_end: 22044, column_start: 31, column_end: 32, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22043, char_end: 22045, byte_start: 22044, byte_end: 22046, column_start: 32, column_end: 34, line_start: 645, line_end: 645 }: it
Token { kind: Space, char_start: 22045, char_end: 22046, byte_start: 22046, byte_end: 22047, column_start: 34, column_end: 35, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22046, char_end: 22050, byte_start: 22047, byte_end: 22051, column_start: 35, column_end: 39, line_start: 645, line_end: 645 }: uses
Token { kind: Space, char_start: 22050, char_end: 22051, byte_start: 22051, byte_end: 22052, column_start: 39, column_end: 40, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22051, char_end: 22054, byte_start: 22052, byte_end: 22055, column_start: 40, column_end: 43, line_start: 645, line_end: 645 }: the
Token { kind: Space, char_start: 22054, char_end: 22055, byte_start: 22055, byte_end: 22056, column_start: 43, column_end: 44, line_start: 645, line_end: 645 }: " "
Token { kind: Bar, char_start: 22055, char_end: 22056, byte_start: 22056, byte_end: 22057, column_start: 44, column_end: 45, line_start: 645, line_end: 645 }: |
Token { kind: Text, char_start: 22056, char_end: 22064, byte_start: 22057, byte_end: 22065, column_start: 45, column_end: 53, line_start: 645, line_end: 645 }: location
Token { kind: Hyphen, char_start: 22064, char_end: 22065, byte_start: 22065, byte_end: 22066, column_start: 53, column_end: 54, line_start: 645, line_end: 645 }: -
Token { kind: Text, char_start: 22065, char_end: 22069, byte_start: 22066, byte_end: 22070, column_start: 54, column_end: 58, line_start: 645, line_end: 645 }: list
Token { kind: Bar, char_start: 22069, char_end: 22070, byte_start: 22070, byte_end: 22071, column_start: 58, column_end: 59, line_start: 645, line_end: 645 }: |
Token { kind: Text, char_start: 22070, char_end: 22071, byte_start: 22071, byte_end: 22072, column_start: 59, column_end: 60, line_start: 645, line_end: 645 }: ,
Token { kind: Space, char_start: 22071, char_end: 22072, byte_start: 22072, byte_end: 22073, column_start: 60, column_end: 61, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22072, char_end: 22077, byte_start: 22073, byte_end: 22078, column_start: 61, column_end: 66, line_start: 645, line_end: 645 }: which
Token { kind: Space, char_start: 22077, char_end: 22078, byte_start: 22078, byte_end: 22079, column_start: 66, column_end: 67, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22078, char_end: 22080, byte_start: 22079, byte_end: 22081, column_start: 67, column_end: 69, line_start: 645, line_end: 645 }: is
Token { kind: Space, char_start: 22080, char_end: 22081, byte_start: 22081, byte_end: 22082, column_start: 69, column_end: 70, line_start: 645, line_end: 645 }: " "
Token { kind: Text, char_start: 22081, char_end: 22082, byte_start: 22082, byte_end: 22083, column_start: 70, column_end: 71, line_start: 645, line_end: 645 }: a
Token { kind: Newline, char_start: 22082, char_end: 22083, byte_start: 22083, byte_end: 22084, column_start: 71, column_end: 1, line_start: 645, line_end: 646 }: "\n"
Token { kind: Text, char_start: 22083, char_end: 22086, byte_start: 22084, byte_end: 22087, column_start: 1, column_end: 4, line_start: 646, line_end: 646 }: per
Token { kind: Hyphen, char_start: 22086, char_end: 22087, byte_start: 22087, byte_end: 22088, column_start: 4, column_end: 5, line_start: 646, line_end: 646 }: -
Token { kind: Text, char_start: 22087, char_end: 22093, byte_start: 22088, byte_end: 22094, column_start: 5, column_end: 11, line_start: 646, line_end: 646 }: window
Token { kind: Space, char_start: 22093, char_end: 22094, byte_start: 22094, byte_end: 22095, column_start: 11, column_end: 12, line_start: 646, line_end: 646 }: " "
Token { kind: Text, char_start: 22094, char_end: 22104, byte_start: 22095, byte_end: 22105, column_start: 12, column_end: 22, line_start: 646, line_end: 646 }: construct.
Token { kind: Newline, char_start: 22104, char_end: 22105, byte_start: 22105, byte_end: 22106, column_start: 22, column_end: 1, line_start: 646, line_end: 647 }: "\n"
Token { kind: Newline, char_start: 22105, char_end: 22106, byte_start: 22106, byte_end: 22107, column_start: 1, column_end: 1, line_start: 647, line_end: 648 }: "\n"
Token { kind: Text, char_start: 22106, char_end: 22110, byte_start: 22107, byte_end: 22111, column_start: 1, column_end: 5, line_start: 648, line_end: 648 }: Note
Token { kind: Space, char_start: 22110, char_end: 22111, byte_start: 22111, byte_end: 22112, column_start: 5, column_end: 6, line_start: 648, line_end: 648 }: " "
Token { kind: Text, char_start: 22111, char_end: 22115, byte_start: 22112, byte_end: 22116, column_start: 6, column_end: 10, line_start: 648, line_end: 648 }: that
Token { kind: Space, char_start: 22115, char_end: 22116, byte_start: 22116, byte_end: 22117, column_start: 10, column_end: 11, line_start: 648, line_end: 648 }: " "
Token { kind: Bar, char_start: 22116, char_end: 22117, byte_start: 22117, byte_end: 22118, column_start: 11, column_end: 12, line_start: 648, line_end: 648 }: |
Token { kind: Text, char_start: 22117, char_end: 22122, byte_start: 22118, byte_end: 22123, column_start: 12, column_end: 17, line_start: 648, line_end: 648 }: :Lack
Token { kind: Bar, char_start: 22122, char_end: 22123, byte_start: 22123, byte_end: 22124, column_start: 17, column_end: 18, line_start: 648, line_end: 648 }: |
Token { kind: Space, char_start: 22123, char_end: 22124, byte_start: 22124, byte_end: 22125, column_start: 18, column_end: 19, line_start: 648, line_end: 648 }: " "
Token { kind: Text, char_start: 22124, char_end: 22130, byte_start: 22125, byte_end: 22131, column_start: 19, column_end: 25, line_start: 648, line_end: 648 }: always
Token { kind: Space, char_start: 22130, char_end: 22131, byte_start: 22131, byte_end: 22132, column_start: 25, column_end: 26, line_start: 648, line_end: 648 }: " "
Token { kind: Text, char_start: 22131, char_end: 22135, byte_start: 22132, byte_end: 22136, column_start: 26, column_end: 30, line_start: 648, line_end: 648 }: runs
Token { kind: Space, char_start: 22135, char_end: 22136, byte_start: 22136, byte_end: 22137, column_start: 30, column_end: 31, line_start: 648, line_end: 648 }: " "
Token { kind: Text, char_start: 22136, char_end: 22149, byte_start: 22137, byte_end: 22150, column_start: 31, column_end: 44, line_start: 648, line_end: 648 }: synchronously
Token { kind: Space, char_start: 22149, char_end: 22150, byte_start: 22150, byte_end: 22151, column_start: 44, column_end: 45, line_start: 648, line_end: 648 }: " "
Token { kind: Text, char_start: 22150, char_end: 22153, byte_start: 22151, byte_end: 22154, column_start: 45, column_end: 48, line_start: 648, line_end: 648 }: via
Token { kind: Space, char_start: 22153, char_end: 22154, byte_start: 22154, byte_end: 22155, column_start: 48, column_end: 49, line_start: 648, line_end: 648 }: " "
Token { kind: Bar, char_start: 22154, char_end: 22155, byte_start: 22155, byte_end: 22156, column_start: 49, column_end: 50, line_start: 648, line_end: 648 }: |
Token { kind: Text, char_start: 22155, char_end: 22161, byte_start: 22156, byte_end: 22162, column_start: 50, column_end: 56, line_start: 648, line_end: 648 }: :cexpr
Token { kind: Bar, char_start: 22161, char_end: 22162, byte_start: 22162, byte_end: 22163, column_start: 56, column_end: 57, line_start: 648, line_end: 648 }: |
Token { kind: Text, char_start: 22162, char_end: 22163, byte_start: 22163, byte_end: 22164, column_start: 57, column_end: 58, line_start: 648, line_end: 648 }: .
Token { kind: Newline, char_start: 22163, char_end: 22164, byte_start: 22164, byte_end: 22165, column_start: 58, column_end: 1, line_start: 648, line_end: 649 }: "\n"
Token { kind: Newline, char_start: 22164, char_end: 22165, byte_start: 22165, byte_end: 22166, column_start: 1, column_end: 1, line_start: 649, line_end: 650 }: "\n"
Token { kind: At, char_start: 22165, char_end: 22166, byte_start: 22166, byte_end: 22167, column_start: 1, column_end: 2, line_start: 650, line_end: 650 }: @
Token { kind: Text, char_start: 22166, char_end: 22173, byte_start: 22167, byte_end: 22174, column_start: 2, column_end: 9, line_start: 650, line_end: 650 }: command
Token { kind: Space, char_start: 22173, char_end: 22174, byte_start: 22174, byte_end: 22175, column_start: 9, column_end: 10, line_start: 650, line_end: 650 }: " "
Token { kind: Text, char_start: 22174, char_end: 22179, byte_start: 22175, byte_end: 22180, column_start: 10, column_end: 15, line_start: 650, line_end: 650 }: :Lack
Token { kind: Bang, char_start: 22179, char_end: 22180, byte_start: 22180, byte_end: 22181, column_start: 15, column_end: 16, line_start: 650, line_end: 650 }: !
Token { kind: Space, char_start: 22180, char_end: 22181, byte_start: 22181, byte_end: 22182, column_start: 16, column_end: 17, line_start: 650, line_end: 650 }: " "
Token { kind: Text, char_start: 22181, char_end: 22190, byte_start: 22182, byte_end: 22191, column_start: 17, column_end: 26, line_start: 650, line_end: 650 }: {pattern}
Token { kind: Space, char_start: 22190, char_end: 22191, byte_start: 22191, byte_end: 22192, column_start: 26, column_end: 27, line_start: 650, line_end: 650 }: " "
Token { kind: Text, char_start: 22191, char_end: 22200, byte_start: 22192, byte_end: 22201, column_start: 27, column_end: 36, line_start: 650, line_end: 650 }: {options}
Token { kind: Newline, char_start: 22200, char_end: 22201, byte_start: 22201, byte_end: 22202, column_start: 36, column_end: 1, line_start: 650, line_end: 651 }: "\n"
Token { kind: Newline, char_start: 22201, char_end: 22202, byte_start: 22202, byte_end: 22203, column_start: 1, column_end: 1, line_start: 651, line_end: 652 }: "\n"
Token { kind: Text, char_start: 22202, char_end: 22206, byte_start: 22203, byte_end: 22207, column_start: 1, column_end: 5, line_start: 652, line_end: 652 }: Like
Token { kind: Space, char_start: 22206, char_end: 22207, byte_start: 22207, byte_end: 22208, column_start: 5, column_end: 6, line_start: 652, line_end: 652 }: " "
Token { kind: Bar, char_start: 22207, char_end: 22208, byte_start: 22208, byte_end: 22209, column_start: 6, column_end: 7, line_start: 652, line_end: 652 }: |
Token { kind: Text, char_start: 22208, char_end: 22213, byte_start: 22209, byte_end: 22214, column_start: 7, column_end: 12, line_start: 652, line_end: 652 }: :Lack
Token { kind: Bar, char_start: 22213, char_end: 22214, byte_start: 22214, byte_end: 22215, column_start: 12, column_end: 13, line_start: 652, line_end: 652 }: |
Token { kind: Text, char_start: 22214, char_end: 22215, byte_start: 22215, byte_end: 22216, column_start: 13, column_end: 14, line_start: 652, line_end: 652 }: ,
Token { kind: Space, char_start: 22215, char_end: 22216, byte_start: 22216, byte_end: 22217, column_start: 14, column_end: 15, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22216, char_end: 22219, byte_start: 22217, byte_end: 22220, column_start: 15, column_end: 18, line_start: 652, line_end: 652 }: but
Token { kind: Space, char_start: 22219, char_end: 22220, byte_start: 22220, byte_end: 22221, column_start: 18, column_end: 19, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22220, char_end: 22227, byte_start: 22221, byte_end: 22228, column_start: 19, column_end: 26, line_start: 652, line_end: 652 }: returns
Token { kind: Space, char_start: 22227, char_end: 22228, byte_start: 22228, byte_end: 22229, column_start: 26, column_end: 27, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22228, char_end: 22231, byte_start: 22229, byte_end: 22232, column_start: 27, column_end: 30, line_start: 652, line_end: 652 }: all
Token { kind: Space, char_start: 22231, char_end: 22232, byte_start: 22232, byte_end: 22233, column_start: 30, column_end: 31, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22232, char_end: 22239, byte_start: 22233, byte_end: 22240, column_start: 31, column_end: 38, line_start: 652, line_end: 652 }: results
Token { kind: Space, char_start: 22239, char_end: 22240, byte_start: 22240, byte_end: 22241, column_start: 38, column_end: 39, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22240, char_end: 22252, byte_start: 22241, byte_end: 22253, column_start: 39, column_end: 51, line_start: 652, line_end: 652 }: irrespective
Token { kind: Space, char_start: 22252, char_end: 22253, byte_start: 22253, byte_end: 22254, column_start: 51, column_end: 52, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22253, char_end: 22255, byte_start: 22254, byte_end: 22256, column_start: 52, column_end: 54, line_start: 652, line_end: 652 }: of
Token { kind: Space, char_start: 22255, char_end: 22256, byte_start: 22256, byte_end: 22257, column_start: 54, column_end: 55, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22256, char_end: 22259, byte_start: 22257, byte_end: 22260, column_start: 55, column_end: 58, line_start: 652, line_end: 652 }: the
Token { kind: Space, char_start: 22259, char_end: 22260, byte_start: 22260, byte_end: 22261, column_start: 58, column_end: 59, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22260, char_end: 22265, byte_start: 22261, byte_end: 22266, column_start: 59, column_end: 64, line_start: 652, line_end: 652 }: value
Token { kind: Space, char_start: 22265, char_end: 22266, byte_start: 22266, byte_end: 22267, column_start: 64, column_end: 65, line_start: 652, line_end: 652 }: " "
Token { kind: Text, char_start: 22266, char_end: 22268, byte_start: 22267, byte_end: 22269, column_start: 65, column_end: 67, line_start: 652, line_end: 652 }: of
Token { kind: Newline, char_start: 22268, char_end: 22269, byte_start: 22269, byte_end: 22270, column_start: 67, column_end: 1, line_start: 652, line_end: 653 }: "\n"
Token { kind: Bar, char_start: 22269, char_end: 22270, byte_start: 22270, byte_end: 22271, column_start: 1, column_end: 2, line_start: 653, line_end: 653 }: |
Token { kind: Text, char_start: 22270, char_end: 22288, byte_start: 22271, byte_end: 22289, column_start: 2, column_end: 20, line_start: 653, line_end: 653 }: g:FerretMaxResults
Token { kind: Bar, char_start: 22288, char_end: 22289, byte_start: 22289, byte_end: 22290, column_start: 20, column_end: 21, line_start: 653, line_end: 653 }: |
Token { kind: Text, char_start: 22289, char_end: 22290, byte_start: 22290, byte_end: 22291, column_start: 21, column_end: 22, line_start: 653, line_end: 653 }: .
Token { kind: Newline, char_start: 22290, char_end: 22291, byte_start: 22291, byte_end: 22292, column_start: 22, column_end: 1, line_start: 653, line_end: 654 }: "\n"
Token { kind: Newline, char_start: 22291, char_end: 22292, byte_start: 22292, byte_end: 22293, column_start: 1, column_end: 1, line_start: 654, line_end: 655 }: "\n"
Token { kind: At, char_start: 22292, char_end: 22293, byte_start: 22293, byte_end: 22294, column_start: 1, column_end: 2, line_start: 655, line_end: 655 }: @
Token { kind: Text, char_start: 22293, char_end: 22300, byte_start: 22294, byte_end: 22301, column_start: 2, column_end: 9, line_start: 655, line_end: 655 }: command
Token { kind: Space, char_start: 22300, char_end: 22301, byte_start: 22301, byte_end: 22302, column_start: 9, column_end: 10, line_start: 655, line_end: 655 }: " "
Token { kind: Text, char_start: 22301, char_end: 22306, byte_start: 22302, byte_end: 22307, column_start: 10, column_end: 15, line_start: 655, line_end: 655 }: :Back
Token { kind: Space, char_start: 22306, char_end: 22307, byte_start: 22307, byte_end: 22308, column_start: 15, column_end: 16, line_start: 655, line_end: 655 }: " "
Token { kind: Text, char_start: 22307, char_end: 22316, byte_start: 22308, byte_end: 22317, column_start: 16, column_end: 25, line_start: 655, line_end: 655 }: {pattern}
Token { kind: Space, char_start: 22316, char_end: 22317, byte_start: 22317, byte_end: 22318, column_start: 25, column_end: 26, line_start: 655, line_end: 655 }: " "
Token { kind: Text, char_start: 22317, char_end: 22326, byte_start: 22318, byte_end: 22327, column_start: 26, column_end: 35, line_start: 655, line_end: 655 }: {options}
Token { kind: Newline, char_start: 22326, char_end: 22327, byte_start: 22327, byte_end: 22328, column_start: 35, column_end: 1, line_start: 655, line_end: 656 }: "\n"
Token { kind: Newline, char_start: 22327, char_end: 22328, byte_start: 22328, byte_end: 22329, column_start: 1, column_end: 1, line_start: 656, line_end: 657 }: "\n"
Token { kind: Text, char_start: 22328, char_end: 22332, byte_start: 22329, byte_end: 22333, column_start: 1, column_end: 5, line_start: 657, line_end: 657 }: Like
Token { kind: Space, char_start: 22332, char_end: 22333, byte_start: 22333, byte_end: 22334, column_start: 5, column_end: 6, line_start: 657, line_end: 657 }: " "
Token { kind: Bar, char_start: 22333, char_end: 22334, byte_start: 22334, byte_end: 22335, column_start: 6, column_end: 7, line_start: 657, line_end: 657 }: |
Token { kind: Text, char_start: 22334, char_end: 22338, byte_start: 22335, byte_end: 22339, column_start: 7, column_end: 11, line_start: 657, line_end: 657 }: :Ack
Token { kind: Bar, char_start: 22338, char_end: 22339, byte_start: 22339, byte_end: 22340, column_start: 11, column_end: 12, line_start: 657, line_end: 657 }: |
Token { kind: Text, char_start: 22339, char_end: 22340, byte_start: 22340, byte_end: 22341, column_start: 12, column_end: 13, line_start: 657, line_end: 657 }: ,
Token { kind: Space, char_start: 22340, char_end: 22341, byte_start: 22341, byte_end: 22342, column_start: 13, column_end: 14, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22341, char_end: 22344, byte_start: 22342, byte_end: 22345, column_start: 14, column_end: 17, line_start: 657, line_end: 657 }: but
Token { kind: Space, char_start: 22344, char_end: 22345, byte_start: 22345, byte_end: 22346, column_start: 17, column_end: 18, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22345, char_end: 22353, byte_start: 22346, byte_end: 22354, column_start: 18, column_end: 26, line_start: 657, line_end: 657 }: searches
Token { kind: Space, char_start: 22353, char_end: 22354, byte_start: 22354, byte_end: 22355, column_start: 26, column_end: 27, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22354, char_end: 22358, byte_start: 22355, byte_end: 22359, column_start: 27, column_end: 31, line_start: 657, line_end: 657 }: only
Token { kind: Space, char_start: 22358, char_end: 22359, byte_start: 22359, byte_end: 22360, column_start: 31, column_end: 32, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22359, char_end: 22365, byte_start: 22360, byte_end: 22366, column_start: 32, column_end: 38, line_start: 657, line_end: 657 }: listed
Token { kind: Space, char_start: 22365, char_end: 22366, byte_start: 22366, byte_end: 22367, column_start: 38, column_end: 39, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22366, char_end: 22374, byte_start: 22367, byte_end: 22375, column_start: 39, column_end: 47, line_start: 657, line_end: 657 }: buffers.
Token { kind: Space, char_start: 22374, char_end: 22375, byte_start: 22375, byte_end: 22376, column_start: 47, column_end: 48, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22375, char_end: 22379, byte_start: 22376, byte_end: 22380, column_start: 48, column_end: 52, line_start: 657, line_end: 657 }: Note
Token { kind: Space, char_start: 22379, char_end: 22380, byte_start: 22380, byte_end: 22381, column_start: 52, column_end: 53, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22380, char_end: 22384, byte_start: 22381, byte_end: 22385, column_start: 53, column_end: 57, line_start: 657, line_end: 657 }: that
Token { kind: Space, char_start: 22384, char_end: 22385, byte_start: 22385, byte_end: 22386, column_start: 57, column_end: 58, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22385, char_end: 22388, byte_start: 22386, byte_end: 22389, column_start: 58, column_end: 61, line_start: 657, line_end: 657 }: the
Token { kind: Space, char_start: 22388, char_end: 22389, byte_start: 22389, byte_end: 22390, column_start: 61, column_end: 62, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22389, char_end: 22395, byte_start: 22390, byte_end: 22396, column_start: 62, column_end: 68, line_start: 657, line_end: 657 }: search
Token { kind: Space, char_start: 22395, char_end: 22396, byte_start: 22396, byte_end: 22397, column_start: 68, column_end: 69, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22396, char_end: 22398, byte_start: 22397, byte_end: 22399, column_start: 69, column_end: 71, line_start: 657, line_end: 657 }: is
Token { kind: Space, char_start: 22398, char_end: 22399, byte_start: 22399, byte_end: 22400, column_start: 71, column_end: 72, line_start: 657, line_end: 657 }: " "
Token { kind: Text, char_start: 22399, char_end: 22404, byte_start: 22400, byte_end: 22405, column_start: 72, column_end: 77, line_start: 657, line_end: 657 }: still
Token { kind: Newline, char_start: 22404, char_end: 22405, byte_start: 22405, byte_end: 22406, column_start: 77, column_end: 1, line_start: 657, line_end: 658 }: "\n"
Token { kind: Text, char_start: 22405, char_end: 22414, byte_start: 22406, byte_end: 22415, column_start: 1, column_end: 10, line_start: 658, line_end: 658 }: delegated
Token { kind: Space, char_start: 22414, char_end: 22415, byte_start: 22415, byte_end: 22416, column_start: 10, column_end: 11, line_start: 658, line_end: 658 }: " "
Token { kind: Text, char_start: 22415, char_end: 22417, byte_start: 22416, byte_end: 22418, column_start: 11, column_end: 13, line_start: 658, line_end: 658 }: to
Token { kind: Space, char_start: 22417, char_end: 22418, byte_start: 22418, byte_end: 22419, column_start: 13, column_end: 14, line_start: 658, line_end: 658 }: " "
Token { kind: Text, char_start: 22418, char_end: 22421, byte_start: 22419, byte_end: 22422, column_start: 14, column_end: 17, line_start: 658, line_end: 658 }: the
Token { kind: Space, char_start: 22421, char_end: 22422, byte_start: 22422, byte_end: 22423, column_start: 17, column_end: 18, line_start: 658, line_end: 658 }: " "
Token { kind: Text, char_start: 22422, char_end: 22432, byte_start: 22423, byte_end: 22433, column_start: 18, column_end: 28, line_start: 658, line_end: 658 }: underlying
Token { kind: Space, char_start: 22432, char_end: 22433, byte_start: 22433, byte_end: 22434, column_start: 28, column_end: 29, line_start: 658, line_end: 658 }: " "
Token { kind: Bar, char_start: 22433, char_end: 22434, byte_start: 22434, byte_end: 22435, column_start: 29, column_end: 30, line_start: 658, line_end: 658 }: |
Token { kind: Text, char_start: 22434, char_end: 22443, byte_start: 22435, byte_end: 22444, column_start: 30, column_end: 39, line_start: 658, line_end: 658 }: 'grepprg'
Token { kind: Bar, char_start: 22443, char_end: 22444, byte_start: 22444, byte_end: 22445, column_start: 39, column_end: 40, line_start: 658, line_end: 658 }: |
Token { kind: Space, char_start: 22444, char_end: 22445, byte_start: 22445, byte_end: 22446, column_start: 40, column_end: 41, line_start: 658, line_end: 658 }: " "
Token { kind: Lparen, char_start: 22445, char_end: 22446, byte_start: 22446, byte_end: 22447, column_start: 41, column_end: 42, line_start: 658, line_end: 658 }: (
Token { kind: Backtick, char_start: 22446, char_end: 22447, byte_start: 22447, byte_end: 22448, column_start: 42, column_end: 43, line_start: 658, line_end: 658 }: `
Token { kind: Text, char_start: 22447, char_end: 22449, byte_start: 22448, byte_end: 22450, column_start: 43, column_end: 45, line_start: 658, line_end: 658 }: rg
Token { kind: Backtick, char_start: 22449, char_end: 22450, byte_start: 22450, byte_end: 22451, column_start: 45, column_end: 46, line_start: 658, line_end: 658 }: `
Token { kind: Text, char_start: 22450, char_end: 22451, byte_start: 22451, byte_end: 22452, column_start: 46, column_end: 47, line_start: 658, line_end: 658 }: ,
Token { kind: Space, char_start: 22451, char_end: 22452, byte_start: 22452, byte_end: 22453, column_start: 47, column_end: 48, line_start: 658, line_end: 658 }: " "
Token { kind: Backtick, char_start: 22452, char_end: 22453, byte_start: 22453, byte_end: 22454, column_start: 48, column_end: 49, line_start: 658, line_end: 658 }: `
Token { kind: Text, char_start: 22453, char_end: 22455, byte_start: 22454, byte_end: 22456, column_start: 49, column_end: 51, line_start: 658, line_end: 658 }: ag
Token { kind: Backtick, char_start: 22455, char_end: 22456, byte_start: 22456, byte_end: 22457, column_start: 51, column_end: 52, line_start: 658, line_end: 658 }: `
Token { kind: Text, char_start: 22456, char_end: 22457, byte_start: 22457, byte_end: 22458, column_start: 52, column_end: 53, line_start: 658, line_end: 658 }: ,
Token { kind: Space, char_start: 22457, char_end: 22458, byte_start: 22458, byte_end: 22459, column_start: 53, column_end: 54, line_start: 658, line_end: 658 }: " "
Token { kind: Backtick, char_start: 22458, char_end: 22459, byte_start: 22459, byte_end: 22460, column_start: 54, column_end: 55, line_start: 658, line_end: 658 }: `
Token { kind: Text, char_start: 22459, char_end: 22462, byte_start: 22460, byte_end: 22463, column_start: 55, column_end: 58, line_start: 658, line_end: 658 }: ack
Token { kind: Backtick, char_start: 22462, char_end: 22463, byte_start: 22463, byte_end: 22464, column_start: 58, column_end: 59, line_start: 658, line_end: 658 }: `
Token { kind: Space, char_start: 22463, char_end: 22464, byte_start: 22464, byte_end: 22465, column_start: 59, column_end: 60, line_start: 658, line_end: 658 }: " "
Token { kind: Text, char_start: 22464, char_end: 22466, byte_start: 22465, byte_end: 22467, column_start: 60, column_end: 62, line_start: 658, line_end: 658 }: or
Token { kind: Space, char_start: 22466, char_end: 22467, byte_start: 22467, byte_end: 22468, column_start: 62, column_end: 63, line_start: 658, line_end: 658 }: " "
Token { kind: Backtick, char_start: 22467, char_end: 22468, byte_start: 22468, byte_end: 22469, column_start: 63, column_end: 64, line_start: 658, line_end: 658 }: `
Token { kind: Text, char_start: 22468, char_end: 22471, byte_start: 22469, byte_end: 22472, column_start: 64, column_end: 67, line_start: 658, line_end: 658 }: ack
Token { kind: Hyphen, char_start: 22471, char_end: 22472, byte_start: 22472, byte_end: 22473, column_start: 67, column_end: 68, line_start: 658, line_end: 658 }: -
Token { kind: Text, char_start: 22472, char_end: 22476, byte_start: 22473, byte_end: 22477, column_start: 68, column_end: 72, line_start: 658, line_end: 658 }: grep
Token { kind: Backtick, char_start: 22476, char_end: 22477, byte_start: 22477, byte_end: 22478, column_start: 72, column_end: 73, line_start: 658, line_end: 658 }: `
Token { kind: Rparen, char_start: 22477, char_end: 22478, byte_start: 22478, byte_end: 22479, column_start: 73, column_end: 74, line_start: 658, line_end: 658 }: )
Token { kind: Text, char_start: 22478, char_end: 22479, byte_start: 22479, byte_end: 22480, column_start: 74, column_end: 75, line_start: 658, line_end: 658 }: ,
Token { kind: Newline, char_start: 22479, char_end: 22480, byte_start: 22480, byte_end: 22481, column_start: 75, column_end: 1, line_start: 658, line_end: 659 }: "\n"
Token { kind: Text, char_start: 22480, char_end: 22485, byte_start: 22481, byte_end: 22486, column_start: 1, column_end: 6, line_start: 659, line_end: 659 }: which
Token { kind: Space, char_start: 22485, char_end: 22486, byte_start: 22486, byte_end: 22487, column_start: 6, column_end: 7, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22486, char_end: 22491, byte_start: 22487, byte_end: 22492, column_start: 7, column_end: 12, line_start: 659, line_end: 659 }: means
Token { kind: Space, char_start: 22491, char_end: 22492, byte_start: 22492, byte_end: 22493, column_start: 12, column_end: 13, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22492, char_end: 22496, byte_start: 22493, byte_end: 22497, column_start: 13, column_end: 17, line_start: 659, line_end: 659 }: that
Token { kind: Space, char_start: 22496, char_end: 22497, byte_start: 22497, byte_end: 22498, column_start: 17, column_end: 18, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22497, char_end: 22501, byte_start: 22498, byte_end: 22502, column_start: 18, column_end: 22, line_start: 659, line_end: 659 }: only
Token { kind: Space, char_start: 22501, char_end: 22502, byte_start: 22502, byte_end: 22503, column_start: 22, column_end: 23, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22502, char_end: 22509, byte_start: 22503, byte_end: 22510, column_start: 23, column_end: 30, line_start: 659, line_end: 659 }: buffers
Token { kind: Space, char_start: 22509, char_end: 22510, byte_start: 22510, byte_end: 22511, column_start: 30, column_end: 31, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22510, char_end: 22517, byte_start: 22511, byte_end: 22518, column_start: 31, column_end: 38, line_start: 659, line_end: 659 }: written
Token { kind: Space, char_start: 22517, char_end: 22518, byte_start: 22518, byte_end: 22519, column_start: 38, column_end: 39, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22518, char_end: 22520, byte_start: 22519, byte_end: 22521, column_start: 39, column_end: 41, line_start: 659, line_end: 659 }: to
Token { kind: Space, char_start: 22520, char_end: 22521, byte_start: 22521, byte_end: 22522, column_start: 41, column_end: 42, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22521, char_end: 22525, byte_start: 22522, byte_end: 22526, column_start: 42, column_end: 46, line_start: 659, line_end: 659 }: disk
Token { kind: Space, char_start: 22525, char_end: 22526, byte_start: 22526, byte_end: 22527, column_start: 46, column_end: 47, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22526, char_end: 22530, byte_start: 22527, byte_end: 22531, column_start: 47, column_end: 51, line_start: 659, line_end: 659 }: will
Token { kind: Space, char_start: 22530, char_end: 22531, byte_start: 22531, byte_end: 22532, column_start: 51, column_end: 52, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22531, char_end: 22533, byte_start: 22532, byte_end: 22534, column_start: 52, column_end: 54, line_start: 659, line_end: 659 }: be
Token { kind: Space, char_start: 22533, char_end: 22534, byte_start: 22534, byte_end: 22535, column_start: 54, column_end: 55, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22534, char_end: 22543, byte_start: 22535, byte_end: 22544, column_start: 55, column_end: 64, line_start: 659, line_end: 659 }: searched.
Token { kind: Space, char_start: 22543, char_end: 22544, byte_start: 22544, byte_end: 22545, column_start: 64, column_end: 65, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22544, char_end: 22546, byte_start: 22545, byte_end: 22547, column_start: 65, column_end: 67, line_start: 659, line_end: 659 }: If
Token { kind: Space, char_start: 22546, char_end: 22547, byte_start: 22547, byte_end: 22548, column_start: 67, column_end: 68, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22547, char_end: 22549, byte_start: 22548, byte_end: 22550, column_start: 68, column_end: 70, line_start: 659, line_end: 659 }: no
Token { kind: Space, char_start: 22549, char_end: 22550, byte_start: 22550, byte_end: 22551, column_start: 70, column_end: 71, line_start: 659, line_end: 659 }: " "
Token { kind: Text, char_start: 22550, char_end: 22557, byte_start: 22551, byte_end: 22558, column_start: 71, column_end: 78, line_start: 659, line_end: 659 }: buffers
Token { kind: Newline, char_start: 22557, char_end: 22558, byte_start: 22558, byte_end: 22559, column_start: 78, column_end: 1, line_start: 659, line_end: 660 }: "\n"
Token { kind: Text, char_start: 22558, char_end: 22561, byte_start: 22559, byte_end: 22562, column_start: 1, column_end: 4, line_start: 660, line_end: 660 }: are
Token { kind: Space, char_start: 22561, char_end: 22562, byte_start: 22562, byte_end: 22563, column_start: 4, column_end: 5, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22562, char_end: 22569, byte_start: 22563, byte_end: 22570, column_start: 5, column_end: 12, line_start: 660, line_end: 660 }: written
Token { kind: Space, char_start: 22569, char_end: 22570, byte_start: 22570, byte_end: 22571, column_start: 12, column_end: 13, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22570, char_end: 22572, byte_start: 22571, byte_end: 22573, column_start: 13, column_end: 15, line_start: 660, line_end: 660 }: to
Token { kind: Space, char_start: 22572, char_end: 22573, byte_start: 22573, byte_end: 22574, column_start: 15, column_end: 16, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22573, char_end: 22578, byte_start: 22574, byte_end: 22579, column_start: 16, column_end: 21, line_start: 660, line_end: 660 }: disk,
Token { kind: Space, char_start: 22578, char_end: 22579, byte_start: 22579, byte_end: 22580, column_start: 21, column_end: 22, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22579, char_end: 22583, byte_start: 22580, byte_end: 22584, column_start: 22, column_end: 26, line_start: 660, line_end: 660 }: then
Token { kind: Space, char_start: 22583, char_end: 22584, byte_start: 22584, byte_end: 22585, column_start: 26, column_end: 27, line_start: 660, line_end: 660 }: " "
Token { kind: Bar, char_start: 22584, char_end: 22585, byte_start: 22585, byte_end: 22586, column_start: 27, column_end: 28, line_start: 660, line_end: 660 }: |
Token { kind: Text, char_start: 22585, char_end: 22590, byte_start: 22586, byte_end: 22591, column_start: 28, column_end: 33, line_start: 660, line_end: 660 }: :Back
Token { kind: Bar, char_start: 22590, char_end: 22591, byte_start: 22591, byte_end: 22592, column_start: 33, column_end: 34, line_start: 660, line_end: 660 }: |
Token { kind: Space, char_start: 22591, char_end: 22592, byte_start: 22592, byte_end: 22593, column_start: 34, column_end: 35, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22592, char_end: 22599, byte_start: 22593, byte_end: 22600, column_start: 35, column_end: 42, line_start: 660, line_end: 660 }: behaves
Token { kind: Space, char_start: 22599, char_end: 22600, byte_start: 22600, byte_end: 22601, column_start: 42, column_end: 43, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22600, char_end: 22607, byte_start: 22601, byte_end: 22608, column_start: 43, column_end: 50, line_start: 660, line_end: 660 }: exactly
Token { kind: Space, char_start: 22607, char_end: 22608, byte_start: 22608, byte_end: 22609, column_start: 50, column_end: 51, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22608, char_end: 22612, byte_start: 22609, byte_end: 22613, column_start: 51, column_end: 55, line_start: 660, line_end: 660 }: like
Token { kind: Space, char_start: 22612, char_end: 22613, byte_start: 22613, byte_end: 22614, column_start: 55, column_end: 56, line_start: 660, line_end: 660 }: " "
Token { kind: Bar, char_start: 22613, char_end: 22614, byte_start: 22614, byte_end: 22615, column_start: 56, column_end: 57, line_start: 660, line_end: 660 }: |
Token { kind: Text, char_start: 22614, char_end: 22618, byte_start: 22615, byte_end: 22619, column_start: 57, column_end: 61, line_start: 660, line_end: 660 }: :Ack
Token { kind: Bar, char_start: 22618, char_end: 22619, byte_start: 22619, byte_end: 22620, column_start: 61, column_end: 62, line_start: 660, line_end: 660 }: |
Token { kind: Space, char_start: 22619, char_end: 22620, byte_start: 22620, byte_end: 22621, column_start: 62, column_end: 63, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22620, char_end: 22623, byte_start: 22621, byte_end: 22624, column_start: 63, column_end: 66, line_start: 660, line_end: 660 }: and
Token { kind: Space, char_start: 22623, char_end: 22624, byte_start: 22624, byte_end: 22625, column_start: 66, column_end: 67, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22624, char_end: 22628, byte_start: 22625, byte_end: 22629, column_start: 67, column_end: 71, line_start: 660, line_end: 660 }: will
Token { kind: Space, char_start: 22628, char_end: 22629, byte_start: 22629, byte_end: 22630, column_start: 71, column_end: 72, line_start: 660, line_end: 660 }: " "
Token { kind: Text, char_start: 22629, char_end: 22635, byte_start: 22630, byte_end: 22636, column_start: 72, column_end: 78, line_start: 660, line_end: 660 }: search
Token { kind: Newline, char_start: 22635, char_end: 22636, byte_start: 22636, byte_end: 22637, column_start: 78, column_end: 1, line_start: 660, line_end: 661 }: "\n"
Token { kind: Text, char_start: 22636, char_end: 22639, byte_start: 22637, byte_end: 22640, column_start: 1, column_end: 4, line_start: 661, line_end: 661 }: all
Token { kind: Space, char_start: 22639, char_end: 22640, byte_start: 22640, byte_end: 22641, column_start: 4, column_end: 5, line_start: 661, line_end: 661 }: " "
Token { kind: Text, char_start: 22640, char_end: 22645, byte_start: 22641, byte_end: 22646, column_start: 5, column_end: 10, line_start: 661, line_end: 661 }: files
Token { kind: Space, char_start: 22645, char_end: 22646, byte_start: 22646, byte_end: 22647, column_start: 10, column_end: 11, line_start: 661, line_end: 661 }: " "
Token { kind: Text, char_start: 22646, char_end: 22648, byte_start: 22647, byte_end: 22649, column_start: 11, column_end: 13, line_start: 661, line_end: 661 }: in
Token { kind: Space, char_start: 22648, char_end: 22649, byte_start: 22649, byte_end: 22650, column_start: 13, column_end: 14, line_start: 661, line_end: 661 }: " "
Token { kind: Text, char_start: 22649, char_end: 22652, byte_start: 22650, byte_end: 22653, column_start: 14, column_end: 17, line_start: 661, line_end: 661 }: the
Token { kind: Space, char_start: 22652, char_end: 22653, byte_start: 22653, byte_end: 22654, column_start: 17, column_end: 18, line_start: 661, line_end: 661 }: " "
Token { kind: Text, char_start: 22653, char_end: 22660, byte_start: 22654, byte_end: 22661, column_start: 18, column_end: 25, line_start: 661, line_end: 661 }: current
Token { kind: Space, char_start: 22660, char_end: 22661, byte_start: 22661, byte_end: 22662, column_start: 25, column_end: 26, line_start: 661, line_end: 661 }: " "
Token { kind: Text, char_start: 22661, char_end: 22671, byte_start: 22662, byte_end: 22672, column_start: 26, column_end: 36, line_start: 661, line_end: 661 }: directory.
Token { kind: Newline, char_start: 22671, char_end: 22672, byte_start: 22672, byte_end: 22673, column_start: 36, column_end: 1, line_start: 661, line_end: 662 }: "\n"
Token { kind: Newline, char_start: 22672, char_end: 22673, byte_start: 22673, byte_end: 22674, column_start: 1, column_end: 1, line_start: 662, line_end: 663 }: "\n"
Token { kind: At, char_start: 22673, char_end: 22674, byte_start: 22674, byte_end: 22675, column_start: 1, column_end: 2, line_start: 663, line_end: 663 }: @
Token { kind: Text, char_start: 22674, char_end: 22681, byte_start: 22675, byte_end: 22682, column_start: 2, column_end: 9, line_start: 663, line_end: 663 }: command
Token { kind: Space, char_start: 22681, char_end: 22682, byte_start: 22682, byte_end: 22683, column_start: 9, column_end: 10, line_start: 663, line_end: 663 }: " "
Token { kind: Text, char_start: 22682, char_end: 22687, byte_start: 22683, byte_end: 22688, column_start: 10, column_end: 15, line_start: 663, line_end: 663 }: :Back
Token { kind: Bang, char_start: 22687, char_end: 22688, byte_start: 22688, byte_end: 22689, column_start: 15, column_end: 16, line_start: 663, line_end: 663 }: !
Token { kind: Space, char_start: 22688, char_end: 22689, byte_start: 22689, byte_end: 22690, column_start: 16, column_end: 17, line_start: 663, line_end: 663 }: " "
Token { kind: Text, char_start: 22689, char_end: 22698, byte_start: 22690, byte_end: 22699, column_start: 17, column_end: 26, line_start: 663, line_end: 663 }: {pattern}
Token { kind: Space, char_start: 22698, char_end: 22699, byte_start: 22699, byte_end: 22700, column_start: 26, column_end: 27, line_start: 663, line_end: 663 }: " "
Token { kind: Text, char_start: 22699, char_end: 22708, byte_start: 22700, byte_end: 22709, column_start: 27, column_end: 36, line_start: 663, line_end: 663 }: {options}
Token { kind: Newline, char_start: 22708, char_end: 22709, byte_start: 22709, byte_end: 22710, column_start: 36, column_end: 1, line_start: 663, line_end: 664 }: "\n"
Token { kind: Newline, char_start: 22709, char_end: 22710, byte_start: 22710, byte_end: 22711, column_start: 1, column_end: 1, line_start: 664, line_end: 665 }: "\n"
Token { kind: Text, char_start: 22710, char_end: 22714, byte_start: 22711, byte_end: 22715, column_start: 1, column_end: 5, line_start: 665, line_end: 665 }: Like
Token { kind: Space, char_start: 22714, char_end: 22715, byte_start: 22715, byte_end: 22716, column_start: 5, column_end: 6, line_start: 665, line_end: 665 }: " "
Token { kind: Bar, char_start: 22715, char_end: 22716, byte_start: 22716, byte_end: 22717, column_start: 6, column_end: 7, line_start: 665, line_end: 665 }: |
Token { kind: Text, char_start: 22716, char_end: 22721, byte_start: 22717, byte_end: 22722, column_start: 7, column_end: 12, line_start: 665, line_end: 665 }: :Back
Token { kind: Bar, char_start: 22721, char_end: 22722, byte_start: 22722, byte_end: 22723, column_start: 12, column_end: 13, line_start: 665, line_end: 665 }: |
Token { kind: Text, char_start: 22722, char_end: 22723, byte_start: 22723, byte_end: 22724, column_start: 13, column_end: 14, line_start: 665, line_end: 665 }: ,
Token { kind: Space, char_start: 22723, char_end: 22724, byte_start: 22724, byte_end: 22725, column_start: 14, column_end: 15, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22724, char_end: 22727, byte_start: 22725, byte_end: 22728, column_start: 15, column_end: 18, line_start: 665, line_end: 665 }: but
Token { kind: Space, char_start: 22727, char_end: 22728, byte_start: 22728, byte_end: 22729, column_start: 18, column_end: 19, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22728, char_end: 22735, byte_start: 22729, byte_end: 22736, column_start: 19, column_end: 26, line_start: 665, line_end: 665 }: returns
Token { kind: Space, char_start: 22735, char_end: 22736, byte_start: 22736, byte_end: 22737, column_start: 26, column_end: 27, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22736, char_end: 22739, byte_start: 22737, byte_end: 22740, column_start: 27, column_end: 30, line_start: 665, line_end: 665 }: all
Token { kind: Space, char_start: 22739, char_end: 22740, byte_start: 22740, byte_end: 22741, column_start: 30, column_end: 31, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22740, char_end: 22747, byte_start: 22741, byte_end: 22748, column_start: 31, column_end: 38, line_start: 665, line_end: 665 }: results
Token { kind: Space, char_start: 22747, char_end: 22748, byte_start: 22748, byte_end: 22749, column_start: 38, column_end: 39, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22748, char_end: 22760, byte_start: 22749, byte_end: 22761, column_start: 39, column_end: 51, line_start: 665, line_end: 665 }: irrespective
Token { kind: Space, char_start: 22760, char_end: 22761, byte_start: 22761, byte_end: 22762, column_start: 51, column_end: 52, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22761, char_end: 22763, byte_start: 22762, byte_end: 22764, column_start: 52, column_end: 54, line_start: 665, line_end: 665 }: of
Token { kind: Space, char_start: 22763, char_end: 22764, byte_start: 22764, byte_end: 22765, column_start: 54, column_end: 55, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22764, char_end: 22767, byte_start: 22765, byte_end: 22768, column_start: 55, column_end: 58, line_start: 665, line_end: 665 }: the
Token { kind: Space, char_start: 22767, char_end: 22768, byte_start: 22768, byte_end: 22769, column_start: 58, column_end: 59, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22768, char_end: 22773, byte_start: 22769, byte_end: 22774, column_start: 59, column_end: 64, line_start: 665, line_end: 665 }: value
Token { kind: Space, char_start: 22773, char_end: 22774, byte_start: 22774, byte_end: 22775, column_start: 64, column_end: 65, line_start: 665, line_end: 665 }: " "
Token { kind: Text, char_start: 22774, char_end: 22776, byte_start: 22775, byte_end: 22777, column_start: 65, column_end: 67, line_start: 665, line_end: 665 }: of
Token { kind: Newline, char_start: 22776, char_end: 22777, byte_start: 22777, byte_end: 22778, column_start: 67, column_end: 1, line_start: 665, line_end: 666 }: "\n"
Token { kind: Bar, char_start: 22777, char_end: 22778, byte_start: 22778, byte_end: 22779, column_start: 1, column_end: 2, line_start: 666, line_end: 666 }: |
Token { kind: Text, char_start: 22778, char_end: 22796, byte_start: 22779, byte_end: 22797, column_start: 2, column_end: 20, line_start: 666, line_end: 666 }: g:FerretMaxResults
Token { kind: Bar, char_start: 22796, char_end: 22797, byte_start: 22797, byte_end: 22798, column_start: 20, column_end: 21, line_start: 666, line_end: 666 }: |
Token { kind: Text, char_start: 22797, char_end: 22798, byte_start: 22798, byte_end: 22799, column_start: 21, column_end: 22, line_start: 666, line_end: 666 }: .
Token { kind: Newline, char_start: 22798, char_end: 22799, byte_start: 22799, byte_end: 22800, column_start: 22, column_end: 1, line_start: 666, line_end: 667 }: "\n"
Token { kind: Newline, char_start: 22799, char_end: 22800, byte_start: 22800, byte_end: 22801, column_start: 1, column_end: 1, line_start: 667, line_end: 668 }: "\n"
Token { kind: At, char_start: 22800, char_end: 22801, byte_start: 22801, byte_end: 22802, column_start: 1, column_end: 2, line_start: 668, line_end: 668 }: @
Token { kind: Text, char_start: 22801, char_end: 22808, byte_start: 22802, byte_end: 22809, column_start: 2, column_end: 9, line_start: 668, line_end: 668 }: command
Token { kind: Space, char_start: 22808, char_end: 22809, byte_start: 22809, byte_end: 22810, column_start: 9, column_end: 10, line_start: 668, line_end: 668 }: " "
Token { kind: Text, char_start: 22809, char_end: 22815, byte_start: 22810, byte_end: 22816, column_start: 10, column_end: 16, line_start: 668, line_end: 668 }: :Black
Token { kind: Space, char_start: 22815, char_end: 22816, byte_start: 22816, byte_end: 22817, column_start: 16, column_end: 17, line_start: 668, line_end: 668 }: " "
Token { kind: Text, char_start: 22816, char_end: 22825, byte_start: 22817, byte_end: 22826, column_start: 17, column_end: 26, line_start: 668, line_end: 668 }: {pattern}
Token { kind: Space, char_start: 22825, char_end: 22826, byte_start: 22826, byte_end: 22827, column_start: 26, column_end: 27, line_start: 668, line_end: 668 }: " "
Token { kind: Text, char_start: 22826, char_end: 22835, byte_start: 22827, byte_end: 22836, column_start: 27, column_end: 36, line_start: 668, line_end: 668 }: {options}
Token { kind: Newline, char_start: 22835, char_end: 22836, byte_start: 22836, byte_end: 22837, column_start: 36, column_end: 1, line_start: 668, line_end: 669 }: "\n"
Token { kind: Newline, char_start: 22836, char_end: 22837, byte_start: 22837, byte_end: 22838, column_start: 1, column_end: 1, line_start: 669, line_end: 670 }: "\n"
Token { kind: Text, char_start: 22837, char_end: 22841, byte_start: 22838, byte_end: 22842, column_start: 1, column_end: 5, line_start: 670, line_end: 670 }: Like
Token { kind: Space, char_start: 22841, char_end: 22842, byte_start: 22842, byte_end: 22843, column_start: 5, column_end: 6, line_start: 670, line_end: 670 }: " "
Token { kind: Bar, char_start: 22842, char_end: 22843, byte_start: 22843, byte_end: 22844, column_start: 6, column_end: 7, line_start: 670, line_end: 670 }: |
Token { kind: Text, char_start: 22843, char_end: 22848, byte_start: 22844, byte_end: 22849, column_start: 7, column_end: 12, line_start: 670, line_end: 670 }: :Lack
Token { kind: Bar, char_start: 22848, char_end: 22849, byte_start: 22849, byte_end: 22850, column_start: 12, column_end: 13, line_start: 670, line_end: 670 }: |
Token { kind: Text, char_start: 22849, char_end: 22850, byte_start: 22850, byte_end: 22851, column_start: 13, column_end: 14, line_start: 670, line_end: 670 }: ,
Token { kind: Space, char_start: 22850, char_end: 22851, byte_start: 22851, byte_end: 22852, column_start: 14, column_end: 15, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22851, char_end: 22854, byte_start: 22852, byte_end: 22855, column_start: 15, column_end: 18, line_start: 670, line_end: 670 }: but
Token { kind: Space, char_start: 22854, char_end: 22855, byte_start: 22855, byte_end: 22856, column_start: 18, column_end: 19, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22855, char_end: 22863, byte_start: 22856, byte_end: 22864, column_start: 19, column_end: 27, line_start: 670, line_end: 670 }: searches
Token { kind: Space, char_start: 22863, char_end: 22864, byte_start: 22864, byte_end: 22865, column_start: 27, column_end: 28, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22864, char_end: 22868, byte_start: 22865, byte_end: 22869, column_start: 28, column_end: 32, line_start: 670, line_end: 670 }: only
Token { kind: Space, char_start: 22868, char_end: 22869, byte_start: 22869, byte_end: 22870, column_start: 32, column_end: 33, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22869, char_end: 22875, byte_start: 22870, byte_end: 22876, column_start: 33, column_end: 39, line_start: 670, line_end: 670 }: listed
Token { kind: Space, char_start: 22875, char_end: 22876, byte_start: 22876, byte_end: 22877, column_start: 39, column_end: 40, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22876, char_end: 22884, byte_start: 22877, byte_end: 22885, column_start: 40, column_end: 48, line_start: 670, line_end: 670 }: buffers.
Token { kind: Space, char_start: 22884, char_end: 22885, byte_start: 22885, byte_end: 22886, column_start: 48, column_end: 49, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22885, char_end: 22887, byte_start: 22886, byte_end: 22888, column_start: 49, column_end: 51, line_start: 670, line_end: 670 }: As
Token { kind: Space, char_start: 22887, char_end: 22888, byte_start: 22888, byte_end: 22889, column_start: 51, column_end: 52, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22888, char_end: 22892, byte_start: 22889, byte_end: 22893, column_start: 52, column_end: 56, line_start: 670, line_end: 670 }: with
Token { kind: Space, char_start: 22892, char_end: 22893, byte_start: 22893, byte_end: 22894, column_start: 56, column_end: 57, line_start: 670, line_end: 670 }: " "
Token { kind: Bar, char_start: 22893, char_end: 22894, byte_start: 22894, byte_end: 22895, column_start: 57, column_end: 58, line_start: 670, line_end: 670 }: |
Token { kind: Text, char_start: 22894, char_end: 22899, byte_start: 22895, byte_end: 22900, column_start: 58, column_end: 63, line_start: 670, line_end: 670 }: :Back
Token { kind: Bar, char_start: 22899, char_end: 22900, byte_start: 22900, byte_end: 22901, column_start: 63, column_end: 64, line_start: 670, line_end: 670 }: |
Token { kind: Text, char_start: 22900, char_end: 22901, byte_start: 22901, byte_end: 22902, column_start: 64, column_end: 65, line_start: 670, line_end: 670 }: ,
Token { kind: Space, char_start: 22901, char_end: 22902, byte_start: 22902, byte_end: 22903, column_start: 65, column_end: 66, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22902, char_end: 22905, byte_start: 22903, byte_end: 22906, column_start: 66, column_end: 69, line_start: 670, line_end: 670 }: the
Token { kind: Space, char_start: 22905, char_end: 22906, byte_start: 22906, byte_end: 22907, column_start: 69, column_end: 70, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22906, char_end: 22912, byte_start: 22907, byte_end: 22913, column_start: 70, column_end: 76, line_start: 670, line_end: 670 }: search
Token { kind: Space, char_start: 22912, char_end: 22913, byte_start: 22913, byte_end: 22914, column_start: 76, column_end: 77, line_start: 670, line_end: 670 }: " "
Token { kind: Text, char_start: 22913, char_end: 22915, byte_start: 22914, byte_end: 22916, column_start: 77, column_end: 79, line_start: 670, line_end: 670 }: is
Token { kind: Newline, char_start: 22915, char_end: 22916, byte_start: 22916, byte_end: 22917, column_start: 79, column_end: 1, line_start: 670, line_end: 671 }: "\n"
Token { kind: Text, char_start: 22916, char_end: 22921, byte_start: 22917, byte_end: 22922, column_start: 1, column_end: 6, line_start: 671, line_end: 671 }: still
Token { kind: Space, char_start: 22921, char_end: 22922, byte_start: 22922, byte_end: 22923, column_start: 6, column_end: 7, line_start: 671, line_end: 671 }: " "
Token { kind: Text, char_start: 22922, char_end: 22931, byte_start: 22923, byte_end: 22932, column_start: 7, column_end: 16, line_start: 671, line_end: 671 }: delegated
Token { kind: Space, char_start: 22931, char_end: 22932, byte_start: 22932, byte_end: 22933, column_start: 16, column_end: 17, line_start: 671, line_end: 671 }: " "
Token { kind: Text, char_start: 22932, char_end: 22934, byte_start: 22933, byte_end: 22935, column_start: 17, column_end: 19, line_start: 671, line_end: 671 }: to
Token { kind: Space, char_start: 22934, char_end: 22935, byte_start: 22935, byte_end: 22936, column_start: 19, column_end: 20, line_start: 671, line_end: 671 }: " "
Token { kind: Text, char_start: 22935, char_end: 22938, byte_start: 22936, byte_end: 22939, column_start: 20, column_end: 23, line_start: 671, line_end: 671 }: the
Token { kind: Space, char_start: 22938, char_end: 22939, byte_start: 22939, byte_end: 22940, column_start: 23, column_end: 24, line_start: 671, line_end: 671 }: " "
Token { kind: Text, char_start: 22939, char_end: 22949, byte_start: 22940, byte_end: 22950, column_start: 24, column_end: 34, line_start: 671, line_end: 671 }: underlying
Token { kind: Space, char_start: 22949, char_end: 22950, byte_start: 22950, byte_end: 22951, column_start: 34, column_end: 35, line_start: 671, line_end: 671 }: " "
Token { kind: Bar, char_start: 22950, char_end: 22951, byte_start: 22951, byte_end: 22952, column_start: 35, column_end: 36, line_start: 671, line_end: 671 }: |
Token { kind: Text, char_start: 22951, char_end: 22960, byte_start: 22952, byte_end: 22961, column_start: 36, column_end: 45, line_start: 671, line_end: 671 }: 'grepprg'
Token { kind: Bar, char_start: 22960, char_end: 22961, byte_start: 22961, byte_end: 22962, column_start: 45, column_end: 46, line_start: 671, line_end: 671 }: |
Token { kind: Space, char_start: 22961, char_end: 22962, byte_start: 22962, byte_end: 22963, column_start: 46, column_end: 47, line_start: 671, line_end: 671 }: " "
Token { kind: Lparen, char_start: 22962, char_end: 22963, byte_start: 22963, byte_end: 22964, column_start: 47, column_end: 48, line_start: 671, line_end: 671 }: (
Token { kind: Backtick, char_start: 22963, char_end: 22964, byte_start: 22964, byte_end: 22965, column_start: 48, column_end: 49, line_start: 671, line_end: 671 }: `
Token { kind: Text, char_start: 22964, char_end: 22966, byte_start: 22965, byte_end: 22967, column_start: 49, column_end: 51, line_start: 671, line_end: 671 }: rg
Token { kind: Backtick, char_start: 22966, char_end: 22967, byte_start: 22967, byte_end: 22968, column_start: 51, column_end: 52, line_start: 671, line_end: 671 }: `
Token { kind: Text, char_start: 22967, char_end: 22968, byte_start: 22968, byte_end: 22969, column_start: 52, column_end: 53, line_start: 671, line_end: 671 }: ,
Token { kind: Space, char_start: 22968, char_end: 22969, byte_start: 22969, byte_end: 22970, column_start: 53, column_end: 54, line_start: 671, line_end: 671 }: " "
Token { kind: Backtick, char_start: 22969, char_end: 22970, byte_start: 22970, byte_end: 22971, column_start: 54, column_end: 55, line_start: 671, line_end: 671 }: `
Token { kind: Text, char_start: 22970, char_end: 22972, byte_start: 22971, byte_end: 22973, column_start: 55, column_end: 57, line_start: 671, line_end: 671 }: ag
Token { kind: Backtick, char_start: 22972, char_end: 22973, byte_start: 22973, byte_end: 22974, column_start: 57, column_end: 58, line_start: 671, line_end: 671 }: `
Token { kind: Text, char_start: 22973, char_end: 22974, byte_start: 22974, byte_end: 22975, column_start: 58, column_end: 59, line_start: 671, line_end: 671 }: ,
Token { kind: Space, char_start: 22974, char_end: 22975, byte_start: 22975, byte_end: 22976, column_start: 59, column_end: 60, line_start: 671, line_end: 671 }: " "
Token { kind: Backtick, char_start: 22975, char_end: 22976, byte_start: 22976, byte_end: 22977, column_start: 60, column_end: 61, line_start: 671, line_end: 671 }: `
Token { kind: Text, char_start: 22976, char_end: 22979, byte_start: 22977, byte_end: 22980, column_start: 61, column_end: 64, line_start: 671, line_end: 671 }: ack
Token { kind: Backtick, char_start: 22979, char_end: 22980, byte_start: 22980, byte_end: 22981, column_start: 64, column_end: 65, line_start: 671, line_end: 671 }: `
Token { kind: Space, char_start: 22980, char_end: 22981, byte_start: 22981, byte_end: 22982, column_start: 65, column_end: 66, line_start: 671, line_end: 671 }: " "
Token { kind: Text, char_start: 22981, char_end: 22983, byte_start: 22982, byte_end: 22984, column_start: 66, column_end: 68, line_start: 671, line_end: 671 }: or
Token { kind: Newline, char_start: 22983, char_end: 22984, byte_start: 22984, byte_end: 22985, column_start: 68, column_end: 1, line_start: 671, line_end: 672 }: "\n"
Token { kind: Backtick, char_start: 22984, char_end: 22985, byte_start: 22985, byte_end: 22986, column_start: 1, column_end: 2, line_start: 672, line_end: 672 }: `
Token { kind: Text, char_start: 22985, char_end: 22988, byte_start: 22986, byte_end: 22989, column_start: 2, column_end: 5, line_start: 672, line_end: 672 }: ack
Token { kind: Hyphen, char_start: 22988, char_end: 22989, byte_start: 22989, byte_end: 22990, column_start: 5, column_end: 6, line_start: 672, line_end: 672 }: -
Token { kind: Text, char_start: 22989, char_end: 22993, byte_start: 22990, byte_end: 22994, column_start: 6, column_end: 10, line_start: 672, line_end: 672 }: grep
Token { kind: Backtick, char_start: 22993, char_end: 22994, byte_start: 22994, byte_end: 22995, column_start: 10, column_end: 11, line_start: 672, line_end: 672 }: `
Token { kind: Rparen, char_start: 22994, char_end: 22995, byte_start: 22995, byte_end: 22996, column_start: 11, column_end: 12, line_start: 672, line_end: 672 }: )
Token { kind: Text, char_start: 22995, char_end: 22996, byte_start: 22996, byte_end: 22997, column_start: 12, column_end: 13, line_start: 672, line_end: 672 }: ,
Token { kind: Space, char_start: 22996, char_end: 22997, byte_start: 22997, byte_end: 22998, column_start: 13, column_end: 14, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 22997, char_end: 23002, byte_start: 22998, byte_end: 23003, column_start: 14, column_end: 19, line_start: 672, line_end: 672 }: which
Token { kind: Space, char_start: 23002, char_end: 23003, byte_start: 23003, byte_end: 23004, column_start: 19, column_end: 20, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23003, char_end: 23008, byte_start: 23004, byte_end: 23009, column_start: 20, column_end: 25, line_start: 672, line_end: 672 }: means
Token { kind: Space, char_start: 23008, char_end: 23009, byte_start: 23009, byte_end: 23010, column_start: 25, column_end: 26, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23009, char_end: 23013, byte_start: 23010, byte_end: 23014, column_start: 26, column_end: 30, line_start: 672, line_end: 672 }: that
Token { kind: Space, char_start: 23013, char_end: 23014, byte_start: 23014, byte_end: 23015, column_start: 30, column_end: 31, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23014, char_end: 23018, byte_start: 23015, byte_end: 23019, column_start: 31, column_end: 35, line_start: 672, line_end: 672 }: only
Token { kind: Space, char_start: 23018, char_end: 23019, byte_start: 23019, byte_end: 23020, column_start: 35, column_end: 36, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23019, char_end: 23026, byte_start: 23020, byte_end: 23027, column_start: 36, column_end: 43, line_start: 672, line_end: 672 }: buffers
Token { kind: Space, char_start: 23026, char_end: 23027, byte_start: 23027, byte_end: 23028, column_start: 43, column_end: 44, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23027, char_end: 23034, byte_start: 23028, byte_end: 23035, column_start: 44, column_end: 51, line_start: 672, line_end: 672 }: written
Token { kind: Space, char_start: 23034, char_end: 23035, byte_start: 23035, byte_end: 23036, column_start: 51, column_end: 52, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23035, char_end: 23037, byte_start: 23036, byte_end: 23038, column_start: 52, column_end: 54, line_start: 672, line_end: 672 }: to
Token { kind: Space, char_start: 23037, char_end: 23038, byte_start: 23038, byte_end: 23039, column_start: 54, column_end: 55, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23038, char_end: 23042, byte_start: 23039, byte_end: 23043, column_start: 55, column_end: 59, line_start: 672, line_end: 672 }: disk
Token { kind: Space, char_start: 23042, char_end: 23043, byte_start: 23043, byte_end: 23044, column_start: 59, column_end: 60, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23043, char_end: 23047, byte_start: 23044, byte_end: 23048, column_start: 60, column_end: 64, line_start: 672, line_end: 672 }: will
Token { kind: Space, char_start: 23047, char_end: 23048, byte_start: 23048, byte_end: 23049, column_start: 64, column_end: 65, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23048, char_end: 23050, byte_start: 23049, byte_end: 23051, column_start: 65, column_end: 67, line_start: 672, line_end: 672 }: be
Token { kind: Space, char_start: 23050, char_end: 23051, byte_start: 23051, byte_end: 23052, column_start: 67, column_end: 68, line_start: 672, line_end: 672 }: " "
Token { kind: Text, char_start: 23051, char_end: 23060, byte_start: 23052, byte_end: 23061, column_start: 68, column_end: 77, line_start: 672, line_end: 672 }: searched.
Token { kind: Newline, char_start: 23060, char_end: 23061, byte_start: 23061, byte_end: 23062, column_start: 77, column_end: 1, line_start: 672, line_end: 673 }: "\n"
Token { kind: Text, char_start: 23061, char_end: 23070, byte_start: 23062, byte_end: 23071, column_start: 1, column_end: 10, line_start: 673, line_end: 673 }: Likewise,
Token { kind: Space, char_start: 23070, char_end: 23071, byte_start: 23071, byte_end: 23072, column_start: 10, column_end: 11, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23071, char_end: 23073, byte_start: 23072, byte_end: 23074, column_start: 11, column_end: 13, line_start: 673, line_end: 673 }: If
Token { kind: Space, char_start: 23073, char_end: 23074, byte_start: 23074, byte_end: 23075, column_start: 13, column_end: 14, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23074, char_end: 23076, byte_start: 23075, byte_end: 23077, column_start: 14, column_end: 16, line_start: 673, line_end: 673 }: no
Token { kind: Space, char_start: 23076, char_end: 23077, byte_start: 23077, byte_end: 23078, column_start: 16, column_end: 17, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23077, char_end: 23084, byte_start: 23078, byte_end: 23085, column_start: 17, column_end: 24, line_start: 673, line_end: 673 }: buffers
Token { kind: Space, char_start: 23084, char_end: 23085, byte_start: 23085, byte_end: 23086, column_start: 24, column_end: 25, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23085, char_end: 23088, byte_start: 23086, byte_end: 23089, column_start: 25, column_end: 28, line_start: 673, line_end: 673 }: are
Token { kind: Space, char_start: 23088, char_end: 23089, byte_start: 23089, byte_end: 23090, column_start: 28, column_end: 29, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23089, char_end: 23096, byte_start: 23090, byte_end: 23097, column_start: 29, column_end: 36, line_start: 673, line_end: 673 }: written
Token { kind: Space, char_start: 23096, char_end: 23097, byte_start: 23097, byte_end: 23098, column_start: 36, column_end: 37, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23097, char_end: 23099, byte_start: 23098, byte_end: 23100, column_start: 37, column_end: 39, line_start: 673, line_end: 673 }: to
Token { kind: Space, char_start: 23099, char_end: 23100, byte_start: 23100, byte_end: 23101, column_start: 39, column_end: 40, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23100, char_end: 23105, byte_start: 23101, byte_end: 23106, column_start: 40, column_end: 45, line_start: 673, line_end: 673 }: disk,
Token { kind: Space, char_start: 23105, char_end: 23106, byte_start: 23106, byte_end: 23107, column_start: 45, column_end: 46, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23106, char_end: 23110, byte_start: 23107, byte_end: 23111, column_start: 46, column_end: 50, line_start: 673, line_end: 673 }: then
Token { kind: Space, char_start: 23110, char_end: 23111, byte_start: 23111, byte_end: 23112, column_start: 50, column_end: 51, line_start: 673, line_end: 673 }: " "
Token { kind: Bar, char_start: 23111, char_end: 23112, byte_start: 23112, byte_end: 23113, column_start: 51, column_end: 52, line_start: 673, line_end: 673 }: |
Token { kind: Text, char_start: 23112, char_end: 23118, byte_start: 23113, byte_end: 23119, column_start: 52, column_end: 58, line_start: 673, line_end: 673 }: :Black
Token { kind: Bar, char_start: 23118, char_end: 23119, byte_start: 23119, byte_end: 23120, column_start: 58, column_end: 59, line_start: 673, line_end: 673 }: |
Token { kind: Space, char_start: 23119, char_end: 23120, byte_start: 23120, byte_end: 23121, column_start: 59, column_end: 60, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23120, char_end: 23127, byte_start: 23121, byte_end: 23128, column_start: 60, column_end: 67, line_start: 673, line_end: 673 }: behaves
Token { kind: Space, char_start: 23127, char_end: 23128, byte_start: 23128, byte_end: 23129, column_start: 67, column_end: 68, line_start: 673, line_end: 673 }: " "
Token { kind: Text, char_start: 23128, char_end: 23135, byte_start: 23129, byte_end: 23136, column_start: 68, column_end: 75, line_start: 673, line_end: 673 }: exactly
Token { kind: Newline, char_start: 23135, char_end: 23136, byte_start: 23136, byte_end: 23137, column_start: 75, column_end: 1, line_start: 673, line_end: 674 }: "\n"
Token { kind: Text, char_start: 23136, char_end: 23140, byte_start: 23137, byte_end: 23141, column_start: 1, column_end: 5, line_start: 674, line_end: 674 }: like
Token { kind: Space, char_start: 23140, char_end: 23141, byte_start: 23141, byte_end: 23142, column_start: 5, column_end: 6, line_start: 674, line_end: 674 }: " "
Token { kind: Bar, char_start: 23141, char_end: 23142, byte_start: 23142, byte_end: 23143, column_start: 6, column_end: 7, line_start: 674, line_end: 674 }: |
Token { kind: Text, char_start: 23142, char_end: 23147, byte_start: 23143, byte_end: 23148, column_start: 7, column_end: 12, line_start: 674, line_end: 674 }: :Lack
Token { kind: Bar, char_start: 23147, char_end: 23148, byte_start: 23148, byte_end: 23149, column_start: 12, column_end: 13, line_start: 674, line_end: 674 }: |
Token { kind: Space, char_start: 23148, char_end: 23149, byte_start: 23149, byte_end: 23150, column_start: 13, column_end: 14, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23149, char_end: 23152, byte_start: 23150, byte_end: 23153, column_start: 14, column_end: 17, line_start: 674, line_end: 674 }: and
Token { kind: Space, char_start: 23152, char_end: 23153, byte_start: 23153, byte_end: 23154, column_start: 17, column_end: 18, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23153, char_end: 23157, byte_start: 23154, byte_end: 23158, column_start: 18, column_end: 22, line_start: 674, line_end: 674 }: will
Token { kind: Space, char_start: 23157, char_end: 23158, byte_start: 23158, byte_end: 23159, column_start: 22, column_end: 23, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23158, char_end: 23164, byte_start: 23159, byte_end: 23165, column_start: 23, column_end: 29, line_start: 674, line_end: 674 }: search
Token { kind: Space, char_start: 23164, char_end: 23165, byte_start: 23165, byte_end: 23166, column_start: 29, column_end: 30, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23165, char_end: 23168, byte_start: 23166, byte_end: 23169, column_start: 30, column_end: 33, line_start: 674, line_end: 674 }: all
Token { kind: Space, char_start: 23168, char_end: 23169, byte_start: 23169, byte_end: 23170, column_start: 33, column_end: 34, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23169, char_end: 23174, byte_start: 23170, byte_end: 23175, column_start: 34, column_end: 39, line_start: 674, line_end: 674 }: files
Token { kind: Space, char_start: 23174, char_end: 23175, byte_start: 23175, byte_end: 23176, column_start: 39, column_end: 40, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23175, char_end: 23177, byte_start: 23176, byte_end: 23178, column_start: 40, column_end: 42, line_start: 674, line_end: 674 }: in
Token { kind: Space, char_start: 23177, char_end: 23178, byte_start: 23178, byte_end: 23179, column_start: 42, column_end: 43, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23178, char_end: 23181, byte_start: 23179, byte_end: 23182, column_start: 43, column_end: 46, line_start: 674, line_end: 674 }: the
Token { kind: Space, char_start: 23181, char_end: 23182, byte_start: 23182, byte_end: 23183, column_start: 46, column_end: 47, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23182, char_end: 23189, byte_start: 23183, byte_end: 23190, column_start: 47, column_end: 54, line_start: 674, line_end: 674 }: current
Token { kind: Space, char_start: 23189, char_end: 23190, byte_start: 23190, byte_end: 23191, column_start: 54, column_end: 55, line_start: 674, line_end: 674 }: " "
Token { kind: Text, char_start: 23190, char_end: 23200, byte_start: 23191, byte_end: 23201, column_start: 55, column_end: 65, line_start: 674, line_end: 674 }: directory.
Token { kind: Newline, char_start: 23200, char_end: 23201, byte_start: 23201, byte_end: 23202, column_start: 65, column_end: 1, line_start: 674, line_end: 675 }: "\n"
Token { kind: Newline, char_start: 23201, char_end: 23202, byte_start: 23202, byte_end: 23203, column_start: 1, column_end: 1, line_start: 675, line_end: 676 }: "\n"
Token { kind: At, char_start: 23202, char_end: 23203, byte_start: 23203, byte_end: 23204, column_start: 1, column_end: 2, line_start: 676, line_end: 676 }: @
Token { kind: Text, char_start: 23203, char_end: 23210, byte_start: 23204, byte_end: 23211, column_start: 2, column_end: 9, line_start: 676, line_end: 676 }: command
Token { kind: Space, char_start: 23210, char_end: 23211, byte_start: 23211, byte_end: 23212, column_start: 9, column_end: 10, line_start: 676, line_end: 676 }: " "
Token { kind: Text, char_start: 23211, char_end: 23217, byte_start: 23212, byte_end: 23218, column_start: 10, column_end: 16, line_start: 676, line_end: 676 }: :Black
Token { kind: Bang, char_start: 23217, char_end: 23218, byte_start: 23218, byte_end: 23219, column_start: 16, column_end: 17, line_start: 676, line_end: 676 }: !
Token { kind: Space, char_start: 23218, char_end: 23219, byte_start: 23219, byte_end: 23220, column_start: 17, column_end: 18, line_start: 676, line_end: 676 }: " "
Token { kind: Text, char_start: 23219, char_end: 23228, byte_start: 23220, byte_end: 23229, column_start: 18, column_end: 27, line_start: 676, line_end: 676 }: {pattern}
Token { kind: Space, char_start: 23228, char_end: 23229, byte_start: 23229, byte_end: 23230, column_start: 27, column_end: 28, line_start: 676, line_end: 676 }: " "
Token { kind: Text, char_start: 23229, char_end: 23238, byte_start: 23230, byte_end: 23239, column_start: 28, column_end: 37, line_start: 676, line_end: 676 }: {options}
Token { kind: Newline, char_start: 23238, char_end: 23239, byte_start: 23239, byte_end: 23240, column_start: 37, column_end: 1, line_start: 676, line_end: 677 }: "\n"
Token { kind: Newline, char_start: 23239, char_end: 23240, byte_start: 23240, byte_end: 23241, column_start: 1, column_end: 1, line_start: 677, line_end: 678 }: "\n"
Token { kind: Text, char_start: 23240, char_end: 23244, byte_start: 23241, byte_end: 23245, column_start: 1, column_end: 5, line_start: 678, line_end: 678 }: Like
Token { kind: Space, char_start: 23244, char_end: 23245, byte_start: 23245, byte_end: 23246, column_start: 5, column_end: 6, line_start: 678, line_end: 678 }: " "
Token { kind: Bar, char_start: 23245, char_end: 23246, byte_start: 23246, byte_end: 23247, column_start: 6, column_end: 7, line_start: 678, line_end: 678 }: |
Token { kind: Text, char_start: 23246, char_end: 23252, byte_start: 23247, byte_end: 23253, column_start: 7, column_end: 13, line_start: 678, line_end: 678 }: :Black
Token { kind: Bar, char_start: 23252, char_end: 23253, byte_start: 23253, byte_end: 23254, column_start: 13, column_end: 14, line_start: 678, line_end: 678 }: |
Token { kind: Text, char_start: 23253, char_end: 23254, byte_start: 23254, byte_end: 23255, column_start: 14, column_end: 15, line_start: 678, line_end: 678 }: ,
Token { kind: Space, char_start: 23254, char_end: 23255, byte_start: 23255, byte_end: 23256, column_start: 15, column_end: 16, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23255, char_end: 23258, byte_start: 23256, byte_end: 23259, column_start: 16, column_end: 19, line_start: 678, line_end: 678 }: but
Token { kind: Space, char_start: 23258, char_end: 23259, byte_start: 23259, byte_end: 23260, column_start: 19, column_end: 20, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23259, char_end: 23266, byte_start: 23260, byte_end: 23267, column_start: 20, column_end: 27, line_start: 678, line_end: 678 }: returns
Token { kind: Space, char_start: 23266, char_end: 23267, byte_start: 23267, byte_end: 23268, column_start: 27, column_end: 28, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23267, char_end: 23270, byte_start: 23268, byte_end: 23271, column_start: 28, column_end: 31, line_start: 678, line_end: 678 }: all
Token { kind: Space, char_start: 23270, char_end: 23271, byte_start: 23271, byte_end: 23272, column_start: 31, column_end: 32, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23271, char_end: 23278, byte_start: 23272, byte_end: 23279, column_start: 32, column_end: 39, line_start: 678, line_end: 678 }: results
Token { kind: Space, char_start: 23278, char_end: 23279, byte_start: 23279, byte_end: 23280, column_start: 39, column_end: 40, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23279, char_end: 23291, byte_start: 23280, byte_end: 23292, column_start: 40, column_end: 52, line_start: 678, line_end: 678 }: irrespective
Token { kind: Space, char_start: 23291, char_end: 23292, byte_start: 23292, byte_end: 23293, column_start: 52, column_end: 53, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23292, char_end: 23294, byte_start: 23293, byte_end: 23295, column_start: 53, column_end: 55, line_start: 678, line_end: 678 }: of
Token { kind: Space, char_start: 23294, char_end: 23295, byte_start: 23295, byte_end: 23296, column_start: 55, column_end: 56, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23295, char_end: 23298, byte_start: 23296, byte_end: 23299, column_start: 56, column_end: 59, line_start: 678, line_end: 678 }: the
Token { kind: Space, char_start: 23298, char_end: 23299, byte_start: 23299, byte_end: 23300, column_start: 59, column_end: 60, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23299, char_end: 23304, byte_start: 23300, byte_end: 23305, column_start: 60, column_end: 65, line_start: 678, line_end: 678 }: value
Token { kind: Space, char_start: 23304, char_end: 23305, byte_start: 23305, byte_end: 23306, column_start: 65, column_end: 66, line_start: 678, line_end: 678 }: " "
Token { kind: Text, char_start: 23305, char_end: 23307, byte_start: 23306, byte_end: 23308, column_start: 66, column_end: 68, line_start: 678, line_end: 678 }: of
Token { kind: Newline, char_start: 23307, char_end: 23308, byte_start: 23308, byte_end: 23309, column_start: 68, column_end: 1, line_start: 678, line_end: 679 }: "\n"
Token { kind: Bar, char_start: 23308, char_end: 23309, byte_start: 23309, byte_end: 23310, column_start: 1, column_end: 2, line_start: 679, line_end: 679 }: |
Token { kind: Text, char_start: 23309, char_end: 23327, byte_start: 23310, byte_end: 23328, column_start: 2, column_end: 20, line_start: 679, line_end: 679 }: g:FerretMaxResults
Token { kind: Bar, char_start: 23327, char_end: 23328, byte_start: 23328, byte_end: 23329, column_start: 20, column_end: 21, line_start: 679, line_end: 679 }: |
Token { kind: Text, char_start: 23328, char_end: 23329, byte_start: 23329, byte_end: 23330, column_start: 21, column_end: 22, line_start: 679, line_end: 679 }: .
Token { kind: Newline, char_start: 23329, char_end: 23330, byte_start: 23330, byte_end: 23331, column_start: 22, column_end: 1, line_start: 679, line_end: 680 }: "\n"
Token { kind: Newline, char_start: 23330, char_end: 23331, byte_start: 23331, byte_end: 23332, column_start: 1, column_end: 1, line_start: 680, line_end: 681 }: "\n"
Token { kind: At, char_start: 23331, char_end: 23332, byte_start: 23332, byte_end: 23333, column_start: 1, column_end: 2, line_start: 681, line_end: 681 }: @
Token { kind: Text, char_start: 23332, char_end: 23339, byte_start: 23333, byte_end: 23340, column_start: 2, column_end: 9, line_start: 681, line_end: 681 }: command
Token { kind: Space, char_start: 23339, char_end: 23340, byte_start: 23340, byte_end: 23341, column_start: 9, column_end: 10, line_start: 681, line_end: 681 }: " "
Token { kind: Text, char_start: 23340, char_end: 23346, byte_start: 23341, byte_end: 23347, column_start: 10, column_end: 16, line_start: 681, line_end: 681 }: :Quack
Token { kind: Space, char_start: 23346, char_end: 23347, byte_start: 23347, byte_end: 23348, column_start: 16, column_end: 17, line_start: 681, line_end: 681 }: " "
Token { kind: Text, char_start: 23347, char_end: 23356, byte_start: 23348, byte_end: 23357, column_start: 17, column_end: 26, line_start: 681, line_end: 681 }: {pattern}
Token { kind: Space, char_start: 23356, char_end: 23357, byte_start: 23357, byte_end: 23358, column_start: 26, column_end: 27, line_start: 681, line_end: 681 }: " "
Token { kind: Text, char_start: 23357, char_end: 23366, byte_start: 23358, byte_end: 23367, column_start: 27, column_end: 36, line_start: 681, line_end: 681 }: {options}
Token { kind: Newline, char_start: 23366, char_end: 23367, byte_start: 23367, byte_end: 23368, column_start: 36, column_end: 1, line_start: 681, line_end: 682 }: "\n"
Token { kind: Newline, char_start: 23367, char_end: 23368, byte_start: 23368, byte_end: 23369, column_start: 1, column_end: 1, line_start: 682, line_end: 683 }: "\n"
Token { kind: Text, char_start: 23368, char_end: 23372, byte_start: 23369, byte_end: 23373, column_start: 1, column_end: 5, line_start: 683, line_end: 683 }: Like
Token { kind: Space, char_start: 23372, char_end: 23373, byte_start: 23373, byte_end: 23374, column_start: 5, column_end: 6, line_start: 683, line_end: 683 }: " "
Token { kind: Bar, char_start: 23373, char_end: 23374, byte_start: 23374, byte_end: 23375, column_start: 6, column_end: 7, line_start: 683, line_end: 683 }: |
Token { kind: Text, char_start: 23374, char_end: 23378, byte_start: 23375, byte_end: 23379, column_start: 7, column_end: 11, line_start: 683, line_end: 683 }: :Ack
Token { kind: Bar, char_start: 23378, char_end: 23379, byte_start: 23379, byte_end: 23380, column_start: 11, column_end: 12, line_start: 683, line_end: 683 }: |
Token { kind: Text, char_start: 23379, char_end: 23380, byte_start: 23380, byte_end: 23381, column_start: 12, column_end: 13, line_start: 683, line_end: 683 }: ,
Token { kind: Space, char_start: 23380, char_end: 23381, byte_start: 23381, byte_end: 23382, column_start: 13, column_end: 14, line_start: 683, line_end: 683 }: " "
Token { kind: Text, char_start: 23381, char_end: 23384, byte_start: 23382, byte_end: 23385, column_start: 14, column_end: 17, line_start: 683, line_end: 683 }: but
Token { kind: Space, char_start: 23384, char_end: 23385, byte_start: 23385, byte_end: 23386, column_start: 17, column_end: 18, line_start: 683, line_end: 683 }: " "
Token { kind: Text, char_start: 23385, char_end: 23393, byte_start: 23386, byte_end: 23394, column_start: 18, column_end: 26, line_start: 683, line_end: 683 }: searches
Token { kind: Space, char_start: 23393, char_end: 23394, byte_start: 23394, byte_end: 23395, column_start: 26, column_end: 27, line_start: 683, line_end: 683 }: " "
Token { kind: Text, char_start: 23394, char_end: 23398, byte_start: 23395, byte_end: 23399, column_start: 27, column_end: 31, line_start: 683, line_end: 683 }: only
Token { kind: Space, char_start: 23398, char_end: 23399, byte_start: 23399, byte_end: 23400, column_start: 31, column_end: 32, line_start: 683, line_end: 683 }: " "
Token { kind: Text, char_start: 23399, char_end: 23404, byte_start: 23400, byte_end: 23405, column_start: 32, column_end: 37, line_start: 683, line_end: 683 }: among
Token { kind: Space, char_start: 23404, char_end: 23405, byte_start: 23405, byte_end: 23406, column_start: 37, column_end: 38, line_start: 683, line_end: 683 }: " "
Token { kind: Text, char_start: 23405, char_end: 23410, byte_start: 23406, byte_end: 23411, column_start: 38, column_end: 43, line_start: 683, line_end: 683 }: files
Token { kind: Space, char_start: 23410, char_end: 23411, byte_start: 23411, byte_end: 23412, column_start: 43, column_end: 44, line_start: 683, line_end: 683 }: " "
Token { kind: Text, char_start: 23411, char_end: 23420, byte_start: 23412, byte_end: 23421, column_start: 44, column_end: 53, line_start: 683, line_end: 683 }: currently
Token { kind: Space, char_start: 23420, char_end: 23421, byte_start: 23421, byte_end: 23422, column_start: 53, column_end: 54, line_start: 683, line_end: 683 }: " "
Token { kind: Text, char_start: 23421, char_end: 23423, byte_start: 23422, byte_end: 23424, column_start: 54, column_end: 56, line_start: 683, line_end: 683 }: in
Token { kind: Space, char_start: 23423, char_end: 23424, byte_start: 23424, byte_end: 23425, column_start: 56, column_end: 57, line_start: 683, line_end: 683 }: " "
Token { kind: Text, char_start: 23424, char_end: 23427, byte_start: 23425, byte_end: 23428, column_start: 57, column_end: 60, line_start: 683, line_end: 683 }: the
Token { kind: Space, char_start: 23427, char_end: 23428, byte_start: 23428, byte_end: 23429, column_start: 60, column_end: 61, line_start: 683, line_end: 683 }: " "
Token { kind: Bar, char_start: 23428, char_end: 23429, byte_start: 23429, byte_end: 23430, column_start: 61, column_end: 62, line_start: 683, line_end: 683 }: |
Token { kind: Text, char_start: 23429, char_end: 23437, byte_start: 23430, byte_end: 23438, column_start: 62, column_end: 70, line_start: 683, line_end: 683 }: quickfix
Token { kind: Bar, char_start: 23437, char_end: 23438, byte_start: 23438, byte_end: 23439, column_start: 70, column_end: 71, line_start: 683, line_end: 683 }: |
Token { kind: Newline, char_start: 23438, char_end: 23439, byte_start: 23439, byte_end: 23440, column_start: 71, column_end: 1, line_start: 683, line_end: 684 }: "\n"
Token { kind: Text, char_start: 23439, char_end: 23447, byte_start: 23440, byte_end: 23448, column_start: 1, column_end: 9, line_start: 684, line_end: 684 }: listing.
Token { kind: Space, char_start: 23447, char_end: 23448, byte_start: 23448, byte_end: 23449, column_start: 9, column_end: 10, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23448, char_end: 23452, byte_start: 23449, byte_end: 23453, column_start: 10, column_end: 14, line_start: 684, line_end: 684 }: Note
Token { kind: Space, char_start: 23452, char_end: 23453, byte_start: 23453, byte_end: 23454, column_start: 14, column_end: 15, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23453, char_end: 23457, byte_start: 23454, byte_end: 23458, column_start: 15, column_end: 19, line_start: 684, line_end: 684 }: that
Token { kind: Space, char_start: 23457, char_end: 23458, byte_start: 23458, byte_end: 23459, column_start: 19, column_end: 20, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23458, char_end: 23461, byte_start: 23459, byte_end: 23462, column_start: 20, column_end: 23, line_start: 684, line_end: 684 }: the
Token { kind: Space, char_start: 23461, char_end: 23462, byte_start: 23462, byte_end: 23463, column_start: 23, column_end: 24, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23462, char_end: 23468, byte_start: 23463, byte_end: 23469, column_start: 24, column_end: 30, line_start: 684, line_end: 684 }: search
Token { kind: Space, char_start: 23468, char_end: 23469, byte_start: 23469, byte_end: 23470, column_start: 30, column_end: 31, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23469, char_end: 23471, byte_start: 23470, byte_end: 23472, column_start: 31, column_end: 33, line_start: 684, line_end: 684 }: is
Token { kind: Space, char_start: 23471, char_end: 23472, byte_start: 23472, byte_end: 23473, column_start: 33, column_end: 34, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23472, char_end: 23477, byte_start: 23473, byte_end: 23478, column_start: 34, column_end: 39, line_start: 684, line_end: 684 }: still
Token { kind: Space, char_start: 23477, char_end: 23478, byte_start: 23478, byte_end: 23479, column_start: 39, column_end: 40, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23478, char_end: 23487, byte_start: 23479, byte_end: 23488, column_start: 40, column_end: 49, line_start: 684, line_end: 684 }: delegated
Token { kind: Space, char_start: 23487, char_end: 23488, byte_start: 23488, byte_end: 23489, column_start: 49, column_end: 50, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23488, char_end: 23490, byte_start: 23489, byte_end: 23491, column_start: 50, column_end: 52, line_start: 684, line_end: 684 }: to
Token { kind: Space, char_start: 23490, char_end: 23491, byte_start: 23491, byte_end: 23492, column_start: 52, column_end: 53, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23491, char_end: 23494, byte_start: 23492, byte_end: 23495, column_start: 53, column_end: 56, line_start: 684, line_end: 684 }: the
Token { kind: Space, char_start: 23494, char_end: 23495, byte_start: 23495, byte_end: 23496, column_start: 56, column_end: 57, line_start: 684, line_end: 684 }: " "
Token { kind: Text, char_start: 23495, char_end: 23505, byte_start: 23496, byte_end: 23506, column_start: 57, column_end: 67, line_start: 684, line_end: 684 }: underlying
Token { kind: Newline, char_start: 23505, char_end: 23506, byte_start: 23506, byte_end: 23507, column_start: 67, column_end: 1, line_start: 684, line_end: 685 }: "\n"
Token { kind: Bar, char_start: 23506, char_end: 23507, byte_start: 23507, byte_end: 23508, column_start: 1, column_end: 2, line_start: 685, line_end: 685 }: |
Token { kind: Text, char_start: 23507, char_end: 23516, byte_start: 23508, byte_end: 23517, column_start: 2, column_end: 11, line_start: 685, line_end: 685 }: 'grepprg'
Token { kind: Bar, char_start: 23516, char_end: 23517, byte_start: 23517, byte_end: 23518, column_start: 11, column_end: 12, line_start: 685, line_end: 685 }: |
Token { kind: Space, char_start: 23517, char_end: 23518, byte_start: 23518, byte_end: 23519, column_start: 12, column_end: 13, line_start: 685, line_end: 685 }: " "
Token { kind: Lparen, char_start: 23518, char_end: 23519, byte_start: 23519, byte_end: 23520, column_start: 13, column_end: 14, line_start: 685, line_end: 685 }: (
Token { kind: Backtick, char_start: 23519, char_end: 23520, byte_start: 23520, byte_end: 23521, column_start: 14, column_end: 15, line_start: 685, line_end: 685 }: `
Token { kind: Text, char_start: 23520, char_end: 23522, byte_start: 23521, byte_end: 23523, column_start: 15, column_end: 17, line_start: 685, line_end: 685 }: rg
Token { kind: Backtick, char_start: 23522, char_end: 23523, byte_start: 23523, byte_end: 23524, column_start: 17, column_end: 18, line_start: 685, line_end: 685 }: `
Token { kind: Text, char_start: 23523, char_end: 23524, byte_start: 23524, byte_end: 23525, column_start: 18, column_end: 19, line_start: 685, line_end: 685 }: ,
Token { kind: Space, char_start: 23524, char_end: 23525, byte_start: 23525, byte_end: 23526, column_start: 19, column_end: 20, line_start: 685, line_end: 685 }: " "
Token { kind: Backtick, char_start: 23525, char_end: 23526, byte_start: 23526, byte_end: 23527, column_start: 20, column_end: 21, line_start: 685, line_end: 685 }: `
Token { kind: Text, char_start: 23526, char_end: 23528, byte_start: 23527, byte_end: 23529, column_start: 21, column_end: 23, line_start: 685, line_end: 685 }: ag
Token { kind: Backtick, char_start: 23528, char_end: 23529, byte_start: 23529, byte_end: 23530, column_start: 23, column_end: 24, line_start: 685, line_end: 685 }: `
Token { kind: Text, char_start: 23529, char_end: 23530, byte_start: 23530, byte_end: 23531, column_start: 24, column_end: 25, line_start: 685, line_end: 685 }: ,
Token { kind: Space, char_start: 23530, char_end: 23531, byte_start: 23531, byte_end: 23532, column_start: 25, column_end: 26, line_start: 685, line_end: 685 }: " "
Token { kind: Backtick, char_start: 23531, char_end: 23532, byte_start: 23532, byte_end: 23533, column_start: 26, column_end: 27, line_start: 685, line_end: 685 }: `
Token { kind: Text, char_start: 23532, char_end: 23535, byte_start: 23533, byte_end: 23536, column_start: 27, column_end: 30, line_start: 685, line_end: 685 }: ack
Token { kind: Backtick, char_start: 23535, char_end: 23536, byte_start: 23536, byte_end: 23537, column_start: 30, column_end: 31, line_start: 685, line_end: 685 }: `
Token { kind: Space, char_start: 23536, char_end: 23537, byte_start: 23537, byte_end: 23538, column_start: 31, column_end: 32, line_start: 685, line_end: 685 }: " "
Token { kind: Text, char_start: 23537, char_end: 23539, byte_start: 23538, byte_end: 23540, column_start: 32, column_end: 34, line_start: 685, line_end: 685 }: or
Token { kind: Space, char_start: 23539, char_end: 23540, byte_start: 23540, byte_end: 23541, column_start: 34, column_end: 35, line_start: 685, line_end: 685 }: " "
Token { kind: Backtick, char_start: 23540, char_end: 23541, byte_start: 23541, byte_end: 23542, column_start: 35, column_end: 36, line_start: 685, line_end: 685 }: `
Token { kind: Text, char_start: 23541, char_end: 23544, byte_start: 23542, byte_end: 23545, column_start: 36, column_end: 39, line_start: 685, line_end: 685 }: ack
Token { kind: Hyphen, char_start: 23544, char_end: 23545, byte_start: 23545, byte_end: 23546, column_start: 39, column_end: 40, line_start: 685, line_end: 685 }: -
Token { kind: Text, char_start: 23545, char_end: 23549, byte_start: 23546, byte_end: 23550, column_start: 40, column_end: 44, line_start: 685, line_end: 685 }: grep
Token { kind: Backtick, char_start: 23549, char_end: 23550, byte_start: 23550, byte_end: 23551, column_start: 44, column_end: 45, line_start: 685, line_end: 685 }: `
Token { kind: Rparen, char_start: 23550, char_end: 23551, byte_start: 23551, byte_end: 23552, column_start: 45, column_end: 46, line_start: 685, line_end: 685 }: )
Token { kind: Text, char_start: 23551, char_end: 23552, byte_start: 23552, byte_end: 23553, column_start: 46, column_end: 47, line_start: 685, line_end: 685 }: ,
Token { kind: Space, char_start: 23552, char_end: 23553, byte_start: 23553, byte_end: 23554, column_start: 47, column_end: 48, line_start: 685, line_end: 685 }: " "
Token { kind: Text, char_start: 23553, char_end: 23558, byte_start: 23554, byte_end: 23559, column_start: 48, column_end: 53, line_start: 685, line_end: 685 }: which
Token { kind: Space, char_start: 23558, char_end: 23559, byte_start: 23559, byte_end: 23560, column_start: 53, column_end: 54, line_start: 685, line_end: 685 }: " "
Token { kind: Text, char_start: 23559, char_end: 23564, byte_start: 23560, byte_end: 23565, column_start: 54, column_end: 59, line_start: 685, line_end: 685 }: means
Token { kind: Space, char_start: 23564, char_end: 23565, byte_start: 23565, byte_end: 23566, column_start: 59, column_end: 60, line_start: 685, line_end: 685 }: " "
Token { kind: Text, char_start: 23565, char_end: 23569, byte_start: 23566, byte_end: 23570, column_start: 60, column_end: 64, line_start: 685, line_end: 685 }: that
Token { kind: Space, char_start: 23569, char_end: 23570, byte_start: 23570, byte_end: 23571, column_start: 64, column_end: 65, line_start: 685, line_end: 685 }: " "
Token { kind: Text, char_start: 23570, char_end: 23574, byte_start: 23571, byte_end: 23575, column_start: 65, column_end: 69, line_start: 685, line_end: 685 }: only
Token { kind: Newline, char_start: 23574, char_end: 23575, byte_start: 23575, byte_end: 23576, column_start: 69, column_end: 1, line_start: 685, line_end: 686 }: "\n"
Token { kind: Text, char_start: 23575, char_end: 23582, byte_start: 23576, byte_end: 23583, column_start: 1, column_end: 8, line_start: 686, line_end: 686 }: buffers
Token { kind: Space, char_start: 23582, char_end: 23583, byte_start: 23583, byte_end: 23584, column_start: 8, column_end: 9, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23583, char_end: 23590, byte_start: 23584, byte_end: 23591, column_start: 9, column_end: 16, line_start: 686, line_end: 686 }: written
Token { kind: Space, char_start: 23590, char_end: 23591, byte_start: 23591, byte_end: 23592, column_start: 16, column_end: 17, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23591, char_end: 23593, byte_start: 23592, byte_end: 23594, column_start: 17, column_end: 19, line_start: 686, line_end: 686 }: to
Token { kind: Space, char_start: 23593, char_end: 23594, byte_start: 23594, byte_end: 23595, column_start: 19, column_end: 20, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23594, char_end: 23598, byte_start: 23595, byte_end: 23599, column_start: 20, column_end: 24, line_start: 686, line_end: 686 }: disk
Token { kind: Space, char_start: 23598, char_end: 23599, byte_start: 23599, byte_end: 23600, column_start: 24, column_end: 25, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23599, char_end: 23603, byte_start: 23600, byte_end: 23604, column_start: 25, column_end: 29, line_start: 686, line_end: 686 }: will
Token { kind: Space, char_start: 23603, char_end: 23604, byte_start: 23604, byte_end: 23605, column_start: 29, column_end: 30, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23604, char_end: 23606, byte_start: 23605, byte_end: 23607, column_start: 30, column_end: 32, line_start: 686, line_end: 686 }: be
Token { kind: Space, char_start: 23606, char_end: 23607, byte_start: 23607, byte_end: 23608, column_start: 32, column_end: 33, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23607, char_end: 23616, byte_start: 23608, byte_end: 23617, column_start: 33, column_end: 42, line_start: 686, line_end: 686 }: searched.
Token { kind: Space, char_start: 23616, char_end: 23617, byte_start: 23617, byte_end: 23618, column_start: 42, column_end: 43, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23617, char_end: 23619, byte_start: 23618, byte_end: 23620, column_start: 43, column_end: 45, line_start: 686, line_end: 686 }: If
Token { kind: Space, char_start: 23619, char_end: 23620, byte_start: 23620, byte_end: 23621, column_start: 45, column_end: 46, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23620, char_end: 23622, byte_start: 23621, byte_end: 23623, column_start: 46, column_end: 48, line_start: 686, line_end: 686 }: no
Token { kind: Space, char_start: 23622, char_end: 23623, byte_start: 23623, byte_end: 23624, column_start: 48, column_end: 49, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23623, char_end: 23630, byte_start: 23624, byte_end: 23631, column_start: 49, column_end: 56, line_start: 686, line_end: 686 }: buffers
Token { kind: Space, char_start: 23630, char_end: 23631, byte_start: 23631, byte_end: 23632, column_start: 56, column_end: 57, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23631, char_end: 23634, byte_start: 23632, byte_end: 23635, column_start: 57, column_end: 60, line_start: 686, line_end: 686 }: are
Token { kind: Space, char_start: 23634, char_end: 23635, byte_start: 23635, byte_end: 23636, column_start: 60, column_end: 61, line_start: 686, line_end: 686 }: " "
Token { kind: Text, char_start: 23635, char_end: 23642, byte_start: 23636, byte_end: 23643, column_start: 61, column_end: 68, line_start: 686, line_end: 686 }: written
Token { kind: Newline, char_start: 23642, char_end: 23643, byte_start: 23643, byte_end: 23644, column_start: 68, column_end: 1, line_start: 686, line_end: 687 }: "\n"
Token { kind: Text, char_start: 23643, char_end: 23645, byte_start: 23644, byte_end: 23646, column_start: 1, column_end: 3, line_start: 687, line_end: 687 }: to
Token { kind: Space, char_start: 23645, char_end: 23646, byte_start: 23646, byte_end: 23647, column_start: 3, column_end: 4, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23646, char_end: 23651, byte_start: 23647, byte_end: 23652, column_start: 4, column_end: 9, line_start: 687, line_end: 687 }: disk,
Token { kind: Space, char_start: 23651, char_end: 23652, byte_start: 23652, byte_end: 23653, column_start: 9, column_end: 10, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23652, char_end: 23656, byte_start: 23653, byte_end: 23657, column_start: 10, column_end: 14, line_start: 687, line_end: 687 }: then
Token { kind: Space, char_start: 23656, char_end: 23657, byte_start: 23657, byte_end: 23658, column_start: 14, column_end: 15, line_start: 687, line_end: 687 }: " "
Token { kind: Bar, char_start: 23657, char_end: 23658, byte_start: 23658, byte_end: 23659, column_start: 15, column_end: 16, line_start: 687, line_end: 687 }: |
Token { kind: Text, char_start: 23658, char_end: 23664, byte_start: 23659, byte_end: 23665, column_start: 16, column_end: 22, line_start: 687, line_end: 687 }: :Quack
Token { kind: Bar, char_start: 23664, char_end: 23665, byte_start: 23665, byte_end: 23666, column_start: 22, column_end: 23, line_start: 687, line_end: 687 }: |
Token { kind: Space, char_start: 23665, char_end: 23666, byte_start: 23666, byte_end: 23667, column_start: 23, column_end: 24, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23666, char_end: 23673, byte_start: 23667, byte_end: 23674, column_start: 24, column_end: 31, line_start: 687, line_end: 687 }: behaves
Token { kind: Space, char_start: 23673, char_end: 23674, byte_start: 23674, byte_end: 23675, column_start: 31, column_end: 32, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23674, char_end: 23681, byte_start: 23675, byte_end: 23682, column_start: 32, column_end: 39, line_start: 687, line_end: 687 }: exactly
Token { kind: Space, char_start: 23681, char_end: 23682, byte_start: 23682, byte_end: 23683, column_start: 39, column_end: 40, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23682, char_end: 23686, byte_start: 23683, byte_end: 23687, column_start: 40, column_end: 44, line_start: 687, line_end: 687 }: like
Token { kind: Space, char_start: 23686, char_end: 23687, byte_start: 23687, byte_end: 23688, column_start: 44, column_end: 45, line_start: 687, line_end: 687 }: " "
Token { kind: Bar, char_start: 23687, char_end: 23688, byte_start: 23688, byte_end: 23689, column_start: 45, column_end: 46, line_start: 687, line_end: 687 }: |
Token { kind: Text, char_start: 23688, char_end: 23692, byte_start: 23689, byte_end: 23693, column_start: 46, column_end: 50, line_start: 687, line_end: 687 }: :Ack
Token { kind: Bar, char_start: 23692, char_end: 23693, byte_start: 23693, byte_end: 23694, column_start: 50, column_end: 51, line_start: 687, line_end: 687 }: |
Token { kind: Space, char_start: 23693, char_end: 23694, byte_start: 23694, byte_end: 23695, column_start: 51, column_end: 52, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23694, char_end: 23697, byte_start: 23695, byte_end: 23698, column_start: 52, column_end: 55, line_start: 687, line_end: 687 }: and
Token { kind: Space, char_start: 23697, char_end: 23698, byte_start: 23698, byte_end: 23699, column_start: 55, column_end: 56, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23698, char_end: 23702, byte_start: 23699, byte_end: 23703, column_start: 56, column_end: 60, line_start: 687, line_end: 687 }: will
Token { kind: Space, char_start: 23702, char_end: 23703, byte_start: 23703, byte_end: 23704, column_start: 60, column_end: 61, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23703, char_end: 23709, byte_start: 23704, byte_end: 23710, column_start: 61, column_end: 67, line_start: 687, line_end: 687 }: search
Token { kind: Space, char_start: 23709, char_end: 23710, byte_start: 23710, byte_end: 23711, column_start: 67, column_end: 68, line_start: 687, line_end: 687 }: " "
Token { kind: Text, char_start: 23710, char_end: 23713, byte_start: 23711, byte_end: 23714, column_start: 68, column_end: 71, line_start: 687, line_end: 687 }: all
Token { kind: Newline, char_start: 23713, char_end: 23714, byte_start: 23714, byte_end: 23715, column_start: 71, column_end: 1, line_start: 687, line_end: 688 }: "\n"
Token { kind: Text, char_start: 23714, char_end: 23719, byte_start: 23715, byte_end: 23720, column_start: 1, column_end: 6, line_start: 688, line_end: 688 }: files
Token { kind: Space, char_start: 23719, char_end: 23720, byte_start: 23720, byte_end: 23721, column_start: 6, column_end: 7, line_start: 688, line_end: 688 }: " "
Token { kind: Text, char_start: 23720, char_end: 23722, byte_start: 23721, byte_end: 23723, column_start: 7, column_end: 9, line_start: 688, line_end: 688 }: in
Token { kind: Space, char_start: 23722, char_end: 23723, byte_start: 23723, byte_end: 23724, column_start: 9, column_end: 10, line_start: 688, line_end: 688 }: " "
Token { kind: Text, char_start: 23723, char_end: 23726, byte_start: 23724, byte_end: 23727, column_start: 10, column_end: 13, line_start: 688, line_end: 688 }: the
Token { kind: Space, char_start: 23726, char_end: 23727, byte_start: 23727, byte_end: 23728, column_start: 13, column_end: 14, line_start: 688, line_end: 688 }: " "
Token { kind: Text, char_start: 23727, char_end: 23734, byte_start: 23728, byte_end: 23735, column_start: 14, column_end: 21, line_start: 688, line_end: 688 }: current
Token { kind: Space, char_start: 23734, char_end: 23735, byte_start: 23735, byte_end: 23736, column_start: 21, column_end: 22, line_start: 688, line_end: 688 }: " "
Token { kind: Text, char_start: 23735, char_end: 23745, byte_start: 23736, byte_end: 23746, column_start: 22, column_end: 32, line_start: 688, line_end: 688 }: directory.
Token { kind: Newline, char_start: 23745, char_end: 23746, byte_start: 23746, byte_end: 23747, column_start: 32, column_end: 1, line_start: 688, line_end: 689 }: "\n"
Token { kind: Newline, char_start: 23746, char_end: 23747, byte_start: 23747, byte_end: 23748, column_start: 1, column_end: 1, line_start: 689, line_end: 690 }: "\n"
Token { kind: At, char_start: 23747, char_end: 23748, byte_start: 23748, byte_end: 23749, column_start: 1, column_end: 2, line_start: 690, line_end: 690 }: @
Token { kind: Text, char_start: 23748, char_end: 23755, byte_start: 23749, byte_end: 23756, column_start: 2, column_end: 9, line_start: 690, line_end: 690 }: command
Token { kind: Space, char_start: 23755, char_end: 23756, byte_start: 23756, byte_end: 23757, column_start: 9, column_end: 10, line_start: 690, line_end: 690 }: " "
Token { kind: Text, char_start: 23756, char_end: 23762, byte_start: 23757, byte_end: 23763, column_start: 10, column_end: 16, line_start: 690, line_end: 690 }: :Quack
Token { kind: Bang, char_start: 23762, char_end: 23763, byte_start: 23763, byte_end: 23764, column_start: 16, column_end: 17, line_start: 690, line_end: 690 }: !
Token { kind: Space, char_start: 23763, char_end: 23764, byte_start: 23764, byte_end: 23765, column_start: 17, column_end: 18, line_start: 690, line_end: 690 }: " "
Token { kind: Text, char_start: 23764, char_end: 23773, byte_start: 23765, byte_end: 23774, column_start: 18, column_end: 27, line_start: 690, line_end: 690 }: {pattern}
Token { kind: Space, char_start: 23773, char_end: 23774, byte_start: 23774, byte_end: 23775, column_start: 27, column_end: 28, line_start: 690, line_end: 690 }: " "
Token { kind: Text, char_start: 23774, char_end: 23783, byte_start: 23775, byte_end: 23784, column_start: 28, column_end: 37, line_start: 690, line_end: 690 }: {options}
Token { kind: Newline, char_start: 23783, char_end: 23784, byte_start: 23784, byte_end: 23785, column_start: 37, column_end: 1, line_start: 690, line_end: 691 }: "\n"
Token { kind: Newline, char_start: 23784, char_end: 23785, byte_start: 23785, byte_end: 23786, column_start: 1, column_end: 1, line_start: 691, line_end: 692 }: "\n"
Token { kind: Text, char_start: 23785, char_end: 23789, byte_start: 23786, byte_end: 23790, column_start: 1, column_end: 5, line_start: 692, line_end: 692 }: Like
Token { kind: Space, char_start: 23789, char_end: 23790, byte_start: 23790, byte_end: 23791, column_start: 5, column_end: 6, line_start: 692, line_end: 692 }: " "
Token { kind: Bar, char_start: 23790, char_end: 23791, byte_start: 23791, byte_end: 23792, column_start: 6, column_end: 7, line_start: 692, line_end: 692 }: |
Token { kind: Text, char_start: 23791, char_end: 23797, byte_start: 23792, byte_end: 23798, column_start: 7, column_end: 13, line_start: 692, line_end: 692 }: :Quack
Token { kind: Bar, char_start: 23797, char_end: 23798, byte_start: 23798, byte_end: 23799, column_start: 13, column_end: 14, line_start: 692, line_end: 692 }: |
Token { kind: Text, char_start: 23798, char_end: 23799, byte_start: 23799, byte_end: 23800, column_start: 14, column_end: 15, line_start: 692, line_end: 692 }: ,
Token { kind: Space, char_start: 23799, char_end: 23800, byte_start: 23800, byte_end: 23801, column_start: 15, column_end: 16, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23800, char_end: 23803, byte_start: 23801, byte_end: 23804, column_start: 16, column_end: 19, line_start: 692, line_end: 692 }: but
Token { kind: Space, char_start: 23803, char_end: 23804, byte_start: 23804, byte_end: 23805, column_start: 19, column_end: 20, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23804, char_end: 23811, byte_start: 23805, byte_end: 23812, column_start: 20, column_end: 27, line_start: 692, line_end: 692 }: returns
Token { kind: Space, char_start: 23811, char_end: 23812, byte_start: 23812, byte_end: 23813, column_start: 27, column_end: 28, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23812, char_end: 23815, byte_start: 23813, byte_end: 23816, column_start: 28, column_end: 31, line_start: 692, line_end: 692 }: all
Token { kind: Space, char_start: 23815, char_end: 23816, byte_start: 23816, byte_end: 23817, column_start: 31, column_end: 32, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23816, char_end: 23823, byte_start: 23817, byte_end: 23824, column_start: 32, column_end: 39, line_start: 692, line_end: 692 }: results
Token { kind: Space, char_start: 23823, char_end: 23824, byte_start: 23824, byte_end: 23825, column_start: 39, column_end: 40, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23824, char_end: 23836, byte_start: 23825, byte_end: 23837, column_start: 40, column_end: 52, line_start: 692, line_end: 692 }: irrespective
Token { kind: Space, char_start: 23836, char_end: 23837, byte_start: 23837, byte_end: 23838, column_start: 52, column_end: 53, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23837, char_end: 23839, byte_start: 23838, byte_end: 23840, column_start: 53, column_end: 55, line_start: 692, line_end: 692 }: of
Token { kind: Space, char_start: 23839, char_end: 23840, byte_start: 23840, byte_end: 23841, column_start: 55, column_end: 56, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23840, char_end: 23843, byte_start: 23841, byte_end: 23844, column_start: 56, column_end: 59, line_start: 692, line_end: 692 }: the
Token { kind: Space, char_start: 23843, char_end: 23844, byte_start: 23844, byte_end: 23845, column_start: 59, column_end: 60, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23844, char_end: 23849, byte_start: 23845, byte_end: 23850, column_start: 60, column_end: 65, line_start: 692, line_end: 692 }: value
Token { kind: Space, char_start: 23849, char_end: 23850, byte_start: 23850, byte_end: 23851, column_start: 65, column_end: 66, line_start: 692, line_end: 692 }: " "
Token { kind: Text, char_start: 23850, char_end: 23852, byte_start: 23851, byte_end: 23853, column_start: 66, column_end: 68, line_start: 692, line_end: 692 }: of
Token { kind: Newline, char_start: 23852, char_end: 23853, byte_start: 23853, byte_end: 23854, column_start: 68, column_end: 1, line_start: 692, line_end: 693 }: "\n"
Token { kind: Bar, char_start: 23853, char_end: 23854, byte_start: 23854, byte_end: 23855, column_start: 1, column_end: 2, line_start: 693, line_end: 693 }: |
Token { kind: Text, char_start: 23854, char_end: 23872, byte_start: 23855, byte_end: 23873, column_start: 2, column_end: 20, line_start: 693, line_end: 693 }: g:FerretMaxResults
Token { kind: Bar, char_start: 23872, char_end: 23873, byte_start: 23873, byte_end: 23874, column_start: 20, column_end: 21, line_start: 693, line_end: 693 }: |
Token { kind: Text, char_start: 23873, char_end: 23874, byte_start: 23874, byte_end: 23875, column_start: 21, column_end: 22, line_start: 693, line_end: 693 }: .
Token { kind: Newline, char_start: 23874, char_end: 23875, byte_start: 23875, byte_end: 23876, column_start: 22, column_end: 1, line_start: 693, line_end: 694 }: "\n"
Token { kind: Newline, char_start: 23875, char_end: 23876, byte_start: 23876, byte_end: 23877, column_start: 1, column_end: 1, line_start: 694, line_end: 695 }: "\n"
Token { kind: At, char_start: 23876, char_end: 23877, byte_start: 23877, byte_end: 23878, column_start: 1, column_end: 2, line_start: 695, line_end: 695 }: @
Token { kind: Text, char_start: 23877, char_end: 23884, byte_start: 23878, byte_end: 23885, column_start: 2, column_end: 9, line_start: 695, line_end: 695 }: command
Token { kind: Space, char_start: 23884, char_end: 23885, byte_start: 23885, byte_end: 23886, column_start: 9, column_end: 10, line_start: 695, line_end: 695 }: " "
Token { kind: Text, char_start: 23885, char_end: 23890, byte_start: 23886, byte_end: 23891, column_start: 10, column_end: 15, line_start: 695, line_end: 695 }: :Acks
Token { kind: Space, char_start: 23890, char_end: 23891, byte_start: 23891, byte_end: 23892, column_start: 15, column_end: 16, line_start: 695, line_end: 695 }: " "
Token { kind: Text, char_start: 23891, char_end: 23916, byte_start: 23892, byte_end: 23917, column_start: 16, column_end: 41, line_start: 695, line_end: 695 }: /{pattern}/{replacement}/
Token { kind: Newline, char_start: 23916, char_end: 23917, byte_start: 23917, byte_end: 23918, column_start: 41, column_end: 1, line_start: 695, line_end: 696 }: "\n"
Token { kind: Newline, char_start: 23917, char_end: 23918, byte_start: 23918, byte_end: 23919, column_start: 1, column_end: 1, line_start: 696, line_end: 697 }: "\n"
Token { kind: Text, char_start: 23918, char_end: 23923, byte_start: 23919, byte_end: 23924, column_start: 1, column_end: 6, line_start: 697, line_end: 697 }: Takes
Token { kind: Space, char_start: 23923, char_end: 23924, byte_start: 23924, byte_end: 23925, column_start: 6, column_end: 7, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23924, char_end: 23927, byte_start: 23925, byte_end: 23928, column_start: 7, column_end: 10, line_start: 697, line_end: 697 }: all
Token { kind: Space, char_start: 23927, char_end: 23928, byte_start: 23928, byte_end: 23929, column_start: 10, column_end: 11, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23928, char_end: 23930, byte_start: 23929, byte_end: 23931, column_start: 11, column_end: 13, line_start: 697, line_end: 697 }: of
Token { kind: Space, char_start: 23930, char_end: 23931, byte_start: 23931, byte_end: 23932, column_start: 13, column_end: 14, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23931, char_end: 23934, byte_start: 23932, byte_end: 23935, column_start: 14, column_end: 17, line_start: 697, line_end: 697 }: the
Token { kind: Space, char_start: 23934, char_end: 23935, byte_start: 23935, byte_end: 23936, column_start: 17, column_end: 18, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23935, char_end: 23940, byte_start: 23936, byte_end: 23941, column_start: 18, column_end: 23, line_start: 697, line_end: 697 }: files
Token { kind: Space, char_start: 23940, char_end: 23941, byte_start: 23941, byte_end: 23942, column_start: 23, column_end: 24, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23941, char_end: 23950, byte_start: 23942, byte_end: 23951, column_start: 24, column_end: 33, line_start: 697, line_end: 697 }: currently
Token { kind: Space, char_start: 23950, char_end: 23951, byte_start: 23951, byte_end: 23952, column_start: 33, column_end: 34, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23951, char_end: 23953, byte_start: 23952, byte_end: 23954, column_start: 34, column_end: 36, line_start: 697, line_end: 697 }: in
Token { kind: Space, char_start: 23953, char_end: 23954, byte_start: 23954, byte_end: 23955, column_start: 36, column_end: 37, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23954, char_end: 23957, byte_start: 23955, byte_end: 23958, column_start: 37, column_end: 40, line_start: 697, line_end: 697 }: the
Token { kind: Space, char_start: 23957, char_end: 23958, byte_start: 23958, byte_end: 23959, column_start: 40, column_end: 41, line_start: 697, line_end: 697 }: " "
Token { kind: Bar, char_start: 23958, char_end: 23959, byte_start: 23959, byte_end: 23960, column_start: 41, column_end: 42, line_start: 697, line_end: 697 }: |
Token { kind: Text, char_start: 23959, char_end: 23967, byte_start: 23960, byte_end: 23968, column_start: 42, column_end: 50, line_start: 697, line_end: 697 }: quickfix
Token { kind: Bar, char_start: 23967, char_end: 23968, byte_start: 23968, byte_end: 23969, column_start: 50, column_end: 51, line_start: 697, line_end: 697 }: |
Token { kind: Space, char_start: 23968, char_end: 23969, byte_start: 23969, byte_end: 23970, column_start: 51, column_end: 52, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23969, char_end: 23976, byte_start: 23970, byte_end: 23977, column_start: 52, column_end: 59, line_start: 697, line_end: 697 }: listing
Token { kind: Space, char_start: 23976, char_end: 23977, byte_start: 23977, byte_end: 23978, column_start: 59, column_end: 60, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23977, char_end: 23980, byte_start: 23978, byte_end: 23981, column_start: 60, column_end: 63, line_start: 697, line_end: 697 }: and
Token { kind: Space, char_start: 23980, char_end: 23981, byte_start: 23981, byte_end: 23982, column_start: 63, column_end: 64, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23981, char_end: 23989, byte_start: 23982, byte_end: 23990, column_start: 64, column_end: 72, line_start: 697, line_end: 697 }: performs
Token { kind: Space, char_start: 23989, char_end: 23990, byte_start: 23990, byte_end: 23991, column_start: 72, column_end: 73, line_start: 697, line_end: 697 }: " "
Token { kind: Text, char_start: 23990, char_end: 23991, byte_start: 23991, byte_end: 23992, column_start: 73, column_end: 74, line_start: 697, line_end: 697 }: a
Token { kind: Newline, char_start: 23991, char_end: 23992, byte_start: 23992, byte_end: 23993, column_start: 74, column_end: 1, line_start: 697, line_end: 698 }: "\n"
Token { kind: Text, char_start: 23992, char_end: 24004, byte_start: 23993, byte_end: 24005, column_start: 1, column_end: 13, line_start: 698, line_end: 698 }: substitution
Token { kind: Space, char_start: 24004, char_end: 24005, byte_start: 24005, byte_end: 24006, column_start: 13, column_end: 14, line_start: 698, line_end: 698 }: " "
Token { kind: Text, char_start: 24005, char_end: 24007, byte_start: 24006, byte_end: 24008, column_start: 14, column_end: 16, line_start: 698, line_end: 698 }: of
Token { kind: Space, char_start: 24007, char_end: 24008, byte_start: 24008, byte_end: 24009, column_start: 16, column_end: 17, line_start: 698, line_end: 698 }: " "
Token { kind: Text, char_start: 24008, char_end: 24011, byte_start: 24009, byte_end: 24012, column_start: 17, column_end: 20, line_start: 698, line_end: 698 }: all
Token { kind: Space, char_start: 24011, char_end: 24012, byte_start: 24012, byte_end: 24013, column_start: 20, column_end: 21, line_start: 698, line_end: 698 }: " "
Token { kind: Text, char_start: 24012, char_end: 24021, byte_start: 24013, byte_end: 24022, column_start: 21, column_end: 30, line_start: 698, line_end: 698 }: instances
Token { kind: Space, char_start: 24021, char_end: 24022, byte_start: 24022, byte_end: 24023, column_start: 30, column_end: 31, line_start: 698, line_end: 698 }: " "
Token { kind: Text, char_start: 24022, char_end: 24024, byte_start: 24023, byte_end: 24025, column_start: 31, column_end: 33, line_start: 698, line_end: 698 }: of
Token { kind: Space, char_start: 24024, char_end: 24025, byte_start: 24025, byte_end: 24026, column_start: 33, column_end: 34, line_start: 698, line_end: 698 }: " "
Token { kind: Text, char_start: 24025, char_end: 24034, byte_start: 24026, byte_end: 24035, column_start: 34, column_end: 43, line_start: 698, line_end: 698 }: {pattern}
Token { kind: Space, char_start: 24034, char_end: 24035, byte_start: 24035, byte_end: 24036, column_start: 43, column_end: 44, line_start: 698, line_end: 698 }: " "
Token { kind: Lparen, char_start: 24035, char_end: 24036, byte_start: 24036, byte_end: 24037, column_start: 44, column_end: 45, line_start: 698, line_end: 698 }: (
Token { kind: Text, char_start: 24036, char_end: 24037, byte_start: 24037, byte_end: 24038, column_start: 45, column_end: 46, line_start: 698, line_end: 698 }: a
Token { kind: Space, char_start: 24037, char_end: 24038, byte_start: 24038, byte_end: 24039, column_start: 46, column_end: 47, line_start: 698, line_end: 698 }: " "
Token { kind: Text, char_start: 24038, char_end: 24046, byte_start: 24039, byte_end: 24047, column_start: 47, column_end: 55, line_start: 698, line_end: 698 }: standard
Token { kind: Space, char_start: 24046, char_end: 24047, byte_start: 24047, byte_end: 24048, column_start: 55, column_end: 56, line_start: 698, line_end: 698 }: " "
Token { kind: Text, char_start: 24047, char_end: 24050, byte_start: 24048, byte_end: 24051, column_start: 56, column_end: 59, line_start: 698, line_end: 698 }: Vim
Token { kind: Space, char_start: 24050, char_end: 24051, byte_start: 24051, byte_end: 24052, column_start: 59, column_end: 60, line_start: 698, line_end: 698 }: " "
Token { kind: Text, char_start: 24051, char_end: 24057, byte_start: 24052, byte_end: 24058, column_start: 60, column_end: 66, line_start: 698, line_end: 698 }: search
Token { kind: Space, char_start: 24057, char_end: 24058, byte_start: 24058, byte_end: 24059, column_start: 66, column_end: 67, line_start: 698, line_end: 698 }: " "
Token { kind: Bar, char_start: 24058, char_end: 24059, byte_start: 24059, byte_end: 24060, column_start: 67, column_end: 68, line_start: 698, line_end: 698 }: |
Token { kind: Text, char_start: 24059, char_end: 24066, byte_start: 24060, byte_end: 24067, column_start: 68, column_end: 75, line_start: 698, line_end: 698 }: pattern
Token { kind: Bar, char_start: 24066, char_end: 24067, byte_start: 24067, byte_end: 24068, column_start: 75, column_end: 76, line_start: 698, line_end: 698 }: |
Token { kind: Rparen, char_start: 24067, char_end: 24068, byte_start: 24068, byte_end: 24069, column_start: 76, column_end: 77, line_start: 698, line_end: 698 }: )
Token { kind: Newline, char_start: 24068, char_end: 24069, byte_start: 24069, byte_end: 24070, column_start: 77, column_end: 1, line_start: 698, line_end: 699 }: "\n"
Token { kind: Text, char_start: 24069, char_end: 24071, byte_start: 24070, byte_end: 24072, column_start: 1, column_end: 3, line_start: 699, line_end: 699 }: by
Token { kind: Space, char_start: 24071, char_end: 24072, byte_start: 24072, byte_end: 24073, column_start: 3, column_end: 4, line_start: 699, line_end: 699 }: " "
Token { kind: Text, char_start: 24072, char_end: 24086, byte_start: 24073, byte_end: 24087, column_start: 4, column_end: 18, line_start: 699, line_end: 699 }: {replacement}.
Token { kind: Newline, char_start: 24086, char_end: 24087, byte_start: 24087, byte_end: 24088, column_start: 18, column_end: 1, line_start: 699, line_end: 700 }: "\n"
Token { kind: Newline, char_start: 24087, char_end: 24088, byte_start: 24088, byte_end: 24089, column_start: 1, column_end: 1, line_start: 700, line_end: 701 }: "\n"
Token { kind: Text, char_start: 24088, char_end: 24089, byte_start: 24089, byte_end: 24090, column_start: 1, column_end: 2, line_start: 701, line_end: 701 }: A
Token { kind: Space, char_start: 24089, char_end: 24090, byte_start: 24090, byte_end: 24091, column_start: 2, column_end: 3, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24090, char_end: 24097, byte_start: 24091, byte_end: 24098, column_start: 3, column_end: 10, line_start: 701, line_end: 701 }: typical
Token { kind: Space, char_start: 24097, char_end: 24098, byte_start: 24098, byte_end: 24099, column_start: 10, column_end: 11, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24098, char_end: 24106, byte_start: 24099, byte_end: 24107, column_start: 11, column_end: 19, line_start: 701, line_end: 701 }: sequence
Token { kind: Space, char_start: 24106, char_end: 24107, byte_start: 24107, byte_end: 24108, column_start: 19, column_end: 20, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24107, char_end: 24115, byte_start: 24108, byte_end: 24116, column_start: 20, column_end: 28, line_start: 701, line_end: 701 }: consists
Token { kind: Space, char_start: 24115, char_end: 24116, byte_start: 24116, byte_end: 24117, column_start: 28, column_end: 29, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24116, char_end: 24118, byte_start: 24117, byte_end: 24119, column_start: 29, column_end: 31, line_start: 701, line_end: 701 }: of
Token { kind: Space, char_start: 24118, char_end: 24119, byte_start: 24119, byte_end: 24120, column_start: 31, column_end: 32, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24119, char_end: 24121, byte_start: 24120, byte_end: 24122, column_start: 32, column_end: 34, line_start: 701, line_end: 701 }: an
Token { kind: Space, char_start: 24121, char_end: 24122, byte_start: 24122, byte_end: 24123, column_start: 34, column_end: 35, line_start: 701, line_end: 701 }: " "
Token { kind: Bar, char_start: 24122, char_end: 24123, byte_start: 24123, byte_end: 24124, column_start: 35, column_end: 36, line_start: 701, line_end: 701 }: |
Token { kind: Text, char_start: 24123, char_end: 24127, byte_start: 24124, byte_end: 24128, column_start: 36, column_end: 40, line_start: 701, line_end: 701 }: :Ack
Token { kind: Bar, char_start: 24127, char_end: 24128, byte_start: 24128, byte_end: 24129, column_start: 40, column_end: 41, line_start: 701, line_end: 701 }: |
Token { kind: Space, char_start: 24128, char_end: 24129, byte_start: 24129, byte_end: 24130, column_start: 41, column_end: 42, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24129, char_end: 24139, byte_start: 24130, byte_end: 24140, column_start: 42, column_end: 52, line_start: 701, line_end: 701 }: invocation
Token { kind: Space, char_start: 24139, char_end: 24140, byte_start: 24140, byte_end: 24141, column_start: 52, column_end: 53, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24140, char_end: 24142, byte_start: 24141, byte_end: 24143, column_start: 53, column_end: 55, line_start: 701, line_end: 701 }: to
Token { kind: Space, char_start: 24142, char_end: 24143, byte_start: 24143, byte_end: 24144, column_start: 55, column_end: 56, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24143, char_end: 24151, byte_start: 24144, byte_end: 24152, column_start: 56, column_end: 64, line_start: 701, line_end: 701 }: populate
Token { kind: Space, char_start: 24151, char_end: 24152, byte_start: 24152, byte_end: 24153, column_start: 64, column_end: 65, line_start: 701, line_end: 701 }: " "
Token { kind: Text, char_start: 24152, char_end: 24155, byte_start: 24153, byte_end: 24156, column_start: 65, column_end: 68, line_start: 701, line_end: 701 }: the
Token { kind: Space, char_start: 24155, char_end: 24156, byte_start: 24156, byte_end: 24157, column_start: 68, column_end: 69, line_start: 701, line_end: 701 }: " "
Token { kind: Bar, char_start: 24156, char_end: 24157, byte_start: 24157, byte_end: 24158, column_start: 69, column_end: 70, line_start: 701, line_end: 701 }: |
Token { kind: Text, char_start: 24157, char_end: 24165, byte_start: 24158, byte_end: 24166, column_start: 70, column_end: 78, line_start: 701, line_end: 701 }: quickfix
Token { kind: Bar, char_start: 24165, char_end: 24166, byte_start: 24166, byte_end: 24167, column_start: 78, column_end: 79, line_start: 701, line_end: 701 }: |
Token { kind: Newline, char_start: 24166, char_end: 24167, byte_start: 24167, byte_end: 24168, column_start: 79, column_end: 1, line_start: 701, line_end: 702 }: "\n"
Token { kind: Text, char_start: 24167, char_end: 24174, byte_start: 24168, byte_end: 24175, column_start: 1, column_end: 8, line_start: 702, line_end: 702 }: listing
Token { kind: Space, char_start: 24174, char_end: 24175, byte_start: 24175, byte_end: 24176, column_start: 8, column_end: 9, line_start: 702, line_end: 702 }: " "
Token { kind: Text, char_start: 24175, char_end: 24178, byte_start: 24176, byte_end: 24179, column_start: 9, column_end: 12, line_start: 702, line_end: 702 }: and
Token { kind: Space, char_start: 24178, char_end: 24179, byte_start: 24179, byte_end: 24180, column_start: 12, column_end: 13, line_start: 702, line_end: 702 }: " "
Token { kind: Text, char_start: 24179, char_end: 24183, byte_start: 24180, byte_end: 24184, column_start: 13, column_end: 17, line_start: 702, line_end: 702 }: then
Token { kind: Space, char_start: 24183, char_end: 24184, byte_start: 24184, byte_end: 24185, column_start: 17, column_end: 18, line_start: 702, line_end: 702 }: " "
Token { kind: Bar, char_start: 24184, char_end: 24185, byte_start: 24185, byte_end: 24186, column_start: 18, column_end: 19, line_start: 702, line_end: 702 }: |
Token { kind: Text, char_start: 24185, char_end: 24190, byte_start: 24186, byte_end: 24191, column_start: 19, column_end: 24, line_start: 702, line_end: 702 }: :Acks
Token { kind: Bar, char_start: 24190, char_end: 24191, byte_start: 24191, byte_end: 24192, column_start: 24, column_end: 25, line_start: 702, line_end: 702 }: |
Token { kind: Space, char_start: 24191, char_end: 24192, byte_start: 24192, byte_end: 24193, column_start: 25, column_end: 26, line_start: 702, line_end: 702 }: " "
Token { kind: Lparen, char_start: 24192, char_end: 24193, byte_start: 24193, byte_end: 24194, column_start: 26, column_end: 27, line_start: 702, line_end: 702 }: (
Token { kind: Text, char_start: 24193, char_end: 24202, byte_start: 24194, byte_end: 24203, column_start: 27, column_end: 36, line_start: 702, line_end: 702 }: mnemonic:
Token { kind: Space, char_start: 24202, char_end: 24203, byte_start: 24203, byte_end: 24204, column_start: 36, column_end: 37, line_start: 702, line_end: 702 }: " "
Token { kind: Text, char_start: 24203, char_end: 24207, byte_start: 24204, byte_end: 24208, column_start: 37, column_end: 41, line_start: 702, line_end: 702 }: "Ack
Token { kind: Space, char_start: 24207, char_end: 24208, byte_start: 24208, byte_end: 24209, column_start: 41, column_end: 42, line_start: 702, line_end: 702 }: " "
Token { kind: Text, char_start: 24208, char_end: 24219, byte_start: 24209, byte_end: 24220, column_start: 42, column_end: 53, line_start: 702, line_end: 702 }: substitute"
Token { kind: Rparen, char_start: 24219, char_end: 24220, byte_start: 24220, byte_end: 24221, column_start: 53, column_end: 54, line_start: 702, line_end: 702 }: )
Token { kind: Space, char_start: 24220, char_end: 24221, byte_start: 24221, byte_end: 24222, column_start: 54, column_end: 55, line_start: 702, line_end: 702 }: " "
Token { kind: Text, char_start: 24221, char_end: 24223, byte_start: 24222, byte_end: 24224, column_start: 55, column_end: 57, line_start: 702, line_end: 702 }: to
Token { kind: Space, char_start: 24223, char_end: 24224, byte_start: 24224, byte_end: 24225, column_start: 57, column_end: 58, line_start: 702, line_end: 702 }: " "
Token { kind: Text, char_start: 24224, char_end: 24231, byte_start: 24225, byte_end: 24232, column_start: 58, column_end: 65, line_start: 702, line_end: 702 }: perform
Token { kind: Space, char_start: 24231, char_end: 24232, byte_start: 24232, byte_end: 24233, column_start: 65, column_end: 66, line_start: 702, line_end: 702 }: " "
Token { kind: Text, char_start: 24232, char_end: 24245, byte_start: 24233, byte_end: 24246, column_start: 66, column_end: 79, line_start: 702, line_end: 702 }: replacements.
Token { kind: Newline, char_start: 24245, char_end: 24246, byte_start: 24246, byte_end: 24247, column_start: 79, column_end: 1, line_start: 702, line_end: 703 }: "\n"
Token { kind: Text, char_start: 24246, char_end: 24249, byte_start: 24247, byte_end: 24250, column_start: 1, column_end: 4, line_start: 703, line_end: 703 }: For
Token { kind: Space, char_start: 24249, char_end: 24250, byte_start: 24250, byte_end: 24251, column_start: 4, column_end: 5, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24250, char_end: 24258, byte_start: 24251, byte_end: 24259, column_start: 5, column_end: 13, line_start: 703, line_end: 703 }: example,
Token { kind: Space, char_start: 24258, char_end: 24259, byte_start: 24259, byte_end: 24260, column_start: 13, column_end: 14, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24259, char_end: 24261, byte_start: 24260, byte_end: 24262, column_start: 14, column_end: 16, line_start: 703, line_end: 703 }: to
Token { kind: Space, char_start: 24261, char_end: 24262, byte_start: 24262, byte_end: 24263, column_start: 16, column_end: 17, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24262, char_end: 24269, byte_start: 24263, byte_end: 24270, column_start: 17, column_end: 24, line_start: 703, line_end: 703 }: replace
Token { kind: Space, char_start: 24269, char_end: 24270, byte_start: 24270, byte_end: 24271, column_start: 24, column_end: 25, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24270, char_end: 24275, byte_start: 24271, byte_end: 24276, column_start: 25, column_end: 30, line_start: 703, line_end: 703 }: "foo"
Token { kind: Space, char_start: 24275, char_end: 24276, byte_start: 24276, byte_end: 24277, column_start: 30, column_end: 31, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24276, char_end: 24280, byte_start: 24277, byte_end: 24281, column_start: 31, column_end: 35, line_start: 703, line_end: 703 }: with
Token { kind: Space, char_start: 24280, char_end: 24281, byte_start: 24281, byte_end: 24282, column_start: 35, column_end: 36, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24281, char_end: 24286, byte_start: 24282, byte_end: 24287, column_start: 36, column_end: 41, line_start: 703, line_end: 703 }: "bar"
Token { kind: Space, char_start: 24286, char_end: 24287, byte_start: 24287, byte_end: 24288, column_start: 41, column_end: 42, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24287, char_end: 24293, byte_start: 24288, byte_end: 24294, column_start: 42, column_end: 48, line_start: 703, line_end: 703 }: across
Token { kind: Space, char_start: 24293, char_end: 24294, byte_start: 24294, byte_end: 24295, column_start: 48, column_end: 49, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24294, char_end: 24297, byte_start: 24295, byte_end: 24298, column_start: 49, column_end: 52, line_start: 703, line_end: 703 }: all
Token { kind: Space, char_start: 24297, char_end: 24298, byte_start: 24298, byte_end: 24299, column_start: 52, column_end: 53, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24298, char_end: 24303, byte_start: 24299, byte_end: 24304, column_start: 53, column_end: 58, line_start: 703, line_end: 703 }: files
Token { kind: Space, char_start: 24303, char_end: 24304, byte_start: 24304, byte_end: 24305, column_start: 58, column_end: 59, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24304, char_end: 24306, byte_start: 24305, byte_end: 24307, column_start: 59, column_end: 61, line_start: 703, line_end: 703 }: in
Token { kind: Space, char_start: 24306, char_end: 24307, byte_start: 24307, byte_end: 24308, column_start: 61, column_end: 62, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24307, char_end: 24310, byte_start: 24308, byte_end: 24311, column_start: 62, column_end: 65, line_start: 703, line_end: 703 }: the
Token { kind: Space, char_start: 24310, char_end: 24311, byte_start: 24311, byte_end: 24312, column_start: 65, column_end: 66, line_start: 703, line_end: 703 }: " "
Token { kind: Text, char_start: 24311, char_end: 24318, byte_start: 24312, byte_end: 24319, column_start: 66, column_end: 73, line_start: 703, line_end: 703 }: current
Token { kind: Newline, char_start: 24318, char_end: 24319, byte_start: 24319, byte_end: 24320, column_start: 73, column_end: 1, line_start: 703, line_end: 704 }: "\n"
Token { kind: Text, char_start: 24319, char_end: 24329, byte_start: 24320, byte_end: 24330, column_start: 1, column_end: 11, line_start: 704, line_end: 704 }: directory:
Token { kind: Newline, char_start: 24329, char_end: 24330, byte_start: 24330, byte_end: 24331, column_start: 11, column_end: 1, line_start: 704, line_end: 705 }: "\n"
Token { kind: Newline, char_start: 24330, char_end: 24331, byte_start: 24331, byte_end: 24332, column_start: 1, column_end: 1, line_start: 705, line_end: 706 }: "\n"
Token { kind: CodeFence, char_start: 24331, char_end: 24334, byte_start: 24332, byte_end: 24335, column_start: 1, column_end: 4, line_start: 706, line_end: 706 }: ```
Token { kind: Newline, char_start: 24334, char_end: 24335, byte_start: 24335, byte_end: 24336, column_start: 4, column_end: 1, line_start: 706, line_end: 707 }: "\n"
Token { kind: Text, char_start: 24335, char_end: 24339, byte_start: 24336, byte_end: 24340, column_start: 1, column_end: 5, line_start: 707, line_end: 707 }: :Ack
Token { kind: Space, char_start: 24339, char_end: 24340, byte_start: 24340, byte_end: 24341, column_start: 5, column_end: 6, line_start: 707, line_end: 707 }: " "
Token { kind: Text, char_start: 24340, char_end: 24343, byte_start: 24341, byte_end: 24344, column_start: 6, column_end: 9, line_start: 707, line_end: 707 }: foo
Token { kind: Newline, char_start: 24343, char_end: 24344, byte_start: 24344, byte_end: 24345, column_start: 9, column_end: 1, line_start: 707, line_end: 708 }: "\n"
Token { kind: Text, char_start: 24344, char_end: 24349, byte_start: 24345, byte_end: 24350, column_start: 1, column_end: 6, line_start: 708, line_end: 708 }: :Acks
Token { kind: Space, char_start: 24349, char_end: 24350, byte_start: 24350, byte_end: 24351, column_start: 6, column_end: 7, line_start: 708, line_end: 708 }: " "
Token { kind: Text, char_start: 24350, char_end: 24359, byte_start: 24351, byte_end: 24360, column_start: 7, column_end: 16, line_start: 708, line_end: 708 }: /foo/bar/
Token { kind: Newline, char_start: 24359, char_end: 24360, byte_start: 24360, byte_end: 24361, column_start: 16, column_end: 1, line_start: 708, line_end: 709 }: "\n"
Token { kind: CodeFence, char_start: 24360, char_end: 24363, byte_start: 24361, byte_end: 24364, column_start: 1, column_end: 4, line_start: 709, line_end: 709 }: ```
Token { kind: Newline, char_start: 24363, char_end: 24364, byte_start: 24364, byte_end: 24365, column_start: 4, column_end: 1, line_start: 709, line_end: 710 }: "\n"
Token { kind: Newline, char_start: 24364, char_end: 24365, byte_start: 24365, byte_end: 24366, column_start: 1, column_end: 1, line_start: 710, line_end: 711 }: "\n"
Token { kind: Text, char_start: 24365, char_end: 24368, byte_start: 24366, byte_end: 24369, column_start: 1, column_end: 4, line_start: 711, line_end: 711 }: The
Token { kind: Space, char_start: 24368, char_end: 24369, byte_start: 24369, byte_end: 24370, column_start: 4, column_end: 5, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24369, char_end: 24376, byte_start: 24370, byte_end: 24377, column_start: 5, column_end: 12, line_start: 711, line_end: 711 }: pattern
Token { kind: Space, char_start: 24376, char_end: 24377, byte_start: 24377, byte_end: 24378, column_start: 12, column_end: 13, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24377, char_end: 24380, byte_start: 24378, byte_end: 24381, column_start: 13, column_end: 16, line_start: 711, line_end: 711 }: and
Token { kind: Space, char_start: 24380, char_end: 24381, byte_start: 24381, byte_end: 24382, column_start: 16, column_end: 17, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24381, char_end: 24392, byte_start: 24382, byte_end: 24393, column_start: 17, column_end: 28, line_start: 711, line_end: 711 }: replacement
Token { kind: Space, char_start: 24392, char_end: 24393, byte_start: 24393, byte_end: 24394, column_start: 28, column_end: 29, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24393, char_end: 24396, byte_start: 24394, byte_end: 24397, column_start: 29, column_end: 32, line_start: 711, line_end: 711 }: are
Token { kind: Space, char_start: 24396, char_end: 24397, byte_start: 24397, byte_end: 24398, column_start: 32, column_end: 33, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24397, char_end: 24403, byte_start: 24398, byte_end: 24404, column_start: 33, column_end: 39, line_start: 711, line_end: 711 }: passed
Token { kind: Space, char_start: 24403, char_end: 24404, byte_start: 24404, byte_end: 24405, column_start: 39, column_end: 40, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24404, char_end: 24411, byte_start: 24405, byte_end: 24412, column_start: 40, column_end: 47, line_start: 711, line_end: 711 }: through
Token { kind: Space, char_start: 24411, char_end: 24412, byte_start: 24412, byte_end: 24413, column_start: 47, column_end: 48, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24412, char_end: 24421, byte_start: 24413, byte_end: 24422, column_start: 48, column_end: 57, line_start: 711, line_end: 711 }: literally
Token { kind: Space, char_start: 24421, char_end: 24422, byte_start: 24422, byte_end: 24423, column_start: 57, column_end: 58, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24422, char_end: 24424, byte_start: 24423, byte_end: 24425, column_start: 58, column_end: 60, line_start: 711, line_end: 711 }: to
Token { kind: Space, char_start: 24424, char_end: 24425, byte_start: 24425, byte_end: 24426, column_start: 60, column_end: 61, line_start: 711, line_end: 711 }: " "
Token { kind: Text, char_start: 24425, char_end: 24430, byte_start: 24426, byte_end: 24431, column_start: 61, column_end: 66, line_start: 711, line_end: 711 }: Vim's
Token { kind: Newline, char_start: 24430, char_end: 24431, byte_start: 24431, byte_end: 24432, column_start: 66, column_end: 1, line_start: 711, line_end: 712 }: "\n"
Token { kind: Bar, char_start: 24431, char_end: 24432, byte_start: 24432, byte_end: 24433, column_start: 1, column_end: 2, line_start: 712, line_end: 712 }: |
Token { kind: Text, char_start: 24432, char_end: 24443, byte_start: 24433, byte_end: 24444, column_start: 2, column_end: 13, line_start: 712, line_end: 712 }: :substitute
Token { kind: Bar, char_start: 24443, char_end: 24444, byte_start: 24444, byte_end: 24445, column_start: 13, column_end: 14, line_start: 712, line_end: 712 }: |
Token { kind: Space, char_start: 24444, char_end: 24445, byte_start: 24445, byte_end: 24446, column_start: 14, column_end: 15, line_start: 712, line_end: 712 }: " "
Token { kind: Text, char_start: 24445, char_end: 24453, byte_start: 24446, byte_end: 24454, column_start: 15, column_end: 23, line_start: 712, line_end: 712 }: command,
Token { kind: Space, char_start: 24453, char_end: 24454, byte_start: 24454, byte_end: 24455, column_start: 23, column_end: 24, line_start: 712, line_end: 712 }: " "
Token { kind: Text, char_start: 24454, char_end: 24464, byte_start: 24455, byte_end: 24465, column_start: 24, column_end: 34, line_start: 712, line_end: 712 }: preserving
Token { kind: Space, char_start: 24464, char_end: 24465, byte_start: 24465, byte_end: 24466, column_start: 34, column_end: 35, line_start: 712, line_end: 712 }: " "
Token { kind: Text, char_start: 24465, char_end: 24468, byte_start: 24466, byte_end: 24469, column_start: 35, column_end: 38, line_start: 712, line_end: 712 }: all
Token { kind: Space, char_start: 24468, char_end: 24469, byte_start: 24469, byte_end: 24470, column_start: 38, column_end: 39, line_start: 712, line_end: 712 }: " "
Token { kind: Text, char_start: 24469, char_end: 24479, byte_start: 24470, byte_end: 24480, column_start: 39, column_end: 49, line_start: 712, line_end: 712 }: characters
Token { kind: Space, char_start: 24479, char_end: 24480, byte_start: 24480, byte_end: 24481, column_start: 49, column_end: 50, line_start: 712, line_end: 712 }: " "
Token { kind: Text, char_start: 24480, char_end: 24483, byte_start: 24481, byte_end: 24484, column_start: 50, column_end: 53, line_start: 712, line_end: 712 }: and
Token { kind: Space, char_start: 24483, char_end: 24484, byte_start: 24484, byte_end: 24485, column_start: 53, column_end: 54, line_start: 712, line_end: 712 }: " "
Token { kind: Text, char_start: 24484, char_end: 24492, byte_start: 24485, byte_end: 24493, column_start: 54, column_end: 62, line_start: 712, line_end: 712 }: escapes,
Token { kind: Newline, char_start: 24492, char_end: 24493, byte_start: 24493, byte_end: 24494, column_start: 62, column_end: 1, line_start: 712, line_end: 713 }: "\n"
Token { kind: Text, char_start: 24493, char_end: 24502, byte_start: 24494, byte_end: 24503, column_start: 1, column_end: 10, line_start: 713, line_end: 713 }: including
Token { kind: Space, char_start: 24502, char_end: 24503, byte_start: 24503, byte_end: 24504, column_start: 10, column_end: 11, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24503, char_end: 24513, byte_start: 24504, byte_end: 24514, column_start: 11, column_end: 21, line_start: 713, line_end: 713 }: references
Token { kind: Space, char_start: 24513, char_end: 24514, byte_start: 24514, byte_end: 24515, column_start: 21, column_end: 22, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24514, char_end: 24516, byte_start: 24515, byte_end: 24517, column_start: 22, column_end: 24, line_start: 713, line_end: 713 }: to
Token { kind: Space, char_start: 24516, char_end: 24517, byte_start: 24517, byte_end: 24518, column_start: 24, column_end: 25, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24517, char_end: 24524, byte_start: 24518, byte_end: 24525, column_start: 25, column_end: 32, line_start: 713, line_end: 713 }: matches
Token { kind: Space, char_start: 24524, char_end: 24525, byte_start: 24525, byte_end: 24526, column_start: 32, column_end: 33, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24525, char_end: 24527, byte_start: 24526, byte_end: 24528, column_start: 33, column_end: 35, line_start: 713, line_end: 713 }: in
Token { kind: Space, char_start: 24527, char_end: 24528, byte_start: 24528, byte_end: 24529, column_start: 35, column_end: 36, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24528, char_end: 24531, byte_start: 24529, byte_end: 24532, column_start: 36, column_end: 39, line_start: 713, line_end: 713 }: the
Token { kind: Space, char_start: 24531, char_end: 24532, byte_start: 24532, byte_end: 24533, column_start: 39, column_end: 40, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24532, char_end: 24540, byte_start: 24533, byte_end: 24541, column_start: 40, column_end: 48, line_start: 713, line_end: 713 }: pattern.
Token { kind: Space, char_start: 24540, char_end: 24541, byte_start: 24541, byte_end: 24542, column_start: 48, column_end: 49, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24541, char_end: 24544, byte_start: 24542, byte_end: 24545, column_start: 49, column_end: 52, line_start: 713, line_end: 713 }: For
Token { kind: Space, char_start: 24544, char_end: 24545, byte_start: 24545, byte_end: 24546, column_start: 52, column_end: 53, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24545, char_end: 24553, byte_start: 24546, byte_end: 24554, column_start: 53, column_end: 61, line_start: 713, line_end: 713 }: example,
Token { kind: Space, char_start: 24553, char_end: 24554, byte_start: 24554, byte_end: 24555, column_start: 61, column_end: 62, line_start: 713, line_end: 713 }: " "
Token { kind: Text, char_start: 24554, char_end: 24557, byte_start: 24555, byte_end: 24558, column_start: 62, column_end: 65, line_start: 713, line_end: 713 }: the
Token { kind: Newline, char_start: 24557, char_end: 24558, byte_start: 24558, byte_end: 24559, column_start: 65, column_end: 1, line_start: 713, line_end: 714 }: "\n"
Token { kind: Text, char_start: 24558, char_end: 24567, byte_start: 24559, byte_end: 24568, column_start: 1, column_end: 10, line_start: 714, line_end: 714 }: following
Token { kind: Space, char_start: 24567, char_end: 24568, byte_start: 24568, byte_end: 24569, column_start: 10, column_end: 11, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24568, char_end: 24573, byte_start: 24569, byte_end: 24574, column_start: 11, column_end: 16, line_start: 714, line_end: 714 }: could
Token { kind: Space, char_start: 24573, char_end: 24574, byte_start: 24574, byte_end: 24575, column_start: 16, column_end: 17, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24574, char_end: 24576, byte_start: 24575, byte_end: 24577, column_start: 17, column_end: 19, line_start: 714, line_end: 714 }: be
Token { kind: Space, char_start: 24576, char_end: 24577, byte_start: 24577, byte_end: 24578, column_start: 19, column_end: 20, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24577, char_end: 24581, byte_start: 24578, byte_end: 24582, column_start: 20, column_end: 24, line_start: 714, line_end: 714 }: used
Token { kind: Space, char_start: 24581, char_end: 24582, byte_start: 24582, byte_end: 24583, column_start: 24, column_end: 25, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24582, char_end: 24584, byte_start: 24583, byte_end: 24585, column_start: 25, column_end: 27, line_start: 714, line_end: 714 }: to
Token { kind: Space, char_start: 24584, char_end: 24585, byte_start: 24585, byte_end: 24586, column_start: 27, column_end: 28, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24585, char_end: 24589, byte_start: 24586, byte_end: 24590, column_start: 28, column_end: 32, line_start: 714, line_end: 714 }: swap
Token { kind: Space, char_start: 24589, char_end: 24590, byte_start: 24590, byte_end: 24591, column_start: 32, column_end: 33, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24590, char_end: 24593, byte_start: 24591, byte_end: 24594, column_start: 33, column_end: 36, line_start: 714, line_end: 714 }: the
Token { kind: Space, char_start: 24593, char_end: 24594, byte_start: 24594, byte_end: 24595, column_start: 36, column_end: 37, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24594, char_end: 24599, byte_start: 24595, byte_end: 24600, column_start: 37, column_end: 42, line_start: 714, line_end: 714 }: order
Token { kind: Space, char_start: 24599, char_end: 24600, byte_start: 24600, byte_end: 24601, column_start: 42, column_end: 43, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24600, char_end: 24602, byte_start: 24601, byte_end: 24603, column_start: 43, column_end: 45, line_start: 714, line_end: 714 }: of
Token { kind: Space, char_start: 24602, char_end: 24603, byte_start: 24603, byte_end: 24604, column_start: 45, column_end: 46, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24603, char_end: 24611, byte_start: 24604, byte_end: 24612, column_start: 46, column_end: 54, line_start: 714, line_end: 714 }: "foo123"
Token { kind: Space, char_start: 24611, char_end: 24612, byte_start: 24612, byte_end: 24613, column_start: 54, column_end: 55, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24612, char_end: 24615, byte_start: 24613, byte_end: 24616, column_start: 55, column_end: 58, line_start: 714, line_end: 714 }: and
Token { kind: Space, char_start: 24615, char_end: 24616, byte_start: 24616, byte_end: 24617, column_start: 58, column_end: 59, line_start: 714, line_end: 714 }: " "
Token { kind: Text, char_start: 24616, char_end: 24622, byte_start: 24617, byte_end: 24623, column_start: 59, column_end: 65, line_start: 714, line_end: 714 }: "bar":
Token { kind: Newline, char_start: 24622, char_end: 24623, byte_start: 24623, byte_end: 24624, column_start: 65, column_end: 1, line_start: 714, line_end: 715 }: "\n"
Token { kind: Newline, char_start: 24623, char_end: 24624, byte_start: 24624, byte_end: 24625, column_start: 1, column_end: 1, line_start: 715, line_end: 716 }: "\n"
Token { kind: CodeFence, char_start: 24624, char_end: 24627, byte_start: 24625, byte_end: 24628, column_start: 1, column_end: 4, line_start: 716, line_end: 716 }: ```
Token { kind: Newline, char_start: 24627, char_end: 24628, byte_start: 24628, byte_end: 24629, column_start: 4, column_end: 1, line_start: 716, line_end: 717 }: "\n"
Token { kind: Text, char_start: 24628, char_end: 24633, byte_start: 24629, byte_end: 24634, column_start: 1, column_end: 6, line_start: 717, line_end: 717 }: :Acks
Token { kind: Space, char_start: 24633, char_end: 24634, byte_start: 24634, byte_end: 24635, column_start: 6, column_end: 7, line_start: 717, line_end: 717 }: " "
Token { kind: Text, char_start: 24634, char_end: 24637, byte_start: 24635, byte_end: 24638, column_start: 7, column_end: 10, line_start: 717, line_end: 717 }: /\v
Token { kind: Lparen, char_start: 24637, char_end: 24638, byte_start: 24638, byte_end: 24639, column_start: 10, column_end: 11, line_start: 717, line_end: 717 }: (
Token { kind: Text, char_start: 24638, char_end: 24644, byte_start: 24639, byte_end: 24645, column_start: 11, column_end: 17, line_start: 717, line_end: 717 }: foo\d+
Token { kind: Rparen, char_start: 24644, char_end: 24645, byte_start: 24645, byte_end: 24646, column_start: 17, column_end: 18, line_start: 717, line_end: 717 }: )
Token { kind: Lparen, char_start: 24645, char_end: 24646, byte_start: 24646, byte_end: 24647, column_start: 18, column_end: 19, line_start: 717, line_end: 717 }: (
Token { kind: Text, char_start: 24646, char_end: 24649, byte_start: 24647, byte_end: 24650, column_start: 19, column_end: 22, line_start: 717, line_end: 717 }: bar
Token { kind: Rparen, char_start: 24649, char_end: 24650, byte_start: 24650, byte_end: 24651, column_start: 22, column_end: 23, line_start: 717, line_end: 717 }: )
Token { kind: Text, char_start: 24650, char_end: 24656, byte_start: 24651, byte_end: 24657, column_start: 23, column_end: 29, line_start: 717, line_end: 717 }: /\2\1/
Token { kind: Newline, char_start: 24656, char_end: 24657, byte_start: 24657, byte_end: 24658, column_start: 29, column_end: 1, line_start: 717, line_end: 718 }: "\n"
Token { kind: CodeFence, char_start: 24657, char_end: 24660, byte_start: 24658, byte_end: 24661, column_start: 1, column_end: 4, line_start: 718, line_end: 718 }: ```
Token { kind: Newline, char_start: 24660, char_end: 24661, byte_start: 24661, byte_end: 24662, column_start: 4, column_end: 1, line_start: 718, line_end: 719 }: "\n"
Token { kind: Newline, char_start: 24661, char_end: 24662, byte_start: 24662, byte_end: 24663, column_start: 1, column_end: 1, line_start: 719, line_end: 720 }: "\n"
Token { kind: At, char_start: 24662, char_end: 24663, byte_start: 24663, byte_end: 24664, column_start: 1, column_end: 2, line_start: 720, line_end: 720 }: @
Token { kind: Text, char_start: 24663, char_end: 24670, byte_start: 24664, byte_end: 24671, column_start: 2, column_end: 9, line_start: 720, line_end: 720 }: command
Token { kind: Space, char_start: 24670, char_end: 24671, byte_start: 24671, byte_end: 24672, column_start: 9, column_end: 10, line_start: 720, line_end: 720 }: " "
Token { kind: Text, char_start: 24671, char_end: 24677, byte_start: 24672, byte_end: 24678, column_start: 10, column_end: 16, line_start: 720, line_end: 720 }: :Lacks
Token { kind: Space, char_start: 24677, char_end: 24678, byte_start: 24678, byte_end: 24679, column_start: 16, column_end: 17, line_start: 720, line_end: 720 }: " "
Token { kind: Text, char_start: 24678, char_end: 24703, byte_start: 24679, byte_end: 24704, column_start: 17, column_end: 42, line_start: 720, line_end: 720 }: /{pattern}/{replacement}/
Token { kind: Newline, char_start: 24703, char_end: 24704, byte_start: 24704, byte_end: 24705, column_start: 42, column_end: 1, line_start: 720, line_end: 721 }: "\n"
Token { kind: Newline, char_start: 24704, char_end: 24705, byte_start: 24705, byte_end: 24706, column_start: 1, column_end: 1, line_start: 721, line_end: 722 }: "\n"
Token { kind: Text, char_start: 24705, char_end: 24710, byte_start: 24706, byte_end: 24711, column_start: 1, column_end: 6, line_start: 722, line_end: 722 }: Takes
Token { kind: Space, char_start: 24710, char_end: 24711, byte_start: 24711, byte_end: 24712, column_start: 6, column_end: 7, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24711, char_end: 24714, byte_start: 24712, byte_end: 24715, column_start: 7, column_end: 10, line_start: 722, line_end: 722 }: all
Token { kind: Space, char_start: 24714, char_end: 24715, byte_start: 24715, byte_end: 24716, column_start: 10, column_end: 11, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24715, char_end: 24717, byte_start: 24716, byte_end: 24718, column_start: 11, column_end: 13, line_start: 722, line_end: 722 }: of
Token { kind: Space, char_start: 24717, char_end: 24718, byte_start: 24718, byte_end: 24719, column_start: 13, column_end: 14, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24718, char_end: 24721, byte_start: 24719, byte_end: 24722, column_start: 14, column_end: 17, line_start: 722, line_end: 722 }: the
Token { kind: Space, char_start: 24721, char_end: 24722, byte_start: 24722, byte_end: 24723, column_start: 17, column_end: 18, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24722, char_end: 24727, byte_start: 24723, byte_end: 24728, column_start: 18, column_end: 23, line_start: 722, line_end: 722 }: files
Token { kind: Space, char_start: 24727, char_end: 24728, byte_start: 24728, byte_end: 24729, column_start: 23, column_end: 24, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24728, char_end: 24730, byte_start: 24729, byte_end: 24731, column_start: 24, column_end: 26, line_start: 722, line_end: 722 }: in
Token { kind: Space, char_start: 24730, char_end: 24731, byte_start: 24731, byte_end: 24732, column_start: 26, column_end: 27, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24731, char_end: 24734, byte_start: 24732, byte_end: 24735, column_start: 27, column_end: 30, line_start: 722, line_end: 722 }: the
Token { kind: Space, char_start: 24734, char_end: 24735, byte_start: 24735, byte_end: 24736, column_start: 30, column_end: 31, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24735, char_end: 24742, byte_start: 24736, byte_end: 24743, column_start: 31, column_end: 38, line_start: 722, line_end: 722 }: current
Token { kind: Space, char_start: 24742, char_end: 24743, byte_start: 24743, byte_end: 24744, column_start: 38, column_end: 39, line_start: 722, line_end: 722 }: " "
Token { kind: Bar, char_start: 24743, char_end: 24744, byte_start: 24744, byte_end: 24745, column_start: 39, column_end: 40, line_start: 722, line_end: 722 }: |
Token { kind: Text, char_start: 24744, char_end: 24752, byte_start: 24745, byte_end: 24753, column_start: 40, column_end: 48, line_start: 722, line_end: 722 }: location
Token { kind: Hyphen, char_start: 24752, char_end: 24753, byte_start: 24753, byte_end: 24754, column_start: 48, column_end: 49, line_start: 722, line_end: 722 }: -
Token { kind: Text, char_start: 24753, char_end: 24757, byte_start: 24754, byte_end: 24758, column_start: 49, column_end: 53, line_start: 722, line_end: 722 }: list
Token { kind: Bar, char_start: 24757, char_end: 24758, byte_start: 24758, byte_end: 24759, column_start: 53, column_end: 54, line_start: 722, line_end: 722 }: |
Token { kind: Space, char_start: 24758, char_end: 24759, byte_start: 24759, byte_end: 24760, column_start: 54, column_end: 55, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24759, char_end: 24762, byte_start: 24760, byte_end: 24763, column_start: 55, column_end: 58, line_start: 722, line_end: 722 }: and
Token { kind: Space, char_start: 24762, char_end: 24763, byte_start: 24763, byte_end: 24764, column_start: 58, column_end: 59, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24763, char_end: 24771, byte_start: 24764, byte_end: 24772, column_start: 59, column_end: 67, line_start: 722, line_end: 722 }: performs
Token { kind: Space, char_start: 24771, char_end: 24772, byte_start: 24772, byte_end: 24773, column_start: 67, column_end: 68, line_start: 722, line_end: 722 }: " "
Token { kind: Text, char_start: 24772, char_end: 24773, byte_start: 24773, byte_end: 24774, column_start: 68, column_end: 69, line_start: 722, line_end: 722 }: a
Token { kind: Newline, char_start: 24773, char_end: 24774, byte_start: 24774, byte_end: 24775, column_start: 69, column_end: 1, line_start: 722, line_end: 723 }: "\n"
Token { kind: Text, char_start: 24774, char_end: 24786, byte_start: 24775, byte_end: 24787, column_start: 1, column_end: 13, line_start: 723, line_end: 723 }: substitution
Token { kind: Space, char_start: 24786, char_end: 24787, byte_start: 24787, byte_end: 24788, column_start: 13, column_end: 14, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24787, char_end: 24789, byte_start: 24788, byte_end: 24790, column_start: 14, column_end: 16, line_start: 723, line_end: 723 }: of
Token { kind: Space, char_start: 24789, char_end: 24790, byte_start: 24790, byte_end: 24791, column_start: 16, column_end: 17, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24790, char_end: 24793, byte_start: 24791, byte_end: 24794, column_start: 17, column_end: 20, line_start: 723, line_end: 723 }: all
Token { kind: Space, char_start: 24793, char_end: 24794, byte_start: 24794, byte_end: 24795, column_start: 20, column_end: 21, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24794, char_end: 24803, byte_start: 24795, byte_end: 24804, column_start: 21, column_end: 30, line_start: 723, line_end: 723 }: instances
Token { kind: Space, char_start: 24803, char_end: 24804, byte_start: 24804, byte_end: 24805, column_start: 30, column_end: 31, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24804, char_end: 24806, byte_start: 24805, byte_end: 24807, column_start: 31, column_end: 33, line_start: 723, line_end: 723 }: of
Token { kind: Space, char_start: 24806, char_end: 24807, byte_start: 24807, byte_end: 24808, column_start: 33, column_end: 34, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24807, char_end: 24816, byte_start: 24808, byte_end: 24817, column_start: 34, column_end: 43, line_start: 723, line_end: 723 }: {pattern}
Token { kind: Space, char_start: 24816, char_end: 24817, byte_start: 24817, byte_end: 24818, column_start: 43, column_end: 44, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24817, char_end: 24819, byte_start: 24818, byte_end: 24820, column_start: 44, column_end: 46, line_start: 723, line_end: 723 }: by
Token { kind: Space, char_start: 24819, char_end: 24820, byte_start: 24820, byte_end: 24821, column_start: 46, column_end: 47, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24820, char_end: 24834, byte_start: 24821, byte_end: 24835, column_start: 47, column_end: 61, line_start: 723, line_end: 723 }: {replacement}.
Token { kind: Space, char_start: 24834, char_end: 24835, byte_start: 24835, byte_end: 24836, column_start: 61, column_end: 62, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24835, char_end: 24839, byte_start: 24836, byte_end: 24840, column_start: 62, column_end: 66, line_start: 723, line_end: 723 }: This
Token { kind: Space, char_start: 24839, char_end: 24840, byte_start: 24840, byte_end: 24841, column_start: 66, column_end: 67, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24840, char_end: 24842, byte_start: 24841, byte_end: 24843, column_start: 67, column_end: 69, line_start: 723, line_end: 723 }: is
Token { kind: Space, char_start: 24842, char_end: 24843, byte_start: 24843, byte_end: 24844, column_start: 69, column_end: 70, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24843, char_end: 24845, byte_start: 24844, byte_end: 24846, column_start: 70, column_end: 72, line_start: 723, line_end: 723 }: an
Token { kind: Space, char_start: 24845, char_end: 24846, byte_start: 24846, byte_end: 24847, column_start: 72, column_end: 73, line_start: 723, line_end: 723 }: " "
Token { kind: Text, char_start: 24846, char_end: 24852, byte_start: 24847, byte_end: 24853, column_start: 73, column_end: 79, line_start: 723, line_end: 723 }: analog
Token { kind: Newline, char_start: 24852, char_end: 24853, byte_start: 24853, byte_end: 24854, column_start: 79, column_end: 1, line_start: 723, line_end: 724 }: "\n"
Token { kind: Text, char_start: 24853, char_end: 24855, byte_start: 24854, byte_end: 24856, column_start: 1, column_end: 3, line_start: 724, line_end: 724 }: of
Token { kind: Space, char_start: 24855, char_end: 24856, byte_start: 24856, byte_end: 24857, column_start: 3, column_end: 4, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24856, char_end: 24859, byte_start: 24857, byte_end: 24860, column_start: 4, column_end: 7, line_start: 724, line_end: 724 }: the
Token { kind: Space, char_start: 24859, char_end: 24860, byte_start: 24860, byte_end: 24861, column_start: 7, column_end: 8, line_start: 724, line_end: 724 }: " "
Token { kind: Bar, char_start: 24860, char_end: 24861, byte_start: 24861, byte_end: 24862, column_start: 8, column_end: 9, line_start: 724, line_end: 724 }: |
Token { kind: Text, char_start: 24861, char_end: 24866, byte_start: 24862, byte_end: 24867, column_start: 9, column_end: 14, line_start: 724, line_end: 724 }: :Acks
Token { kind: Bar, char_start: 24866, char_end: 24867, byte_start: 24867, byte_end: 24868, column_start: 14, column_end: 15, line_start: 724, line_end: 724 }: |
Token { kind: Space, char_start: 24867, char_end: 24868, byte_start: 24868, byte_end: 24869, column_start: 15, column_end: 16, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24868, char_end: 24876, byte_start: 24869, byte_end: 24877, column_start: 16, column_end: 24, line_start: 724, line_end: 724 }: command,
Token { kind: Space, char_start: 24876, char_end: 24877, byte_start: 24877, byte_end: 24878, column_start: 24, column_end: 25, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24877, char_end: 24880, byte_start: 24878, byte_end: 24881, column_start: 25, column_end: 28, line_start: 724, line_end: 724 }: but
Token { kind: Space, char_start: 24880, char_end: 24881, byte_start: 24881, byte_end: 24882, column_start: 28, column_end: 29, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24881, char_end: 24889, byte_start: 24882, byte_end: 24890, column_start: 29, column_end: 37, line_start: 724, line_end: 724 }: operates
Token { kind: Space, char_start: 24889, char_end: 24890, byte_start: 24890, byte_end: 24891, column_start: 37, column_end: 38, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24890, char_end: 24892, byte_start: 24891, byte_end: 24893, column_start: 38, column_end: 40, line_start: 724, line_end: 724 }: on
Token { kind: Space, char_start: 24892, char_end: 24893, byte_start: 24893, byte_end: 24894, column_start: 40, column_end: 41, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24893, char_end: 24896, byte_start: 24894, byte_end: 24897, column_start: 41, column_end: 44, line_start: 724, line_end: 724 }: the
Token { kind: Space, char_start: 24896, char_end: 24897, byte_start: 24897, byte_end: 24898, column_start: 44, column_end: 45, line_start: 724, line_end: 724 }: " "
Token { kind: Bar, char_start: 24897, char_end: 24898, byte_start: 24898, byte_end: 24899, column_start: 45, column_end: 46, line_start: 724, line_end: 724 }: |
Token { kind: Text, char_start: 24898, char_end: 24906, byte_start: 24899, byte_end: 24907, column_start: 46, column_end: 54, line_start: 724, line_end: 724 }: location
Token { kind: Hyphen, char_start: 24906, char_end: 24907, byte_start: 24907, byte_end: 24908, column_start: 54, column_end: 55, line_start: 724, line_end: 724 }: -
Token { kind: Text, char_start: 24907, char_end: 24911, byte_start: 24908, byte_end: 24912, column_start: 55, column_end: 59, line_start: 724, line_end: 724 }: list
Token { kind: Bar, char_start: 24911, char_end: 24912, byte_start: 24912, byte_end: 24913, column_start: 59, column_end: 60, line_start: 724, line_end: 724 }: |
Token { kind: Space, char_start: 24912, char_end: 24913, byte_start: 24913, byte_end: 24914, column_start: 60, column_end: 61, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24913, char_end: 24920, byte_start: 24914, byte_end: 24921, column_start: 61, column_end: 68, line_start: 724, line_end: 724 }: instead
Token { kind: Space, char_start: 24920, char_end: 24921, byte_start: 24921, byte_end: 24922, column_start: 68, column_end: 69, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24921, char_end: 24923, byte_start: 24922, byte_end: 24924, column_start: 69, column_end: 71, line_start: 724, line_end: 724 }: of
Token { kind: Space, char_start: 24923, char_end: 24924, byte_start: 24924, byte_end: 24925, column_start: 71, column_end: 72, line_start: 724, line_end: 724 }: " "
Token { kind: Text, char_start: 24924, char_end: 24927, byte_start: 24925, byte_end: 24928, column_start: 72, column_end: 75, line_start: 724, line_end: 724 }: the
Token { kind: Newline, char_start: 24927, char_end: 24928, byte_start: 24928, byte_end: 24929, column_start: 75, column_end: 1, line_start: 724, line_end: 725 }: "\n"
Token { kind: Bar, char_start: 24928, char_end: 24929, byte_start: 24929, byte_end: 24930, column_start: 1, column_end: 2, line_start: 725, line_end: 725 }: |
Token { kind: Text, char_start: 24929, char_end: 24937, byte_start: 24930, byte_end: 24938, column_start: 2, column_end: 10, line_start: 725, line_end: 725 }: quickfix
Token { kind: Bar, char_start: 24937, char_end: 24938, byte_start: 24938, byte_end: 24939, column_start: 10, column_end: 11, line_start: 725, line_end: 725 }: |
Token { kind: Space, char_start: 24938, char_end: 24939, byte_start: 24939, byte_end: 24940, column_start: 11, column_end: 12, line_start: 725, line_end: 725 }: " "
Token { kind: Text, char_start: 24939, char_end: 24947, byte_start: 24940, byte_end: 24948, column_start: 12, column_end: 20, line_start: 725, line_end: 725 }: listing.
Token { kind: Newline, char_start: 24947, char_end: 24948, byte_start: 24948, byte_end: 24949, column_start: 20, column_end: 1, line_start: 725, line_end: 726 }: "\n"
Token { kind: Newline, char_start: 24948, char_end: 24949, byte_start: 24949, byte_end: 24950, column_start: 1, column_end: 1, line_start: 726, line_end: 727 }: "\n"
Token { kind: At, char_start: 24949, char_end: 24950, byte_start: 24950, byte_end: 24951, column_start: 1, column_end: 2, line_start: 727, line_end: 727 }: @
Token { kind: Text, char_start: 24950, char_end: 24957, byte_start: 24951, byte_end: 24958, column_start: 2, column_end: 9, line_start: 727, line_end: 727 }: command
Token { kind: Space, char_start: 24957, char_end: 24958, byte_start: 24958, byte_end: 24959, column_start: 9, column_end: 10, line_start: 727, line_end: 727 }: " "
Token { kind: Text, char_start: 24958, char_end: 24976, byte_start: 24959, byte_end: 24977, column_start: 10, column_end: 28, line_start: 727, line_end: 727 }: :FerretCancelAsync
Token { kind: Newline, char_start: 24976, char_end: 24977, byte_start: 24977, byte_end: 24978, column_start: 28, column_end: 1, line_start: 727, line_end: 728 }: "\n"
Token { kind: Newline, char_start: 24977, char_end: 24978, byte_start: 24978, byte_end: 24979, column_start: 1, column_end: 1, line_start: 728, line_end: 729 }: "\n"
Token { kind: Text, char_start: 24978, char_end: 24985, byte_start: 24979, byte_end: 24986, column_start: 1, column_end: 8, line_start: 729, line_end: 729 }: Cancels
Token { kind: Space, char_start: 24985, char_end: 24986, byte_start: 24986, byte_end: 24987, column_start: 8, column_end: 9, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 24986, char_end: 24989, byte_start: 24987, byte_end: 24990, column_start: 9, column_end: 12, line_start: 729, line_end: 729 }: any
Token { kind: Space, char_start: 24989, char_end: 24990, byte_start: 24990, byte_end: 24991, column_start: 12, column_end: 13, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 24990, char_end: 25002, byte_start: 24991, byte_end: 25003, column_start: 13, column_end: 25, line_start: 729, line_end: 729 }: asynchronous
Token { kind: Space, char_start: 25002, char_end: 25003, byte_start: 25003, byte_end: 25004, column_start: 25, column_end: 26, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25003, char_end: 25009, byte_start: 25004, byte_end: 25010, column_start: 26, column_end: 32, line_start: 729, line_end: 729 }: search
Token { kind: Space, char_start: 25009, char_end: 25010, byte_start: 25010, byte_end: 25011, column_start: 32, column_end: 33, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25010, char_end: 25014, byte_start: 25011, byte_end: 25015, column_start: 33, column_end: 37, line_start: 729, line_end: 729 }: that
Token { kind: Space, char_start: 25014, char_end: 25015, byte_start: 25015, byte_end: 25016, column_start: 37, column_end: 38, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25015, char_end: 25018, byte_start: 25016, byte_end: 25019, column_start: 38, column_end: 41, line_start: 729, line_end: 729 }: may
Token { kind: Space, char_start: 25018, char_end: 25019, byte_start: 25019, byte_end: 25020, column_start: 41, column_end: 42, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25019, char_end: 25021, byte_start: 25020, byte_end: 25022, column_start: 42, column_end: 44, line_start: 729, line_end: 729 }: be
Token { kind: Space, char_start: 25021, char_end: 25022, byte_start: 25022, byte_end: 25023, column_start: 44, column_end: 45, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25022, char_end: 25024, byte_start: 25023, byte_end: 25025, column_start: 45, column_end: 47, line_start: 729, line_end: 729 }: in
Token { kind: Space, char_start: 25024, char_end: 25025, byte_start: 25025, byte_end: 25026, column_start: 47, column_end: 48, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25025, char_end: 25033, byte_start: 25026, byte_end: 25034, column_start: 48, column_end: 56, line_start: 729, line_end: 729 }: progress
Token { kind: Space, char_start: 25033, char_end: 25034, byte_start: 25034, byte_end: 25035, column_start: 56, column_end: 57, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25034, char_end: 25036, byte_start: 25035, byte_end: 25037, column_start: 57, column_end: 59, line_start: 729, line_end: 729 }: in
Token { kind: Space, char_start: 25036, char_end: 25037, byte_start: 25037, byte_end: 25038, column_start: 59, column_end: 60, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25037, char_end: 25040, byte_start: 25038, byte_end: 25041, column_start: 60, column_end: 63, line_start: 729, line_end: 729 }: the
Token { kind: Space, char_start: 25040, char_end: 25041, byte_start: 25041, byte_end: 25042, column_start: 63, column_end: 64, line_start: 729, line_end: 729 }: " "
Token { kind: Text, char_start: 25041, char_end: 25052, byte_start: 25042, byte_end: 25053, column_start: 64, column_end: 75, line_start: 729, line_end: 729 }: background.
Token { kind: Newline, char_start: 25052, char_end: 25053, byte_start: 25053, byte_end: 25054, column_start: 75, column_end: 1, line_start: 729, line_end: 730 }: "\n"
Token { kind: Newline, char_start: 25053, char_end: 25054, byte_start: 25054, byte_end: 25055, column_start: 1, column_end: 1, line_start: 730, line_end: 731 }: "\n"
Token { kind: At, char_start: 25054, char_end: 25055, byte_start: 25055, byte_end: 25056, column_start: 1, column_end: 2, line_start: 731, line_end: 731 }: @
Token { kind: Text, char_start: 25055, char_end: 25062, byte_start: 25056, byte_end: 25063, column_start: 2, column_end: 9, line_start: 731, line_end: 731 }: command
Token { kind: Space, char_start: 25062, char_end: 25063, byte_start: 25063, byte_end: 25064, column_start: 9, column_end: 10, line_start: 731, line_end: 731 }: " "
Token { kind: Text, char_start: 25063, char_end: 25079, byte_start: 25064, byte_end: 25080, column_start: 10, column_end: 26, line_start: 731, line_end: 731 }: :FerretPullAsync
Token { kind: Newline, char_start: 25079, char_end: 25080, byte_start: 25080, byte_end: 25081, column_start: 26, column_end: 1, line_start: 731, line_end: 732 }: "\n"
Token { kind: Newline, char_start: 25080, char_end: 25081, byte_start: 25081, byte_end: 25082, column_start: 1, column_end: 1, line_start: 732, line_end: 733 }: "\n"
Token { kind: Text, char_start: 25081, char_end: 25088, byte_start: 25082, byte_end: 25089, column_start: 1, column_end: 8, line_start: 733, line_end: 733 }: Eagerly
Token { kind: Space, char_start: 25088, char_end: 25089, byte_start: 25089, byte_end: 25090, column_start: 8, column_end: 9, line_start: 733, line_end: 733 }: " "
Token { kind: Text, char_start: 25089, char_end: 25098, byte_start: 25090, byte_end: 25099, column_start: 9, column_end: 18, line_start: 733, line_end: 733 }: populates
Token { kind: Space, char_start: 25098, char_end: 25099, byte_start: 25099, byte_end: 25100, column_start: 18, column_end: 19, line_start: 733, line_end: 733 }: " "
Token { kind: Text, char_start: 25099, char_end: 25102, byte_start: 25100, byte_end: 25103, column_start: 19, column_end: 22, line_start: 733, line_end: 733 }: the
Token { kind: Space, char_start: 25102, char_end: 25103, byte_start: 25103, byte_end: 25104, column_start: 22, column_end: 23, line_start: 733, line_end: 733 }: " "
Token { kind: Bar, char_start: 25103, char_end: 25104, byte_start: 25104, byte_end: 25105, column_start: 23, column_end: 24, line_start: 733, line_end: 733 }: |
Token { kind: Text, char_start: 25104, char_end: 25112, byte_start: 25105, byte_end: 25113, column_start: 24, column_end: 32, line_start: 733, line_end: 733 }: quickfix
Token { kind: Bar, char_start: 25112, char_end: 25113, byte_start: 25113, byte_end: 25114, column_start: 32, column_end: 33, line_start: 733, line_end: 733 }: |
Token { kind: Space, char_start: 25113, char_end: 25114, byte_start: 25114, byte_end: 25115, column_start: 33, column_end: 34, line_start: 733, line_end: 733 }: " "
Token { kind: Lparen, char_start: 25114, char_end: 25115, byte_start: 25115, byte_end: 25116, column_start: 34, column_end: 35, line_start: 733, line_end: 733 }: (
Token { kind: Text, char_start: 25115, char_end: 25117, byte_start: 25116, byte_end: 25118, column_start: 35, column_end: 37, line_start: 733, line_end: 733 }: or
Token { kind: Space, char_start: 25117, char_end: 25118, byte_start: 25118, byte_end: 25119, column_start: 37, column_end: 38, line_start: 733, line_end: 733 }: " "
Token { kind: Bar, char_start: 25118, char_end: 25119, byte_start: 25119, byte_end: 25120, column_start: 38, column_end: 39, line_start: 733, line_end: 733 }: |
Token { kind: Text, char_start: 25119, char_end: 25127, byte_start: 25120, byte_end: 25128, column_start: 39, column_end: 47, line_start: 733, line_end: 733 }: location
Token { kind: Hyphen, char_start: 25127, char_end: 25128, byte_start: 25128, byte_end: 25129, column_start: 47, column_end: 48, line_start: 733, line_end: 733 }: -
Token { kind: Text, char_start: 25128, char_end: 25132, byte_start: 25129, byte_end: 25133, column_start: 48, column_end: 52, line_start: 733, line_end: 733 }: list
Token { kind: Bar, char_start: 25132, char_end: 25133, byte_start: 25133, byte_end: 25134, column_start: 52, column_end: 53, line_start: 733, line_end: 733 }: |
Token { kind: Rparen, char_start: 25133, char_end: 25134, byte_start: 25134, byte_end: 25135, column_start: 53, column_end: 54, line_start: 733, line_end: 733 }: )
Token { kind: Space, char_start: 25134, char_end: 25135, byte_start: 25135, byte_end: 25136, column_start: 54, column_end: 55, line_start: 733, line_end: 733 }: " "
Token { kind: Text, char_start: 25135, char_end: 25141, byte_start: 25136, byte_end: 25142, column_start: 55, column_end: 61, line_start: 733, line_end: 733 }: window
Token { kind: Space, char_start: 25141, char_end: 25142, byte_start: 25142, byte_end: 25143, column_start: 61, column_end: 62, line_start: 733, line_end: 733 }: " "
Token { kind: Text, char_start: 25142, char_end: 25146, byte_start: 25143, byte_end: 25147, column_start: 62, column_end: 66, line_start: 733, line_end: 733 }: with
Token { kind: Space, char_start: 25146, char_end: 25147, byte_start: 25147, byte_end: 25148, column_start: 66, column_end: 67, line_start: 733, line_end: 733 }: " "
Token { kind: Text, char_start: 25147, char_end: 25150, byte_start: 25148, byte_end: 25151, column_start: 67, column_end: 70, line_start: 733, line_end: 733 }: any
Token { kind: Space, char_start: 25150, char_end: 25151, byte_start: 25151, byte_end: 25152, column_start: 70, column_end: 71, line_start: 733, line_end: 733 }: " "
Token { kind: Text, char_start: 25151, char_end: 25158, byte_start: 25152, byte_end: 25159, column_start: 71, column_end: 78, line_start: 733, line_end: 733 }: results
Token { kind: Newline, char_start: 25158, char_end: 25159, byte_start: 25159, byte_end: 25160, column_start: 78, column_end: 1, line_start: 733, line_end: 734 }: "\n"
Token { kind: Text, char_start: 25159, char_end: 25163, byte_start: 25160, byte_end: 25164, column_start: 1, column_end: 5, line_start: 734, line_end: 734 }: that
Token { kind: Space, char_start: 25163, char_end: 25164, byte_start: 25164, byte_end: 25165, column_start: 5, column_end: 6, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25164, char_end: 25167, byte_start: 25165, byte_end: 25168, column_start: 6, column_end: 9, line_start: 734, line_end: 734 }: may
Token { kind: Space, char_start: 25167, char_end: 25168, byte_start: 25168, byte_end: 25169, column_start: 9, column_end: 10, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25168, char_end: 25172, byte_start: 25169, byte_end: 25173, column_start: 10, column_end: 14, line_start: 734, line_end: 734 }: have
Token { kind: Space, char_start: 25172, char_end: 25173, byte_start: 25173, byte_end: 25174, column_start: 14, column_end: 15, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25173, char_end: 25177, byte_start: 25174, byte_end: 25178, column_start: 15, column_end: 19, line_start: 734, line_end: 734 }: been
Token { kind: Space, char_start: 25177, char_end: 25178, byte_start: 25178, byte_end: 25179, column_start: 19, column_end: 20, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25178, char_end: 25186, byte_start: 25179, byte_end: 25187, column_start: 20, column_end: 28, line_start: 734, line_end: 734 }: produced
Token { kind: Space, char_start: 25186, char_end: 25187, byte_start: 25187, byte_end: 25188, column_start: 28, column_end: 29, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25187, char_end: 25189, byte_start: 25188, byte_end: 25190, column_start: 29, column_end: 31, line_start: 734, line_end: 734 }: by
Token { kind: Space, char_start: 25189, char_end: 25190, byte_start: 25190, byte_end: 25191, column_start: 31, column_end: 32, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25190, char_end: 25191, byte_start: 25191, byte_end: 25192, column_start: 32, column_end: 33, line_start: 734, line_end: 734 }: a
Token { kind: Space, char_start: 25191, char_end: 25192, byte_start: 25192, byte_end: 25193, column_start: 33, column_end: 34, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25192, char_end: 25196, byte_start: 25193, byte_end: 25197, column_start: 34, column_end: 38, line_start: 734, line_end: 734 }: long
Token { kind: Hyphen, char_start: 25196, char_end: 25197, byte_start: 25197, byte_end: 25198, column_start: 38, column_end: 39, line_start: 734, line_end: 734 }: -
Token { kind: Text, char_start: 25197, char_end: 25204, byte_start: 25198, byte_end: 25205, column_start: 39, column_end: 46, line_start: 734, line_end: 734 }: running
Token { kind: Space, char_start: 25204, char_end: 25205, byte_start: 25205, byte_end: 25206, column_start: 46, column_end: 47, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25205, char_end: 25217, byte_start: 25206, byte_end: 25218, column_start: 47, column_end: 59, line_start: 734, line_end: 734 }: asynchronous
Token { kind: Space, char_start: 25217, char_end: 25218, byte_start: 25218, byte_end: 25219, column_start: 59, column_end: 60, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25218, char_end: 25224, byte_start: 25219, byte_end: 25225, column_start: 60, column_end: 66, line_start: 734, line_end: 734 }: search
Token { kind: Space, char_start: 25224, char_end: 25225, byte_start: 25225, byte_end: 25226, column_start: 66, column_end: 67, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25225, char_end: 25227, byte_start: 25226, byte_end: 25228, column_start: 67, column_end: 69, line_start: 734, line_end: 734 }: in
Token { kind: Space, char_start: 25227, char_end: 25228, byte_start: 25228, byte_end: 25229, column_start: 69, column_end: 70, line_start: 734, line_end: 734 }: " "
Token { kind: Text, char_start: 25228, char_end: 25236, byte_start: 25229, byte_end: 25237, column_start: 70, column_end: 78, line_start: 734, line_end: 734 }: progress
Token { kind: Newline, char_start: 25236, char_end: 25237, byte_start: 25237, byte_end: 25238, column_start: 78, column_end: 1, line_start: 734, line_end: 735 }: "\n"
Token { kind: Text, char_start: 25237, char_end: 25239, byte_start: 25238, byte_end: 25240, column_start: 1, column_end: 3, line_start: 735, line_end: 735 }: in
Token { kind: Space, char_start: 25239, char_end: 25240, byte_start: 25240, byte_end: 25241, column_start: 3, column_end: 4, line_start: 735, line_end: 735 }: " "
Token { kind: Text, char_start: 25240, char_end: 25243, byte_start: 25241, byte_end: 25244, column_start: 4, column_end: 7, line_start: 735, line_end: 735 }: the
Token { kind: Space, char_start: 25243, char_end: 25244, byte_start: 25244, byte_end: 25245, column_start: 7, column_end: 8, line_start: 735, line_end: 735 }: " "
Token { kind: Text, char_start: 25244, char_end: 25255, byte_start: 25245, byte_end: 25256, column_start: 8, column_end: 19, line_start: 735, line_end: 735 }: background.
Token { kind: Newline, char_start: 25255, char_end: 25256, byte_start: 25256, byte_end: 25257, column_start: 19, column_end: 1, line_start: 735, line_end: 736 }: "\n"
Token { kind: Newline, char_start: 25256, char_end: 25257, byte_start: 25257, byte_end: 25258, column_start: 1, column_end: 1, line_start: 736, line_end: 737 }: "\n"
Token { kind: At, char_start: 25257, char_end: 25258, byte_start: 25258, byte_end: 25259, column_start: 1, column_end: 2, line_start: 737, line_end: 737 }: @
Token { kind: Text, char_start: 25258, char_end: 25265, byte_start: 25259, byte_end: 25266, column_start: 2, column_end: 9, line_start: 737, line_end: 737 }: mapping
Token { kind: Space, char_start: 25265, char_end: 25266, byte_start: 25266, byte_end: 25267, column_start: 9, column_end: 10, line_start: 737, line_end: 737 }: " "
Token { kind: BlockQuote, char_start: 25266, char_end: 25267, byte_start: 25267, byte_end: 25268, column_start: 10, column_end: 11, line_start: 737, line_end: 737 }: <
Token { kind: Text, char_start: 25267, char_end: 25271, byte_start: 25268, byte_end: 25272, column_start: 11, column_end: 15, line_start: 737, line_end: 737 }: Plug
Token { kind: BlockQuote, char_start: 25271, char_end: 25272, byte_start: 25272, byte_end: 25273, column_start: 15, column_end: 16, line_start: 737, line_end: 737 }: >
Token { kind: Lparen, char_start: 25272, char_end: 25273, byte_start: 25273, byte_end: 25274, column_start: 16, column_end: 17, line_start: 737, line_end: 737 }: (
Token { kind: Text, char_start: 25273, char_end: 25283, byte_start: 25274, byte_end: 25284, column_start: 17, column_end: 27, line_start: 737, line_end: 737 }: FerretBack
Token { kind: Rparen, char_start: 25283, char_end: 25284, byte_start: 25284, byte_end: 25285, column_start: 27, column_end: 28, line_start: 737, line_end: 737 }: )
Token { kind: Newline, char_start: 25284, char_end: 25285, byte_start: 25285, byte_end: 25286, column_start: 28, column_end: 1, line_start: 737, line_end: 738 }: "\n"
Token { kind: Newline, char_start: 25285, char_end: 25286, byte_start: 25286, byte_end: 25287, column_start: 1, column_end: 1, line_start: 738, line_end: 739 }: "\n"
Token { kind: Text, char_start: 25286, char_end: 25292, byte_start: 25287, byte_end: 25293, column_start: 1, column_end: 7, line_start: 739, line_end: 739 }: Ferret
Token { kind: Space, char_start: 25292, char_end: 25293, byte_start: 25293, byte_end: 25294, column_start: 7, column_end: 8, line_start: 739, line_end: 739 }: " "
Token { kind: Text, char_start: 25293, char_end: 25301, byte_start: 25294, byte_end: 25302, column_start: 8, column_end: 16, line_start: 739, line_end: 739 }: provides
Token { kind: Space, char_start: 25301, char_end: 25302, byte_start: 25302, byte_end: 25303, column_start: 16, column_end: 17, line_start: 739, line_end: 739 }: " "
Token { kind: Bar, char_start: 25302, char_end: 25303, byte_start: 25303, byte_end: 25304, column_start: 17, column_end: 18, line_start: 739, line_end: 739 }: |
Token { kind: BlockQuote, char_start: 25303, char_end: 25304, byte_start: 25304, byte_end: 25305, column_start: 18, column_end: 19, line_start: 739, line_end: 739 }: <
Token { kind: Text, char_start: 25304, char_end: 25308, byte_start: 25305, byte_end: 25309, column_start: 19, column_end: 23, line_start: 739, line_end: 739 }: Plug
Token { kind: BlockQuote, char_start: 25308, char_end: 25309, byte_start: 25309, byte_end: 25310, column_start: 23, column_end: 24, line_start: 739, line_end: 739 }: >
Token { kind: Lparen, char_start: 25309, char_end: 25310, byte_start: 25310, byte_end: 25311, column_start: 24, column_end: 25, line_start: 739, line_end: 739 }: (
Token { kind: Text, char_start: 25310, char_end: 25320, byte_start: 25311, byte_end: 25321, column_start: 25, column_end: 35, line_start: 739, line_end: 739 }: FerretBack
Token { kind: Rparen, char_start: 25320, char_end: 25321, byte_start: 25321, byte_end: 25322, column_start: 35, column_end: 36, line_start: 739, line_end: 739 }: )
Token { kind: Bar, char_start: 25321, char_end: 25322, byte_start: 25322, byte_end: 25323, column_start: 36, column_end: 37, line_start: 739, line_end: 739 }: |
Token { kind: Space, char_start: 25322, char_end: 25323, byte_start: 25323, byte_end: 25324, column_start: 37, column_end: 38, line_start: 739, line_end: 739 }: " "
Token { kind: Text, char_start: 25323, char_end: 25328, byte_start: 25324, byte_end: 25329, column_start: 38, column_end: 43, line_start: 739, line_end: 739 }: which
Token { kind: Space, char_start: 25328, char_end: 25329, byte_start: 25329, byte_end: 25330, column_start: 43, column_end: 44, line_start: 739, line_end: 739 }: " "
Token { kind: Text, char_start: 25329, char_end: 25332, byte_start: 25330, byte_end: 25333, column_start: 44, column_end: 47, line_start: 739, line_end: 739 }: can
Token { kind: Space, char_start: 25332, char_end: 25333, byte_start: 25333, byte_end: 25334, column_start: 47, column_end: 48, line_start: 739, line_end: 739 }: " "
Token { kind: Text, char_start: 25333, char_end: 25335, byte_start: 25334, byte_end: 25336, column_start: 48, column_end: 50, line_start: 739, line_end: 739 }: be
Token { kind: Space, char_start: 25335, char_end: 25336, byte_start: 25336, byte_end: 25337, column_start: 50, column_end: 51, line_start: 739, line_end: 739 }: " "
Token { kind: Text, char_start: 25336, char_end: 25340, byte_start: 25337, byte_end: 25341, column_start: 51, column_end: 55, line_start: 739, line_end: 739 }: used
Token { kind: Space, char_start: 25340, char_end: 25341, byte_start: 25341, byte_end: 25342, column_start: 55, column_end: 56, line_start: 739, line_end: 739 }: " "
Token { kind: Text, char_start: 25341, char_end: 25343, byte_start: 25342, byte_end: 25344, column_start: 56, column_end: 58, line_start: 739, line_end: 739 }: to
Token { kind: Space, char_start: 25343, char_end: 25344, byte_start: 25344, byte_end: 25345, column_start: 58, column_end: 59, line_start: 739, line_end: 739 }: " "
Token { kind: Text, char_start: 25344, char_end: 25351, byte_start: 25345, byte_end: 25352, column_start: 59, column_end: 66, line_start: 739, line_end: 739 }: trigger
Token { kind: Space, char_start: 25351, char_end: 25352, byte_start: 25352, byte_end: 25353, column_start: 66, column_end: 67, line_start: 739, line_end: 739 }: " "
Token { kind: Text, char_start: 25352, char_end: 25355, byte_start: 25353, byte_end: 25356, column_start: 67, column_end: 70, line_start: 739, line_end: 739 }: the
Token { kind: Space, char_start: 25355, char_end: 25356, byte_start: 25356, byte_end: 25357, column_start: 70, column_end: 71, line_start: 739, line_end: 739 }: " "
Token { kind: Bar, char_start: 25356, char_end: 25357, byte_start: 25357, byte_end: 25358, column_start: 71, column_end: 72, line_start: 739, line_end: 739 }: |
Token { kind: Text, char_start: 25357, char_end: 25362, byte_start: 25358, byte_end: 25363, column_start: 72, column_end: 77, line_start: 739, line_end: 739 }: :Back
Token { kind: Bar, char_start: 25362, char_end: 25363, byte_start: 25363, byte_end: 25364, column_start: 77, column_end: 78, line_start: 739, line_end: 739 }: |
Token { kind: Newline, char_start: 25363, char_end: 25364, byte_start: 25364, byte_end: 25365, column_start: 78, column_end: 1, line_start: 739, line_end: 740 }: "\n"
Token { kind: Text, char_start: 25364, char_end: 25372, byte_start: 25365, byte_end: 25373, column_start: 1, column_end: 9, line_start: 740, line_end: 740 }: command.
Token { kind: Space, char_start: 25372, char_end: 25373, byte_start: 25373, byte_end: 25374, column_start: 9, column_end: 10, line_start: 740, line_end: 740 }: " "
Token { kind: Text, char_start: 25373, char_end: 25375, byte_start: 25374, byte_end: 25376, column_start: 10, column_end: 12, line_start: 740, line_end: 740 }: To
Token { kind: Space, char_start: 25375, char_end: 25376, byte_start: 25376, byte_end: 25377, column_start: 12, column_end: 13, line_start: 740, line_end: 740 }: " "
Token { kind: Text, char_start: 25376, char_end: 25385, byte_start: 25377, byte_end: 25386, column_start: 13, column_end: 22, line_start: 740, line_end: 740 }: configure
Token { kind: Space, char_start: 25385, char_end: 25386, byte_start: 25386, byte_end: 25387, column_start: 22, column_end: 23, line_start: 740, line_end: 740 }: " "
Token { kind: Text, char_start: 25386, char_end: 25387, byte_start: 25387, byte_end: 25388, column_start: 23, column_end: 24, line_start: 740, line_end: 740 }: a
Token { kind: Space, char_start: 25387, char_end: 25388, byte_start: 25388, byte_end: 25389, column_start: 24, column_end: 25, line_start: 740, line_end: 740 }: " "
Token { kind: Text, char_start: 25388, char_end: 25395, byte_start: 25389, byte_end: 25396, column_start: 25, column_end: 32, line_start: 740, line_end: 740 }: mapping
Token { kind: Space, char_start: 25395, char_end: 25396, byte_start: 25396, byte_end: 25397, column_start: 32, column_end: 33, line_start: 740, line_end: 740 }: " "
Token { kind: Text, char_start: 25396, char_end: 25399, byte_start: 25397, byte_end: 25400, column_start: 33, column_end: 36, line_start: 740, line_end: 740 }: for
Token { kind: Space, char_start: 25399, char_end: 25400, byte_start: 25400, byte_end: 25401, column_start: 36, column_end: 37, line_start: 740, line_end: 740 }: " "
Token { kind: Text, char_start: 25400, char_end: 25403, byte_start: 25401, byte_end: 25404, column_start: 37, column_end: 40, line_start: 740, line_end: 740 }: it,
Token { kind: Space, char_start: 25403, char_end: 25404, byte_start: 25404, byte_end: 25405, column_start: 40, column_end: 41, line_start: 740, line_end: 740 }: " "
Token { kind: Text, char_start: 25404, char_end: 25407, byte_start: 25405, byte_end: 25408, column_start: 41, column_end: 44, line_start: 740, line_end: 740 }: use
Token { kind: Space, char_start: 25407, char_end: 25408, byte_start: 25408, byte_end: 25409, column_start: 44, column_end: 45, line_start: 740, line_end: 740 }: " "
Token { kind: Bar, char_start: 25408, char_end: 25409, byte_start: 25409, byte_end: 25410, column_start: 45, column_end: 46, line_start: 740, line_end: 740 }: |
Token { kind: Text, char_start: 25409, char_end: 25414, byte_start: 25410, byte_end: 25415, column_start: 46, column_end: 51, line_start: 740, line_end: 740 }: :nmap
Token { kind: Bar, char_start: 25414, char_end: 25415, byte_start: 25415, byte_end: 25416, column_start: 51, column_end: 52, line_start: 740, line_end: 740 }: |
Token { kind: Text, char_start: 25415, char_end: 25416, byte_start: 25416, byte_end: 25417, column_start: 52, column_end: 53, line_start: 740, line_end: 740 }: :
Token { kind: Newline, char_start: 25416, char_end: 25417, byte_start: 25417, byte_end: 25418, column_start: 53, column_end: 1, line_start: 740, line_end: 741 }: "\n"
Token { kind: Newline, char_start: 25417, char_end: 25418, byte_start: 25418, byte_end: 25419, column_start: 1, column_end: 1, line_start: 741, line_end: 742 }: "\n"
Token { kind: CodeFence, char_start: 25418, char_end: 25421, byte_start: 25419, byte_end: 25422, column_start: 1, column_end: 4, line_start: 742, line_end: 742 }: ```
Token { kind: Newline, char_start: 25421, char_end: 25422, byte_start: 25422, byte_end: 25423, column_start: 4, column_end: 1, line_start: 742, line_end: 743 }: "\n"
Token { kind: Text, char_start: 25422, char_end: 25426, byte_start: 25423, byte_end: 25427, column_start: 1, column_end: 5, line_start: 743, line_end: 743 }: nmap
Token { kind: Space, char_start: 25426, char_end: 25427, byte_start: 25427, byte_end: 25428, column_start: 5, column_end: 6, line_start: 743, line_end: 743 }: " "
Token { kind: BlockQuote, char_start: 25427, char_end: 25428, byte_start: 25428, byte_end: 25429, column_start: 6, column_end: 7, line_start: 743, line_end: 743 }: <
Token { kind: Text, char_start: 25428, char_end: 25434, byte_start: 25429, byte_end: 25435, column_start: 7, column_end: 13, line_start: 743, line_end: 743 }: Leader
Token { kind: BlockQuote, char_start: 25434, char_end: 25435, byte_start: 25435, byte_end: 25436, column_start: 13, column_end: 14, line_start: 743, line_end: 743 }: >
Token { kind: Text, char_start: 25435, char_end: 25437, byte_start: 25436, byte_end: 25438, column_start: 14, column_end: 16, line_start: 743, line_end: 743 }: fb
Token { kind: Space, char_start: 25437, char_end: 25438, byte_start: 25438, byte_end: 25439, column_start: 16, column_end: 17, line_start: 743, line_end: 743 }: " "
Token { kind: BlockQuote, char_start: 25438, char_end: 25439, byte_start: 25439, byte_end: 25440, column_start: 17, column_end: 18, line_start: 743, line_end: 743 }: <
Token { kind: Text, char_start: 25439, char_end: 25443, byte_start: 25440, byte_end: 25444, column_start: 18, column_end: 22, line_start: 743, line_end: 743 }: Plug
Token { kind: BlockQuote, char_start: 25443, char_end: 25444, byte_start: 25444, byte_end: 25445, column_start: 22, column_end: 23, line_start: 743, line_end: 743 }: >
Token { kind: Lparen, char_start: 25444, char_end: 25445, byte_start: 25445, byte_end: 25446, column_start: 23, column_end: 24, line_start: 743, line_end: 743 }: (
Token { kind: Text, char_start: 25445, char_end: 25455, byte_start: 25446, byte_end: 25456, column_start: 24, column_end: 34, line_start: 743, line_end: 743 }: FerretBack
Token { kind: Rparen, char_start: 25455, char_end: 25456, byte_start: 25456, byte_end: 25457, column_start: 34, column_end: 35, line_start: 743, line_end: 743 }: )
Token { kind: Newline, char_start: 25456, char_end: 25457, byte_start: 25457, byte_end: 25458, column_start: 35, column_end: 1, line_start: 743, line_end: 744 }: "\n"
Token { kind: CodeFence, char_start: 25457, char_end: 25460, byte_start: 25458, byte_end: 25461, column_start: 1, column_end: 4, line_start: 744, line_end: 744 }: ```
Token { kind: Newline, char_start: 25460, char_end: 25461, byte_start: 25461, byte_end: 25462, column_start: 4, column_end: 1, line_start: 744, line_end: 745 }: "\n"
Token { kind: Newline, char_start: 25461, char_end: 25462, byte_start: 25462, byte_end: 25463, column_start: 1, column_end: 1, line_start: 745, line_end: 746 }: "\n"
Token { kind: At, char_start: 25462, char_end: 25463, byte_start: 25463, byte_end: 25464, column_start: 1, column_end: 2, line_start: 746, line_end: 746 }: @
Token { kind: Text, char_start: 25463, char_end: 25470, byte_start: 25464, byte_end: 25471, column_start: 2, column_end: 9, line_start: 746, line_end: 746 }: mapping
Token { kind: Space, char_start: 25470, char_end: 25471, byte_start: 25471, byte_end: 25472, column_start: 9, column_end: 10, line_start: 746, line_end: 746 }: " "
Token { kind: BlockQuote, char_start: 25471, char_end: 25472, byte_start: 25472, byte_end: 25473, column_start: 10, column_end: 11, line_start: 746, line_end: 746 }: <
Token { kind: Text, char_start: 25472, char_end: 25476, byte_start: 25473, byte_end: 25477, column_start: 11, column_end: 15, line_start: 746, line_end: 746 }: Plug
Token { kind: BlockQuote, char_start: 25476, char_end: 25477, byte_start: 25477, byte_end: 25478, column_start: 15, column_end: 16, line_start: 746, line_end: 746 }: >
Token { kind: Lparen, char_start: 25477, char_end: 25478, byte_start: 25478, byte_end: 25479, column_start: 16, column_end: 17, line_start: 746, line_end: 746 }: (
Token { kind: Text, char_start: 25478, char_end: 25489, byte_start: 25479, byte_end: 25490, column_start: 17, column_end: 28, line_start: 746, line_end: 746 }: FerretBlack
Token { kind: Rparen, char_start: 25489, char_end: 25490, byte_start: 25490, byte_end: 25491, column_start: 28, column_end: 29, line_start: 746, line_end: 746 }: )
Token { kind: Newline, char_start: 25490, char_end: 25491, byte_start: 25491, byte_end: 25492, column_start: 29, column_end: 1, line_start: 746, line_end: 747 }: "\n"
Token { kind: Newline, char_start: 25491, char_end: 25492, byte_start: 25492, byte_end: 25493, column_start: 1, column_end: 1, line_start: 747, line_end: 748 }: "\n"
Token { kind: Text, char_start: 25492, char_end: 25498, byte_start: 25493, byte_end: 25499, column_start: 1, column_end: 7, line_start: 748, line_end: 748 }: Ferret
Token { kind: Space, char_start: 25498, char_end: 25499, byte_start: 25499, byte_end: 25500, column_start: 7, column_end: 8, line_start: 748, line_end: 748 }: " "
Token { kind: Text, char_start: 25499, char_end: 25507, byte_start: 25500, byte_end: 25508, column_start: 8, column_end: 16, line_start: 748, line_end: 748 }: provides
Token { kind: Space, char_start: 25507, char_end: 25508, byte_start: 25508, byte_end: 25509, column_start: 16, column_end: 17, line_start: 748, line_end: 748 }: " "
Token { kind: Bar, char_start: 25508, char_end: 25509, byte_start: 25509, byte_end: 25510, column_start: 17, column_end: 18, line_start: 748, line_end: 748 }: |
Token { kind: BlockQuote, char_start: 25509, char_end: 25510, byte_start: 25510, byte_end: 25511, column_start: 18, column_end: 19, line_start: 748, line_end: 748 }: <
Token { kind: Text, char_start: 25510, char_end: 25514, byte_start: 25511, byte_end: 25515, column_start: 19, column_end: 23, line_start: 748, line_end: 748 }: Plug
Token { kind: BlockQuote, char_start: 25514, char_end: 25515, byte_start: 25515, byte_end: 25516, column_start: 23, column_end: 24, line_start: 748, line_end: 748 }: >
Token { kind: Lparen, char_start: 25515, char_end: 25516, byte_start: 25516, byte_end: 25517, column_start: 24, column_end: 25, line_start: 748, line_end: 748 }: (
Token { kind: Text, char_start: 25516, char_end: 25527, byte_start: 25517, byte_end: 25528, column_start: 25, column_end: 36, line_start: 748, line_end: 748 }: FerretBlack
Token { kind: Rparen, char_start: 25527, char_end: 25528, byte_start: 25528, byte_end: 25529, column_start: 36, column_end: 37, line_start: 748, line_end: 748 }: )
Token { kind: Bar, char_start: 25528, char_end: 25529, byte_start: 25529, byte_end: 25530, column_start: 37, column_end: 38, line_start: 748, line_end: 748 }: |
Token { kind: Space, char_start: 25529, char_end: 25530, byte_start: 25530, byte_end: 25531, column_start: 38, column_end: 39, line_start: 748, line_end: 748 }: " "
Token { kind: Text, char_start: 25530, char_end: 25535, byte_start: 25531, byte_end: 25536, column_start: 39, column_end: 44, line_start: 748, line_end: 748 }: which
Token { kind: Space, char_start: 25535, char_end: 25536, byte_start: 25536, byte_end: 25537, column_start: 44, column_end: 45, line_start: 748, line_end: 748 }: " "
Token { kind: Text, char_start: 25536, char_end: 25539, byte_start: 25537, byte_end: 25540, column_start: 45, column_end: 48, line_start: 748, line_end: 748 }: can
Token { kind: Space, char_start: 25539, char_end: 25540, byte_start: 25540, byte_end: 25541, column_start: 48, column_end: 49, line_start: 748, line_end: 748 }: " "
Token { kind: Text, char_start: 25540, char_end: 25542, byte_start: 25541, byte_end: 25543, column_start: 49, column_end: 51, line_start: 748, line_end: 748 }: be
Token { kind: Space, char_start: 25542, char_end: 25543, byte_start: 25543, byte_end: 25544, column_start: 51, column_end: 52, line_start: 748, line_end: 748 }: " "
Token { kind: Text, char_start: 25543, char_end: 25547, byte_start: 25544, byte_end: 25548, column_start: 52, column_end: 56, line_start: 748, line_end: 748 }: used
Token { kind: Space, char_start: 25547, char_end: 25548, byte_start: 25548, byte_end: 25549, column_start: 56, column_end: 57, line_start: 748, line_end: 748 }: " "
Token { kind: Text, char_start: 25548, char_end: 25550, byte_start: 25549, byte_end: 25551, column_start: 57, column_end: 59, line_start: 748, line_end: 748 }: to
Token { kind: Space, char_start: 25550, char_end: 25551, byte_start: 25551, byte_end: 25552, column_start: 59, column_end: 60, line_start: 748, line_end: 748 }: " "
Token { kind: Text, char_start: 25551, char_end: 25558, byte_start: 25552, byte_end: 25559, column_start: 60, column_end: 67, line_start: 748, line_end: 748 }: trigger
Token { kind: Space, char_start: 25558, char_end: 25559, byte_start: 25559, byte_end: 25560, column_start: 67, column_end: 68, line_start: 748, line_end: 748 }: " "
Token { kind: Text, char_start: 25559, char_end: 25562, byte_start: 25560, byte_end: 25563, column_start: 68, column_end: 71, line_start: 748, line_end: 748 }: the
Token { kind: Space, char_start: 25562, char_end: 25563, byte_start: 25563, byte_end: 25564, column_start: 71, column_end: 72, line_start: 748, line_end: 748 }: " "
Token { kind: Bar, char_start: 25563, char_end: 25564, byte_start: 25564, byte_end: 25565, column_start: 72, column_end: 73, line_start: 748, line_end: 748 }: |
Token { kind: Text, char_start: 25564, char_end: 25570, byte_start: 25565, byte_end: 25571, column_start: 73, column_end: 79, line_start: 748, line_end: 748 }: :Black
Token { kind: Bar, char_start: 25570, char_end: 25571, byte_start: 25571, byte_end: 25572, column_start: 79, column_end: 80, line_start: 748, line_end: 748 }: |
Token { kind: Newline, char_start: 25571, char_end: 25572, byte_start: 25572, byte_end: 25573, column_start: 80, column_end: 1, line_start: 748, line_end: 749 }: "\n"
Token { kind: Text, char_start: 25572, char_end: 25580, byte_start: 25573, byte_end: 25581, column_start: 1, column_end: 9, line_start: 749, line_end: 749 }: command.
Token { kind: Space, char_start: 25580, char_end: 25581, byte_start: 25581, byte_end: 25582, column_start: 9, column_end: 10, line_start: 749, line_end: 749 }: " "
Token { kind: Text, char_start: 25581, char_end: 25583, byte_start: 25582, byte_end: 25584, column_start: 10, column_end: 12, line_start: 749, line_end: 749 }: To
Token { kind: Space, char_start: 25583, char_end: 25584, byte_start: 25584, byte_end: 25585, column_start: 12, column_end: 13, line_start: 749, line_end: 749 }: " "
Token { kind: Text, char_start: 25584, char_end: 25593, byte_start: 25585, byte_end: 25594, column_start: 13, column_end: 22, line_start: 749, line_end: 749 }: configure
Token { kind: Space, char_start: 25593, char_end: 25594, byte_start: 25594, byte_end: 25595, column_start: 22, column_end: 23, line_start: 749, line_end: 749 }: " "
Token { kind: Text, char_start: 25594, char_end: 25595, byte_start: 25595, byte_end: 25596, column_start: 23, column_end: 24, line_start: 749, line_end: 749 }: a
Token { kind: Space, char_start: 25595, char_end: 25596, byte_start: 25596, byte_end: 25597, column_start: 24, column_end: 25, line_start: 749, line_end: 749 }: " "
Token { kind: Text, char_start: 25596, char_end: 25603, byte_start: 25597, byte_end: 25604, column_start: 25, column_end: 32, line_start: 749, line_end: 749 }: mapping
Token { kind: Space, char_start: 25603, char_end: 25604, byte_start: 25604, byte_end: 25605, column_start: 32, column_end: 33, line_start: 749, line_end: 749 }: " "
Token { kind: Text, char_start: 25604, char_end: 25607, byte_start: 25605, byte_end: 25608, column_start: 33, column_end: 36, line_start: 749, line_end: 749 }: for
Token { kind: Space, char_start: 25607, char_end: 25608, byte_start: 25608, byte_end: 25609, column_start: 36, column_end: 37, line_start: 749, line_end: 749 }: " "
Token { kind: Text, char_start: 25608, char_end: 25611, byte_start: 25609, byte_end: 25612, column_start: 37, column_end: 40, line_start: 749, line_end: 749 }: it,
Token { kind: Space, char_start: 25611, char_end: 25612, byte_start: 25612, byte_end: 25613, column_start: 40, column_end: 41, line_start: 749, line_end: 749 }: " "
Token { kind: Text, char_start: 25612, char_end: 25615, byte_start: 25613, byte_end: 25616, column_start: 41, column_end: 44, line_start: 749, line_end: 749 }: use
Token { kind: Space, char_start: 25615, char_end: 25616, byte_start: 25616, byte_end: 25617, column_start: 44, column_end: 45, line_start: 749, line_end: 749 }: " "
Token { kind: Bar, char_start: 25616, char_end: 25617, byte_start: 25617, byte_end: 25618, column_start: 45, column_end: 46, line_start: 749, line_end: 749 }: |
Token { kind: Text, char_start: 25617, char_end: 25622, byte_start: 25618, byte_end: 25623, column_start: 46, column_end: 51, line_start: 749, line_end: 749 }: :nmap
Token { kind: Bar, char_start: 25622, char_end: 25623, byte_start: 25623, byte_end: 25624, column_start: 51, column_end: 52, line_start: 749, line_end: 749 }: |
Token { kind: Text, char_start: 25623, char_end: 25624, byte_start: 25624, byte_end: 25625, column_start: 52, column_end: 53, line_start: 749, line_end: 749 }: :
Token { kind: Newline, char_start: 25624, char_end: 25625, byte_start: 25625, byte_end: 25626, column_start: 53, column_end: 1, line_start: 749, line_end: 750 }: "\n"
Token { kind: Newline, char_start: 25625, char_end: 25626, byte_start: 25626, byte_end: 25627, column_start: 1, column_end: 1, line_start: 750, line_end: 751 }: "\n"
Token { kind: CodeFence, char_start: 25626, char_end: 25629, byte_start: 25627, byte_end: 25630, column_start: 1, column_end: 4, line_start: 751, line_end: 751 }: ```
Token { kind: Newline, char_start: 25629, char_end: 25630, byte_start: 25630, byte_end: 25631, column_start: 4, column_end: 1, line_start: 751, line_end: 752 }: "\n"
Token { kind: Text, char_start: 25630, char_end: 25634, byte_start: 25631, byte_end: 25635, column_start: 1, column_end: 5, line_start: 752, line_end: 752 }: nmap
Token { kind: Space, char_start: 25634, char_end: 25635, byte_start: 25635, byte_end: 25636, column_start: 5, column_end: 6, line_start: 752, line_end: 752 }: " "
Token { kind: BlockQuote, char_start: 25635, char_end: 25636, byte_start: 25636, byte_end: 25637, column_start: 6, column_end: 7, line_start: 752, line_end: 752 }: <
Token { kind: Text, char_start: 25636, char_end: 25642, byte_start: 25637, byte_end: 25643, column_start: 7, column_end: 13, line_start: 752, line_end: 752 }: Leader
Token { kind: BlockQuote, char_start: 25642, char_end: 25643, byte_start: 25643, byte_end: 25644, column_start: 13, column_end: 14, line_start: 752, line_end: 752 }: >
Token { kind: Text, char_start: 25643, char_end: 25645, byte_start: 25644, byte_end: 25646, column_start: 14, column_end: 16, line_start: 752, line_end: 752 }: fl
Token { kind: Space, char_start: 25645, char_end: 25646, byte_start: 25646, byte_end: 25647, column_start: 16, column_end: 17, line_start: 752, line_end: 752 }: " "
Token { kind: BlockQuote, char_start: 25646, char_end: 25647, byte_start: 25647, byte_end: 25648, column_start: 17, column_end: 18, line_start: 752, line_end: 752 }: <
Token { kind: Text, char_start: 25647, char_end: 25651, byte_start: 25648, byte_end: 25652, column_start: 18, column_end: 22, line_start: 752, line_end: 752 }: Plug
Token { kind: BlockQuote, char_start: 25651, char_end: 25652, byte_start: 25652, byte_end: 25653, column_start: 22, column_end: 23, line_start: 752, line_end: 752 }: >
Token { kind: Lparen, char_start: 25652, char_end: 25653, byte_start: 25653, byte_end: 25654, column_start: 23, column_end: 24, line_start: 752, line_end: 752 }: (
Token { kind: Text, char_start: 25653, char_end: 25664, byte_start: 25654, byte_end: 25665, column_start: 24, column_end: 35, line_start: 752, line_end: 752 }: FerretBlack
Token { kind: Rparen, char_start: 25664, char_end: 25665, byte_start: 25665, byte_end: 25666, column_start: 35, column_end: 36, line_start: 752, line_end: 752 }: )
Token { kind: Newline, char_start: 25665, char_end: 25666, byte_start: 25666, byte_end: 25667, column_start: 36, column_end: 1, line_start: 752, line_end: 753 }: "\n"
Token { kind: CodeFence, char_start: 25666, char_end: 25669, byte_start: 25667, byte_end: 25670, column_start: 1, column_end: 4, line_start: 753, line_end: 753 }: ```
Token { kind: Newline, char_start: 25669, char_end: 25670, byte_start: 25670, byte_end: 25671, column_start: 4, column_end: 1, line_start: 753, line_end: 754 }: "\n"
Token { kind: Newline, char_start: 25670, char_end: 25671, byte_start: 25671, byte_end: 25672, column_start: 1, column_end: 1, line_start: 754, line_end: 755 }: "\n"
Token { kind: At, char_start: 25671, char_end: 25672, byte_start: 25672, byte_end: 25673, column_start: 1, column_end: 2, line_start: 755, line_end: 755 }: @
Token { kind: Text, char_start: 25672, char_end: 25679, byte_start: 25673, byte_end: 25680, column_start: 2, column_end: 9, line_start: 755, line_end: 755 }: mapping
Token { kind: Space, char_start: 25679, char_end: 25680, byte_start: 25680, byte_end: 25681, column_start: 9, column_end: 10, line_start: 755, line_end: 755 }: " "
Token { kind: BlockQuote, char_start: 25680, char_end: 25681, byte_start: 25681, byte_end: 25682, column_start: 10, column_end: 11, line_start: 755, line_end: 755 }: <
Token { kind: Text, char_start: 25681, char_end: 25685, byte_start: 25682, byte_end: 25686, column_start: 11, column_end: 15, line_start: 755, line_end: 755 }: Plug
Token { kind: BlockQuote, char_start: 25685, char_end: 25686, byte_start: 25686, byte_end: 25687, column_start: 15, column_end: 16, line_start: 755, line_end: 755 }: >
Token { kind: Lparen, char_start: 25686, char_end: 25687, byte_start: 25687, byte_end: 25688, column_start: 16, column_end: 17, line_start: 755, line_end: 755 }: (
Token { kind: Text, char_start: 25687, char_end: 25698, byte_start: 25688, byte_end: 25699, column_start: 17, column_end: 28, line_start: 755, line_end: 755 }: FerretQuack
Token { kind: Rparen, char_start: 25698, char_end: 25699, byte_start: 25699, byte_end: 25700, column_start: 28, column_end: 29, line_start: 755, line_end: 755 }: )
Token { kind: Newline, char_start: 25699, char_end: 25700, byte_start: 25700, byte_end: 25701, column_start: 29, column_end: 1, line_start: 755, line_end: 756 }: "\n"
Token { kind: Newline, char_start: 25700, char_end: 25701, byte_start: 25701, byte_end: 25702, column_start: 1, column_end: 1, line_start: 756, line_end: 757 }: "\n"
Token { kind: Text, char_start: 25701, char_end: 25707, byte_start: 25702, byte_end: 25708, column_start: 1, column_end: 7, line_start: 757, line_end: 757 }: Ferret
Token { kind: Space, char_start: 25707, char_end: 25708, byte_start: 25708, byte_end: 25709, column_start: 7, column_end: 8, line_start: 757, line_end: 757 }: " "
Token { kind: Text, char_start: 25708, char_end: 25716, byte_start: 25709, byte_end: 25717, column_start: 8, column_end: 16, line_start: 757, line_end: 757 }: provides
Token { kind: Space, char_start: 25716, char_end: 25717, byte_start: 25717, byte_end: 25718, column_start: 16, column_end: 17, line_start: 757, line_end: 757 }: " "
Token { kind: Bar, char_start: 25717, char_end: 25718, byte_start: 25718, byte_end: 25719, column_start: 17, column_end: 18, line_start: 757, line_end: 757 }: |
Token { kind: BlockQuote, char_start: 25718, char_end: 25719, byte_start: 25719, byte_end: 25720, column_start: 18, column_end: 19, line_start: 757, line_end: 757 }: <
Token { kind: Text, char_start: 25719, char_end: 25723, byte_start: 25720, byte_end: 25724, column_start: 19, column_end: 23, line_start: 757, line_end: 757 }: Plug
Token { kind: BlockQuote, char_start: 25723, char_end: 25724, byte_start: 25724, byte_end: 25725, column_start: 23, column_end: 24, line_start: 757, line_end: 757 }: >
Token { kind: Lparen, char_start: 25724, char_end: 25725, byte_start: 25725, byte_end: 25726, column_start: 24, column_end: 25, line_start: 757, line_end: 757 }: (
Token { kind: Text, char_start: 25725, char_end: 25735, byte_start: 25726, byte_end: 25736, column_start: 25, column_end: 35, line_start: 757, line_end: 757 }: FerretBack
Token { kind: Rparen, char_start: 25735, char_end: 25736, byte_start: 25736, byte_end: 25737, column_start: 35, column_end: 36, line_start: 757, line_end: 757 }: )
Token { kind: Bar, char_start: 25736, char_end: 25737, byte_start: 25737, byte_end: 25738, column_start: 36, column_end: 37, line_start: 757, line_end: 757 }: |
Token { kind: Space, char_start: 25737, char_end: 25738, byte_start: 25738, byte_end: 25739, column_start: 37, column_end: 38, line_start: 757, line_end: 757 }: " "
Token { kind: Text, char_start: 25738, char_end: 25743, byte_start: 25739, byte_end: 25744, column_start: 38, column_end: 43, line_start: 757, line_end: 757 }: which
Token { kind: Space, char_start: 25743, char_end: 25744, byte_start: 25744, byte_end: 25745, column_start: 43, column_end: 44, line_start: 757, line_end: 757 }: " "
Token { kind: Text, char_start: 25744, char_end: 25747, byte_start: 25745, byte_end: 25748, column_start: 44, column_end: 47, line_start: 757, line_end: 757 }: can
Token { kind: Space, char_start: 25747, char_end: 25748, byte_start: 25748, byte_end: 25749, column_start: 47, column_end: 48, line_start: 757, line_end: 757 }: " "
Token { kind: Text, char_start: 25748, char_end: 25750, byte_start: 25749, byte_end: 25751, column_start: 48, column_end: 50, line_start: 757, line_end: 757 }: be
Token { kind: Space, char_start: 25750, char_end: 25751, byte_start: 25751, byte_end: 25752, column_start: 50, column_end: 51, line_start: 757, line_end: 757 }: " "
Token { kind: Text, char_start: 25751, char_end: 25755, byte_start: 25752, byte_end: 25756, column_start: 51, column_end: 55, line_start: 757, line_end: 757 }: used
Token { kind: Space, char_start: 25755, char_end: 25756, byte_start: 25756, byte_end: 25757, column_start: 55, column_end: 56, line_start: 757, line_end: 757 }: " "
Token { kind: Text, char_start: 25756, char_end: 25758, byte_start: 25757, byte_end: 25759, column_start: 56, column_end: 58, line_start: 757, line_end: 757 }: to
Token { kind: Space, char_start: 25758, char_end: 25759, byte_start: 25759, byte_end: 25760, column_start: 58, column_end: 59, line_start: 757, line_end: 757 }: " "
Token { kind: Text, char_start: 25759, char_end: 25766, byte_start: 25760, byte_end: 25767, column_start: 59, column_end: 66, line_start: 757, line_end: 757 }: trigger
Token { kind: Space, char_start: 25766, char_end: 25767, byte_start: 25767, byte_end: 25768, column_start: 66, column_end: 67, line_start: 757, line_end: 757 }: " "
Token { kind: Text, char_start: 25767, char_end: 25770, byte_start: 25768, byte_end: 25771, column_start: 67, column_end: 70, line_start: 757, line_end: 757 }: the
Token { kind: Space, char_start: 25770, char_end: 25771, byte_start: 25771, byte_end: 25772, column_start: 70, column_end: 71, line_start: 757, line_end: 757 }: " "
Token { kind: Bar, char_start: 25771, char_end: 25772, byte_start: 25772, byte_end: 25773, column_start: 71, column_end: 72, line_start: 757, line_end: 757 }: |
Token { kind: Text, char_start: 25772, char_end: 25778, byte_start: 25773, byte_end: 25779, column_start: 72, column_end: 78, line_start: 757, line_end: 757 }: :Quack
Token { kind: Bar, char_start: 25778, char_end: 25779, byte_start: 25779, byte_end: 25780, column_start: 78, column_end: 79, line_start: 757, line_end: 757 }: |
Token { kind: Newline, char_start: 25779, char_end: 25780, byte_start: 25780, byte_end: 25781, column_start: 79, column_end: 1, line_start: 757, line_end: 758 }: "\n"
Token { kind: Text, char_start: 25780, char_end: 25788, byte_start: 25781, byte_end: 25789, column_start: 1, column_end: 9, line_start: 758, line_end: 758 }: command.
Token { kind: Space, char_start: 25788, char_end: 25789, byte_start: 25789, byte_end: 25790, column_start: 9, column_end: 10, line_start: 758, line_end: 758 }: " "
Token { kind: Text, char_start: 25789, char_end: 25791, byte_start: 25790, byte_end: 25792, column_start: 10, column_end: 12, line_start: 758, line_end: 758 }: To
Token { kind: Space, char_start: 25791, char_end: 25792, byte_start: 25792, byte_end: 25793, column_start: 12, column_end: 13, line_start: 758, line_end: 758 }: " "
Token { kind: Text, char_start: 25792, char_end: 25801, byte_start: 25793, byte_end: 25802, column_start: 13, column_end: 22, line_start: 758, line_end: 758 }: configure
Token { kind: Space, char_start: 25801, char_end: 25802, byte_start: 25802, byte_end: 25803, column_start: 22, column_end: 23, line_start: 758, line_end: 758 }: " "
Token { kind: Text, char_start: 25802, char_end: 25803, byte_start: 25803, byte_end: 25804, column_start: 23, column_end: 24, line_start: 758, line_end: 758 }: a
Token { kind: Space, char_start: 25803, char_end: 25804, byte_start: 25804, byte_end: 25805, column_start: 24, column_end: 25, line_start: 758, line_end: 758 }: " "
Token { kind: Text, char_start: 25804, char_end: 25811, byte_start: 25805, byte_end: 25812, column_start: 25, column_end: 32, line_start: 758, line_end: 758 }: mapping
Token { kind: Space, char_start: 25811, char_end: 25812, byte_start: 25812, byte_end: 25813, column_start: 32, column_end: 33, line_start: 758, line_end: 758 }: " "
Token { kind: Text, char_start: 25812, char_end: 25815, byte_start: 25813, byte_end: 25816, column_start: 33, column_end: 36, line_start: 758, line_end: 758 }: for
Token { kind: Space, char_start: 25815, char_end: 25816, byte_start: 25816, byte_end: 25817, column_start: 36, column_end: 37, line_start: 758, line_end: 758 }: " "
Token { kind: Text, char_start: 25816, char_end: 25819, byte_start: 25817, byte_end: 25820, column_start: 37, column_end: 40, line_start: 758, line_end: 758 }: it,
Token { kind: Space, char_start: 25819, char_end: 25820, byte_start: 25820, byte_end: 25821, column_start: 40, column_end: 41, line_start: 758, line_end: 758 }: " "
Token { kind: Text, char_start: 25820, char_end: 25823, byte_start: 25821, byte_end: 25824, column_start: 41, column_end: 44, line_start: 758, line_end: 758 }: use
Token { kind: Space, char_start: 25823, char_end: 25824, byte_start: 25824, byte_end: 25825, column_start: 44, column_end: 45, line_start: 758, line_end: 758 }: " "
Token { kind: Bar, char_start: 25824, char_end: 25825, byte_start: 25825, byte_end: 25826, column_start: 45, column_end: 46, line_start: 758, line_end: 758 }: |
Token { kind: Text, char_start: 25825, char_end: 25830, byte_start: 25826, byte_end: 25831, column_start: 46, column_end: 51, line_start: 758, line_end: 758 }: :nmap
Token { kind: Bar, char_start: 25830, char_end: 25831, byte_start: 25831, byte_end: 25832, column_start: 51, column_end: 52, line_start: 758, line_end: 758 }: |
Token { kind: Text, char_start: 25831, char_end: 25832, byte_start: 25832, byte_end: 25833, column_start: 52, column_end: 53, line_start: 758, line_end: 758 }: :
Token { kind: Newline, char_start: 25832, char_end: 25833, byte_start: 25833, byte_end: 25834, column_start: 53, column_end: 1, line_start: 758, line_end: 759 }: "\n"
Token { kind: Newline, char_start: 25833, char_end: 25834, byte_start: 25834, byte_end: 25835, column_start: 1, column_end: 1, line_start: 759, line_end: 760 }: "\n"
Token { kind: CodeFence, char_start: 25834, char_end: 25837, byte_start: 25835, byte_end: 25838, column_start: 1, column_end: 4, line_start: 760, line_end: 760 }: ```
Token { kind: Newline, char_start: 25837, char_end: 25838, byte_start: 25838, byte_end: 25839, column_start: 4, column_end: 1, line_start: 760, line_end: 761 }: "\n"
Token { kind: Text, char_start: 25838, char_end: 25842, byte_start: 25839, byte_end: 25843, column_start: 1, column_end: 5, line_start: 761, line_end: 761 }: nmap
Token { kind: Space, char_start: 25842, char_end: 25843, byte_start: 25843, byte_end: 25844, column_start: 5, column_end: 6, line_start: 761, line_end: 761 }: " "
Token { kind: BlockQuote, char_start: 25843, char_end: 25844, byte_start: 25844, byte_end: 25845, column_start: 6, column_end: 7, line_start: 761, line_end: 761 }: <
Token { kind: Text, char_start: 25844, char_end: 25850, byte_start: 25845, byte_end: 25851, column_start: 7, column_end: 13, line_start: 761, line_end: 761 }: Leader
Token { kind: BlockQuote, char_start: 25850, char_end: 25851, byte_start: 25851, byte_end: 25852, column_start: 13, column_end: 14, line_start: 761, line_end: 761 }: >
Token { kind: Text, char_start: 25851, char_end: 25853, byte_start: 25852, byte_end: 25854, column_start: 14, column_end: 16, line_start: 761, line_end: 761 }: fq
Token { kind: Space, char_start: 25853, char_end: 25854, byte_start: 25854, byte_end: 25855, column_start: 16, column_end: 17, line_start: 761, line_end: 761 }: " "
Token { kind: BlockQuote, char_start: 25854, char_end: 25855, byte_start: 25855, byte_end: 25856, column_start: 17, column_end: 18, line_start: 761, line_end: 761 }: <
Token { kind: Text, char_start: 25855, char_end: 25859, byte_start: 25856, byte_end: 25860, column_start: 18, column_end: 22, line_start: 761, line_end: 761 }: Plug
Token { kind: BlockQuote, char_start: 25859, char_end: 25860, byte_start: 25860, byte_end: 25861, column_start: 22, column_end: 23, line_start: 761, line_end: 761 }: >
Token { kind: Lparen, char_start: 25860, char_end: 25861, byte_start: 25861, byte_end: 25862, column_start: 23, column_end: 24, line_start: 761, line_end: 761 }: (
Token { kind: Text, char_start: 25861, char_end: 25872, byte_start: 25862, byte_end: 25873, column_start: 24, column_end: 35, line_start: 761, line_end: 761 }: FerretQuack
Token { kind: Rparen, char_start: 25872, char_end: 25873, byte_start: 25873, byte_end: 25874, column_start: 35, column_end: 36, line_start: 761, line_end: 761 }: )
Token { kind: Newline, char_start: 25873, char_end: 25874, byte_start: 25874, byte_end: 25875, column_start: 36, column_end: 1, line_start: 761, line_end: 762 }: "\n"
Token { kind: CodeFence, char_start: 25874, char_end: 25877, byte_start: 25875, byte_end: 25878, column_start: 1, column_end: 4, line_start: 762, line_end: 762 }: ```
Token { kind: Newline, char_start: 25877, char_end: 25878, byte_start: 25878, byte_end: 25879, column_start: 4, column_end: 1, line_start: 762, line_end: 763 }: "\n"
Token { kind: Newline, char_start: 25878, char_end: 25879, byte_start: 25879, byte_end: 25880, column_start: 1, column_end: 1, line_start: 763, line_end: 764 }: "\n"
Token { kind: At, char_start: 25879, char_end: 25880, byte_start: 25880, byte_end: 25881, column_start: 1, column_end: 2, line_start: 764, line_end: 764 }: @
Token { kind: Text, char_start: 25880, char_end: 25886, byte_start: 25881, byte_end: 25887, column_start: 2, column_end: 8, line_start: 764, line_end: 764 }: option
Token { kind: Space, char_start: 25886, char_end: 25887, byte_start: 25887, byte_end: 25888, column_start: 8, column_end: 9, line_start: 764, line_end: 764 }: " "
Token { kind: Text, char_start: 25887, char_end: 25906, byte_start: 25888, byte_end: 25907, column_start: 9, column_end: 28, line_start: 764, line_end: 764 }: g:FerretAckWordWord
Token { kind: Space, char_start: 25906, char_end: 25907, byte_start: 25907, byte_end: 25908, column_start: 28, column_end: 29, line_start: 764, line_end: 764 }: " "
Token { kind: Text, char_start: 25907, char_end: 25914, byte_start: 25908, byte_end: 25915, column_start: 29, column_end: 36, line_start: 764, line_end: 764 }: boolean
Token { kind: Space, char_start: 25914, char_end: 25915, byte_start: 25915, byte_end: 25916, column_start: 36, column_end: 37, line_start: 764, line_end: 764 }: " "
Token { kind: Text, char_start: 25915, char_end: 25916, byte_start: 25916, byte_end: 25917, column_start: 37, column_end: 38, line_start: 764, line_end: 764 }: 0
Token { kind: Newline, char_start: 25916, char_end: 25917, byte_start: 25917, byte_end: 25918, column_start: 38, column_end: 1, line_start: 764, line_end: 765 }: "\n"
Token { kind: Newline, char_start: 25917, char_end: 25918, byte_start: 25918, byte_end: 25919, column_start: 1, column_end: 1, line_start: 765, line_end: 766 }: "\n"
Token { kind: Text, char_start: 25918, char_end: 25922, byte_start: 25919, byte_end: 25923, column_start: 1, column_end: 5, line_start: 766, line_end: 766 }: When
Token { kind: Space, char_start: 25922, char_end: 25923, byte_start: 25923, byte_end: 25924, column_start: 5, column_end: 6, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25923, char_end: 25926, byte_start: 25924, byte_end: 25927, column_start: 6, column_end: 9, line_start: 766, line_end: 766 }: set
Token { kind: Space, char_start: 25926, char_end: 25927, byte_start: 25927, byte_end: 25928, column_start: 9, column_end: 10, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25927, char_end: 25929, byte_start: 25928, byte_end: 25930, column_start: 10, column_end: 12, line_start: 766, line_end: 766 }: to
Token { kind: Space, char_start: 25929, char_end: 25930, byte_start: 25930, byte_end: 25931, column_start: 12, column_end: 13, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25930, char_end: 25932, byte_start: 25931, byte_end: 25933, column_start: 13, column_end: 15, line_start: 766, line_end: 766 }: 1,
Token { kind: Space, char_start: 25932, char_end: 25933, byte_start: 25933, byte_end: 25934, column_start: 15, column_end: 16, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25933, char_end: 25939, byte_start: 25934, byte_end: 25940, column_start: 16, column_end: 22, line_start: 766, line_end: 766 }: passes
Token { kind: Space, char_start: 25939, char_end: 25940, byte_start: 25940, byte_end: 25941, column_start: 22, column_end: 23, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25940, char_end: 25943, byte_start: 25941, byte_end: 25944, column_start: 23, column_end: 26, line_start: 766, line_end: 766 }: the
Token { kind: Space, char_start: 25943, char_end: 25944, byte_start: 25944, byte_end: 25945, column_start: 26, column_end: 27, line_start: 766, line_end: 766 }: " "
Token { kind: Backtick, char_start: 25944, char_end: 25945, byte_start: 25945, byte_end: 25946, column_start: 27, column_end: 28, line_start: 766, line_end: 766 }: `
Token { kind: Hyphen, char_start: 25945, char_end: 25946, byte_start: 25946, byte_end: 25947, column_start: 28, column_end: 29, line_start: 766, line_end: 766 }: -
Token { kind: Text, char_start: 25946, char_end: 25947, byte_start: 25947, byte_end: 25948, column_start: 29, column_end: 30, line_start: 766, line_end: 766 }: w
Token { kind: Backtick, char_start: 25947, char_end: 25948, byte_start: 25948, byte_end: 25949, column_start: 30, column_end: 31, line_start: 766, line_end: 766 }: `
Token { kind: Space, char_start: 25948, char_end: 25949, byte_start: 25949, byte_end: 25950, column_start: 31, column_end: 32, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25949, char_end: 25955, byte_start: 25950, byte_end: 25956, column_start: 32, column_end: 38, line_start: 766, line_end: 766 }: option
Token { kind: Space, char_start: 25955, char_end: 25956, byte_start: 25956, byte_end: 25957, column_start: 38, column_end: 39, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25956, char_end: 25958, byte_start: 25957, byte_end: 25959, column_start: 39, column_end: 41, line_start: 766, line_end: 766 }: to
Token { kind: Space, char_start: 25958, char_end: 25959, byte_start: 25959, byte_end: 25960, column_start: 41, column_end: 42, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25959, char_end: 25962, byte_start: 25960, byte_end: 25963, column_start: 42, column_end: 45, line_start: 766, line_end: 766 }: the
Token { kind: Space, char_start: 25962, char_end: 25963, byte_start: 25963, byte_end: 25964, column_start: 45, column_end: 46, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25963, char_end: 25973, byte_start: 25964, byte_end: 25974, column_start: 46, column_end: 56, line_start: 766, line_end: 766 }: underlying
Token { kind: Space, char_start: 25973, char_end: 25974, byte_start: 25974, byte_end: 25975, column_start: 56, column_end: 57, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25974, char_end: 25980, byte_start: 25975, byte_end: 25981, column_start: 57, column_end: 63, line_start: 766, line_end: 766 }: search
Token { kind: Space, char_start: 25980, char_end: 25981, byte_start: 25981, byte_end: 25982, column_start: 63, column_end: 64, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25981, char_end: 25985, byte_start: 25982, byte_end: 25986, column_start: 64, column_end: 68, line_start: 766, line_end: 766 }: tool
Token { kind: Space, char_start: 25985, char_end: 25986, byte_start: 25986, byte_end: 25987, column_start: 68, column_end: 69, line_start: 766, line_end: 766 }: " "
Token { kind: Text, char_start: 25986, char_end: 25994, byte_start: 25987, byte_end: 25995, column_start: 69, column_end: 77, line_start: 766, line_end: 766 }: whenever
Token { kind: Newline, char_start: 25994, char_end: 25995, byte_start: 25995, byte_end: 25996, column_start: 77, column_end: 1, line_start: 766, line_end: 767 }: "\n"
Token { kind: Bar, char_start: 25995, char_end: 25996, byte_start: 25996, byte_end: 25997, column_start: 1, column_end: 2, line_start: 767, line_end: 767 }: |
Token { kind: BlockQuote, char_start: 25996, char_end: 25997, byte_start: 25997, byte_end: 25998, column_start: 2, column_end: 3, line_start: 767, line_end: 767 }: <
Token { kind: Text, char_start: 25997, char_end: 26001, byte_start: 25998, byte_end: 26002, column_start: 3, column_end: 7, line_start: 767, line_end: 767 }: Plug
Token { kind: BlockQuote, char_start: 26001, char_end: 26002, byte_start: 26002, byte_end: 26003, column_start: 7, column_end: 8, line_start: 767, line_end: 767 }: >
Token { kind: Lparen, char_start: 26002, char_end: 26003, byte_start: 26003, byte_end: 26004, column_start: 8, column_end: 9, line_start: 767, line_end: 767 }: (
Token { kind: Text, char_start: 26003, char_end: 26016, byte_start: 26004, byte_end: 26017, column_start: 9, column_end: 22, line_start: 767, line_end: 767 }: FerretAckWord
Token { kind: Rparen, char_start: 26016, char_end: 26017, byte_start: 26017, byte_end: 26018, column_start: 22, column_end: 23, line_start: 767, line_end: 767 }: )
Token { kind: Bar, char_start: 26017, char_end: 26018, byte_start: 26018, byte_end: 26019, column_start: 23, column_end: 24, line_start: 767, line_end: 767 }: |
Token { kind: Space, char_start: 26018, char_end: 26019, byte_start: 26019, byte_end: 26020, column_start: 24, column_end: 25, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26019, char_end: 26021, byte_start: 26020, byte_end: 26022, column_start: 25, column_end: 27, line_start: 767, line_end: 767 }: is
Token { kind: Space, char_start: 26021, char_end: 26022, byte_start: 26022, byte_end: 26023, column_start: 27, column_end: 28, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26022, char_end: 26030, byte_start: 26023, byte_end: 26031, column_start: 28, column_end: 36, line_start: 767, line_end: 767 }: pressed.
Token { kind: Space, char_start: 26030, char_end: 26031, byte_start: 26031, byte_end: 26032, column_start: 36, column_end: 37, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26031, char_end: 26035, byte_start: 26032, byte_end: 26036, column_start: 37, column_end: 41, line_start: 767, line_end: 767 }: This
Token { kind: Space, char_start: 26035, char_end: 26036, byte_start: 26036, byte_end: 26037, column_start: 41, column_end: 42, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26036, char_end: 26042, byte_start: 26037, byte_end: 26043, column_start: 42, column_end: 48, line_start: 767, line_end: 767 }: forces
Token { kind: Space, char_start: 26042, char_end: 26043, byte_start: 26043, byte_end: 26044, column_start: 48, column_end: 49, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26043, char_end: 26046, byte_start: 26044, byte_end: 26047, column_start: 49, column_end: 52, line_start: 767, line_end: 767 }: the
Token { kind: Space, char_start: 26046, char_end: 26047, byte_start: 26047, byte_end: 26048, column_start: 52, column_end: 53, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26047, char_end: 26051, byte_start: 26048, byte_end: 26052, column_start: 53, column_end: 57, line_start: 767, line_end: 767 }: tool
Token { kind: Space, char_start: 26051, char_end: 26052, byte_start: 26052, byte_end: 26053, column_start: 57, column_end: 58, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26052, char_end: 26054, byte_start: 26053, byte_end: 26055, column_start: 58, column_end: 60, line_start: 767, line_end: 767 }: to
Token { kind: Space, char_start: 26054, char_end: 26055, byte_start: 26055, byte_end: 26056, column_start: 60, column_end: 61, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26055, char_end: 26060, byte_start: 26056, byte_end: 26061, column_start: 61, column_end: 66, line_start: 767, line_end: 767 }: match
Token { kind: Space, char_start: 26060, char_end: 26061, byte_start: 26061, byte_end: 26062, column_start: 66, column_end: 67, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26061, char_end: 26065, byte_start: 26062, byte_end: 26066, column_start: 67, column_end: 71, line_start: 767, line_end: 767 }: only
Token { kind: Space, char_start: 26065, char_end: 26066, byte_start: 26066, byte_end: 26067, column_start: 71, column_end: 72, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26066, char_end: 26068, byte_start: 26067, byte_end: 26069, column_start: 72, column_end: 74, line_start: 767, line_end: 767 }: on
Token { kind: Space, char_start: 26068, char_end: 26069, byte_start: 26069, byte_end: 26070, column_start: 74, column_end: 75, line_start: 767, line_end: 767 }: " "
Token { kind: Text, char_start: 26069, char_end: 26073, byte_start: 26070, byte_end: 26074, column_start: 75, column_end: 79, line_start: 767, line_end: 767 }: word
Token { kind: Newline, char_start: 26073, char_end: 26074, byte_start: 26074, byte_end: 26075, column_start: 79, column_end: 1, line_start: 767, line_end: 768 }: "\n"
Token { kind: Text, char_start: 26074, char_end: 26084, byte_start: 26075, byte_end: 26085, column_start: 1, column_end: 11, line_start: 768, line_end: 768 }: boundaries
Token { kind: Space, char_start: 26084, char_end: 26085, byte_start: 26085, byte_end: 26086, column_start: 11, column_end: 12, line_start: 768, line_end: 768 }: " "
Token { kind: Lparen, char_start: 26085, char_end: 26086, byte_start: 26086, byte_end: 26087, column_start: 12, column_end: 13, line_start: 768, line_end: 768 }: (
Token { kind: Text, char_start: 26086, char_end: 26089, byte_start: 26087, byte_end: 26090, column_start: 13, column_end: 16, line_start: 768, line_end: 768 }: ie.
Token { kind: Space, char_start: 26089, char_end: 26090, byte_start: 26090, byte_end: 26091, column_start: 16, column_end: 17, line_start: 768, line_end: 768 }: " "
Token { kind: Text, char_start: 26090, char_end: 26099, byte_start: 26091, byte_end: 26100, column_start: 17, column_end: 26, line_start: 768, line_end: 768 }: analagous
Token { kind: Space, char_start: 26099, char_end: 26100, byte_start: 26100, byte_end: 26101, column_start: 26, column_end: 27, line_start: 768, line_end: 768 }: " "
Token { kind: Text, char_start: 26100, char_end: 26102, byte_start: 26101, byte_end: 26103, column_start: 27, column_end: 29, line_start: 768, line_end: 768 }: to
Token { kind: Space, char_start: 26102, char_end: 26103, byte_start: 26103, byte_end: 26104, column_start: 29, column_end: 30, line_start: 768, line_end: 768 }: " "
Token { kind: Text, char_start: 26103, char_end: 26108, byte_start: 26104, byte_end: 26109, column_start: 30, column_end: 35, line_start: 768, line_end: 768 }: Vim's
Token { kind: Space, char_start: 26108, char_end: 26109, byte_start: 26109, byte_end: 26110, column_start: 35, column_end: 36, line_start: 768, line_end: 768 }: " "
Token { kind: Bar, char_start: 26109, char_end: 26110, byte_start: 26110, byte_end: 26111, column_start: 36, column_end: 37, line_start: 768, line_end: 768 }: |
Token { kind: Text, char_start: 26110, char_end: 26114, byte_start: 26111, byte_end: 26115, column_start: 37, column_end: 41, line_start: 768, line_end: 768 }: star
Token { kind: Bar, char_start: 26114, char_end: 26115, byte_start: 26115, byte_end: 26116, column_start: 41, column_end: 42, line_start: 768, line_end: 768 }: |
Token { kind: Space, char_start: 26115, char_end: 26116, byte_start: 26116, byte_end: 26117, column_start: 42, column_end: 43, line_start: 768, line_end: 768 }: " "
Token { kind: Text, char_start: 26116, char_end: 26123, byte_start: 26117, byte_end: 26124, column_start: 43, column_end: 50, line_start: 768, line_end: 768 }: mapping
Token { kind: Rparen, char_start: 26123, char_end: 26124, byte_start: 26124, byte_end: 26125, column_start: 50, column_end: 51, line_start: 768, line_end: 768 }: )
Token { kind: Text, char_start: 26124, char_end: 26125, byte_start: 26125, byte_end: 26126, column_start: 51, column_end: 52, line_start: 768, line_end: 768 }: .
Token { kind: Newline, char_start: 26125, char_end: 26126, byte_start: 26126, byte_end: 26127, column_start: 52, column_end: 1, line_start: 768, line_end: 769 }: "\n"
Token { kind: Newline, char_start: 26126, char_end: 26127, byte_start: 26127, byte_end: 26128, column_start: 1, column_end: 1, line_start: 769, line_end: 770 }: "\n"
Token { kind: Text, char_start: 26127, char_end: 26130, byte_start: 26128, byte_end: 26131, column_start: 1, column_end: 4, line_start: 770, line_end: 770 }: The
Token { kind: Space, char_start: 26130, char_end: 26131, byte_start: 26131, byte_end: 26132, column_start: 4, column_end: 5, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26131, char_end: 26138, byte_start: 26132, byte_end: 26139, column_start: 5, column_end: 12, line_start: 770, line_end: 770 }: default
Token { kind: Space, char_start: 26138, char_end: 26139, byte_start: 26139, byte_end: 26140, column_start: 12, column_end: 13, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26139, char_end: 26141, byte_start: 26140, byte_end: 26142, column_start: 13, column_end: 15, line_start: 770, line_end: 770 }: is
Token { kind: Space, char_start: 26141, char_end: 26142, byte_start: 26142, byte_end: 26143, column_start: 15, column_end: 16, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26142, char_end: 26144, byte_start: 26143, byte_end: 26145, column_start: 16, column_end: 18, line_start: 770, line_end: 770 }: 0,
Token { kind: Space, char_start: 26144, char_end: 26145, byte_start: 26145, byte_end: 26146, column_start: 18, column_end: 19, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26145, char_end: 26150, byte_start: 26146, byte_end: 26151, column_start: 19, column_end: 24, line_start: 770, line_end: 770 }: which
Token { kind: Space, char_start: 26150, char_end: 26151, byte_start: 26151, byte_end: 26152, column_start: 24, column_end: 25, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26151, char_end: 26156, byte_start: 26152, byte_end: 26157, column_start: 25, column_end: 30, line_start: 770, line_end: 770 }: means
Token { kind: Space, char_start: 26156, char_end: 26157, byte_start: 26157, byte_end: 26158, column_start: 30, column_end: 31, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26157, char_end: 26160, byte_start: 26158, byte_end: 26161, column_start: 31, column_end: 34, line_start: 770, line_end: 770 }: the
Token { kind: Space, char_start: 26160, char_end: 26161, byte_start: 26161, byte_end: 26162, column_start: 34, column_end: 35, line_start: 770, line_end: 770 }: " "
Token { kind: Backtick, char_start: 26161, char_end: 26162, byte_start: 26162, byte_end: 26163, column_start: 35, column_end: 36, line_start: 770, line_end: 770 }: `
Token { kind: Hyphen, char_start: 26162, char_end: 26163, byte_start: 26163, byte_end: 26164, column_start: 36, column_end: 37, line_start: 770, line_end: 770 }: -
Token { kind: Text, char_start: 26163, char_end: 26164, byte_start: 26164, byte_end: 26165, column_start: 37, column_end: 38, line_start: 770, line_end: 770 }: w
Token { kind: Backtick, char_start: 26164, char_end: 26165, byte_start: 26165, byte_end: 26166, column_start: 38, column_end: 39, line_start: 770, line_end: 770 }: `
Token { kind: Space, char_start: 26165, char_end: 26166, byte_start: 26166, byte_end: 26167, column_start: 39, column_end: 40, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26166, char_end: 26172, byte_start: 26167, byte_end: 26173, column_start: 40, column_end: 46, line_start: 770, line_end: 770 }: option
Token { kind: Space, char_start: 26172, char_end: 26173, byte_start: 26173, byte_end: 26174, column_start: 46, column_end: 47, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26173, char_end: 26175, byte_start: 26174, byte_end: 26176, column_start: 47, column_end: 49, line_start: 770, line_end: 770 }: is
Token { kind: Space, char_start: 26175, char_end: 26176, byte_start: 26176, byte_end: 26177, column_start: 49, column_end: 50, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26176, char_end: 26179, byte_start: 26177, byte_end: 26180, column_start: 50, column_end: 53, line_start: 770, line_end: 770 }: not
Token { kind: Space, char_start: 26179, char_end: 26180, byte_start: 26180, byte_end: 26181, column_start: 53, column_end: 54, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26180, char_end: 26186, byte_start: 26181, byte_end: 26187, column_start: 54, column_end: 60, line_start: 770, line_end: 770 }: passed
Token { kind: Space, char_start: 26186, char_end: 26187, byte_start: 26187, byte_end: 26188, column_start: 60, column_end: 61, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26187, char_end: 26190, byte_start: 26188, byte_end: 26191, column_start: 61, column_end: 64, line_start: 770, line_end: 770 }: and
Token { kind: Space, char_start: 26190, char_end: 26191, byte_start: 26191, byte_end: 26192, column_start: 64, column_end: 65, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26191, char_end: 26198, byte_start: 26192, byte_end: 26199, column_start: 65, column_end: 72, line_start: 770, line_end: 770 }: matches
Token { kind: Space, char_start: 26198, char_end: 26199, byte_start: 26199, byte_end: 26200, column_start: 72, column_end: 73, line_start: 770, line_end: 770 }: " "
Token { kind: Text, char_start: 26199, char_end: 26203, byte_start: 26200, byte_end: 26204, column_start: 73, column_end: 77, line_start: 770, line_end: 770 }: need
Token { kind: Newline, char_start: 26203, char_end: 26204, byte_start: 26204, byte_end: 26205, column_start: 77, column_end: 1, line_start: 770, line_end: 771 }: "\n"
Token { kind: Text, char_start: 26204, char_end: 26207, byte_start: 26205, byte_end: 26208, column_start: 1, column_end: 4, line_start: 771, line_end: 771 }: not
Token { kind: Space, char_start: 26207, char_end: 26208, byte_start: 26208, byte_end: 26209, column_start: 4, column_end: 5, line_start: 771, line_end: 771 }: " "
Token { kind: Text, char_start: 26208, char_end: 26213, byte_start: 26209, byte_end: 26214, column_start: 5, column_end: 10, line_start: 771, line_end: 771 }: occur
Token { kind: Space, char_start: 26213, char_end: 26214, byte_start: 26214, byte_end: 26215, column_start: 10, column_end: 11, line_start: 771, line_end: 771 }: " "
Token { kind: Text, char_start: 26214, char_end: 26216, byte_start: 26215, byte_end: 26217, column_start: 11, column_end: 13, line_start: 771, line_end: 771 }: on
Token { kind: Space, char_start: 26216, char_end: 26217, byte_start: 26217, byte_end: 26218, column_start: 13, column_end: 14, line_start: 771, line_end: 771 }: " "
Token { kind: Text, char_start: 26217, char_end: 26221, byte_start: 26218, byte_end: 26222, column_start: 14, column_end: 18, line_start: 771, line_end: 771 }: word
Token { kind: Space, char_start: 26221, char_end: 26222, byte_start: 26222, byte_end: 26223, column_start: 18, column_end: 19, line_start: 771, line_end: 771 }: " "
Token { kind: Text, char_start: 26222, char_end: 26232, byte_start: 26223, byte_end: 26233, column_start: 19, column_end: 29, line_start: 771, line_end: 771 }: boundaries
Token { kind: Space, char_start: 26232, char_end: 26233, byte_start: 26233, byte_end: 26234, column_start: 29, column_end: 30, line_start: 771, line_end: 771 }: " "
Token { kind: Lparen, char_start: 26233, char_end: 26234, byte_start: 26234, byte_end: 26235, column_start: 30, column_end: 31, line_start: 771, line_end: 771 }: (
Token { kind: Text, char_start: 26234, char_end: 26237, byte_start: 26235, byte_end: 26238, column_start: 31, column_end: 34, line_start: 771, line_end: 771 }: ie.
Token { kind: Space, char_start: 26237, char_end: 26238, byte_start: 26238, byte_end: 26239, column_start: 34, column_end: 35, line_start: 771, line_end: 771 }: " "
Token { kind: Text, char_start: 26238, char_end: 26247, byte_start: 26239, byte_end: 26248, column_start: 35, column_end: 44, line_start: 771, line_end: 771 }: analagous
Token { kind: Space, char_start: 26247, char_end: 26248, byte_start: 26248, byte_end: 26249, column_start: 44, column_end: 45, line_start: 771, line_end: 771 }: " "
Token { kind: Text, char_start: 26248, char_end: 26250, byte_start: 26249, byte_end: 26251, column_start: 45, column_end: 47, line_start: 771, line_end: 771 }: to
Token { kind: Space, char_start: 26250, char_end: 26251, byte_start: 26251, byte_end: 26252, column_start: 47, column_end: 48, line_start: 771, line_end: 771 }: " "
Token { kind: Text, char_start: 26251, char_end: 26256, byte_start: 26252, byte_end: 26257, column_start: 48, column_end: 53, line_start: 771, line_end: 771 }: Vim's
Token { kind: Space, char_start: 26256, char_end: 26257, byte_start: 26257, byte_end: 26258, column_start: 53, column_end: 54, line_start: 771, line_end: 771 }: " "
Token { kind: Bar, char_start: 26257, char_end: 26258, byte_start: 26258, byte_end: 26259, column_start: 54, column_end: 55, line_start: 771, line_end: 771 }: |
Token { kind: Text, char_start: 26258, char_end: 26263, byte_start: 26259, byte_end: 26264, column_start: 55, column_end: 60, line_start: 771, line_end: 771 }: gstar
Token { kind: Bar, char_start: 26263, char_end: 26264, byte_start: 26264, byte_end: 26265, column_start: 60, column_end: 61, line_start: 771, line_end: 771 }: |
Token { kind: Space, char_start: 26264, char_end: 26265, byte_start: 26265, byte_end: 26266, column_start: 61, column_end: 62, line_start: 771, line_end: 771 }: " "
Token { kind: Text, char_start: 26265, char_end: 26272, byte_start: 26266, byte_end: 26273, column_start: 62, column_end: 69, line_start: 771, line_end: 771 }: mapping
Token { kind: Rparen, char_start: 26272, char_end: 26273, byte_start: 26273, byte_end: 26274, column_start: 69, column_end: 70, line_start: 771, line_end: 771 }: )
Token { kind: Text, char_start: 26273, char_end: 26274, byte_start: 26274, byte_end: 26275, column_start: 70, column_end: 71, line_start: 771, line_end: 771 }: .
Token { kind: Newline, char_start: 26274, char_end: 26275, byte_start: 26275, byte_end: 26276, column_start: 71, column_end: 1, line_start: 771, line_end: 772 }: "\n"
Token { kind: Newline, char_start: 26275, char_end: 26276, byte_start: 26276, byte_end: 26277, column_start: 1, column_end: 1, line_start: 772, line_end: 773 }: "\n"
Token { kind: Text, char_start: 26276, char_end: 26278, byte_start: 26277, byte_end: 26279, column_start: 1, column_end: 3, line_start: 773, line_end: 773 }: To
Token { kind: Space, char_start: 26278, char_end: 26279, byte_start: 26279, byte_end: 26280, column_start: 3, column_end: 4, line_start: 773, line_end: 773 }: " "
Token { kind: Text, char_start: 26279, char_end: 26287, byte_start: 26280, byte_end: 26288, column_start: 4, column_end: 12, line_start: 773, line_end: 773 }: override
Token { kind: Space, char_start: 26287, char_end: 26288, byte_start: 26288, byte_end: 26289, column_start: 12, column_end: 13, line_start: 773, line_end: 773 }: " "
Token { kind: Text, char_start: 26288, char_end: 26291, byte_start: 26289, byte_end: 26292, column_start: 13, column_end: 16, line_start: 773, line_end: 773 }: the
Token { kind: Space, char_start: 26291, char_end: 26292, byte_start: 26292, byte_end: 26293, column_start: 16, column_end: 17, line_start: 773, line_end: 773 }: " "
Token { kind: Text, char_start: 26292, char_end: 26300, byte_start: 26293, byte_end: 26301, column_start: 17, column_end: 25, line_start: 773, line_end: 773 }: default:
Token { kind: Newline, char_start: 26300, char_end: 26301, byte_start: 26301, byte_end: 26302, column_start: 25, column_end: 1, line_start: 773, line_end: 774 }: "\n"
Token { kind: Newline, char_start: 26301, char_end: 26302, byte_start: 26302, byte_end: 26303, column_start: 1, column_end: 1, line_start: 774, line_end: 775 }: "\n"
Token { kind: CodeFence, char_start: 26302, char_end: 26305, byte_start: 26303, byte_end: 26306, column_start: 1, column_end: 4, line_start: 775, line_end: 775 }: ```
Token { kind: Newline, char_start: 26305, char_end: 26306, byte_start: 26306, byte_end: 26307, column_start: 4, column_end: 1, line_start: 775, line_end: 776 }: "\n"
Token { kind: Text, char_start: 26306, char_end: 26309, byte_start: 26307, byte_end: 26310, column_start: 1, column_end: 4, line_start: 776, line_end: 776 }: let
Token { kind: Space, char_start: 26309, char_end: 26310, byte_start: 26310, byte_end: 26311, column_start: 4, column_end: 5, line_start: 776, line_end: 776 }: " "
Token { kind: Text, char_start: 26310, char_end: 26331, byte_start: 26311, byte_end: 26332, column_start: 5, column_end: 26, line_start: 776, line_end: 776 }: g:FerretAckWordWord=1
Token { kind: Newline, char_start: 26331, char_end: 26332, byte_start: 26332, byte_end: 26333, column_start: 26, column_end: 1, line_start: 776, line_end: 777 }: "\n"
Token { kind: CodeFence, char_start: 26332, char_end: 26335, byte_start: 26333, byte_end: 26336, column_start: 1, column_end: 4, line_start: 777, line_end: 777 }: ```
Token { kind: Newline, char_start: 26335, char_end: 26336, byte_start: 26336, byte_end: 26337, column_start: 4, column_end: 1, line_start: 777, line_end: 778 }: "\n"
Token { kind: Newline, char_start: 26336, char_end: 26337, byte_start: 26337, byte_end: 26338, column_start: 1, column_end: 1, line_start: 778, line_end: 779 }: "\n"
Token { kind: At, char_start: 26337, char_end: 26338, byte_start: 26338, byte_end: 26339, column_start: 1, column_end: 2, line_start: 779, line_end: 779 }: @
Token { kind: Text, char_start: 26338, char_end: 26344, byte_start: 26339, byte_end: 26345, column_start: 2, column_end: 8, line_start: 779, line_end: 779 }: option
Token { kind: Space, char_start: 26344, char_end: 26345, byte_start: 26345, byte_end: 26346, column_start: 8, column_end: 9, line_start: 779, line_end: 779 }: " "
Token { kind: Text, char_start: 26345, char_end: 26356, byte_start: 26346, byte_end: 26357, column_start: 9, column_end: 20, line_start: 779, line_end: 779 }: g:FerretMap
Token { kind: Space, char_start: 26356, char_end: 26357, byte_start: 26357, byte_end: 26358, column_start: 20, column_end: 21, line_start: 779, line_end: 779 }: " "
Token { kind: Text, char_start: 26357, char_end: 26364, byte_start: 26358, byte_end: 26365, column_start: 21, column_end: 28, line_start: 779, line_end: 779 }: boolean
Token { kind: Space, char_start: 26364, char_end: 26365, byte_start: 26365, byte_end: 26366, column_start: 28, column_end: 29, line_start: 779, line_end: 779 }: " "
Token { kind: Text, char_start: 26365, char_end: 26366, byte_start: 26366, byte_end: 26367, column_start: 29, column_end: 30, line_start: 779, line_end: 779 }: 1
Token { kind: Newline, char_start: 26366, char_end: 26367, byte_start: 26367, byte_end: 26368, column_start: 30, column_end: 1, line_start: 779, line_end: 780 }: "\n"
Token { kind: Newline, char_start: 26367, char_end: 26368, byte_start: 26368, byte_end: 26369, column_start: 1, column_end: 1, line_start: 780, line_end: 781 }: "\n"
Token { kind: Text, char_start: 26368, char_end: 26376, byte_start: 26369, byte_end: 26377, column_start: 1, column_end: 9, line_start: 781, line_end: 781 }: Controls
Token { kind: Space, char_start: 26376, char_end: 26377, byte_start: 26377, byte_end: 26378, column_start: 9, column_end: 10, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26377, char_end: 26384, byte_start: 26378, byte_end: 26385, column_start: 10, column_end: 17, line_start: 781, line_end: 781 }: whether
Token { kind: Space, char_start: 26384, char_end: 26385, byte_start: 26385, byte_end: 26386, column_start: 17, column_end: 18, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26385, char_end: 26387, byte_start: 26386, byte_end: 26388, column_start: 18, column_end: 20, line_start: 781, line_end: 781 }: to
Token { kind: Space, char_start: 26387, char_end: 26388, byte_start: 26388, byte_end: 26389, column_start: 20, column_end: 21, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26388, char_end: 26391, byte_start: 26389, byte_end: 26392, column_start: 21, column_end: 24, line_start: 781, line_end: 781 }: set
Token { kind: Space, char_start: 26391, char_end: 26392, byte_start: 26392, byte_end: 26393, column_start: 24, column_end: 25, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26392, char_end: 26394, byte_start: 26393, byte_end: 26395, column_start: 25, column_end: 27, line_start: 781, line_end: 781 }: up
Token { kind: Space, char_start: 26394, char_end: 26395, byte_start: 26395, byte_end: 26396, column_start: 27, column_end: 28, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26395, char_end: 26398, byte_start: 26396, byte_end: 26399, column_start: 28, column_end: 31, line_start: 781, line_end: 781 }: the
Token { kind: Space, char_start: 26398, char_end: 26399, byte_start: 26399, byte_end: 26400, column_start: 31, column_end: 32, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26399, char_end: 26405, byte_start: 26400, byte_end: 26406, column_start: 32, column_end: 38, line_start: 781, line_end: 781 }: Ferret
Token { kind: Space, char_start: 26405, char_end: 26406, byte_start: 26406, byte_end: 26407, column_start: 38, column_end: 39, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26406, char_end: 26415, byte_start: 26407, byte_end: 26416, column_start: 39, column_end: 48, line_start: 781, line_end: 781 }: mappings,
Token { kind: Space, char_start: 26415, char_end: 26416, byte_start: 26416, byte_end: 26417, column_start: 48, column_end: 49, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26416, char_end: 26420, byte_start: 26417, byte_end: 26421, column_start: 49, column_end: 53, line_start: 781, line_end: 781 }: such
Token { kind: Space, char_start: 26420, char_end: 26421, byte_start: 26421, byte_end: 26422, column_start: 53, column_end: 54, line_start: 781, line_end: 781 }: " "
Token { kind: Text, char_start: 26421, char_end: 26423, byte_start: 26422, byte_end: 26424, column_start: 54, column_end: 56, line_start: 781, line_end: 781 }: as
Token { kind: Space, char_start: 26423, char_end: 26424, byte_start: 26424, byte_end: 26425, column_start: 56, column_end: 57, line_start: 781, line_end: 781 }: " "
Token { kind: Bar, char_start: 26424, char_end: 26425, byte_start: 26425, byte_end: 26426, column_start: 57, column_end: 58, line_start: 781, line_end: 781 }: |
Token { kind: BlockQuote, char_start: 26425, char_end: 26426, byte_start: 26426, byte_end: 26427, column_start: 58, column_end: 59, line_start: 781, line_end: 781 }: <
Token { kind: Text, char_start: 26426, char_end: 26430, byte_start: 26427, byte_end: 26431, column_start: 59, column_end: 63, line_start: 781, line_end: 781 }: Plug
Token { kind: BlockQuote, char_start: 26430, char_end: 26431, byte_start: 26431, byte_end: 26432, column_start: 63, column_end: 64, line_start: 781, line_end: 781 }: >
Token { kind: Lparen, char_start: 26431, char_end: 26432, byte_start: 26432, byte_end: 26433, column_start: 64, column_end: 65, line_start: 781, line_end: 781 }: (
Token { kind: Text, char_start: 26432, char_end: 26441, byte_start: 26433, byte_end: 26442, column_start: 65, column_end: 74, line_start: 781, line_end: 781 }: FerretAck
Token { kind: Rparen, char_start: 26441, char_end: 26442, byte_start: 26442, byte_end: 26443, column_start: 74, column_end: 75, line_start: 781, line_end: 781 }: )
Token { kind: Bar, char_start: 26442, char_end: 26443, byte_start: 26443, byte_end: 26444, column_start: 75, column_end: 76, line_start: 781, line_end: 781 }: |
Token { kind: Newline, char_start: 26443, char_end: 26444, byte_start: 26444, byte_end: 26445, column_start: 76, column_end: 1, line_start: 781, line_end: 782 }: "\n"
Token { kind: Lparen, char_start: 26444, char_end: 26445, byte_start: 26445, byte_end: 26446, column_start: 1, column_end: 2, line_start: 782, line_end: 782 }: (
Token { kind: Text, char_start: 26445, char_end: 26448, byte_start: 26446, byte_end: 26449, column_start: 2, column_end: 5, line_start: 782, line_end: 782 }: see
Token { kind: Space, char_start: 26448, char_end: 26449, byte_start: 26449, byte_end: 26450, column_start: 5, column_end: 6, line_start: 782, line_end: 782 }: " "
Token { kind: Bar, char_start: 26449, char_end: 26450, byte_start: 26450, byte_end: 26451, column_start: 6, column_end: 7, line_start: 782, line_end: 782 }: |
Token { kind: Text, char_start: 26450, char_end: 26456, byte_start: 26451, byte_end: 26457, column_start: 7, column_end: 13, line_start: 782, line_end: 782 }: ferret
Token { kind: Hyphen, char_start: 26456, char_end: 26457, byte_start: 26457, byte_end: 26458, column_start: 13, column_end: 14, line_start: 782, line_end: 782 }: -
Token { kind: Text, char_start: 26457, char_end: 26465, byte_start: 26458, byte_end: 26466, column_start: 14, column_end: 22, line_start: 782, line_end: 782 }: mappings
Token { kind: Bar, char_start: 26465, char_end: 26466, byte_start: 26466, byte_end: 26467, column_start: 22, column_end: 23, line_start: 782, line_end: 782 }: |
Token { kind: Space, char_start: 26466, char_end: 26467, byte_start: 26467, byte_end: 26468, column_start: 23, column_end: 24, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26467, char_end: 26470, byte_start: 26468, byte_end: 26471, column_start: 24, column_end: 27, line_start: 782, line_end: 782 }: for
Token { kind: Space, char_start: 26470, char_end: 26471, byte_start: 26471, byte_end: 26472, column_start: 27, column_end: 28, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26471, char_end: 26472, byte_start: 26472, byte_end: 26473, column_start: 28, column_end: 29, line_start: 782, line_end: 782 }: a
Token { kind: Space, char_start: 26472, char_end: 26473, byte_start: 26473, byte_end: 26474, column_start: 29, column_end: 30, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26473, char_end: 26477, byte_start: 26474, byte_end: 26478, column_start: 30, column_end: 34, line_start: 782, line_end: 782 }: full
Token { kind: Space, char_start: 26477, char_end: 26478, byte_start: 26478, byte_end: 26479, column_start: 34, column_end: 35, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26478, char_end: 26482, byte_start: 26479, byte_end: 26483, column_start: 35, column_end: 39, line_start: 782, line_end: 782 }: list
Token { kind: Rparen, char_start: 26482, char_end: 26483, byte_start: 26483, byte_end: 26484, column_start: 39, column_end: 40, line_start: 782, line_end: 782 }: )
Token { kind: Text, char_start: 26483, char_end: 26484, byte_start: 26484, byte_end: 26485, column_start: 40, column_end: 41, line_start: 782, line_end: 782 }: .
Token { kind: Space, char_start: 26484, char_end: 26485, byte_start: 26485, byte_end: 26486, column_start: 41, column_end: 42, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26485, char_end: 26487, byte_start: 26486, byte_end: 26488, column_start: 42, column_end: 44, line_start: 782, line_end: 782 }: To
Token { kind: Space, char_start: 26487, char_end: 26488, byte_start: 26488, byte_end: 26489, column_start: 44, column_end: 45, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26488, char_end: 26495, byte_start: 26489, byte_end: 26496, column_start: 45, column_end: 52, line_start: 782, line_end: 782 }: prevent
Token { kind: Space, char_start: 26495, char_end: 26496, byte_start: 26496, byte_end: 26497, column_start: 52, column_end: 53, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26496, char_end: 26499, byte_start: 26497, byte_end: 26500, column_start: 53, column_end: 56, line_start: 782, line_end: 782 }: any
Token { kind: Space, char_start: 26499, char_end: 26500, byte_start: 26500, byte_end: 26501, column_start: 56, column_end: 57, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26500, char_end: 26507, byte_start: 26501, byte_end: 26508, column_start: 57, column_end: 64, line_start: 782, line_end: 782 }: mapping
Token { kind: Space, char_start: 26507, char_end: 26508, byte_start: 26508, byte_end: 26509, column_start: 64, column_end: 65, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26508, char_end: 26512, byte_start: 26509, byte_end: 26513, column_start: 65, column_end: 69, line_start: 782, line_end: 782 }: from
Token { kind: Space, char_start: 26512, char_end: 26513, byte_start: 26513, byte_end: 26514, column_start: 69, column_end: 70, line_start: 782, line_end: 782 }: " "
Token { kind: Text, char_start: 26513, char_end: 26518, byte_start: 26514, byte_end: 26519, column_start: 70, column_end: 75, line_start: 782, line_end: 782 }: being
Token { kind: Newline, char_start: 26518, char_end: 26519, byte_start: 26519, byte_end: 26520, column_start: 75, column_end: 1, line_start: 782, line_end: 783 }: "\n"
Token { kind: Text, char_start: 26519, char_end: 26530, byte_start: 26520, byte_end: 26531, column_start: 1, column_end: 12, line_start: 783, line_end: 783 }: configured,
Token { kind: Space, char_start: 26530, char_end: 26531, byte_start: 26531, byte_end: 26532, column_start: 12, column_end: 13, line_start: 783, line_end: 783 }: " "
Token { kind: Text, char_start: 26531, char_end: 26534, byte_start: 26532, byte_end: 26535, column_start: 13, column_end: 16, line_start: 783, line_end: 783 }: set
Token { kind: Space, char_start: 26534, char_end: 26535, byte_start: 26535, byte_end: 26536, column_start: 16, column_end: 17, line_start: 783, line_end: 783 }: " "
Token { kind: Text, char_start: 26535, char_end: 26537, byte_start: 26536, byte_end: 26538, column_start: 17, column_end: 19, line_start: 783, line_end: 783 }: to
Token { kind: Space, char_start: 26537, char_end: 26538, byte_start: 26538, byte_end: 26539, column_start: 19, column_end: 20, line_start: 783, line_end: 783 }: " "
Token { kind: Text, char_start: 26538, char_end: 26540, byte_start: 26539, byte_end: 26541, column_start: 20, column_end: 22, line_start: 783, line_end: 783 }: 0:
Token { kind: Newline, char_start: 26540, char_end: 26541, byte_start: 26541, byte_end: 26542, column_start: 22, column_end: 1, line_start: 783, line_end: 784 }: "\n"
Token { kind: Newline, char_start: 26541, char_end: 26542, byte_start: 26542, byte_end: 26543, column_start: 1, column_end: 1, line_start: 784, line_end: 785 }: "\n"
Token { kind: CodeFence, char_start: 26542, char_end: 26545, byte_start: 26543, byte_end: 26546, column_start: 1, column_end: 4, line_start: 785, line_end: 785 }: ```
Token { kind: Newline, char_start: 26545, char_end: 26546, byte_start: 26546, byte_end: 26547, column_start: 4, column_end: 1, line_start: 785, line_end: 786 }: "\n"
Token { kind: Text, char_start: 26546, char_end: 26549, byte_start: 26547, byte_end: 26550, column_start: 1, column_end: 4, line_start: 786, line_end: 786 }: let
Token { kind: Space, char_start: 26549, char_end: 26550, byte_start: 26550, byte_end: 26551, column_start: 4, column_end: 5, line_start: 786, line_end: 786 }: " "
Token { kind: Text, char_start: 26550, char_end: 26563, byte_start: 26551, byte_end: 26564, column_start: 5, column_end: 18, line_start: 786, line_end: 786 }: g:FerretMap=0
Token { kind: Newline, char_start: 26563, char_end: 26564, byte_start: 26564, byte_end: 26565, column_start: 18, column_end: 1, line_start: 786, line_end: 787 }: "\n"
Token { kind: CodeFence, char_start: 26564, char_end: 26567, byte_start: 26565, byte_end: 26568, column_start: 1, column_end: 4, line_start: 787, line_end: 787 }: ```
Token { kind: Newline, char_start: 26567, char_end: 26568, byte_start: 26568, byte_end: 26569, column_start: 4, column_end: 1, line_start: 787, line_end: 788 }: "\n"
Token { kind: Newline, char_start: 26568, char_end: 26569, byte_start: 26569, byte_end: 26570, column_start: 1, column_end: 1, line_start: 788, line_end: 789 }: "\n"
Token { kind: At, char_start: 26569, char_end: 26570, byte_start: 26570, byte_end: 26571, column_start: 1, column_end: 2, line_start: 789, line_end: 789 }: @
Token { kind: Text, char_start: 26570, char_end: 26577, byte_start: 26571, byte_end: 26578, column_start: 2, column_end: 9, line_start: 789, line_end: 789 }: mapping
Token { kind: Space, char_start: 26577, char_end: 26578, byte_start: 26578, byte_end: 26579, column_start: 9, column_end: 10, line_start: 789, line_end: 789 }: " "
Token { kind: BlockQuote, char_start: 26578, char_end: 26579, byte_start: 26579, byte_end: 26580, column_start: 10, column_end: 11, line_start: 789, line_end: 789 }: <
Token { kind: Text, char_start: 26579, char_end: 26583, byte_start: 26580, byte_end: 26584, column_start: 11, column_end: 15, line_start: 789, line_end: 789 }: Plug
Token { kind: BlockQuote, char_start: 26583, char_end: 26584, byte_start: 26584, byte_end: 26585, column_start: 15, column_end: 16, line_start: 789, line_end: 789 }: >
Token { kind: Lparen, char_start: 26584, char_end: 26585, byte_start: 26585, byte_end: 26586, column_start: 16, column_end: 17, line_start: 789, line_end: 789 }: (
Token { kind: Text, char_start: 26585, char_end: 26594, byte_start: 26586, byte_end: 26595, column_start: 17, column_end: 26, line_start: 789, line_end: 789 }: FerretAck
Token { kind: Rparen, char_start: 26594, char_end: 26595, byte_start: 26595, byte_end: 26596, column_start: 26, column_end: 27, line_start: 789, line_end: 789 }: )
Token { kind: Newline, char_start: 26595, char_end: 26596, byte_start: 26596, byte_end: 26597, column_start: 27, column_end: 1, line_start: 789, line_end: 790 }: "\n"
Token { kind: Newline, char_start: 26596, char_end: 26597, byte_start: 26597, byte_end: 26598, column_start: 1, column_end: 1, line_start: 790, line_end: 791 }: "\n"
Token { kind: Text, char_start: 26597, char_end: 26603, byte_start: 26598, byte_end: 26604, column_start: 1, column_end: 7, line_start: 791, line_end: 791 }: Ferret
Token { kind: Space, char_start: 26603, char_end: 26604, byte_start: 26604, byte_end: 26605, column_start: 7, column_end: 8, line_start: 791, line_end: 791 }: " "
Token { kind: Text, char_start: 26604, char_end: 26608, byte_start: 26605, byte_end: 26609, column_start: 8, column_end: 12, line_start: 791, line_end: 791 }: maps
Token { kind: Space, char_start: 26608, char_end: 26609, byte_start: 26609, byte_end: 26610, column_start: 12, column_end: 13, line_start: 791, line_end: 791 }: " "
Token { kind: Backtick, char_start: 26609, char_end: 26610, byte_start: 26610, byte_end: 26611, column_start: 13, column_end: 14, line_start: 791, line_end: 791 }: `
Token { kind: BlockQuote, char_start: 26610, char_end: 26611, byte_start: 26611, byte_end: 26612, column_start: 14, column_end: 15, line_start: 791, line_end: 791 }: <
Token { kind: Text, char_start: 26611, char_end: 26617, byte_start: 26612, byte_end: 26618, column_start: 15, column_end: 21, line_start: 791, line_end: 791 }: Leader
Token { kind: BlockQuote, char_start: 26617, char_end: 26618, byte_start: 26618, byte_end: 26619, column_start: 21, column_end: 22, line_start: 791, line_end: 791 }: >
Token { kind: Text, char_start: 26618, char_end: 26619, byte_start: 26619, byte_end: 26620, column_start: 22, column_end: 23, line_start: 791, line_end: 791 }: a
Token { kind: Backtick, char_start: 26619, char_end: 26620, byte_start: 26620, byte_end: 26621, column_start: 23, column_end: 24, line_start: 791, line_end: 791 }: `
Token { kind: Space, char_start: 26620, char_end: 26621, byte_start: 26621, byte_end: 26622, column_start: 24, column_end: 25, line_start: 791, line_end: 791 }: " "
Token { kind: Text, char_start: 26621, char_end: 26623, byte_start: 26622, byte_end: 26624, column_start: 25, column_end: 27, line_start: 791, line_end: 791 }: to
Token { kind: Space, char_start: 26623, char_end: 26624, byte_start: 26624, byte_end: 26625, column_start: 27, column_end: 28, line_start: 791, line_end: 791 }: " "
Token { kind: Bar, char_start: 26624, char_end: 26625, byte_start: 26625, byte_end: 26626, column_start: 28, column_end: 29, line_start: 791, line_end: 791 }: |
Token { kind: BlockQuote, char_start: 26625, char_end: 26626, byte_start: 26626, byte_end: 26627, column_start: 29, column_end: 30, line_start: 791, line_end: 791 }: <
Token { kind: Text, char_start: 26626, char_end: 26630, byte_start: 26627, byte_end: 26631, column_start: 30, column_end: 34, line_start: 791, line_end: 791 }: Plug
Token { kind: BlockQuote, char_start: 26630, char_end: 26631, byte_start: 26631, byte_end: 26632, column_start: 34, column_end: 35, line_start: 791, line_end: 791 }: >
Token { kind: Lparen, char_start: 26631, char_end: 26632, byte_start: 26632, byte_end: 26633, column_start: 35, column_end: 36, line_start: 791, line_end: 791 }: (
Token { kind: Text, char_start: 26632, char_end: 26641, byte_start: 26633, byte_end: 26642, column_start: 36, column_end: 45, line_start: 791, line_end: 791 }: FerretAck
Token { kind: Rparen, char_start: 26641, char_end: 26642, byte_start: 26642, byte_end: 26643, column_start: 45, column_end: 46, line_start: 791, line_end: 791 }: )
Token { kind: Bar, char_start: 26642, char_end: 26643, byte_start: 26643, byte_end: 26644, column_start: 46, column_end: 47, line_start: 791, line_end: 791 }: |
Token { kind: Text, char_start: 26643, char_end: 26644, byte_start: 26644, byte_end: 26645, column_start: 47, column_end: 48, line_start: 791, line_end: 791 }: ,
Token { kind: Space, char_start: 26644, char_end: 26645, byte_start: 26645, byte_end: 26646, column_start: 48, column_end: 49, line_start: 791, line_end: 791 }: " "
Token { kind: Text, char_start: 26645, char_end: 26650, byte_start: 26646, byte_end: 26651, column_start: 49, column_end: 54, line_start: 791, line_end: 791 }: which
Token { kind: Space, char_start: 26650, char_end: 26651, byte_start: 26651, byte_end: 26652, column_start: 54, column_end: 55, line_start: 791, line_end: 791 }: " "
Token { kind: Text, char_start: 26651, char_end: 26659, byte_start: 26652, byte_end: 26660, column_start: 55, column_end: 63, line_start: 791, line_end: 791 }: triggers
Token { kind: Space, char_start: 26659, char_end: 26660, byte_start: 26660, byte_end: 26661, column_start: 63, column_end: 64, line_start: 791, line_end: 791 }: " "
Token { kind: Text, char_start: 26660, char_end: 26663, byte_start: 26661, byte_end: 26664, column_start: 64, column_end: 67, line_start: 791, line_end: 791 }: the
Token { kind: Space, char_start: 26663, char_end: 26664, byte_start: 26664, byte_end: 26665, column_start: 67, column_end: 68, line_start: 791, line_end: 791 }: " "
Token { kind: Bar, char_start: 26664, char_end: 26665, byte_start: 26665, byte_end: 26666, column_start: 68, column_end: 69, line_start: 791, line_end: 791 }: |
Token { kind: Text, char_start: 26665, char_end: 26669, byte_start: 26666, byte_end: 26670, column_start: 69, column_end: 73, line_start: 791, line_end: 791 }: :Ack
Token { kind: Bar, char_start: 26669, char_end: 26670, byte_start: 26670, byte_end: 26671, column_start: 73, column_end: 74, line_start: 791, line_end: 791 }: |
Token { kind: Newline, char_start: 26670, char_end: 26671, byte_start: 26671, byte_end: 26672, column_start: 74, column_end: 1, line_start: 791, line_end: 792 }: "\n"
Token { kind: Text, char_start: 26671, char_end: 26679, byte_start: 26672, byte_end: 26680, column_start: 1, column_end: 9, line_start: 792, line_end: 792 }: command.
Token { kind: Space, char_start: 26679, char_end: 26680, byte_start: 26680, byte_end: 26681, column_start: 9, column_end: 10, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26680, char_end: 26682, byte_start: 26681, byte_end: 26683, column_start: 10, column_end: 12, line_start: 792, line_end: 792 }: To
Token { kind: Space, char_start: 26682, char_end: 26683, byte_start: 26683, byte_end: 26684, column_start: 12, column_end: 13, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26683, char_end: 26686, byte_start: 26684, byte_end: 26687, column_start: 13, column_end: 16, line_start: 792, line_end: 792 }: use
Token { kind: Space, char_start: 26686, char_end: 26687, byte_start: 26687, byte_end: 26688, column_start: 16, column_end: 17, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26687, char_end: 26689, byte_start: 26688, byte_end: 26690, column_start: 17, column_end: 19, line_start: 792, line_end: 792 }: an
Token { kind: Space, char_start: 26689, char_end: 26690, byte_start: 26690, byte_end: 26691, column_start: 19, column_end: 20, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26690, char_end: 26701, byte_start: 26691, byte_end: 26702, column_start: 20, column_end: 31, line_start: 792, line_end: 792 }: alternative
Token { kind: Space, char_start: 26701, char_end: 26702, byte_start: 26702, byte_end: 26703, column_start: 31, column_end: 32, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26702, char_end: 26709, byte_start: 26703, byte_end: 26710, column_start: 32, column_end: 39, line_start: 792, line_end: 792 }: mapping
Token { kind: Space, char_start: 26709, char_end: 26710, byte_start: 26710, byte_end: 26711, column_start: 39, column_end: 40, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26710, char_end: 26718, byte_start: 26711, byte_end: 26719, column_start: 40, column_end: 48, line_start: 792, line_end: 792 }: instead,
Token { kind: Space, char_start: 26718, char_end: 26719, byte_start: 26719, byte_end: 26720, column_start: 48, column_end: 49, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26719, char_end: 26725, byte_start: 26720, byte_end: 26726, column_start: 49, column_end: 55, line_start: 792, line_end: 792 }: create
Token { kind: Space, char_start: 26725, char_end: 26726, byte_start: 26726, byte_end: 26727, column_start: 55, column_end: 56, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26726, char_end: 26727, byte_start: 26727, byte_end: 26728, column_start: 56, column_end: 57, line_start: 792, line_end: 792 }: a
Token { kind: Space, char_start: 26727, char_end: 26728, byte_start: 26728, byte_end: 26729, column_start: 57, column_end: 58, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26728, char_end: 26737, byte_start: 26729, byte_end: 26738, column_start: 58, column_end: 67, line_start: 792, line_end: 792 }: different
Token { kind: Space, char_start: 26737, char_end: 26738, byte_start: 26738, byte_end: 26739, column_start: 67, column_end: 68, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26738, char_end: 26741, byte_start: 26739, byte_end: 26742, column_start: 68, column_end: 71, line_start: 792, line_end: 792 }: one
Token { kind: Space, char_start: 26741, char_end: 26742, byte_start: 26742, byte_end: 26743, column_start: 71, column_end: 72, line_start: 792, line_end: 792 }: " "
Token { kind: Text, char_start: 26742, char_end: 26744, byte_start: 26743, byte_end: 26745, column_start: 72, column_end: 74, line_start: 792, line_end: 792 }: in
Token { kind: Newline, char_start: 26744, char_end: 26745, byte_start: 26745, byte_end: 26746, column_start: 74, column_end: 1, line_start: 792, line_end: 793 }: "\n"
Token { kind: Text, char_start: 26745, char_end: 26749, byte_start: 26746, byte_end: 26750, column_start: 1, column_end: 5, line_start: 793, line_end: 793 }: your
Token { kind: Space, char_start: 26749, char_end: 26750, byte_start: 26750, byte_end: 26751, column_start: 5, column_end: 6, line_start: 793, line_end: 793 }: " "
Token { kind: Bar, char_start: 26750, char_end: 26751, byte_start: 26751, byte_end: 26752, column_start: 6, column_end: 7, line_start: 793, line_end: 793 }: |
Token { kind: Text, char_start: 26751, char_end: 26757, byte_start: 26752, byte_end: 26758, column_start: 7, column_end: 13, line_start: 793, line_end: 793 }: .vimrc
Token { kind: Bar, char_start: 26757, char_end: 26758, byte_start: 26758, byte_end: 26759, column_start: 13, column_end: 14, line_start: 793, line_end: 793 }: |
Token { kind: Space, char_start: 26758, char_end: 26759, byte_start: 26759, byte_end: 26760, column_start: 14, column_end: 15, line_start: 793, line_end: 793 }: " "
Token { kind: Text, char_start: 26759, char_end: 26766, byte_start: 26760, byte_end: 26767, column_start: 15, column_end: 22, line_start: 793, line_end: 793 }: instead
Token { kind: Space, char_start: 26766, char_end: 26767, byte_start: 26767, byte_end: 26768, column_start: 22, column_end: 23, line_start: 793, line_end: 793 }: " "
Token { kind: Text, char_start: 26767, char_end: 26772, byte_start: 26768, byte_end: 26773, column_start: 23, column_end: 28, line_start: 793, line_end: 793 }: using
Token { kind: Space, char_start: 26772, char_end: 26773, byte_start: 26773, byte_end: 26774, column_start: 28, column_end: 29, line_start: 793, line_end: 793 }: " "
Token { kind: Bar, char_start: 26773, char_end: 26774, byte_start: 26774, byte_end: 26775, column_start: 29, column_end: 30, line_start: 793, line_end: 793 }: |
Token { kind: Text, char_start: 26774, char_end: 26779, byte_start: 26775, byte_end: 26780, column_start: 30, column_end: 35, line_start: 793, line_end: 793 }: :nmap
Token { kind: Bar, char_start: 26779, char_end: 26780, byte_start: 26780, byte_end: 26781, column_start: 35, column_end: 36, line_start: 793, line_end: 793 }: |
Token { kind: Text, char_start: 26780, char_end: 26781, byte_start: 26781, byte_end: 26782, column_start: 36, column_end: 37, line_start: 793, line_end: 793 }: :
Token { kind: Newline, char_start: 26781, char_end: 26782, byte_start: 26782, byte_end: 26783, column_start: 37, column_end: 1, line_start: 793, line_end: 794 }: "\n"
Token { kind: Newline, char_start: 26782, char_end: 26783, byte_start: 26783, byte_end: 26784, column_start: 1, column_end: 1, line_start: 794, line_end: 795 }: "\n"
Token { kind: CodeFence, char_start: 26783, char_end: 26786, byte_start: 26784, byte_end: 26787, column_start: 1, column_end: 4, line_start: 795, line_end: 795 }: ```
Token { kind: Newline, char_start: 26786, char_end: 26787, byte_start: 26787, byte_end: 26788, column_start: 4, column_end: 1, line_start: 795, line_end: 796 }: "\n"
Token { kind: Text, char_start: 26787, char_end: 26788, byte_start: 26788, byte_end: 26789, column_start: 1, column_end: 2, line_start: 796, line_end: 796 }: "
Token { kind: Space, char_start: 26788, char_end: 26789, byte_start: 26789, byte_end: 26790, column_start: 2, column_end: 3, line_start: 796, line_end: 796 }: " "
Token { kind: Text, char_start: 26789, char_end: 26796, byte_start: 26790, byte_end: 26797, column_start: 3, column_end: 10, line_start: 796, line_end: 796 }: Instead
Token { kind: Space, char_start: 26796, char_end: 26797, byte_start: 26797, byte_end: 26798, column_start: 10, column_end: 11, line_start: 796, line_end: 796 }: " "
Token { kind: Text, char_start: 26797, char_end: 26799, byte_start: 26798, byte_end: 26800, column_start: 11, column_end: 13, line_start: 796, line_end: 796 }: of
Token { kind: Space, char_start: 26799, char_end: 26800, byte_start: 26800, byte_end: 26801, column_start: 13, column_end: 14, line_start: 796, line_end: 796 }: " "
Token { kind: BlockQuote, char_start: 26800, char_end: 26801, byte_start: 26801, byte_end: 26802, column_start: 14, column_end: 15, line_start: 796, line_end: 796 }: <
Token { kind: Text, char_start: 26801, char_end: 26807, byte_start: 26802, byte_end: 26808, column_start: 15, column_end: 21, line_start: 796, line_end: 796 }: Leader
Token { kind: BlockQuote, char_start: 26807, char_end: 26808, byte_start: 26808, byte_end: 26809, column_start: 21, column_end: 22, line_start: 796, line_end: 796 }: >
Token { kind: Text, char_start: 26808, char_end: 26810, byte_start: 26809, byte_end: 26811, column_start: 22, column_end: 24, line_start: 796, line_end: 796 }: a,
Token { kind: Space, char_start: 26810, char_end: 26811, byte_start: 26811, byte_end: 26812, column_start: 24, column_end: 25, line_start: 796, line_end: 796 }: " "
Token { kind: Text, char_start: 26811, char_end: 26814, byte_start: 26812, byte_end: 26815, column_start: 25, column_end: 28, line_start: 796, line_end: 796 }: use
Token { kind: Space, char_start: 26814, char_end: 26815, byte_start: 26815, byte_end: 26816, column_start: 28, column_end: 29, line_start: 796, line_end: 796 }: " "
Token { kind: BlockQuote, char_start: 26815, char_end: 26816, byte_start: 26816, byte_end: 26817, column_start: 29, column_end: 30, line_start: 796, line_end: 796 }: <
Token { kind: Text, char_start: 26816, char_end: 26822, byte_start: 26817, byte_end: 26823, column_start: 30, column_end: 36, line_start: 796, line_end: 796 }: Leader
Token { kind: BlockQuote, char_start: 26822, char_end: 26823, byte_start: 26823, byte_end: 26824, column_start: 36, column_end: 37, line_start: 796, line_end: 796 }: >
Token { kind: Text, char_start: 26823, char_end: 26825, byte_start: 26824, byte_end: 26826, column_start: 37, column_end: 39, line_start: 796, line_end: 796 }: x.
Token { kind: Newline, char_start: 26825, char_end: 26826, byte_start: 26826, byte_end: 26827, column_start: 39, column_end: 1, line_start: 796, line_end: 797 }: "\n"
Token { kind: Text, char_start: 26826, char_end: 26830, byte_start: 26827, byte_end: 26831, column_start: 1, column_end: 5, line_start: 797, line_end: 797 }: nmap
Token { kind: Space, char_start: 26830, char_end: 26831, byte_start: 26831, byte_end: 26832, column_start: 5, column_end: 6, line_start: 797, line_end: 797 }: " "
Token { kind: BlockQuote, char_start: 26831, char_end: 26832, byte_start: 26832, byte_end: 26833, column_start: 6, column_end: 7, line_start: 797, line_end: 797 }: <
Token { kind: Text, char_start: 26832, char_end: 26838, byte_start: 26833, byte_end: 26839, column_start: 7, column_end: 13, line_start: 797, line_end: 797 }: Leader
Token { kind: BlockQuote, char_start: 26838, char_end: 26839, byte_start: 26839, byte_end: 26840, column_start: 13, column_end: 14, line_start: 797, line_end: 797 }: >
Token { kind: Text, char_start: 26839, char_end: 26840, byte_start: 26840, byte_end: 26841, column_start: 14, column_end: 15, line_start: 797, line_end: 797 }: x
Token { kind: Space, char_start: 26840, char_end: 26841, byte_start: 26841, byte_end: 26842, column_start: 15, column_end: 16, line_start: 797, line_end: 797 }: " "
Token { kind: BlockQuote, char_start: 26841, char_end: 26842, byte_start: 26842, byte_end: 26843, column_start: 16, column_end: 17, line_start: 797, line_end: 797 }: <
Token { kind: Text, char_start: 26842, char_end: 26846, byte_start: 26843, byte_end: 26847, column_start: 17, column_end: 21, line_start: 797, line_end: 797 }: Plug
Token { kind: BlockQuote, char_start: 26846, char_end: 26847, byte_start: 26847, byte_end: 26848, column_start: 21, column_end: 22, line_start: 797, line_end: 797 }: >
Token { kind: Lparen, char_start: 26847, char_end: 26848, byte_start: 26848, byte_end: 26849, column_start: 22, column_end: 23, line_start: 797, line_end: 797 }: (
Token { kind: Text, char_start: 26848, char_end: 26857, byte_start: 26849, byte_end: 26858, column_start: 23, column_end: 32, line_start: 797, line_end: 797 }: FerretAck
Token { kind: Rparen, char_start: 26857, char_end: 26858, byte_start: 26858, byte_end: 26859, column_start: 32, column_end: 33, line_start: 797, line_end: 797 }: )
Token { kind: Newline, char_start: 26858, char_end: 26859, byte_start: 26859, byte_end: 26860, column_start: 33, column_end: 1, line_start: 797, line_end: 798 }: "\n"
Token { kind: CodeFence, char_start: 26859, char_end: 26862, byte_start: 26860, byte_end: 26863, column_start: 1, column_end: 4, line_start: 798, line_end: 798 }: ```
Token { kind: Newline, char_start: 26862, char_end: 26863, byte_start: 26863, byte_end: 26864, column_start: 4, column_end: 1, line_start: 798, line_end: 799 }: "\n"
Token { kind: Newline, char_start: 26863, char_end: 26864, byte_start: 26864, byte_end: 26865, column_start: 1, column_end: 1, line_start: 799, line_end: 800 }: "\n"
Token { kind: At, char_start: 26864, char_end: 26865, byte_start: 26865, byte_end: 26866, column_start: 1, column_end: 2, line_start: 800, line_end: 800 }: @
Token { kind: Text, char_start: 26865, char_end: 26872, byte_start: 26866, byte_end: 26873, column_start: 2, column_end: 9, line_start: 800, line_end: 800 }: mapping
Token { kind: Space, char_start: 26872, char_end: 26873, byte_start: 26873, byte_end: 26874, column_start: 9, column_end: 10, line_start: 800, line_end: 800 }: " "
Token { kind: BlockQuote, char_start: 26873, char_end: 26874, byte_start: 26874, byte_end: 26875, column_start: 10, column_end: 11, line_start: 800, line_end: 800 }: <
Token { kind: Text, char_start: 26874, char_end: 26878, byte_start: 26875, byte_end: 26879, column_start: 11, column_end: 15, line_start: 800, line_end: 800 }: Plug
Token { kind: BlockQuote, char_start: 26878, char_end: 26879, byte_start: 26879, byte_end: 26880, column_start: 15, column_end: 16, line_start: 800, line_end: 800 }: >
Token { kind: Lparen, char_start: 26879, char_end: 26880, byte_start: 26880, byte_end: 26881, column_start: 16, column_end: 17, line_start: 800, line_end: 800 }: (
Token { kind: Text, char_start: 26880, char_end: 26890, byte_start: 26881, byte_end: 26891, column_start: 17, column_end: 27, line_start: 800, line_end: 800 }: FerretLack
Token { kind: Rparen, char_start: 26890, char_end: 26891, byte_start: 26891, byte_end: 26892, column_start: 27, column_end: 28, line_start: 800, line_end: 800 }: )
Token { kind: Newline, char_start: 26891, char_end: 26892, byte_start: 26892, byte_end: 26893, column_start: 28, column_end: 1, line_start: 800, line_end: 801 }: "\n"
Token { kind: Newline, char_start: 26892, char_end: 26893, byte_start: 26893, byte_end: 26894, column_start: 1, column_end: 1, line_start: 801, line_end: 802 }: "\n"
Token { kind: Text, char_start: 26893, char_end: 26899, byte_start: 26894, byte_end: 26900, column_start: 1, column_end: 7, line_start: 802, line_end: 802 }: Ferret
Token { kind: Space, char_start: 26899, char_end: 26900, byte_start: 26900, byte_end: 26901, column_start: 7, column_end: 8, line_start: 802, line_end: 802 }: " "
Token { kind: Text, char_start: 26900, char_end: 26904, byte_start: 26901, byte_end: 26905, column_start: 8, column_end: 12, line_start: 802, line_end: 802 }: maps
Token { kind: Space, char_start: 26904, char_end: 26905, byte_start: 26905, byte_end: 26906, column_start: 12, column_end: 13, line_start: 802, line_end: 802 }: " "
Token { kind: Backtick, char_start: 26905, char_end: 26906, byte_start: 26906, byte_end: 26907, column_start: 13, column_end: 14, line_start: 802, line_end: 802 }: `
Token { kind: BlockQuote, char_start: 26906, char_end: 26907, byte_start: 26907, byte_end: 26908, column_start: 14, column_end: 15, line_start: 802, line_end: 802 }: <
Token { kind: Text, char_start: 26907, char_end: 26913, byte_start: 26908, byte_end: 26914, column_start: 15, column_end: 21, line_start: 802, line_end: 802 }: Leader
Token { kind: BlockQuote, char_start: 26913, char_end: 26914, byte_start: 26914, byte_end: 26915, column_start: 21, column_end: 22, line_start: 802, line_end: 802 }: >
Token { kind: Text, char_start: 26914, char_end: 26915, byte_start: 26915, byte_end: 26916, column_start: 22, column_end: 23, line_start: 802, line_end: 802 }: l
Token { kind: Backtick, char_start: 26915, char_end: 26916, byte_start: 26916, byte_end: 26917, column_start: 23, column_end: 24, line_start: 802, line_end: 802 }: `
Token { kind: Space, char_start: 26916, char_end: 26917, byte_start: 26917, byte_end: 26918, column_start: 24, column_end: 25, line_start: 802, line_end: 802 }: " "
Token { kind: Text, char_start: 26917, char_end: 26919, byte_start: 26918, byte_end: 26920, column_start: 25, column_end: 27, line_start: 802, line_end: 802 }: to
Token { kind: Space, char_start: 26919, char_end: 26920, byte_start: 26920, byte_end: 26921, column_start: 27, column_end: 28, line_start: 802, line_end: 802 }: " "
Token { kind: Bar, char_start: 26920, char_end: 26921, byte_start: 26921, byte_end: 26922, column_start: 28, column_end: 29, line_start: 802, line_end: 802 }: |
Token { kind: BlockQuote, char_start: 26921, char_end: 26922, byte_start: 26922, byte_end: 26923, column_start: 29, column_end: 30, line_start: 802, line_end: 802 }: <
Token { kind: Text, char_start: 26922, char_end: 26926, byte_start: 26923, byte_end: 26927, column_start: 30, column_end: 34, line_start: 802, line_end: 802 }: Plug
Token { kind: BlockQuote, char_start: 26926, char_end: 26927, byte_start: 26927, byte_end: 26928, column_start: 34, column_end: 35, line_start: 802, line_end: 802 }: >
Token { kind: Lparen, char_start: 26927, char_end: 26928, byte_start: 26928, byte_end: 26929, column_start: 35, column_end: 36, line_start: 802, line_end: 802 }: (
Token { kind: Text, char_start: 26928, char_end: 26938, byte_start: 26929, byte_end: 26939, column_start: 36, column_end: 46, line_start: 802, line_end: 802 }: FerretLack
Token { kind: Rparen, char_start: 26938, char_end: 26939, byte_start: 26939, byte_end: 26940, column_start: 46, column_end: 47, line_start: 802, line_end: 802 }: )
Token { kind: Bar, char_start: 26939, char_end: 26940, byte_start: 26940, byte_end: 26941, column_start: 47, column_end: 48, line_start: 802, line_end: 802 }: |
Token { kind: Text, char_start: 26940, char_end: 26941, byte_start: 26941, byte_end: 26942, column_start: 48, column_end: 49, line_start: 802, line_end: 802 }: ,
Token { kind: Space, char_start: 26941, char_end: 26942, byte_start: 26942, byte_end: 26943, column_start: 49, column_end: 50, line_start: 802, line_end: 802 }: " "
Token { kind: Text, char_start: 26942, char_end: 26947, byte_start: 26943, byte_end: 26948, column_start: 50, column_end: 55, line_start: 802, line_end: 802 }: which
Token { kind: Space, char_start: 26947, char_end: 26948, byte_start: 26948, byte_end: 26949, column_start: 55, column_end: 56, line_start: 802, line_end: 802 }: " "
Token { kind: Text, char_start: 26948, char_end: 26956, byte_start: 26949, byte_end: 26957, column_start: 56, column_end: 64, line_start: 802, line_end: 802 }: triggers
Token { kind: Space, char_start: 26956, char_end: 26957, byte_start: 26957, byte_end: 26958, column_start: 64, column_end: 65, line_start: 802, line_end: 802 }: " "
Token { kind: Text, char_start: 26957, char_end: 26960, byte_start: 26958, byte_end: 26961, column_start: 65, column_end: 68, line_start: 802, line_end: 802 }: the
Token { kind: Space, char_start: 26960, char_end: 26961, byte_start: 26961, byte_end: 26962, column_start: 68, column_end: 69, line_start: 802, line_end: 802 }: " "
Token { kind: Bar, char_start: 26961, char_end: 26962, byte_start: 26962, byte_end: 26963, column_start: 69, column_end: 70, line_start: 802, line_end: 802 }: |
Token { kind: Text, char_start: 26962, char_end: 26967, byte_start: 26963, byte_end: 26968, column_start: 70, column_end: 75, line_start: 802, line_end: 802 }: :Lack
Token { kind: Bar, char_start: 26967, char_end: 26968, byte_start: 26968, byte_end: 26969, column_start: 75, column_end: 76, line_start: 802, line_end: 802 }: |
Token { kind: Newline, char_start: 26968, char_end: 26969, byte_start: 26969, byte_end: 26970, column_start: 76, column_end: 1, line_start: 802, line_end: 803 }: "\n"
Token { kind: Text, char_start: 26969, char_end: 26977, byte_start: 26970, byte_end: 26978, column_start: 1, column_end: 9, line_start: 803, line_end: 803 }: command.
Token { kind: Space, char_start: 26977, char_end: 26978, byte_start: 26978, byte_end: 26979, column_start: 9, column_end: 10, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 26978, char_end: 26980, byte_start: 26979, byte_end: 26981, column_start: 10, column_end: 12, line_start: 803, line_end: 803 }: To
Token { kind: Space, char_start: 26980, char_end: 26981, byte_start: 26981, byte_end: 26982, column_start: 12, column_end: 13, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 26981, char_end: 26984, byte_start: 26982, byte_end: 26985, column_start: 13, column_end: 16, line_start: 803, line_end: 803 }: use
Token { kind: Space, char_start: 26984, char_end: 26985, byte_start: 26985, byte_end: 26986, column_start: 16, column_end: 17, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 26985, char_end: 26987, byte_start: 26986, byte_end: 26988, column_start: 17, column_end: 19, line_start: 803, line_end: 803 }: an
Token { kind: Space, char_start: 26987, char_end: 26988, byte_start: 26988, byte_end: 26989, column_start: 19, column_end: 20, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 26988, char_end: 26999, byte_start: 26989, byte_end: 27000, column_start: 20, column_end: 31, line_start: 803, line_end: 803 }: alternative
Token { kind: Space, char_start: 26999, char_end: 27000, byte_start: 27000, byte_end: 27001, column_start: 31, column_end: 32, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 27000, char_end: 27007, byte_start: 27001, byte_end: 27008, column_start: 32, column_end: 39, line_start: 803, line_end: 803 }: mapping
Token { kind: Space, char_start: 27007, char_end: 27008, byte_start: 27008, byte_end: 27009, column_start: 39, column_end: 40, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 27008, char_end: 27016, byte_start: 27009, byte_end: 27017, column_start: 40, column_end: 48, line_start: 803, line_end: 803 }: instead,
Token { kind: Space, char_start: 27016, char_end: 27017, byte_start: 27017, byte_end: 27018, column_start: 48, column_end: 49, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 27017, char_end: 27023, byte_start: 27018, byte_end: 27024, column_start: 49, column_end: 55, line_start: 803, line_end: 803 }: create
Token { kind: Space, char_start: 27023, char_end: 27024, byte_start: 27024, byte_end: 27025, column_start: 55, column_end: 56, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 27024, char_end: 27025, byte_start: 27025, byte_end: 27026, column_start: 56, column_end: 57, line_start: 803, line_end: 803 }: a
Token { kind: Space, char_start: 27025, char_end: 27026, byte_start: 27026, byte_end: 27027, column_start: 57, column_end: 58, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 27026, char_end: 27035, byte_start: 27027, byte_end: 27036, column_start: 58, column_end: 67, line_start: 803, line_end: 803 }: different
Token { kind: Space, char_start: 27035, char_end: 27036, byte_start: 27036, byte_end: 27037, column_start: 67, column_end: 68, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 27036, char_end: 27039, byte_start: 27037, byte_end: 27040, column_start: 68, column_end: 71, line_start: 803, line_end: 803 }: one
Token { kind: Space, char_start: 27039, char_end: 27040, byte_start: 27040, byte_end: 27041, column_start: 71, column_end: 72, line_start: 803, line_end: 803 }: " "
Token { kind: Text, char_start: 27040, char_end: 27042, byte_start: 27041, byte_end: 27043, column_start: 72, column_end: 74, line_start: 803, line_end: 803 }: in
Token { kind: Newline, char_start: 27042, char_end: 27043, byte_start: 27043, byte_end: 27044, column_start: 74, column_end: 1, line_start: 803, line_end: 804 }: "\n"
Token { kind: Text, char_start: 27043, char_end: 27047, byte_start: 27044, byte_end: 27048, column_start: 1, column_end: 5, line_start: 804, line_end: 804 }: your
Token { kind: Space, char_start: 27047, char_end: 27048, byte_start: 27048, byte_end: 27049, column_start: 5, column_end: 6, line_start: 804, line_end: 804 }: " "
Token { kind: Bar, char_start: 27048, char_end: 27049, byte_start: 27049, byte_end: 27050, column_start: 6, column_end: 7, line_start: 804, line_end: 804 }: |
Token { kind: Text, char_start: 27049, char_end: 27055, byte_start: 27050, byte_end: 27056, column_start: 7, column_end: 13, line_start: 804, line_end: 804 }: .vimrc
Token { kind: Bar, char_start: 27055, char_end: 27056, byte_start: 27056, byte_end: 27057, column_start: 13, column_end: 14, line_start: 804, line_end: 804 }: |
Token { kind: Space, char_start: 27056, char_end: 27057, byte_start: 27057, byte_end: 27058, column_start: 14, column_end: 15, line_start: 804, line_end: 804 }: " "
Token { kind: Text, char_start: 27057, char_end: 27064, byte_start: 27058, byte_end: 27065, column_start: 15, column_end: 22, line_start: 804, line_end: 804 }: instead
Token { kind: Space, char_start: 27064, char_end: 27065, byte_start: 27065, byte_end: 27066, column_start: 22, column_end: 23, line_start: 804, line_end: 804 }: " "
Token { kind: Text, char_start: 27065, char_end: 27070, byte_start: 27066, byte_end: 27071, column_start: 23, column_end: 28, line_start: 804, line_end: 804 }: using
Token { kind: Space, char_start: 27070, char_end: 27071, byte_start: 27071, byte_end: 27072, column_start: 28, column_end: 29, line_start: 804, line_end: 804 }: " "
Token { kind: Bar, char_start: 27071, char_end: 27072, byte_start: 27072, byte_end: 27073, column_start: 29, column_end: 30, line_start: 804, line_end: 804 }: |
Token { kind: Text, char_start: 27072, char_end: 27077, byte_start: 27073, byte_end: 27078, column_start: 30, column_end: 35, line_start: 804, line_end: 804 }: :nmap
Token { kind: Bar, char_start: 27077, char_end: 27078, byte_start: 27078, byte_end: 27079, column_start: 35, column_end: 36, line_start: 804, line_end: 804 }: |
Token { kind: Text, char_start: 27078, char_end: 27079, byte_start: 27079, byte_end: 27080, column_start: 36, column_end: 37, line_start: 804, line_end: 804 }: :
Token { kind: Newline, char_start: 27079, char_end: 27080, byte_start: 27080, byte_end: 27081, column_start: 37, column_end: 1, line_start: 804, line_end: 805 }: "\n"
Token { kind: Newline, char_start: 27080, char_end: 27081, byte_start: 27081, byte_end: 27082, column_start: 1, column_end: 1, line_start: 805, line_end: 806 }: "\n"
Token { kind: CodeFence, char_start: 27081, char_end: 27084, byte_start: 27082, byte_end: 27085, column_start: 1, column_end: 4, line_start: 806, line_end: 806 }: ```
Token { kind: Newline, char_start: 27084, char_end: 27085, byte_start: 27085, byte_end: 27086, column_start: 4, column_end: 1, line_start: 806, line_end: 807 }: "\n"
Token { kind: Text, char_start: 27085, char_end: 27086, byte_start: 27086, byte_end: 27087, column_start: 1, column_end: 2, line_start: 807, line_end: 807 }: "
Token { kind: Space, char_start: 27086, char_end: 27087, byte_start: 27087, byte_end: 27088, column_start: 2, column_end: 3, line_start: 807, line_end: 807 }: " "
Token { kind: Text, char_start: 27087, char_end: 27094, byte_start: 27088, byte_end: 27095, column_start: 3, column_end: 10, line_start: 807, line_end: 807 }: Instead
Token { kind: Space, char_start: 27094, char_end: 27095, byte_start: 27095, byte_end: 27096, column_start: 10, column_end: 11, line_start: 807, line_end: 807 }: " "
Token { kind: Text, char_start: 27095, char_end: 27097, byte_start: 27096, byte_end: 27098, column_start: 11, column_end: 13, line_start: 807, line_end: 807 }: of
Token { kind: Space, char_start: 27097, char_end: 27098, byte_start: 27098, byte_end: 27099, column_start: 13, column_end: 14, line_start: 807, line_end: 807 }: " "
Token { kind: BlockQuote, char_start: 27098, char_end: 27099, byte_start: 27099, byte_end: 27100, column_start: 14, column_end: 15, line_start: 807, line_end: 807 }: <
Token { kind: Text, char_start: 27099, char_end: 27105, byte_start: 27100, byte_end: 27106, column_start: 15, column_end: 21, line_start: 807, line_end: 807 }: Leader
Token { kind: BlockQuote, char_start: 27105, char_end: 27106, byte_start: 27106, byte_end: 27107, column_start: 21, column_end: 22, line_start: 807, line_end: 807 }: >
Token { kind: Text, char_start: 27106, char_end: 27108, byte_start: 27107, byte_end: 27109, column_start: 22, column_end: 24, line_start: 807, line_end: 807 }: l,
Token { kind: Space, char_start: 27108, char_end: 27109, byte_start: 27109, byte_end: 27110, column_start: 24, column_end: 25, line_start: 807, line_end: 807 }: " "
Token { kind: Text, char_start: 27109, char_end: 27112, byte_start: 27110, byte_end: 27113, column_start: 25, column_end: 28, line_start: 807, line_end: 807 }: use
Token { kind: Space, char_start: 27112, char_end: 27113, byte_start: 27113, byte_end: 27114, column_start: 28, column_end: 29, line_start: 807, line_end: 807 }: " "
Token { kind: BlockQuote, char_start: 27113, char_end: 27114, byte_start: 27114, byte_end: 27115, column_start: 29, column_end: 30, line_start: 807, line_end: 807 }: <
Token { kind: Text, char_start: 27114, char_end: 27120, byte_start: 27115, byte_end: 27121, column_start: 30, column_end: 36, line_start: 807, line_end: 807 }: Leader
Token { kind: BlockQuote, char_start: 27120, char_end: 27121, byte_start: 27121, byte_end: 27122, column_start: 36, column_end: 37, line_start: 807, line_end: 807 }: >
Token { kind: Text, char_start: 27121, char_end: 27123, byte_start: 27122, byte_end: 27124, column_start: 37, column_end: 39, line_start: 807, line_end: 807 }: y.
Token { kind: Newline, char_start: 27123, char_end: 27124, byte_start: 27124, byte_end: 27125, column_start: 39, column_end: 1, line_start: 807, line_end: 808 }: "\n"
Token { kind: Text, char_start: 27124, char_end: 27128, byte_start: 27125, byte_end: 27129, column_start: 1, column_end: 5, line_start: 808, line_end: 808 }: nmap
Token { kind: Space, char_start: 27128, char_end: 27129, byte_start: 27129, byte_end: 27130, column_start: 5, column_end: 6, line_start: 808, line_end: 808 }: " "
Token { kind: BlockQuote, char_start: 27129, char_end: 27130, byte_start: 27130, byte_end: 27131, column_start: 6, column_end: 7, line_start: 808, line_end: 808 }: <
Token { kind: Text, char_start: 27130, char_end: 27136, byte_start: 27131, byte_end: 27137, column_start: 7, column_end: 13, line_start: 808, line_end: 808 }: Leader
Token { kind: BlockQuote, char_start: 27136, char_end: 27137, byte_start: 27137, byte_end: 27138, column_start: 13, column_end: 14, line_start: 808, line_end: 808 }: >
Token { kind: Text, char_start: 27137, char_end: 27138, byte_start: 27138, byte_end: 27139, column_start: 14, column_end: 15, line_start: 808, line_end: 808 }: y
Token { kind: Space, char_start: 27138, char_end: 27139, byte_start: 27139, byte_end: 27140, column_start: 15, column_end: 16, line_start: 808, line_end: 808 }: " "
Token { kind: BlockQuote, char_start: 27139, char_end: 27140, byte_start: 27140, byte_end: 27141, column_start: 16, column_end: 17, line_start: 808, line_end: 808 }: <
Token { kind: Text, char_start: 27140, char_end: 27144, byte_start: 27141, byte_end: 27145, column_start: 17, column_end: 21, line_start: 808, line_end: 808 }: Plug
Token { kind: BlockQuote, char_start: 27144, char_end: 27145, byte_start: 27145, byte_end: 27146, column_start: 21, column_end: 22, line_start: 808, line_end: 808 }: >
Token { kind: Lparen, char_start: 27145, char_end: 27146, byte_start: 27146, byte_end: 27147, column_start: 22, column_end: 23, line_start: 808, line_end: 808 }: (
Token { kind: Text, char_start: 27146, char_end: 27156, byte_start: 27147, byte_end: 27157, column_start: 23, column_end: 33, line_start: 808, line_end: 808 }: FerretLack
Token { kind: Rparen, char_start: 27156, char_end: 27157, byte_start: 27157, byte_end: 27158, column_start: 33, column_end: 34, line_start: 808, line_end: 808 }: )
Token { kind: Newline, char_start: 27157, char_end: 27158, byte_start: 27158, byte_end: 27159, column_start: 34, column_end: 1, line_start: 808, line_end: 809 }: "\n"
Token { kind: CodeFence, char_start: 27158, char_end: 27161, byte_start: 27159, byte_end: 27162, column_start: 1, column_end: 4, line_start: 809, line_end: 809 }: ```
Token { kind: Newline, char_start: 27161, char_end: 27162, byte_start: 27162, byte_end: 27163, column_start: 4, column_end: 1, line_start: 809, line_end: 810 }: "\n"
Token { kind: Newline, char_start: 27162, char_end: 27163, byte_start: 27163, byte_end: 27164, column_start: 1, column_end: 1, line_start: 810, line_end: 811 }: "\n"
Token { kind: At, char_start: 27163, char_end: 27164, byte_start: 27164, byte_end: 27165, column_start: 1, column_end: 2, line_start: 811, line_end: 811 }: @
Token { kind: Text, char_start: 27164, char_end: 27171, byte_start: 27165, byte_end: 27172, column_start: 2, column_end: 9, line_start: 811, line_end: 811 }: mapping
Token { kind: Space, char_start: 27171, char_end: 27172, byte_start: 27172, byte_end: 27173, column_start: 9, column_end: 10, line_start: 811, line_end: 811 }: " "
Token { kind: BlockQuote, char_start: 27172, char_end: 27173, byte_start: 27173, byte_end: 27174, column_start: 10, column_end: 11, line_start: 811, line_end: 811 }: <
Token { kind: Text, char_start: 27173, char_end: 27177, byte_start: 27174, byte_end: 27178, column_start: 11, column_end: 15, line_start: 811, line_end: 811 }: Plug
Token { kind: BlockQuote, char_start: 27177, char_end: 27178, byte_start: 27178, byte_end: 27179, column_start: 15, column_end: 16, line_start: 811, line_end: 811 }: >
Token { kind: Lparen, char_start: 27178, char_end: 27179, byte_start: 27179, byte_end: 27180, column_start: 16, column_end: 17, line_start: 811, line_end: 811 }: (
Token { kind: Text, char_start: 27179, char_end: 27192, byte_start: 27180, byte_end: 27193, column_start: 17, column_end: 30, line_start: 811, line_end: 811 }: FerretAckWord
Token { kind: Rparen, char_start: 27192, char_end: 27193, byte_start: 27193, byte_end: 27194, column_start: 30, column_end: 31, line_start: 811, line_end: 811 }: )
Token { kind: Newline, char_start: 27193, char_end: 27194, byte_start: 27194, byte_end: 27195, column_start: 31, column_end: 1, line_start: 811, line_end: 812 }: "\n"
Token { kind: Newline, char_start: 27194, char_end: 27195, byte_start: 27195, byte_end: 27196, column_start: 1, column_end: 1, line_start: 812, line_end: 813 }: "\n"
Token { kind: Text, char_start: 27195, char_end: 27201, byte_start: 27196, byte_end: 27202, column_start: 1, column_end: 7, line_start: 813, line_end: 813 }: Ferret
Token { kind: Space, char_start: 27201, char_end: 27202, byte_start: 27202, byte_end: 27203, column_start: 7, column_end: 8, line_start: 813, line_end: 813 }: " "
Token { kind: Text, char_start: 27202, char_end: 27206, byte_start: 27203, byte_end: 27207, column_start: 8, column_end: 12, line_start: 813, line_end: 813 }: maps
Token { kind: Space, char_start: 27206, char_end: 27207, byte_start: 27207, byte_end: 27208, column_start: 12, column_end: 13, line_start: 813, line_end: 813 }: " "
Token { kind: Backtick, char_start: 27207, char_end: 27208, byte_start: 27208, byte_end: 27209, column_start: 13, column_end: 14, line_start: 813, line_end: 813 }: `
Token { kind: BlockQuote, char_start: 27208, char_end: 27209, byte_start: 27209, byte_end: 27210, column_start: 14, column_end: 15, line_start: 813, line_end: 813 }: <
Token { kind: Text, char_start: 27209, char_end: 27215, byte_start: 27210, byte_end: 27216, column_start: 15, column_end: 21, line_start: 813, line_end: 813 }: Leader
Token { kind: BlockQuote, char_start: 27215, char_end: 27216, byte_start: 27216, byte_end: 27217, column_start: 21, column_end: 22, line_start: 813, line_end: 813 }: >
Token { kind: Text, char_start: 27216, char_end: 27217, byte_start: 27217, byte_end: 27218, column_start: 22, column_end: 23, line_start: 813, line_end: 813 }: s
Token { kind: Backtick, char_start: 27217, char_end: 27218, byte_start: 27218, byte_end: 27219, column_start: 23, column_end: 24, line_start: 813, line_end: 813 }: `
Token { kind: Space, char_start: 27218, char_end: 27219, byte_start: 27219, byte_end: 27220, column_start: 24, column_end: 25, line_start: 813, line_end: 813 }: " "
Token { kind: Lparen, char_start: 27219, char_end: 27220, byte_start: 27220, byte_end: 27221, column_start: 25, column_end: 26, line_start: 813, line_end: 813 }: (
Token { kind: Text, char_start: 27220, char_end: 27229, byte_start: 27221, byte_end: 27230, column_start: 26, column_end: 35, line_start: 813, line_end: 813 }: mnemonic:
Token { kind: Space, char_start: 27229, char_end: 27230, byte_start: 27230, byte_end: 27231, column_start: 35, column_end: 36, line_start: 813, line_end: 813 }: " "
Token { kind: Text, char_start: 27230, char_end: 27240, byte_start: 27231, byte_end: 27241, column_start: 36, column_end: 46, line_start: 813, line_end: 813 }: "selection
Token { kind: Rparen, char_start: 27240, char_end: 27241, byte_start: 27241, byte_end: 27242, column_start: 46, column_end: 47, line_start: 813, line_end: 813 }: )
Token { kind: Space, char_start: 27241, char_end: 27242, byte_start: 27242, byte_end: 27243, column_start: 47, column_end: 48, line_start: 813, line_end: 813 }: " "
Token { kind: Text, char_start: 27242, char_end: 27244, byte_start: 27243, byte_end: 27245, column_start: 48, column_end: 50, line_start: 813, line_end: 813 }: to
Token { kind: Space, char_start: 27244, char_end: 27245, byte_start: 27245, byte_end: 27246, column_start: 50, column_end: 51, line_start: 813, line_end: 813 }: " "
Token { kind: Bar, char_start: 27245, char_end: 27246, byte_start: 27246, byte_end: 27247, column_start: 51, column_end: 52, line_start: 813, line_end: 813 }: |
Token { kind: BlockQuote, char_start: 27246, char_end: 27247, byte_start: 27247, byte_end: 27248, column_start: 52, column_end: 53, line_start: 813, line_end: 813 }: <
Token { kind: Text, char_start: 27247, char_end: 27251, byte_start: 27248, byte_end: 27252, column_start: 53, column_end: 57, line_start: 813, line_end: 813 }: Plug
Token { kind: BlockQuote, char_start: 27251, char_end: 27252, byte_start: 27252, byte_end: 27253, column_start: 57, column_end: 58, line_start: 813, line_end: 813 }: >
Token { kind: Lparen, char_start: 27252, char_end: 27253, byte_start: 27253, byte_end: 27254, column_start: 58, column_end: 59, line_start: 813, line_end: 813 }: (
Token { kind: Text, char_start: 27253, char_end: 27266, byte_start: 27254, byte_end: 27267, column_start: 59, column_end: 72, line_start: 813, line_end: 813 }: FerretAckWord
Token { kind: Rparen, char_start: 27266, char_end: 27267, byte_start: 27267, byte_end: 27268, column_start: 72, column_end: 73, line_start: 813, line_end: 813 }: )
Token { kind: Bar, char_start: 27267, char_end: 27268, byte_start: 27268, byte_end: 27269, column_start: 73, column_end: 74, line_start: 813, line_end: 813 }: |
Token { kind: Text, char_start: 27268, char_end: 27269, byte_start: 27269, byte_end: 27270, column_start: 74, column_end: 75, line_start: 813, line_end: 813 }: ,
Token { kind: Newline, char_start: 27269, char_end: 27270, byte_start: 27270, byte_end: 27271, column_start: 75, column_end: 1, line_start: 813, line_end: 814 }: "\n"
Token { kind: Text, char_start: 27270, char_end: 27275, byte_start: 27271, byte_end: 27276, column_start: 1, column_end: 6, line_start: 814, line_end: 814 }: which
Token { kind: Space, char_start: 27275, char_end: 27276, byte_start: 27276, byte_end: 27277, column_start: 6, column_end: 7, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27276, char_end: 27280, byte_start: 27277, byte_end: 27281, column_start: 7, column_end: 11, line_start: 814, line_end: 814 }: uses
Token { kind: Space, char_start: 27280, char_end: 27281, byte_start: 27281, byte_end: 27282, column_start: 11, column_end: 12, line_start: 814, line_end: 814 }: " "
Token { kind: Bar, char_start: 27281, char_end: 27282, byte_start: 27282, byte_end: 27283, column_start: 12, column_end: 13, line_start: 814, line_end: 814 }: |
Token { kind: Text, char_start: 27282, char_end: 27286, byte_start: 27283, byte_end: 27287, column_start: 13, column_end: 17, line_start: 814, line_end: 814 }: :Ack
Token { kind: Bar, char_start: 27286, char_end: 27287, byte_start: 27287, byte_end: 27288, column_start: 17, column_end: 18, line_start: 814, line_end: 814 }: |
Token { kind: Space, char_start: 27287, char_end: 27288, byte_start: 27288, byte_end: 27289, column_start: 18, column_end: 19, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27288, char_end: 27290, byte_start: 27289, byte_end: 27291, column_start: 19, column_end: 21, line_start: 814, line_end: 814 }: to
Token { kind: Space, char_start: 27290, char_end: 27291, byte_start: 27291, byte_end: 27292, column_start: 21, column_end: 22, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27291, char_end: 27297, byte_start: 27292, byte_end: 27298, column_start: 22, column_end: 28, line_start: 814, line_end: 814 }: search
Token { kind: Space, char_start: 27297, char_end: 27298, byte_start: 27298, byte_end: 27299, column_start: 28, column_end: 29, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27298, char_end: 27301, byte_start: 27299, byte_end: 27302, column_start: 29, column_end: 32, line_start: 814, line_end: 814 }: for
Token { kind: Space, char_start: 27301, char_end: 27302, byte_start: 27302, byte_end: 27303, column_start: 32, column_end: 33, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27302, char_end: 27305, byte_start: 27303, byte_end: 27306, column_start: 33, column_end: 36, line_start: 814, line_end: 814 }: the
Token { kind: Space, char_start: 27305, char_end: 27306, byte_start: 27306, byte_end: 27307, column_start: 36, column_end: 37, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27306, char_end: 27310, byte_start: 27307, byte_end: 27311, column_start: 37, column_end: 41, line_start: 814, line_end: 814 }: word
Token { kind: Space, char_start: 27310, char_end: 27311, byte_start: 27311, byte_end: 27312, column_start: 41, column_end: 42, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27311, char_end: 27320, byte_start: 27312, byte_end: 27321, column_start: 42, column_end: 51, line_start: 814, line_end: 814 }: currently
Token { kind: Space, char_start: 27320, char_end: 27321, byte_start: 27321, byte_end: 27322, column_start: 51, column_end: 52, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27321, char_end: 27326, byte_start: 27322, byte_end: 27327, column_start: 52, column_end: 57, line_start: 814, line_end: 814 }: under
Token { kind: Space, char_start: 27326, char_end: 27327, byte_start: 27327, byte_end: 27328, column_start: 57, column_end: 58, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27327, char_end: 27330, byte_start: 27328, byte_end: 27331, column_start: 58, column_end: 61, line_start: 814, line_end: 814 }: the
Token { kind: Space, char_start: 27330, char_end: 27331, byte_start: 27331, byte_end: 27332, column_start: 61, column_end: 62, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27331, char_end: 27338, byte_start: 27332, byte_end: 27339, column_start: 62, column_end: 69, line_start: 814, line_end: 814 }: cursor.
Token { kind: Space, char_start: 27338, char_end: 27339, byte_start: 27339, byte_end: 27340, column_start: 69, column_end: 70, line_start: 814, line_end: 814 }: " "
Token { kind: Text, char_start: 27339, char_end: 27341, byte_start: 27340, byte_end: 27342, column_start: 70, column_end: 72, line_start: 814, line_end: 814 }: To
Token { kind: Newline, char_start: 27341, char_end: 27342, byte_start: 27342, byte_end: 27343, column_start: 72, column_end: 1, line_start: 814, line_end: 815 }: "\n"
Token { kind: Text, char_start: 27342, char_end: 27345, byte_start: 27343, byte_end: 27346, column_start: 1, column_end: 4, line_start: 815, line_end: 815 }: use
Token { kind: Space, char_start: 27345, char_end: 27346, byte_start: 27346, byte_end: 27347, column_start: 4, column_end: 5, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27346, char_end: 27348, byte_start: 27347, byte_end: 27349, column_start: 5, column_end: 7, line_start: 815, line_end: 815 }: an
Token { kind: Space, char_start: 27348, char_end: 27349, byte_start: 27349, byte_end: 27350, column_start: 7, column_end: 8, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27349, char_end: 27360, byte_start: 27350, byte_end: 27361, column_start: 8, column_end: 19, line_start: 815, line_end: 815 }: alternative
Token { kind: Space, char_start: 27360, char_end: 27361, byte_start: 27361, byte_end: 27362, column_start: 19, column_end: 20, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27361, char_end: 27368, byte_start: 27362, byte_end: 27369, column_start: 20, column_end: 27, line_start: 815, line_end: 815 }: mapping
Token { kind: Space, char_start: 27368, char_end: 27369, byte_start: 27369, byte_end: 27370, column_start: 27, column_end: 28, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27369, char_end: 27377, byte_start: 27370, byte_end: 27378, column_start: 28, column_end: 36, line_start: 815, line_end: 815 }: instead,
Token { kind: Space, char_start: 27377, char_end: 27378, byte_start: 27378, byte_end: 27379, column_start: 36, column_end: 37, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27378, char_end: 27384, byte_start: 27379, byte_end: 27385, column_start: 37, column_end: 43, line_start: 815, line_end: 815 }: create
Token { kind: Space, char_start: 27384, char_end: 27385, byte_start: 27385, byte_end: 27386, column_start: 43, column_end: 44, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27385, char_end: 27386, byte_start: 27386, byte_end: 27387, column_start: 44, column_end: 45, line_start: 815, line_end: 815 }: a
Token { kind: Space, char_start: 27386, char_end: 27387, byte_start: 27387, byte_end: 27388, column_start: 45, column_end: 46, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27387, char_end: 27396, byte_start: 27388, byte_end: 27397, column_start: 46, column_end: 55, line_start: 815, line_end: 815 }: different
Token { kind: Space, char_start: 27396, char_end: 27397, byte_start: 27397, byte_end: 27398, column_start: 55, column_end: 56, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27397, char_end: 27400, byte_start: 27398, byte_end: 27401, column_start: 56, column_end: 59, line_start: 815, line_end: 815 }: one
Token { kind: Space, char_start: 27400, char_end: 27401, byte_start: 27401, byte_end: 27402, column_start: 59, column_end: 60, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27401, char_end: 27403, byte_start: 27402, byte_end: 27404, column_start: 60, column_end: 62, line_start: 815, line_end: 815 }: in
Token { kind: Space, char_start: 27403, char_end: 27404, byte_start: 27404, byte_end: 27405, column_start: 62, column_end: 63, line_start: 815, line_end: 815 }: " "
Token { kind: Text, char_start: 27404, char_end: 27408, byte_start: 27405, byte_end: 27409, column_start: 63, column_end: 67, line_start: 815, line_end: 815 }: your
Token { kind: Newline, char_start: 27408, char_end: 27409, byte_start: 27409, byte_end: 27410, column_start: 67, column_end: 1, line_start: 815, line_end: 816 }: "\n"
Token { kind: Bar, char_start: 27409, char_end: 27410, byte_start: 27410, byte_end: 27411, column_start: 1, column_end: 2, line_start: 816, line_end: 816 }: |
Token { kind: Text, char_start: 27410, char_end: 27416, byte_start: 27411, byte_end: 27417, column_start: 2, column_end: 8, line_start: 816, line_end: 816 }: .vimrc
Token { kind: Bar, char_start: 27416, char_end: 27417, byte_start: 27417, byte_end: 27418, column_start: 8, column_end: 9, line_start: 816, line_end: 816 }: |
Token { kind: Space, char_start: 27417, char_end: 27418, byte_start: 27418, byte_end: 27419, column_start: 9, column_end: 10, line_start: 816, line_end: 816 }: " "
Token { kind: Text, char_start: 27418, char_end: 27425, byte_start: 27419, byte_end: 27426, column_start: 10, column_end: 17, line_start: 816, line_end: 816 }: instead
Token { kind: Space, char_start: 27425, char_end: 27426, byte_start: 27426, byte_end: 27427, column_start: 17, column_end: 18, line_start: 816, line_end: 816 }: " "
Token { kind: Text, char_start: 27426, char_end: 27431, byte_start: 27427, byte_end: 27432, column_start: 18, column_end: 23, line_start: 816, line_end: 816 }: using
Token { kind: Space, char_start: 27431, char_end: 27432, byte_start: 27432, byte_end: 27433, column_start: 23, column_end: 24, line_start: 816, line_end: 816 }: " "
Token { kind: Bar, char_start: 27432, char_end: 27433, byte_start: 27433, byte_end: 27434, column_start: 24, column_end: 25, line_start: 816, line_end: 816 }: |
Token { kind: Text, char_start: 27433, char_end: 27438, byte_start: 27434, byte_end: 27439, column_start: 25, column_end: 30, line_start: 816, line_end: 816 }: :nmap
Token { kind: Bar, char_start: 27438, char_end: 27439, byte_start: 27439, byte_end: 27440, column_start: 30, column_end: 31, line_start: 816, line_end: 816 }: |
Token { kind: Text, char_start: 27439, char_end: 27440, byte_start: 27440, byte_end: 27441, column_start: 31, column_end: 32, line_start: 816, line_end: 816 }: :
Token { kind: Newline, char_start: 27440, char_end: 27441, byte_start: 27441, byte_end: 27442, column_start: 32, column_end: 1, line_start: 816, line_end: 817 }: "\n"
Token { kind: Newline, char_start: 27441, char_end: 27442, byte_start: 27442, byte_end: 27443, column_start: 1, column_end: 1, line_start: 817, line_end: 818 }: "\n"
Token { kind: CodeFence, char_start: 27442, char_end: 27445, byte_start: 27443, byte_end: 27446, column_start: 1, column_end: 4, line_start: 818, line_end: 818 }: ```
Token { kind: Newline, char_start: 27445, char_end: 27446, byte_start: 27446, byte_end: 27447, column_start: 4, column_end: 1, line_start: 818, line_end: 819 }: "\n"
Token { kind: Text, char_start: 27446, char_end: 27447, byte_start: 27447, byte_end: 27448, column_start: 1, column_end: 2, line_start: 819, line_end: 819 }: "
Token { kind: Space, char_start: 27447, char_end: 27448, byte_start: 27448, byte_end: 27449, column_start: 2, column_end: 3, line_start: 819, line_end: 819 }: " "
Token { kind: Text, char_start: 27448, char_end: 27455, byte_start: 27449, byte_end: 27456, column_start: 3, column_end: 10, line_start: 819, line_end: 819 }: Instead
Token { kind: Space, char_start: 27455, char_end: 27456, byte_start: 27456, byte_end: 27457, column_start: 10, column_end: 11, line_start: 819, line_end: 819 }: " "
Token { kind: Text, char_start: 27456, char_end: 27458, byte_start: 27457, byte_end: 27459, column_start: 11, column_end: 13, line_start: 819, line_end: 819 }: of
Token { kind: Space, char_start: 27458, char_end: 27459, byte_start: 27459, byte_end: 27460, column_start: 13, column_end: 14, line_start: 819, line_end: 819 }: " "
Token { kind: BlockQuote, char_start: 27459, char_end: 27460, byte_start: 27460, byte_end: 27461, column_start: 14, column_end: 15, line_start: 819, line_end: 819 }: <
Token { kind: Text, char_start: 27460, char_end: 27466, byte_start: 27461, byte_end: 27467, column_start: 15, column_end: 21, line_start: 819, line_end: 819 }: Leader
Token { kind: BlockQuote, char_start: 27466, char_end: 27467, byte_start: 27467, byte_end: 27468, column_start: 21, column_end: 22, line_start: 819, line_end: 819 }: >
Token { kind: Text, char_start: 27467, char_end: 27469, byte_start: 27468, byte_end: 27470, column_start: 22, column_end: 24, line_start: 819, line_end: 819 }: s,
Token { kind: Space, char_start: 27469, char_end: 27470, byte_start: 27470, byte_end: 27471, column_start: 24, column_end: 25, line_start: 819, line_end: 819 }: " "
Token { kind: Text, char_start: 27470, char_end: 27473, byte_start: 27471, byte_end: 27474, column_start: 25, column_end: 28, line_start: 819, line_end: 819 }: use
Token { kind: Space, char_start: 27473, char_end: 27474, byte_start: 27474, byte_end: 27475, column_start: 28, column_end: 29, line_start: 819, line_end: 819 }: " "
Token { kind: BlockQuote, char_start: 27474, char_end: 27475, byte_start: 27475, byte_end: 27476, column_start: 29, column_end: 30, line_start: 819, line_end: 819 }: <
Token { kind: Text, char_start: 27475, char_end: 27481, byte_start: 27476, byte_end: 27482, column_start: 30, column_end: 36, line_start: 819, line_end: 819 }: Leader
Token { kind: BlockQuote, char_start: 27481, char_end: 27482, byte_start: 27482, byte_end: 27483, column_start: 36, column_end: 37, line_start: 819, line_end: 819 }: >
Token { kind: Text, char_start: 27482, char_end: 27484, byte_start: 27483, byte_end: 27485, column_start: 37, column_end: 39, line_start: 819, line_end: 819 }: z.
Token { kind: Newline, char_start: 27484, char_end: 27485, byte_start: 27485, byte_end: 27486, column_start: 39, column_end: 1, line_start: 819, line_end: 820 }: "\n"
Token { kind: Text, char_start: 27485, char_end: 27489, byte_start: 27486, byte_end: 27490, column_start: 1, column_end: 5, line_start: 820, line_end: 820 }: nmap
Token { kind: Space, char_start: 27489, char_end: 27490, byte_start: 27490, byte_end: 27491, column_start: 5, column_end: 6, line_start: 820, line_end: 820 }: " "
Token { kind: BlockQuote, char_start: 27490, char_end: 27491, byte_start: 27491, byte_end: 27492, column_start: 6, column_end: 7, line_start: 820, line_end: 820 }: <
Token { kind: Text, char_start: 27491, char_end: 27497, byte_start: 27492, byte_end: 27498, column_start: 7, column_end: 13, line_start: 820, line_end: 820 }: Leader
Token { kind: BlockQuote, char_start: 27497, char_end: 27498, byte_start: 27498, byte_end: 27499, column_start: 13, column_end: 14, line_start: 820, line_end: 820 }: >
Token { kind: Text, char_start: 27498, char_end: 27499, byte_start: 27499, byte_end: 27500, column_start: 14, column_end: 15, line_start: 820, line_end: 820 }: z
Token { kind: Space, char_start: 27499, char_end: 27500, byte_start: 27500, byte_end: 27501, column_start: 15, column_end: 16, line_start: 820, line_end: 820 }: " "
Token { kind: BlockQuote, char_start: 27500, char_end: 27501, byte_start: 27501, byte_end: 27502, column_start: 16, column_end: 17, line_start: 820, line_end: 820 }: <
Token { kind: Text, char_start: 27501, char_end: 27505, byte_start: 27502, byte_end: 27506, column_start: 17, column_end: 21, line_start: 820, line_end: 820 }: Plug
Token { kind: BlockQuote, char_start: 27505, char_end: 27506, byte_start: 27506, byte_end: 27507, column_start: 21, column_end: 22, line_start: 820, line_end: 820 }: >
Token { kind: Lparen, char_start: 27506, char_end: 27507, byte_start: 27507, byte_end: 27508, column_start: 22, column_end: 23, line_start: 820, line_end: 820 }: (
Token { kind: Text, char_start: 27507, char_end: 27520, byte_start: 27508, byte_end: 27521, column_start: 23, column_end: 36, line_start: 820, line_end: 820 }: FerretAckWord
Token { kind: Rparen, char_start: 27520, char_end: 27521, byte_start: 27521, byte_end: 27522, column_start: 36, column_end: 37, line_start: 820, line_end: 820 }: )
Token { kind: Newline, char_start: 27521, char_end: 27522, byte_start: 27522, byte_end: 27523, column_start: 37, column_end: 1, line_start: 820, line_end: 821 }: "\n"
Token { kind: CodeFence, char_start: 27522, char_end: 27525, byte_start: 27523, byte_end: 27526, column_start: 1, column_end: 4, line_start: 821, line_end: 821 }: ```
Token { kind: Newline, char_start: 27525, char_end: 27526, byte_start: 27526, byte_end: 27527, column_start: 4, column_end: 1, line_start: 821, line_end: 822 }: "\n"
Token { kind: Newline, char_start: 27526, char_end: 27527, byte_start: 27527, byte_end: 27528, column_start: 1, column_end: 1, line_start: 822, line_end: 823 }: "\n"
Token { kind: At, char_start: 27527, char_end: 27528, byte_start: 27528, byte_end: 27529, column_start: 1, column_end: 2, line_start: 823, line_end: 823 }: @
Token { kind: Text, char_start: 27528, char_end: 27535, byte_start: 27529, byte_end: 27536, column_start: 2, column_end: 9, line_start: 823, line_end: 823 }: mapping
Token { kind: Space, char_start: 27535, char_end: 27536, byte_start: 27536, byte_end: 27537, column_start: 9, column_end: 10, line_start: 823, line_end: 823 }: " "
Token { kind: BlockQuote, char_start: 27536, char_end: 27537, byte_start: 27537, byte_end: 27538, column_start: 10, column_end: 11, line_start: 823, line_end: 823 }: <
Token { kind: Text, char_start: 27537, char_end: 27541, byte_start: 27538, byte_end: 27542, column_start: 11, column_end: 15, line_start: 823, line_end: 823 }: Plug
Token { kind: BlockQuote, char_start: 27541, char_end: 27542, byte_start: 27542, byte_end: 27543, column_start: 15, column_end: 16, line_start: 823, line_end: 823 }: >
Token { kind: Lparen, char_start: 27542, char_end: 27543, byte_start: 27543, byte_end: 27544, column_start: 16, column_end: 17, line_start: 823, line_end: 823 }: (
Token { kind: Text, char_start: 27543, char_end: 27553, byte_start: 27544, byte_end: 27554, column_start: 17, column_end: 27, line_start: 823, line_end: 823 }: FerretAcks
Token { kind: Rparen, char_start: 27553, char_end: 27554, byte_start: 27554, byte_end: 27555, column_start: 27, column_end: 28, line_start: 823, line_end: 823 }: )
Token { kind: Newline, char_start: 27554, char_end: 27555, byte_start: 27555, byte_end: 27556, column_start: 28, column_end: 1, line_start: 823, line_end: 824 }: "\n"
Token { kind: Newline, char_start: 27555, char_end: 27556, byte_start: 27556, byte_end: 27557, column_start: 1, column_end: 1, line_start: 824, line_end: 825 }: "\n"
Token { kind: Text, char_start: 27556, char_end: 27562, byte_start: 27557, byte_end: 27563, column_start: 1, column_end: 7, line_start: 825, line_end: 825 }: Ferret
Token { kind: Space, char_start: 27562, char_end: 27563, byte_start: 27563, byte_end: 27564, column_start: 7, column_end: 8, line_start: 825, line_end: 825 }: " "
Token { kind: Text, char_start: 27563, char_end: 27567, byte_start: 27564, byte_end: 27568, column_start: 8, column_end: 12, line_start: 825, line_end: 825 }: maps
Token { kind: Space, char_start: 27567, char_end: 27568, byte_start: 27568, byte_end: 27569, column_start: 12, column_end: 13, line_start: 825, line_end: 825 }: " "
Token { kind: Backtick, char_start: 27568, char_end: 27569, byte_start: 27569, byte_end: 27570, column_start: 13, column_end: 14, line_start: 825, line_end: 825 }: `
Token { kind: BlockQuote, char_start: 27569, char_end: 27570, byte_start: 27570, byte_end: 27571, column_start: 14, column_end: 15, line_start: 825, line_end: 825 }: <
Token { kind: Text, char_start: 27570, char_end: 27576, byte_start: 27571, byte_end: 27577, column_start: 15, column_end: 21, line_start: 825, line_end: 825 }: Leader
Token { kind: BlockQuote, char_start: 27576, char_end: 27577, byte_start: 27577, byte_end: 27578, column_start: 21, column_end: 22, line_start: 825, line_end: 825 }: >
Token { kind: Text, char_start: 27577, char_end: 27578, byte_start: 27578, byte_end: 27579, column_start: 22, column_end: 23, line_start: 825, line_end: 825 }: r
Token { kind: Backtick, char_start: 27578, char_end: 27579, byte_start: 27579, byte_end: 27580, column_start: 23, column_end: 24, line_start: 825, line_end: 825 }: `
Token { kind: Space, char_start: 27579, char_end: 27580, byte_start: 27580, byte_end: 27581, column_start: 24, column_end: 25, line_start: 825, line_end: 825 }: " "
Token { kind: Lparen, char_start: 27580, char_end: 27581, byte_start: 27581, byte_end: 27582, column_start: 25, column_end: 26, line_start: 825, line_end: 825 }: (
Token { kind: Text, char_start: 27581, char_end: 27590, byte_start: 27582, byte_end: 27591, column_start: 26, column_end: 35, line_start: 825, line_end: 825 }: mnemonic:
Token { kind: Space, char_start: 27590, char_end: 27591, byte_start: 27591, byte_end: 27592, column_start: 35, column_end: 36, line_start: 825, line_end: 825 }: " "
Token { kind: Text, char_start: 27591, char_end: 27600, byte_start: 27592, byte_end: 27601, column_start: 36, column_end: 45, line_start: 825, line_end: 825 }: "replace"
Token { kind: Rparen, char_start: 27600, char_end: 27601, byte_start: 27601, byte_end: 27602, column_start: 45, column_end: 46, line_start: 825, line_end: 825 }: )
Token { kind: Space, char_start: 27601, char_end: 27602, byte_start: 27602, byte_end: 27603, column_start: 46, column_end: 47, line_start: 825, line_end: 825 }: " "
Token { kind: Text, char_start: 27602, char_end: 27604, byte_start: 27603, byte_end: 27605, column_start: 47, column_end: 49, line_start: 825, line_end: 825 }: to
Token { kind: Space, char_start: 27604, char_end: 27605, byte_start: 27605, byte_end: 27606, column_start: 49, column_end: 50, line_start: 825, line_end: 825 }: " "
Token { kind: Bar, char_start: 27605, char_end: 27606, byte_start: 27606, byte_end: 27607, column_start: 50, column_end: 51, line_start: 825, line_end: 825 }: |
Token { kind: BlockQuote, char_start: 27606, char_end: 27607, byte_start: 27607, byte_end: 27608, column_start: 51, column_end: 52, line_start: 825, line_end: 825 }: <
Token { kind: Text, char_start: 27607, char_end: 27611, byte_start: 27608, byte_end: 27612, column_start: 52, column_end: 56, line_start: 825, line_end: 825 }: Plug
Token { kind: BlockQuote, char_start: 27611, char_end: 27612, byte_start: 27612, byte_end: 27613, column_start: 56, column_end: 57, line_start: 825, line_end: 825 }: >
Token { kind: Lparen, char_start: 27612, char_end: 27613, byte_start: 27613, byte_end: 27614, column_start: 57, column_end: 58, line_start: 825, line_end: 825 }: (
Token { kind: Text, char_start: 27613, char_end: 27623, byte_start: 27614, byte_end: 27624, column_start: 58, column_end: 68, line_start: 825, line_end: 825 }: FerretAcks
Token { kind: Rparen, char_start: 27623, char_end: 27624, byte_start: 27624, byte_end: 27625, column_start: 68, column_end: 69, line_start: 825, line_end: 825 }: )
Token { kind: Bar, char_start: 27624, char_end: 27625, byte_start: 27625, byte_end: 27626, column_start: 69, column_end: 70, line_start: 825, line_end: 825 }: |
Token { kind: Text, char_start: 27625, char_end: 27626, byte_start: 27626, byte_end: 27627, column_start: 70, column_end: 71, line_start: 825, line_end: 825 }: ,
Token { kind: Space, char_start: 27626, char_end: 27627, byte_start: 27627, byte_end: 27628, column_start: 71, column_end: 72, line_start: 825, line_end: 825 }: " "
Token { kind: Text, char_start: 27627, char_end: 27632, byte_start: 27628, byte_end: 27633, column_start: 72, column_end: 77, line_start: 825, line_end: 825 }: which
Token { kind: Newline, char_start: 27632, char_end: 27633, byte_start: 27633, byte_end: 27634, column_start: 77, column_end: 1, line_start: 825, line_end: 826 }: "\n"
Token { kind: Text, char_start: 27633, char_end: 27641, byte_start: 27634, byte_end: 27642, column_start: 1, column_end: 9, line_start: 826, line_end: 826 }: triggers
Token { kind: Space, char_start: 27641, char_end: 27642, byte_start: 27642, byte_end: 27643, column_start: 9, column_end: 10, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27642, char_end: 27645, byte_start: 27643, byte_end: 27646, column_start: 10, column_end: 13, line_start: 826, line_end: 826 }: the
Token { kind: Space, char_start: 27645, char_end: 27646, byte_start: 27646, byte_end: 27647, column_start: 13, column_end: 14, line_start: 826, line_end: 826 }: " "
Token { kind: Bar, char_start: 27646, char_end: 27647, byte_start: 27647, byte_end: 27648, column_start: 14, column_end: 15, line_start: 826, line_end: 826 }: |
Token { kind: Text, char_start: 27647, char_end: 27652, byte_start: 27648, byte_end: 27653, column_start: 15, column_end: 20, line_start: 826, line_end: 826 }: :Acks
Token { kind: Bar, char_start: 27652, char_end: 27653, byte_start: 27653, byte_end: 27654, column_start: 20, column_end: 21, line_start: 826, line_end: 826 }: |
Token { kind: Space, char_start: 27653, char_end: 27654, byte_start: 27654, byte_end: 27655, column_start: 21, column_end: 22, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27654, char_end: 27661, byte_start: 27655, byte_end: 27662, column_start: 22, column_end: 29, line_start: 826, line_end: 826 }: command
Token { kind: Space, char_start: 27661, char_end: 27662, byte_start: 27662, byte_end: 27663, column_start: 29, column_end: 30, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27662, char_end: 27665, byte_start: 27663, byte_end: 27666, column_start: 30, column_end: 33, line_start: 826, line_end: 826 }: and
Token { kind: Space, char_start: 27665, char_end: 27666, byte_start: 27666, byte_end: 27667, column_start: 33, column_end: 34, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27666, char_end: 27671, byte_start: 27667, byte_end: 27672, column_start: 34, column_end: 39, line_start: 826, line_end: 826 }: fills
Token { kind: Space, char_start: 27671, char_end: 27672, byte_start: 27672, byte_end: 27673, column_start: 39, column_end: 40, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27672, char_end: 27675, byte_start: 27673, byte_end: 27676, column_start: 40, column_end: 43, line_start: 826, line_end: 826 }: the
Token { kind: Space, char_start: 27675, char_end: 27676, byte_start: 27676, byte_end: 27677, column_start: 43, column_end: 44, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27676, char_end: 27682, byte_start: 27677, byte_end: 27683, column_start: 44, column_end: 50, line_start: 826, line_end: 826 }: prompt
Token { kind: Space, char_start: 27682, char_end: 27683, byte_start: 27683, byte_end: 27684, column_start: 50, column_end: 51, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27683, char_end: 27687, byte_start: 27684, byte_end: 27688, column_start: 51, column_end: 55, line_start: 826, line_end: 826 }: with
Token { kind: Space, char_start: 27687, char_end: 27688, byte_start: 27688, byte_end: 27689, column_start: 55, column_end: 56, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27688, char_end: 27691, byte_start: 27689, byte_end: 27692, column_start: 56, column_end: 59, line_start: 826, line_end: 826 }: the
Token { kind: Space, char_start: 27691, char_end: 27692, byte_start: 27692, byte_end: 27693, column_start: 59, column_end: 60, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27692, char_end: 27696, byte_start: 27693, byte_end: 27697, column_start: 60, column_end: 64, line_start: 826, line_end: 826 }: last
Token { kind: Space, char_start: 27696, char_end: 27697, byte_start: 27697, byte_end: 27698, column_start: 64, column_end: 65, line_start: 826, line_end: 826 }: " "
Token { kind: Text, char_start: 27697, char_end: 27703, byte_start: 27698, byte_end: 27704, column_start: 65, column_end: 71, line_start: 826, line_end: 826 }: search
Token { kind: Newline, char_start: 27703, char_end: 27704, byte_start: 27704, byte_end: 27705, column_start: 71, column_end: 1, line_start: 826, line_end: 827 }: "\n"
Token { kind: Text, char_start: 27704, char_end: 27708, byte_start: 27705, byte_end: 27709, column_start: 1, column_end: 5, line_start: 827, line_end: 827 }: term
Token { kind: Space, char_start: 27708, char_end: 27709, byte_start: 27709, byte_end: 27710, column_start: 5, column_end: 6, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27709, char_end: 27713, byte_start: 27710, byte_end: 27714, column_start: 6, column_end: 10, line_start: 827, line_end: 827 }: from
Token { kind: Space, char_start: 27713, char_end: 27714, byte_start: 27714, byte_end: 27715, column_start: 10, column_end: 11, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27714, char_end: 27721, byte_start: 27715, byte_end: 27722, column_start: 11, column_end: 18, line_start: 827, line_end: 827 }: Ferret.
Token { kind: Space, char_start: 27721, char_end: 27722, byte_start: 27722, byte_end: 27723, column_start: 18, column_end: 19, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27722, char_end: 27724, byte_start: 27723, byte_end: 27725, column_start: 19, column_end: 21, line_start: 827, line_end: 827 }: to
Token { kind: Space, char_start: 27724, char_end: 27725, byte_start: 27725, byte_end: 27726, column_start: 21, column_end: 22, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27725, char_end: 27728, byte_start: 27726, byte_end: 27729, column_start: 22, column_end: 25, line_start: 827, line_end: 827 }: use
Token { kind: Space, char_start: 27728, char_end: 27729, byte_start: 27729, byte_end: 27730, column_start: 25, column_end: 26, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27729, char_end: 27731, byte_start: 27730, byte_end: 27732, column_start: 26, column_end: 28, line_start: 827, line_end: 827 }: an
Token { kind: Space, char_start: 27731, char_end: 27732, byte_start: 27732, byte_end: 27733, column_start: 28, column_end: 29, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27732, char_end: 27743, byte_start: 27733, byte_end: 27744, column_start: 29, column_end: 40, line_start: 827, line_end: 827 }: alternative
Token { kind: Space, char_start: 27743, char_end: 27744, byte_start: 27744, byte_end: 27745, column_start: 40, column_end: 41, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27744, char_end: 27751, byte_start: 27745, byte_end: 27752, column_start: 41, column_end: 48, line_start: 827, line_end: 827 }: mapping
Token { kind: Space, char_start: 27751, char_end: 27752, byte_start: 27752, byte_end: 27753, column_start: 48, column_end: 49, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27752, char_end: 27760, byte_start: 27753, byte_end: 27761, column_start: 49, column_end: 57, line_start: 827, line_end: 827 }: instead,
Token { kind: Space, char_start: 27760, char_end: 27761, byte_start: 27761, byte_end: 27762, column_start: 57, column_end: 58, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27761, char_end: 27767, byte_start: 27762, byte_end: 27768, column_start: 58, column_end: 64, line_start: 827, line_end: 827 }: create
Token { kind: Space, char_start: 27767, char_end: 27768, byte_start: 27768, byte_end: 27769, column_start: 64, column_end: 65, line_start: 827, line_end: 827 }: " "
Token { kind: Text, char_start: 27768, char_end: 27769, byte_start: 27769, byte_end: 27770, column_start: 65, column_end: 66, line_start: 827, line_end: 827 }: a
Token { kind: Newline, char_start: 27769, char_end: 27770, byte_start: 27770, byte_end: 27771, column_start: 66, column_end: 1, line_start: 827, line_end: 828 }: "\n"
Token { kind: Text, char_start: 27770, char_end: 27779, byte_start: 27771, byte_end: 27780, column_start: 1, column_end: 10, line_start: 828, line_end: 828 }: different
Token { kind: Space, char_start: 27779, char_end: 27780, byte_start: 27780, byte_end: 27781, column_start: 10, column_end: 11, line_start: 828, line_end: 828 }: " "
Token { kind: Text, char_start: 27780, char_end: 27783, byte_start: 27781, byte_end: 27784, column_start: 11, column_end: 14, line_start: 828, line_end: 828 }: one
Token { kind: Space, char_start: 27783, char_end: 27784, byte_start: 27784, byte_end: 27785, column_start: 14, column_end: 15, line_start: 828, line_end: 828 }: " "
Token { kind: Text, char_start: 27784, char_end: 27786, byte_start: 27785, byte_end: 27787, column_start: 15, column_end: 17, line_start: 828, line_end: 828 }: in
Token { kind: Space, char_start: 27786, char_end: 27787, byte_start: 27787, byte_end: 27788, column_start: 17, column_end: 18, line_start: 828, line_end: 828 }: " "
Token { kind: Text, char_start: 27787, char_end: 27791, byte_start: 27788, byte_end: 27792, column_start: 18, column_end: 22, line_start: 828, line_end: 828 }: your
Token { kind: Space, char_start: 27791, char_end: 27792, byte_start: 27792, byte_end: 27793, column_start: 22, column_end: 23, line_start: 828, line_end: 828 }: " "
Token { kind: Bar, char_start: 27792, char_end: 27793, byte_start: 27793, byte_end: 27794, column_start: 23, column_end: 24, line_start: 828, line_end: 828 }: |
Token { kind: Text, char_start: 27793, char_end: 27799, byte_start: 27794, byte_end: 27800, column_start: 24, column_end: 30, line_start: 828, line_end: 828 }: .vimrc
Token { kind: Bar, char_start: 27799, char_end: 27800, byte_start: 27800, byte_end: 27801, column_start: 30, column_end: 31, line_start: 828, line_end: 828 }: |
Token { kind: Space, char_start: 27800, char_end: 27801, byte_start: 27801, byte_end: 27802, column_start: 31, column_end: 32, line_start: 828, line_end: 828 }: " "
Token { kind: Text, char_start: 27801, char_end: 27808, byte_start: 27802, byte_end: 27809, column_start: 32, column_end: 39, line_start: 828, line_end: 828 }: instead
Token { kind: Space, char_start: 27808, char_end: 27809, byte_start: 27809, byte_end: 27810, column_start: 39, column_end: 40, line_start: 828, line_end: 828 }: " "
Token { kind: Text, char_start: 27809, char_end: 27814, byte_start: 27810, byte_end: 27815, column_start: 40, column_end: 45, line_start: 828, line_end: 828 }: using
Token { kind: Space, char_start: 27814, char_end: 27815, byte_start: 27815, byte_end: 27816, column_start: 45, column_end: 46, line_start: 828, line_end: 828 }: " "
Token { kind: Bar, char_start: 27815, char_end: 27816, byte_start: 27816, byte_end: 27817, column_start: 46, column_end: 47, line_start: 828, line_end: 828 }: |
Token { kind: Text, char_start: 27816, char_end: 27821, byte_start: 27817, byte_end: 27822, column_start: 47, column_end: 52, line_start: 828, line_end: 828 }: :nmap
Token { kind: Bar, char_start: 27821, char_end: 27822, byte_start: 27822, byte_end: 27823, column_start: 52, column_end: 53, line_start: 828, line_end: 828 }: |
Token { kind: Text, char_start: 27822, char_end: 27823, byte_start: 27823, byte_end: 27824, column_start: 53, column_end: 54, line_start: 828, line_end: 828 }: :
Token { kind: Newline, char_start: 27823, char_end: 27824, byte_start: 27824, byte_end: 27825, column_start: 54, column_end: 1, line_start: 828, line_end: 829 }: "\n"
Token { kind: Newline, char_start: 27824, char_end: 27825, byte_start: 27825, byte_end: 27826, column_start: 1, column_end: 1, line_start: 829, line_end: 830 }: "\n"
Token { kind: CodeFence, char_start: 27825, char_end: 27828, byte_start: 27826, byte_end: 27829, column_start: 1, column_end: 4, line_start: 830, line_end: 830 }: ```
Token { kind: Newline, char_start: 27828, char_end: 27829, byte_start: 27829, byte_end: 27830, column_start: 4, column_end: 1, line_start: 830, line_end: 831 }: "\n"
Token { kind: Text, char_start: 27829, char_end: 27830, byte_start: 27830, byte_end: 27831, column_start: 1, column_end: 2, line_start: 831, line_end: 831 }: "
Token { kind: Space, char_start: 27830, char_end: 27831, byte_start: 27831, byte_end: 27832, column_start: 2, column_end: 3, line_start: 831, line_end: 831 }: " "
Token { kind: Text, char_start: 27831, char_end: 27838, byte_start: 27832, byte_end: 27839, column_start: 3, column_end: 10, line_start: 831, line_end: 831 }: Instead
Token { kind: Space, char_start: 27838, char_end: 27839, byte_start: 27839, byte_end: 27840, column_start: 10, column_end: 11, line_start: 831, line_end: 831 }: " "
Token { kind: Text, char_start: 27839, char_end: 27841, byte_start: 27840, byte_end: 27842, column_start: 11, column_end: 13, line_start: 831, line_end: 831 }: of
Token { kind: Space, char_start: 27841, char_end: 27842, byte_start: 27842, byte_end: 27843, column_start: 13, column_end: 14, line_start: 831, line_end: 831 }: " "
Token { kind: BlockQuote, char_start: 27842, char_end: 27843, byte_start: 27843, byte_end: 27844, column_start: 14, column_end: 15, line_start: 831, line_end: 831 }: <
Token { kind: Text, char_start: 27843, char_end: 27849, byte_start: 27844, byte_end: 27850, column_start: 15, column_end: 21, line_start: 831, line_end: 831 }: Leader
Token { kind: BlockQuote, char_start: 27849, char_end: 27850, byte_start: 27850, byte_end: 27851, column_start: 21, column_end: 22, line_start: 831, line_end: 831 }: >
Token { kind: Text, char_start: 27850, char_end: 27852, byte_start: 27851, byte_end: 27853, column_start: 22, column_end: 24, line_start: 831, line_end: 831 }: r,
Token { kind: Space, char_start: 27852, char_end: 27853, byte_start: 27853, byte_end: 27854, column_start: 24, column_end: 25, line_start: 831, line_end: 831 }: " "
Token { kind: Text, char_start: 27853, char_end: 27856, byte_start: 27854, byte_end: 27857, column_start: 25, column_end: 28, line_start: 831, line_end: 831 }: use
Token { kind: Space, char_start: 27856, char_end: 27857, byte_start: 27857, byte_end: 27858, column_start: 28, column_end: 29, line_start: 831, line_end: 831 }: " "
Token { kind: BlockQuote, char_start: 27857, char_end: 27858, byte_start: 27858, byte_end: 27859, column_start: 29, column_end: 30, line_start: 831, line_end: 831 }: <
Token { kind: Text, char_start: 27858, char_end: 27864, byte_start: 27859, byte_end: 27865, column_start: 30, column_end: 36, line_start: 831, line_end: 831 }: Leader
Token { kind: BlockQuote, char_start: 27864, char_end: 27865, byte_start: 27865, byte_end: 27866, column_start: 36, column_end: 37, line_start: 831, line_end: 831 }: >
Token { kind: Text, char_start: 27865, char_end: 27867, byte_start: 27866, byte_end: 27868, column_start: 37, column_end: 39, line_start: 831, line_end: 831 }: u.
Token { kind: Newline, char_start: 27867, char_end: 27868, byte_start: 27868, byte_end: 27869, column_start: 39, column_end: 1, line_start: 831, line_end: 832 }: "\n"
Token { kind: Text, char_start: 27868, char_end: 27872, byte_start: 27869, byte_end: 27873, column_start: 1, column_end: 5, line_start: 832, line_end: 832 }: nmap
Token { kind: Space, char_start: 27872, char_end: 27873, byte_start: 27873, byte_end: 27874, column_start: 5, column_end: 6, line_start: 832, line_end: 832 }: " "
Token { kind: BlockQuote, char_start: 27873, char_end: 27874, byte_start: 27874, byte_end: 27875, column_start: 6, column_end: 7, line_start: 832, line_end: 832 }: <
Token { kind: Text, char_start: 27874, char_end: 27880, byte_start: 27875, byte_end: 27881, column_start: 7, column_end: 13, line_start: 832, line_end: 832 }: Leader
Token { kind: BlockQuote, char_start: 27880, char_end: 27881, byte_start: 27881, byte_end: 27882, column_start: 13, column_end: 14, line_start: 832, line_end: 832 }: >
Token { kind: Text, char_start: 27881, char_end: 27882, byte_start: 27882, byte_end: 27883, column_start: 14, column_end: 15, line_start: 832, line_end: 832 }: u
Token { kind: Space, char_start: 27882, char_end: 27883, byte_start: 27883, byte_end: 27884, column_start: 15, column_end: 16, line_start: 832, line_end: 832 }: " "
Token { kind: BlockQuote, char_start: 27883, char_end: 27884, byte_start: 27884, byte_end: 27885, column_start: 16, column_end: 17, line_start: 832, line_end: 832 }: <
Token { kind: Text, char_start: 27884, char_end: 27888, byte_start: 27885, byte_end: 27889, column_start: 17, column_end: 21, line_start: 832, line_end: 832 }: Plug
Token { kind: BlockQuote, char_start: 27888, char_end: 27889, byte_start: 27889, byte_end: 27890, column_start: 21, column_end: 22, line_start: 832, line_end: 832 }: >
Token { kind: Lparen, char_start: 27889, char_end: 27890, byte_start: 27890, byte_end: 27891, column_start: 22, column_end: 23, line_start: 832, line_end: 832 }: (
Token { kind: Text, char_start: 27890, char_end: 27900, byte_start: 27891, byte_end: 27901, column_start: 23, column_end: 33, line_start: 832, line_end: 832 }: FerretAcks
Token { kind: Rparen, char_start: 27900, char_end: 27901, byte_start: 27901, byte_end: 27902, column_start: 33, column_end: 34, line_start: 832, line_end: 832 }: )
Token { kind: Newline, char_start: 27901, char_end: 27902, byte_start: 27902, byte_end: 27903, column_start: 34, column_end: 1, line_start: 832, line_end: 833 }: "\n"
Token { kind: CodeFence, char_start: 27902, char_end: 27905, byte_start: 27903, byte_end: 27906, column_start: 1, column_end: 4, line_start: 833, line_end: 833 }: ```
Token { kind: Newline, char_start: 27905, char_end: 27906, byte_start: 27906, byte_end: 27907, column_start: 4, column_end: 1, line_start: 833, line_end: 834 }: "\n"
Token { kind: Newline, char_start: 27906, char_end: 27907, byte_start: 27907, byte_end: 27908, column_start: 1, column_end: 1, line_start: 834, line_end: 835 }: "\n"
Token { kind: At, char_start: 27907, char_end: 27908, byte_start: 27908, byte_end: 27909, column_start: 1, column_end: 2, line_start: 835, line_end: 835 }: @
Token { kind: Text, char_start: 27908, char_end: 27915, byte_start: 27909, byte_end: 27916, column_start: 2, column_end: 9, line_start: 835, line_end: 835 }: command
Token { kind: Space, char_start: 27915, char_end: 27916, byte_start: 27916, byte_end: 27917, column_start: 9, column_end: 10, line_start: 835, line_end: 835 }: " "
Token { kind: Text, char_start: 27916, char_end: 27922, byte_start: 27917, byte_end: 27923, column_start: 10, column_end: 16, line_start: 835, line_end: 835 }: :Qargs
Token { kind: Newline, char_start: 27922, char_end: 27923, byte_start: 27923, byte_end: 27924, column_start: 16, column_end: 1, line_start: 835, line_end: 836 }: "\n"
Token { kind: Newline, char_start: 27923, char_end: 27924, byte_start: 27924, byte_end: 27925, column_start: 1, column_end: 1, line_start: 836, line_end: 837 }: "\n"
Token { kind: Text, char_start: 27924, char_end: 27928, byte_start: 27925, byte_end: 27929, column_start: 1, column_end: 5, line_start: 837, line_end: 837 }: This
Token { kind: Space, char_start: 27928, char_end: 27929, byte_start: 27929, byte_end: 27930, column_start: 5, column_end: 6, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27929, char_end: 27931, byte_start: 27930, byte_end: 27932, column_start: 6, column_end: 8, line_start: 837, line_end: 837 }: is
Token { kind: Space, char_start: 27931, char_end: 27932, byte_start: 27932, byte_end: 27933, column_start: 8, column_end: 9, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27932, char_end: 27933, byte_start: 27933, byte_end: 27934, column_start: 9, column_end: 10, line_start: 837, line_end: 837 }: a
Token { kind: Space, char_start: 27933, char_end: 27934, byte_start: 27934, byte_end: 27935, column_start: 10, column_end: 11, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27934, char_end: 27941, byte_start: 27935, byte_end: 27942, column_start: 11, column_end: 18, line_start: 837, line_end: 837 }: utility
Token { kind: Space, char_start: 27941, char_end: 27942, byte_start: 27942, byte_end: 27943, column_start: 18, column_end: 19, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27942, char_end: 27950, byte_start: 27943, byte_end: 27951, column_start: 19, column_end: 27, line_start: 837, line_end: 837 }: function
Token { kind: Space, char_start: 27950, char_end: 27951, byte_start: 27951, byte_end: 27952, column_start: 27, column_end: 28, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27951, char_end: 27955, byte_start: 27952, byte_end: 27956, column_start: 28, column_end: 32, line_start: 837, line_end: 837 }: that
Token { kind: Space, char_start: 27955, char_end: 27956, byte_start: 27956, byte_end: 27957, column_start: 32, column_end: 33, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27956, char_end: 27958, byte_start: 27957, byte_end: 27959, column_start: 33, column_end: 35, line_start: 837, line_end: 837 }: is
Token { kind: Space, char_start: 27958, char_end: 27959, byte_start: 27959, byte_end: 27960, column_start: 35, column_end: 36, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27959, char_end: 27963, byte_start: 27960, byte_end: 27964, column_start: 36, column_end: 40, line_start: 837, line_end: 837 }: used
Token { kind: Space, char_start: 27963, char_end: 27964, byte_start: 27964, byte_end: 27965, column_start: 40, column_end: 41, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27964, char_end: 27974, byte_start: 27965, byte_end: 27975, column_start: 41, column_end: 51, line_start: 837, line_end: 837 }: internally
Token { kind: Space, char_start: 27974, char_end: 27975, byte_start: 27975, byte_end: 27976, column_start: 51, column_end: 52, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27975, char_end: 27979, byte_start: 27976, byte_end: 27980, column_start: 52, column_end: 56, line_start: 837, line_end: 837 }: when
Token { kind: Space, char_start: 27979, char_end: 27980, byte_start: 27980, byte_end: 27981, column_start: 56, column_end: 57, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27980, char_end: 27987, byte_start: 27981, byte_end: 27988, column_start: 57, column_end: 64, line_start: 837, line_end: 837 }: running
Token { kind: Space, char_start: 27987, char_end: 27988, byte_start: 27988, byte_end: 27989, column_start: 64, column_end: 65, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27988, char_end: 27990, byte_start: 27989, byte_end: 27991, column_start: 65, column_end: 67, line_start: 837, line_end: 837 }: on
Token { kind: Space, char_start: 27990, char_end: 27991, byte_start: 27991, byte_end: 27992, column_start: 67, column_end: 68, line_start: 837, line_end: 837 }: " "
Token { kind: Text, char_start: 27991, char_end: 27996, byte_start: 27992, byte_end: 27997, column_start: 68, column_end: 73, line_start: 837, line_end: 837 }: older
Token { kind: Newline, char_start: 27996, char_end: 27997, byte_start: 27997, byte_end: 27998, column_start: 73, column_end: 1, line_start: 837, line_end: 838 }: "\n"
Token { kind: Text, char_start: 27997, char_end: 28005, byte_start: 27998, byte_end: 28006, column_start: 1, column_end: 9, line_start: 838, line_end: 838 }: versions
Token { kind: Space, char_start: 28005, char_end: 28006, byte_start: 28006, byte_end: 28007, column_start: 9, column_end: 10, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28006, char_end: 28008, byte_start: 28007, byte_end: 28009, column_start: 10, column_end: 12, line_start: 838, line_end: 838 }: of
Token { kind: Space, char_start: 28008, char_end: 28009, byte_start: 28009, byte_end: 28010, column_start: 12, column_end: 13, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28009, char_end: 28012, byte_start: 28010, byte_end: 28013, column_start: 13, column_end: 16, line_start: 838, line_end: 838 }: Vim
Token { kind: Space, char_start: 28012, char_end: 28013, byte_start: 28013, byte_end: 28014, column_start: 16, column_end: 17, line_start: 838, line_end: 838 }: " "
Token { kind: Lparen, char_start: 28013, char_end: 28014, byte_start: 28014, byte_end: 28015, column_start: 17, column_end: 18, line_start: 838, line_end: 838 }: (
Token { kind: Text, char_start: 28014, char_end: 28019, byte_start: 28015, byte_end: 28020, column_start: 18, column_end: 23, line_start: 838, line_end: 838 }: prior
Token { kind: Space, char_start: 28019, char_end: 28020, byte_start: 28020, byte_end: 28021, column_start: 23, column_end: 24, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28020, char_end: 28022, byte_start: 28021, byte_end: 28023, column_start: 24, column_end: 26, line_start: 838, line_end: 838 }: to
Token { kind: Space, char_start: 28022, char_end: 28023, byte_start: 28023, byte_end: 28024, column_start: 26, column_end: 27, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28023, char_end: 28030, byte_start: 28024, byte_end: 28031, column_start: 27, column_end: 34, line_start: 838, line_end: 838 }: version
Token { kind: Space, char_start: 28030, char_end: 28031, byte_start: 28031, byte_end: 28032, column_start: 34, column_end: 35, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28031, char_end: 28032, byte_start: 28032, byte_end: 28033, column_start: 35, column_end: 36, line_start: 838, line_end: 838 }: 8
Token { kind: Rparen, char_start: 28032, char_end: 28033, byte_start: 28033, byte_end: 28034, column_start: 36, column_end: 37, line_start: 838, line_end: 838 }: )
Token { kind: Space, char_start: 28033, char_end: 28034, byte_start: 28034, byte_end: 28035, column_start: 37, column_end: 38, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28034, char_end: 28037, byte_start: 28035, byte_end: 28038, column_start: 38, column_end: 41, line_start: 838, line_end: 838 }: but
Token { kind: Space, char_start: 28037, char_end: 28038, byte_start: 28038, byte_end: 28039, column_start: 41, column_end: 42, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28038, char_end: 28040, byte_start: 28039, byte_end: 28041, column_start: 42, column_end: 44, line_start: 838, line_end: 838 }: is
Token { kind: Space, char_start: 28040, char_end: 28041, byte_start: 28041, byte_end: 28042, column_start: 44, column_end: 45, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28041, char_end: 28045, byte_start: 28042, byte_end: 28046, column_start: 45, column_end: 49, line_start: 838, line_end: 838 }: also
Token { kind: Space, char_start: 28045, char_end: 28046, byte_start: 28046, byte_end: 28047, column_start: 49, column_end: 50, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28046, char_end: 28055, byte_start: 28047, byte_end: 28056, column_start: 50, column_end: 59, line_start: 838, line_end: 838 }: generally
Token { kind: Space, char_start: 28055, char_end: 28056, byte_start: 28056, byte_end: 28057, column_start: 59, column_end: 60, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28056, char_end: 28062, byte_start: 28057, byte_end: 28063, column_start: 60, column_end: 66, line_start: 838, line_end: 838 }: useful
Token { kind: Space, char_start: 28062, char_end: 28063, byte_start: 28063, byte_end: 28064, column_start: 66, column_end: 67, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28063, char_end: 28069, byte_start: 28064, byte_end: 28070, column_start: 67, column_end: 73, line_start: 838, line_end: 838 }: enough
Token { kind: Space, char_start: 28069, char_end: 28070, byte_start: 28070, byte_end: 28071, column_start: 73, column_end: 74, line_start: 838, line_end: 838 }: " "
Token { kind: Text, char_start: 28070, char_end: 28072, byte_start: 28071, byte_end: 28073, column_start: 74, column_end: 76, line_start: 838, line_end: 838 }: to
Token { kind: Newline, char_start: 28072, char_end: 28073, byte_start: 28073, byte_end: 28074, column_start: 76, column_end: 1, line_start: 838, line_end: 839 }: "\n"
Token { kind: Text, char_start: 28073, char_end: 28080, byte_start: 28074, byte_end: 28081, column_start: 1, column_end: 8, line_start: 839, line_end: 839 }: warrant
Token { kind: Space, char_start: 28080, char_end: 28081, byte_start: 28081, byte_end: 28082, column_start: 8, column_end: 9, line_start: 839, line_end: 839 }: " "
Token { kind: Text, char_start: 28081, char_end: 28086, byte_start: 28082, byte_end: 28087, column_start: 9, column_end: 14, line_start: 839, line_end: 839 }: being
Token { kind: Space, char_start: 28086, char_end: 28087, byte_start: 28087, byte_end: 28088, column_start: 14, column_end: 15, line_start: 839, line_end: 839 }: " "
Token { kind: Text, char_start: 28087, char_end: 28094, byte_start: 28088, byte_end: 28095, column_start: 15, column_end: 22, line_start: 839, line_end: 839 }: exposed
Token { kind: Space, char_start: 28094, char_end: 28095, byte_start: 28095, byte_end: 28096, column_start: 22, column_end: 23, line_start: 839, line_end: 839 }: " "
Token { kind: Text, char_start: 28095, char_end: 28104, byte_start: 28096, byte_end: 28105, column_start: 23, column_end: 32, line_start: 839, line_end: 839 }: publicly.
Token { kind: Newline, char_start: 28104, char_end: 28105, byte_start: 28105, byte_end: 28106, column_start: 32, column_end: 1, line_start: 839, line_end: 840 }: "\n"
Token { kind: Newline, char_start: 28105, char_end: 28106, byte_start: 28106, byte_end: 28107, column_start: 1, column_end: 1, line_start: 840, line_end: 841 }: "\n"
Token { kind: Text, char_start: 28106, char_end: 28108, byte_start: 28107, byte_end: 28109, column_start: 1, column_end: 3, line_start: 841, line_end: 841 }: It
Token { kind: Space, char_start: 28108, char_end: 28109, byte_start: 28109, byte_end: 28110, column_start: 3, column_end: 4, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28109, char_end: 28114, byte_start: 28110, byte_end: 28115, column_start: 4, column_end: 9, line_start: 841, line_end: 841 }: takes
Token { kind: Space, char_start: 28114, char_end: 28115, byte_start: 28115, byte_end: 28116, column_start: 9, column_end: 10, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28115, char_end: 28118, byte_start: 28116, byte_end: 28119, column_start: 10, column_end: 13, line_start: 841, line_end: 841 }: the
Token { kind: Space, char_start: 28118, char_end: 28119, byte_start: 28119, byte_end: 28120, column_start: 13, column_end: 14, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28119, char_end: 28124, byte_start: 28120, byte_end: 28125, column_start: 14, column_end: 19, line_start: 841, line_end: 841 }: files
Token { kind: Space, char_start: 28124, char_end: 28125, byte_start: 28125, byte_end: 28126, column_start: 19, column_end: 20, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28125, char_end: 28134, byte_start: 28126, byte_end: 28135, column_start: 20, column_end: 29, line_start: 841, line_end: 841 }: currently
Token { kind: Space, char_start: 28134, char_end: 28135, byte_start: 28135, byte_end: 28136, column_start: 29, column_end: 30, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28135, char_end: 28137, byte_start: 28136, byte_end: 28138, column_start: 30, column_end: 32, line_start: 841, line_end: 841 }: in
Token { kind: Space, char_start: 28137, char_end: 28138, byte_start: 28138, byte_end: 28139, column_start: 32, column_end: 33, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28138, char_end: 28141, byte_start: 28139, byte_end: 28142, column_start: 33, column_end: 36, line_start: 841, line_end: 841 }: the
Token { kind: Space, char_start: 28141, char_end: 28142, byte_start: 28142, byte_end: 28143, column_start: 36, column_end: 37, line_start: 841, line_end: 841 }: " "
Token { kind: Bar, char_start: 28142, char_end: 28143, byte_start: 28143, byte_end: 28144, column_start: 37, column_end: 38, line_start: 841, line_end: 841 }: |
Token { kind: Text, char_start: 28143, char_end: 28151, byte_start: 28144, byte_end: 28152, column_start: 38, column_end: 46, line_start: 841, line_end: 841 }: quickfix
Token { kind: Bar, char_start: 28151, char_end: 28152, byte_start: 28152, byte_end: 28153, column_start: 46, column_end: 47, line_start: 841, line_end: 841 }: |
Token { kind: Space, char_start: 28152, char_end: 28153, byte_start: 28153, byte_end: 28154, column_start: 47, column_end: 48, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28153, char_end: 28160, byte_start: 28154, byte_end: 28161, column_start: 48, column_end: 55, line_start: 841, line_end: 841 }: listing
Token { kind: Space, char_start: 28160, char_end: 28161, byte_start: 28161, byte_end: 28162, column_start: 55, column_end: 56, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28161, char_end: 28164, byte_start: 28162, byte_end: 28165, column_start: 56, column_end: 59, line_start: 841, line_end: 841 }: and
Token { kind: Space, char_start: 28164, char_end: 28165, byte_start: 28165, byte_end: 28166, column_start: 59, column_end: 60, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28165, char_end: 28169, byte_start: 28166, byte_end: 28170, column_start: 60, column_end: 64, line_start: 841, line_end: 841 }: sets
Token { kind: Space, char_start: 28169, char_end: 28170, byte_start: 28170, byte_end: 28171, column_start: 64, column_end: 65, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28170, char_end: 28174, byte_start: 28171, byte_end: 28175, column_start: 65, column_end: 69, line_start: 841, line_end: 841 }: them
Token { kind: Space, char_start: 28174, char_end: 28175, byte_start: 28175, byte_end: 28176, column_start: 69, column_end: 70, line_start: 841, line_end: 841 }: " "
Token { kind: Text, char_start: 28175, char_end: 28177, byte_start: 28176, byte_end: 28178, column_start: 70, column_end: 72, line_start: 841, line_end: 841 }: as
Token { kind: Newline, char_start: 28177, char_end: 28178, byte_start: 28178, byte_end: 28179, column_start: 72, column_end: 1, line_start: 841, line_end: 842 }: "\n"
Token { kind: Bar, char_start: 28178, char_end: 28179, byte_start: 28179, byte_end: 28180, column_start: 1, column_end: 2, line_start: 842, line_end: 842 }: |
Token { kind: Text, char_start: 28179, char_end: 28184, byte_start: 28180, byte_end: 28185, column_start: 2, column_end: 7, line_start: 842, line_end: 842 }: :args
Token { kind: Bar, char_start: 28184, char_end: 28185, byte_start: 28185, byte_end: 28186, column_start: 7, column_end: 8, line_start: 842, line_end: 842 }: |
Token { kind: Space, char_start: 28185, char_end: 28186, byte_start: 28186, byte_end: 28187, column_start: 8, column_end: 9, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28186, char_end: 28188, byte_start: 28187, byte_end: 28189, column_start: 9, column_end: 11, line_start: 842, line_end: 842 }: so
Token { kind: Space, char_start: 28188, char_end: 28189, byte_start: 28189, byte_end: 28190, column_start: 11, column_end: 12, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28189, char_end: 28193, byte_start: 28190, byte_end: 28194, column_start: 12, column_end: 16, line_start: 842, line_end: 842 }: that
Token { kind: Space, char_start: 28193, char_end: 28194, byte_start: 28194, byte_end: 28195, column_start: 16, column_end: 17, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28194, char_end: 28198, byte_start: 28195, byte_end: 28199, column_start: 17, column_end: 21, line_start: 842, line_end: 842 }: they
Token { kind: Space, char_start: 28198, char_end: 28199, byte_start: 28199, byte_end: 28200, column_start: 21, column_end: 22, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28199, char_end: 28202, byte_start: 28200, byte_end: 28203, column_start: 22, column_end: 25, line_start: 842, line_end: 842 }: can
Token { kind: Space, char_start: 28202, char_end: 28203, byte_start: 28203, byte_end: 28204, column_start: 25, column_end: 26, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28203, char_end: 28205, byte_start: 28204, byte_end: 28206, column_start: 26, column_end: 28, line_start: 842, line_end: 842 }: be
Token { kind: Space, char_start: 28205, char_end: 28206, byte_start: 28206, byte_end: 28207, column_start: 28, column_end: 29, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28206, char_end: 28214, byte_start: 28207, byte_end: 28215, column_start: 29, column_end: 37, line_start: 842, line_end: 842 }: operated
Token { kind: Space, char_start: 28214, char_end: 28215, byte_start: 28215, byte_end: 28216, column_start: 37, column_end: 38, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28215, char_end: 28217, byte_start: 28216, byte_end: 28218, column_start: 38, column_end: 40, line_start: 842, line_end: 842 }: on
Token { kind: Space, char_start: 28217, char_end: 28218, byte_start: 28218, byte_end: 28219, column_start: 40, column_end: 41, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28218, char_end: 28220, byte_start: 28219, byte_end: 28221, column_start: 41, column_end: 43, line_start: 842, line_end: 842 }: en
Token { kind: Space, char_start: 28220, char_end: 28221, byte_start: 28221, byte_end: 28222, column_start: 43, column_end: 44, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28221, char_end: 28226, byte_start: 28222, byte_end: 28227, column_start: 44, column_end: 49, line_start: 842, line_end: 842 }: masse
Token { kind: Space, char_start: 28226, char_end: 28227, byte_start: 28227, byte_end: 28228, column_start: 49, column_end: 50, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28227, char_end: 28230, byte_start: 28228, byte_end: 28231, column_start: 50, column_end: 53, line_start: 842, line_end: 842 }: via
Token { kind: Space, char_start: 28230, char_end: 28231, byte_start: 28231, byte_end: 28232, column_start: 53, column_end: 54, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28231, char_end: 28234, byte_start: 28232, byte_end: 28235, column_start: 54, column_end: 57, line_start: 842, line_end: 842 }: the
Token { kind: Space, char_start: 28234, char_end: 28235, byte_start: 28235, byte_end: 28236, column_start: 57, column_end: 58, line_start: 842, line_end: 842 }: " "
Token { kind: Bar, char_start: 28235, char_end: 28236, byte_start: 28236, byte_end: 28237, column_start: 58, column_end: 59, line_start: 842, line_end: 842 }: |
Token { kind: Text, char_start: 28236, char_end: 28242, byte_start: 28237, byte_end: 28243, column_start: 59, column_end: 65, line_start: 842, line_end: 842 }: :argdo
Token { kind: Bar, char_start: 28242, char_end: 28243, byte_start: 28243, byte_end: 28244, column_start: 65, column_end: 66, line_start: 842, line_end: 842 }: |
Token { kind: Space, char_start: 28243, char_end: 28244, byte_start: 28244, byte_end: 28245, column_start: 66, column_end: 67, line_start: 842, line_end: 842 }: " "
Token { kind: Text, char_start: 28244, char_end: 28252, byte_start: 28245, byte_end: 28253, column_start: 67, column_end: 75, line_start: 842, line_end: 842 }: command.
Token { kind: Newline, char_start: 28252, char_end: 28253, byte_start: 28253, byte_end: 28254, column_start: 75, column_end: 1, line_start: 842, line_end: 843 }: "\n"
Token { kind: Newline, char_start: 28253, char_end: 28254, byte_start: 28254, byte_end: 28255, column_start: 1, column_end: 1, line_start: 843, line_end: 844 }: "\n"
Token { kind: At, char_start: 28254, char_end: 28255, byte_start: 28255, byte_end: 28256, column_start: 1, column_end: 2, line_start: 844, line_end: 844 }: @
Token { kind: Text, char_start: 28255, char_end: 28262, byte_start: 28256, byte_end: 28263, column_start: 2, column_end: 9, line_start: 844, line_end: 844 }: command
Token { kind: Space, char_start: 28262, char_end: 28263, byte_start: 28263, byte_end: 28264, column_start: 9, column_end: 10, line_start: 844, line_end: 844 }: " "
Token { kind: Text, char_start: 28263, char_end: 28269, byte_start: 28264, byte_end: 28270, column_start: 10, column_end: 16, line_start: 844, line_end: 844 }: :Largs
Token { kind: Newline, char_start: 28269, char_end: 28270, byte_start: 28270, byte_end: 28271, column_start: 16, column_end: 1, line_start: 844, line_end: 845 }: "\n"
Token { kind: Newline, char_start: 28270, char_end: 28271, byte_start: 28271, byte_end: 28272, column_start: 1, column_end: 1, line_start: 845, line_end: 846 }: "\n"
Token { kind: Text, char_start: 28271, char_end: 28275, byte_start: 28272, byte_end: 28276, column_start: 1, column_end: 5, line_start: 846, line_end: 846 }: Just
Token { kind: Space, char_start: 28275, char_end: 28276, byte_start: 28276, byte_end: 28277, column_start: 5, column_end: 6, line_start: 846, line_end: 846 }: " "
Token { kind: Text, char_start: 28276, char_end: 28280, byte_start: 28277, byte_end: 28281, column_start: 6, column_end: 10, line_start: 846, line_end: 846 }: like
Token { kind: Space, char_start: 28280, char_end: 28281, byte_start: 28281, byte_end: 28282, column_start: 10, column_end: 11, line_start: 846, line_end: 846 }: " "
Token { kind: Bar, char_start: 28281, char_end: 28282, byte_start: 28282, byte_end: 28283, column_start: 11, column_end: 12, line_start: 846, line_end: 846 }: |
Token { kind: Text, char_start: 28282, char_end: 28288, byte_start: 28283, byte_end: 28289, column_start: 12, column_end: 18, line_start: 846, line_end: 846 }: :Qargs
Token { kind: Bar, char_start: 28288, char_end: 28289, byte_start: 28289, byte_end: 28290, column_start: 18, column_end: 19, line_start: 846, line_end: 846 }: |
Token { kind: Text, char_start: 28289, char_end: 28290, byte_start: 28290, byte_end: 28291, column_start: 19, column_end: 20, line_start: 846, line_end: 846 }: ,
Token { kind: Space, char_start: 28290, char_end: 28291, byte_start: 28291, byte_end: 28292, column_start: 20, column_end: 21, line_start: 846, line_end: 846 }: " "
Token { kind: Text, char_start: 28291, char_end: 28294, byte_start: 28292, byte_end: 28295, column_start: 21, column_end: 24, line_start: 846, line_end: 846 }: but
Token { kind: Space, char_start: 28294, char_end: 28295, byte_start: 28295, byte_end: 28296, column_start: 24, column_end: 25, line_start: 846, line_end: 846 }: " "
Token { kind: Text, char_start: 28295, char_end: 28302, byte_start: 28296, byte_end: 28303, column_start: 25, column_end: 32, line_start: 846, line_end: 846 }: applies
Token { kind: Space, char_start: 28302, char_end: 28303, byte_start: 28303, byte_end: 28304, column_start: 32, column_end: 33, line_start: 846, line_end: 846 }: " "
Token { kind: Text, char_start: 28303, char_end: 28305, byte_start: 28304, byte_end: 28306, column_start: 33, column_end: 35, line_start: 846, line_end: 846 }: to
Token { kind: Space, char_start: 28305, char_end: 28306, byte_start: 28306, byte_end: 28307, column_start: 35, column_end: 36, line_start: 846, line_end: 846 }: " "
Token { kind: Text, char_start: 28306, char_end: 28309, byte_start: 28307, byte_end: 28310, column_start: 36, column_end: 39, line_start: 846, line_end: 846 }: the
Token { kind: Space, char_start: 28309, char_end: 28310, byte_start: 28310, byte_end: 28311, column_start: 39, column_end: 40, line_start: 846, line_end: 846 }: " "
Token { kind: Text, char_start: 28310, char_end: 28317, byte_start: 28311, byte_end: 28318, column_start: 40, column_end: 47, line_start: 846, line_end: 846 }: current
Token { kind: Space, char_start: 28317, char_end: 28318, byte_start: 28318, byte_end: 28319, column_start: 47, column_end: 48, line_start: 846, line_end: 846 }: " "
Token { kind: Bar, char_start: 28318, char_end: 28319, byte_start: 28319, byte_end: 28320, column_start: 48, column_end: 49, line_start: 846, line_end: 846 }: |
Token { kind: Text, char_start: 28319, char_end: 28327, byte_start: 28320, byte_end: 28328, column_start: 49, column_end: 57, line_start: 846, line_end: 846 }: location
Token { kind: Hyphen, char_start: 28327, char_end: 28328, byte_start: 28328, byte_end: 28329, column_start: 57, column_end: 58, line_start: 846, line_end: 846 }: -
Token { kind: Text, char_start: 28328, char_end: 28332, byte_start: 28329, byte_end: 28333, column_start: 58, column_end: 62, line_start: 846, line_end: 846 }: list
Token { kind: Bar, char_start: 28332, char_end: 28333, byte_start: 28333, byte_end: 28334, column_start: 62, column_end: 63, line_start: 846, line_end: 846 }: |
Token { kind: Text, char_start: 28333, char_end: 28334, byte_start: 28334, byte_end: 28335, column_start: 63, column_end: 64, line_start: 846, line_end: 846 }: .
Token { kind: Newline, char_start: 28334, char_end: 28335, byte_start: 28335, byte_end: 28336, column_start: 64, column_end: 1, line_start: 846, line_end: 847 }: "\n"
Token { kind: Newline, char_start: 28335, char_end: 28336, byte_start: 28336, byte_end: 28337, column_start: 1, column_end: 1, line_start: 847, line_end: 848 }: "\n"
Token { kind: Text, char_start: 28336, char_end: 28338, byte_start: 28337, byte_end: 28339, column_start: 1, column_end: 3, line_start: 848, line_end: 848 }: It
Token { kind: Space, char_start: 28338, char_end: 28339, byte_start: 28339, byte_end: 28340, column_start: 3, column_end: 4, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28339, char_end: 28344, byte_start: 28340, byte_end: 28345, column_start: 4, column_end: 9, line_start: 848, line_end: 848 }: takes
Token { kind: Space, char_start: 28344, char_end: 28345, byte_start: 28345, byte_end: 28346, column_start: 9, column_end: 10, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28345, char_end: 28348, byte_start: 28346, byte_end: 28349, column_start: 10, column_end: 13, line_start: 848, line_end: 848 }: the
Token { kind: Space, char_start: 28348, char_end: 28349, byte_start: 28349, byte_end: 28350, column_start: 13, column_end: 14, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28349, char_end: 28354, byte_start: 28350, byte_end: 28355, column_start: 14, column_end: 19, line_start: 848, line_end: 848 }: files
Token { kind: Space, char_start: 28354, char_end: 28355, byte_start: 28355, byte_end: 28356, column_start: 19, column_end: 20, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28355, char_end: 28357, byte_start: 28356, byte_end: 28358, column_start: 20, column_end: 22, line_start: 848, line_end: 848 }: in
Token { kind: Space, char_start: 28357, char_end: 28358, byte_start: 28358, byte_end: 28359, column_start: 22, column_end: 23, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28358, char_end: 28361, byte_start: 28359, byte_end: 28362, column_start: 23, column_end: 26, line_start: 848, line_end: 848 }: the
Token { kind: Space, char_start: 28361, char_end: 28362, byte_start: 28362, byte_end: 28363, column_start: 26, column_end: 27, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28362, char_end: 28369, byte_start: 28363, byte_end: 28370, column_start: 27, column_end: 34, line_start: 848, line_end: 848 }: current
Token { kind: Space, char_start: 28369, char_end: 28370, byte_start: 28370, byte_end: 28371, column_start: 34, column_end: 35, line_start: 848, line_end: 848 }: " "
Token { kind: Bar, char_start: 28370, char_end: 28371, byte_start: 28371, byte_end: 28372, column_start: 35, column_end: 36, line_start: 848, line_end: 848 }: |
Token { kind: Text, char_start: 28371, char_end: 28379, byte_start: 28372, byte_end: 28380, column_start: 36, column_end: 44, line_start: 848, line_end: 848 }: location
Token { kind: Hyphen, char_start: 28379, char_end: 28380, byte_start: 28380, byte_end: 28381, column_start: 44, column_end: 45, line_start: 848, line_end: 848 }: -
Token { kind: Text, char_start: 28380, char_end: 28384, byte_start: 28381, byte_end: 28385, column_start: 45, column_end: 49, line_start: 848, line_end: 848 }: list
Token { kind: Bar, char_start: 28384, char_end: 28385, byte_start: 28385, byte_end: 28386, column_start: 49, column_end: 50, line_start: 848, line_end: 848 }: |
Token { kind: Space, char_start: 28385, char_end: 28386, byte_start: 28386, byte_end: 28387, column_start: 50, column_end: 51, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28386, char_end: 28389, byte_start: 28387, byte_end: 28390, column_start: 51, column_end: 54, line_start: 848, line_end: 848 }: and
Token { kind: Space, char_start: 28389, char_end: 28390, byte_start: 28390, byte_end: 28391, column_start: 54, column_end: 55, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28390, char_end: 28394, byte_start: 28391, byte_end: 28395, column_start: 55, column_end: 59, line_start: 848, line_end: 848 }: sets
Token { kind: Space, char_start: 28394, char_end: 28395, byte_start: 28395, byte_end: 28396, column_start: 59, column_end: 60, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28395, char_end: 28399, byte_start: 28396, byte_end: 28400, column_start: 60, column_end: 64, line_start: 848, line_end: 848 }: them
Token { kind: Space, char_start: 28399, char_end: 28400, byte_start: 28400, byte_end: 28401, column_start: 64, column_end: 65, line_start: 848, line_end: 848 }: " "
Token { kind: Text, char_start: 28400, char_end: 28402, byte_start: 28401, byte_end: 28403, column_start: 65, column_end: 67, line_start: 848, line_end: 848 }: as
Token { kind: Newline, char_start: 28402, char_end: 28403, byte_start: 28403, byte_end: 28404, column_start: 67, column_end: 1, line_start: 848, line_end: 849 }: "\n"
Token { kind: Bar, char_start: 28403, char_end: 28404, byte_start: 28404, byte_end: 28405, column_start: 1, column_end: 2, line_start: 849, line_end: 849 }: |
Token { kind: Text, char_start: 28404, char_end: 28409, byte_start: 28405, byte_end: 28410, column_start: 2, column_end: 7, line_start: 849, line_end: 849 }: :args
Token { kind: Bar, char_start: 28409, char_end: 28410, byte_start: 28410, byte_end: 28411, column_start: 7, column_end: 8, line_start: 849, line_end: 849 }: |
Token { kind: Space, char_start: 28410, char_end: 28411, byte_start: 28411, byte_end: 28412, column_start: 8, column_end: 9, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28411, char_end: 28413, byte_start: 28412, byte_end: 28414, column_start: 9, column_end: 11, line_start: 849, line_end: 849 }: so
Token { kind: Space, char_start: 28413, char_end: 28414, byte_start: 28414, byte_end: 28415, column_start: 11, column_end: 12, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28414, char_end: 28418, byte_start: 28415, byte_end: 28419, column_start: 12, column_end: 16, line_start: 849, line_end: 849 }: that
Token { kind: Space, char_start: 28418, char_end: 28419, byte_start: 28419, byte_end: 28420, column_start: 16, column_end: 17, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28419, char_end: 28423, byte_start: 28420, byte_end: 28424, column_start: 17, column_end: 21, line_start: 849, line_end: 849 }: they
Token { kind: Space, char_start: 28423, char_end: 28424, byte_start: 28424, byte_end: 28425, column_start: 21, column_end: 22, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28424, char_end: 28427, byte_start: 28425, byte_end: 28428, column_start: 22, column_end: 25, line_start: 849, line_end: 849 }: can
Token { kind: Space, char_start: 28427, char_end: 28428, byte_start: 28428, byte_end: 28429, column_start: 25, column_end: 26, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28428, char_end: 28430, byte_start: 28429, byte_end: 28431, column_start: 26, column_end: 28, line_start: 849, line_end: 849 }: be
Token { kind: Space, char_start: 28430, char_end: 28431, byte_start: 28431, byte_end: 28432, column_start: 28, column_end: 29, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28431, char_end: 28439, byte_start: 28432, byte_end: 28440, column_start: 29, column_end: 37, line_start: 849, line_end: 849 }: operated
Token { kind: Space, char_start: 28439, char_end: 28440, byte_start: 28440, byte_end: 28441, column_start: 37, column_end: 38, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28440, char_end: 28442, byte_start: 28441, byte_end: 28443, column_start: 38, column_end: 40, line_start: 849, line_end: 849 }: on
Token { kind: Space, char_start: 28442, char_end: 28443, byte_start: 28443, byte_end: 28444, column_start: 40, column_end: 41, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28443, char_end: 28445, byte_start: 28444, byte_end: 28446, column_start: 41, column_end: 43, line_start: 849, line_end: 849 }: en
Token { kind: Space, char_start: 28445, char_end: 28446, byte_start: 28446, byte_end: 28447, column_start: 43, column_end: 44, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28446, char_end: 28451, byte_start: 28447, byte_end: 28452, column_start: 44, column_end: 49, line_start: 849, line_end: 849 }: masse
Token { kind: Space, char_start: 28451, char_end: 28452, byte_start: 28452, byte_end: 28453, column_start: 49, column_end: 50, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28452, char_end: 28455, byte_start: 28453, byte_end: 28456, column_start: 50, column_end: 53, line_start: 849, line_end: 849 }: via
Token { kind: Space, char_start: 28455, char_end: 28456, byte_start: 28456, byte_end: 28457, column_start: 53, column_end: 54, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28456, char_end: 28459, byte_start: 28457, byte_end: 28460, column_start: 54, column_end: 57, line_start: 849, line_end: 849 }: the
Token { kind: Space, char_start: 28459, char_end: 28460, byte_start: 28460, byte_end: 28461, column_start: 57, column_end: 58, line_start: 849, line_end: 849 }: " "
Token { kind: Bar, char_start: 28460, char_end: 28461, byte_start: 28461, byte_end: 28462, column_start: 58, column_end: 59, line_start: 849, line_end: 849 }: |
Token { kind: Text, char_start: 28461, char_end: 28467, byte_start: 28462, byte_end: 28468, column_start: 59, column_end: 65, line_start: 849, line_end: 849 }: :argdo
Token { kind: Bar, char_start: 28467, char_end: 28468, byte_start: 28468, byte_end: 28469, column_start: 65, column_end: 66, line_start: 849, line_end: 849 }: |
Token { kind: Space, char_start: 28468, char_end: 28469, byte_start: 28469, byte_end: 28470, column_start: 66, column_end: 67, line_start: 849, line_end: 849 }: " "
Token { kind: Text, char_start: 28469, char_end: 28477, byte_start: 28470, byte_end: 28478, column_start: 67, column_end: 75, line_start: 849, line_end: 849 }: command.
Token { kind: Newline, char_start: 28477, char_end: 28478, byte_start: 28478, byte_end: 28479, column_start: 75, column_end: 1, line_start: 849, line_end: 850 }: "\n"
Token { kind: Newline, char_start: 28478, char_end: 28479, byte_start: 28479, byte_end: 28480, column_start: 1, column_end: 1, line_start: 850, line_end: 851 }: "\n"
Token { kind: At, char_start: 28479, char_end: 28480, byte_start: 28480, byte_end: 28481, column_start: 1, column_end: 2, line_start: 851, line_end: 851 }: @
Token { kind: Text, char_start: 28480, char_end: 28486, byte_start: 28481, byte_end: 28487, column_start: 2, column_end: 8, line_start: 851, line_end: 851 }: option
Token { kind: Space, char_start: 28486, char_end: 28487, byte_start: 28487, byte_end: 28488, column_start: 8, column_end: 9, line_start: 851, line_end: 851 }: " "
Token { kind: Text, char_start: 28487, char_end: 28505, byte_start: 28488, byte_end: 28506, column_start: 9, column_end: 27, line_start: 851, line_end: 851 }: g:FerretQFCommands
Token { kind: Space, char_start: 28505, char_end: 28506, byte_start: 28506, byte_end: 28507, column_start: 27, column_end: 28, line_start: 851, line_end: 851 }: " "
Token { kind: Text, char_start: 28506, char_end: 28513, byte_start: 28507, byte_end: 28514, column_start: 28, column_end: 35, line_start: 851, line_end: 851 }: boolean
Token { kind: Space, char_start: 28513, char_end: 28514, byte_start: 28514, byte_end: 28515, column_start: 35, column_end: 36, line_start: 851, line_end: 851 }: " "
Token { kind: Text, char_start: 28514, char_end: 28515, byte_start: 28515, byte_end: 28516, column_start: 36, column_end: 37, line_start: 851, line_end: 851 }: 1
Token { kind: Newline, char_start: 28515, char_end: 28516, byte_start: 28516, byte_end: 28517, column_start: 37, column_end: 1, line_start: 851, line_end: 852 }: "\n"
Token { kind: Newline, char_start: 28516, char_end: 28517, byte_start: 28517, byte_end: 28518, column_start: 1, column_end: 1, line_start: 852, line_end: 853 }: "\n"
Token { kind: Text, char_start: 28517, char_end: 28525, byte_start: 28518, byte_end: 28526, column_start: 1, column_end: 9, line_start: 853, line_end: 853 }: Controls
Token { kind: Space, char_start: 28525, char_end: 28526, byte_start: 28526, byte_end: 28527, column_start: 9, column_end: 10, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28526, char_end: 28533, byte_start: 28527, byte_end: 28534, column_start: 10, column_end: 17, line_start: 853, line_end: 853 }: whether
Token { kind: Space, char_start: 28533, char_end: 28534, byte_start: 28534, byte_end: 28535, column_start: 17, column_end: 18, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28534, char_end: 28536, byte_start: 28535, byte_end: 28537, column_start: 18, column_end: 20, line_start: 853, line_end: 853 }: to
Token { kind: Space, char_start: 28536, char_end: 28537, byte_start: 28537, byte_end: 28538, column_start: 20, column_end: 21, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28537, char_end: 28540, byte_start: 28538, byte_end: 28541, column_start: 21, column_end: 24, line_start: 853, line_end: 853 }: set
Token { kind: Space, char_start: 28540, char_end: 28541, byte_start: 28541, byte_end: 28542, column_start: 24, column_end: 25, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28541, char_end: 28543, byte_start: 28542, byte_end: 28544, column_start: 25, column_end: 27, line_start: 853, line_end: 853 }: up
Token { kind: Space, char_start: 28543, char_end: 28544, byte_start: 28544, byte_end: 28545, column_start: 27, column_end: 28, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28544, char_end: 28550, byte_start: 28545, byte_end: 28551, column_start: 28, column_end: 34, line_start: 853, line_end: 853 }: custom
Token { kind: Space, char_start: 28550, char_end: 28551, byte_start: 28551, byte_end: 28552, column_start: 34, column_end: 35, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28551, char_end: 28559, byte_start: 28552, byte_end: 28560, column_start: 35, column_end: 43, line_start: 853, line_end: 853 }: versions
Token { kind: Space, char_start: 28559, char_end: 28560, byte_start: 28560, byte_end: 28561, column_start: 43, column_end: 44, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28560, char_end: 28562, byte_start: 28561, byte_end: 28563, column_start: 44, column_end: 46, line_start: 853, line_end: 853 }: of
Token { kind: Space, char_start: 28562, char_end: 28563, byte_start: 28563, byte_end: 28564, column_start: 46, column_end: 47, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28563, char_end: 28566, byte_start: 28564, byte_end: 28567, column_start: 47, column_end: 50, line_start: 853, line_end: 853 }: the
Token { kind: Space, char_start: 28566, char_end: 28567, byte_start: 28567, byte_end: 28568, column_start: 50, column_end: 51, line_start: 853, line_end: 853 }: " "
Token { kind: Bar, char_start: 28567, char_end: 28568, byte_start: 28568, byte_end: 28569, column_start: 51, column_end: 52, line_start: 853, line_end: 853 }: |
Token { kind: Text, char_start: 28568, char_end: 28576, byte_start: 28569, byte_end: 28577, column_start: 52, column_end: 60, line_start: 853, line_end: 853 }: quickfix
Token { kind: Bar, char_start: 28576, char_end: 28577, byte_start: 28577, byte_end: 28578, column_start: 60, column_end: 61, line_start: 853, line_end: 853 }: |
Token { kind: Space, char_start: 28577, char_end: 28578, byte_start: 28578, byte_end: 28579, column_start: 61, column_end: 62, line_start: 853, line_end: 853 }: " "
Token { kind: Text, char_start: 28578, char_end: 28587, byte_start: 28579, byte_end: 28588, column_start: 62, column_end: 71, line_start: 853, line_end: 853 }: commands,
Token { kind: Space, char_start: 28587, char_end: 28588, byte_start: 28588, byte_end: 28589, column_start: 71, column_end: 72, line_start: 853, line_end: 853 }: " "
Token { kind: Bar, char_start: 28588, char_end: 28589, byte_start: 28589, byte_end: 28590, column_start: 72, column_end: 73, line_start: 853, line_end: 853 }: |
Token { kind: Text, char_start: 28589, char_end: 28592, byte_start: 28590, byte_end: 28593, column_start: 73, column_end: 76, line_start: 853, line_end: 853 }: :cn
Token { kind: Bar, char_start: 28592, char_end: 28593, byte_start: 28593, byte_end: 28594, column_start: 76, column_end: 77, line_start: 853, line_end: 853 }: |
Token { kind: Text, char_start: 28593, char_end: 28594, byte_start: 28594, byte_end: 28595, column_start: 77, column_end: 78, line_start: 853, line_end: 853 }: ,
Token { kind: Newline, char_start: 28594, char_end: 28595, byte_start: 28595, byte_end: 28596, column_start: 78, column_end: 1, line_start: 853, line_end: 854 }: "\n"
Token { kind: Bar, char_start: 28595, char_end: 28596, byte_start: 28596, byte_end: 28597, column_start: 1, column_end: 2, line_start: 854, line_end: 854 }: |
Token { kind: Text, char_start: 28596, char_end: 28600, byte_start: 28597, byte_end: 28601, column_start: 2, column_end: 6, line_start: 854, line_end: 854 }: :cnf
Token { kind: Bar, char_start: 28600, char_end: 28601, byte_start: 28601, byte_end: 28602, column_start: 6, column_end: 7, line_start: 854, line_end: 854 }: |
Token { kind: Text, char_start: 28601, char_end: 28602, byte_start: 28602, byte_end: 28603, column_start: 7, column_end: 8, line_start: 854, line_end: 854 }: ,
Token { kind: Space, char_start: 28602, char_end: 28603, byte_start: 28603, byte_end: 28604, column_start: 8, column_end: 9, line_start: 854, line_end: 854 }: " "
Token { kind: Bar, char_start: 28603, char_end: 28604, byte_start: 28604, byte_end: 28605, column_start: 9, column_end: 10, line_start: 854, line_end: 854 }: |
Token { kind: Text, char_start: 28604, char_end: 28607, byte_start: 28605, byte_end: 28608, column_start: 10, column_end: 13, line_start: 854, line_end: 854 }: :cp
Token { kind: Bar, char_start: 28607, char_end: 28608, byte_start: 28608, byte_end: 28609, column_start: 13, column_end: 14, line_start: 854, line_end: 854 }: |
Token { kind: Space, char_start: 28608, char_end: 28609, byte_start: 28609, byte_end: 28610, column_start: 14, column_end: 15, line_start: 854, line_end: 854 }: " "
Token { kind: Text, char_start: 28609, char_end: 28611, byte_start: 28610, byte_end: 28612, column_start: 15, column_end: 17, line_start: 854, line_end: 854 }: an
Token { kind: Space, char_start: 28611, char_end: 28612, byte_start: 28612, byte_end: 28613, column_start: 17, column_end: 18, line_start: 854, line_end: 854 }: " "
Token { kind: Bar, char_start: 28612, char_end: 28613, byte_start: 28613, byte_end: 28614, column_start: 18, column_end: 19, line_start: 854, line_end: 854 }: |
Token { kind: Text, char_start: 28613, char_end: 28617, byte_start: 28614, byte_end: 28618, column_start: 19, column_end: 23, line_start: 854, line_end: 854 }: :cpf
Token { kind: Bar, char_start: 28617, char_end: 28618, byte_start: 28618, byte_end: 28619, column_start: 23, column_end: 24, line_start: 854, line_end: 854 }: |
Token { kind: Text, char_start: 28618, char_end: 28619, byte_start: 28619, byte_end: 28620, column_start: 24, column_end: 25, line_start: 854, line_end: 854 }: .
Token { kind: Space, char_start: 28619, char_end: 28620, byte_start: 28620, byte_end: 28621, column_start: 25, column_end: 26, line_start: 854, line_end: 854 }: " "
Token { kind: Text, char_start: 28620, char_end: 28625, byte_start: 28621, byte_end: 28626, column_start: 26, column_end: 31, line_start: 854, line_end: 854 }: These
Token { kind: Space, char_start: 28625, char_end: 28626, byte_start: 28626, byte_end: 28627, column_start: 31, column_end: 32, line_start: 854, line_end: 854 }: " "
Token { kind: Text, char_start: 28626, char_end: 28635, byte_start: 28627, byte_end: 28636, column_start: 32, column_end: 41, line_start: 854, line_end: 854 }: overrides
Token { kind: Space, char_start: 28635, char_end: 28636, byte_start: 28636, byte_end: 28637, column_start: 41, column_end: 42, line_start: 854, line_end: 854 }: " "
Token { kind: Text, char_start: 28636, char_end: 28646, byte_start: 28637, byte_end: 28647, column_start: 42, column_end: 52, line_start: 854, line_end: 854 }: vertically
Token { kind: Space, char_start: 28646, char_end: 28647, byte_start: 28647, byte_end: 28648, column_start: 52, column_end: 53, line_start: 854, line_end: 854 }: " "
Token { kind: Text, char_start: 28647, char_end: 28653, byte_start: 28648, byte_end: 28654, column_start: 53, column_end: 59, line_start: 854, line_end: 854 }: center
Token { kind: Space, char_start: 28653, char_end: 28654, byte_start: 28654, byte_end: 28655, column_start: 59, column_end: 60, line_start: 854, line_end: 854 }: " "
Token { kind: Text, char_start: 28654, char_end: 28657, byte_start: 28655, byte_end: 28658, column_start: 60, column_end: 63, line_start: 854, line_end: 854 }: the
Token { kind: Space, char_start: 28657, char_end: 28658, byte_start: 28658, byte_end: 28659, column_start: 63, column_end: 64, line_start: 854, line_end: 854 }: " "
Token { kind: Text, char_start: 28658, char_end: 28663, byte_start: 28659, byte_end: 28664, column_start: 64, column_end: 69, line_start: 854, line_end: 854 }: match
Token { kind: Space, char_start: 28663, char_end: 28664, byte_start: 28664, byte_end: 28665, column_start: 69, column_end: 70, line_start: 854, line_end: 854 }: " "
Token { kind: Text, char_start: 28664, char_end: 28670, byte_start: 28665, byte_end: 28671, column_start: 70, column_end: 76, line_start: 854, line_end: 854 }: within
Token { kind: Newline, char_start: 28670, char_end: 28671, byte_start: 28671, byte_end: 28672, column_start: 76, column_end: 1, line_start: 854, line_end: 855 }: "\n"
Token { kind: Text, char_start: 28671, char_end: 28674, byte_start: 28672, byte_end: 28675, column_start: 1, column_end: 4, line_start: 855, line_end: 855 }: the
Token { kind: Space, char_start: 28674, char_end: 28675, byte_start: 28675, byte_end: 28676, column_start: 4, column_end: 5, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28675, char_end: 28683, byte_start: 28676, byte_end: 28684, column_start: 5, column_end: 13, line_start: 855, line_end: 855 }: viewport
Token { kind: Space, char_start: 28683, char_end: 28684, byte_start: 28684, byte_end: 28685, column_start: 13, column_end: 14, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28684, char_end: 28686, byte_start: 28685, byte_end: 28687, column_start: 14, column_end: 16, line_start: 855, line_end: 855 }: on
Token { kind: Space, char_start: 28686, char_end: 28687, byte_start: 28687, byte_end: 28688, column_start: 16, column_end: 17, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28687, char_end: 28691, byte_start: 28688, byte_end: 28692, column_start: 17, column_end: 21, line_start: 855, line_end: 855 }: each
Token { kind: Space, char_start: 28691, char_end: 28692, byte_start: 28692, byte_end: 28693, column_start: 21, column_end: 22, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28692, char_end: 28697, byte_start: 28693, byte_end: 28698, column_start: 22, column_end: 27, line_start: 855, line_end: 855 }: jump.
Token { kind: Space, char_start: 28697, char_end: 28698, byte_start: 28698, byte_end: 28699, column_start: 27, column_end: 28, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28698, char_end: 28700, byte_start: 28699, byte_end: 28701, column_start: 28, column_end: 30, line_start: 855, line_end: 855 }: To
Token { kind: Space, char_start: 28700, char_end: 28701, byte_start: 28701, byte_end: 28702, column_start: 30, column_end: 31, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28701, char_end: 28708, byte_start: 28702, byte_end: 28709, column_start: 31, column_end: 38, line_start: 855, line_end: 855 }: prevent
Token { kind: Space, char_start: 28708, char_end: 28709, byte_start: 28709, byte_end: 28710, column_start: 38, column_end: 39, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28709, char_end: 28712, byte_start: 28710, byte_end: 28713, column_start: 39, column_end: 42, line_start: 855, line_end: 855 }: the
Token { kind: Space, char_start: 28712, char_end: 28713, byte_start: 28713, byte_end: 28714, column_start: 42, column_end: 43, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28713, char_end: 28719, byte_start: 28714, byte_end: 28720, column_start: 43, column_end: 49, line_start: 855, line_end: 855 }: custom
Token { kind: Space, char_start: 28719, char_end: 28720, byte_start: 28720, byte_end: 28721, column_start: 49, column_end: 50, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28720, char_end: 28728, byte_start: 28721, byte_end: 28729, column_start: 50, column_end: 58, line_start: 855, line_end: 855 }: versions
Token { kind: Space, char_start: 28728, char_end: 28729, byte_start: 28729, byte_end: 28730, column_start: 58, column_end: 59, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28729, char_end: 28733, byte_start: 28730, byte_end: 28734, column_start: 59, column_end: 63, line_start: 855, line_end: 855 }: from
Token { kind: Space, char_start: 28733, char_end: 28734, byte_start: 28734, byte_end: 28735, column_start: 63, column_end: 64, line_start: 855, line_end: 855 }: " "
Token { kind: Text, char_start: 28734, char_end: 28739, byte_start: 28735, byte_end: 28740, column_start: 64, column_end: 69, line_start: 855, line_end: 855 }: being
Token { kind: Newline, char_start: 28739, char_end: 28740, byte_start: 28740, byte_end: 28741, column_start: 69, column_end: 1, line_start: 855, line_end: 856 }: "\n"
Token { kind: Text, char_start: 28740, char_end: 28751, byte_start: 28741, byte_end: 28752, column_start: 1, column_end: 12, line_start: 856, line_end: 856 }: configured,
Token { kind: Space, char_start: 28751, char_end: 28752, byte_start: 28752, byte_end: 28753, column_start: 12, column_end: 13, line_start: 856, line_end: 856 }: " "
Token { kind: Text, char_start: 28752, char_end: 28755, byte_start: 28753, byte_end: 28756, column_start: 13, column_end: 16, line_start: 856, line_end: 856 }: set
Token { kind: Space, char_start: 28755, char_end: 28756, byte_start: 28756, byte_end: 28757, column_start: 16, column_end: 17, line_start: 856, line_end: 856 }: " "
Token { kind: Text, char_start: 28756, char_end: 28758, byte_start: 28757, byte_end: 28759, column_start: 17, column_end: 19, line_start: 856, line_end: 856 }: to
Token { kind: Space, char_start: 28758, char_end: 28759, byte_start: 28759, byte_end: 28760, column_start: 19, column_end: 20, line_start: 856, line_end: 856 }: " "
Token { kind: Text, char_start: 28759, char_end: 28761, byte_start: 28760, byte_end: 28762, column_start: 20, column_end: 22, line_start: 856, line_end: 856 }: 0:
Token { kind: Newline, char_start: 28761, char_end: 28762, byte_start: 28762, byte_end: 28763, column_start: 22, column_end: 1, line_start: 856, line_end: 857 }: "\n"
Token { kind: Newline, char_start: 28762, char_end: 28763, byte_start: 28763, byte_end: 28764, column_start: 1, column_end: 1, line_start: 857, line_end: 858 }: "\n"
Token { kind: CodeFence, char_start: 28763, char_end: 28766, byte_start: 28764, byte_end: 28767, column_start: 1, column_end: 4, line_start: 858, line_end: 858 }: ```
Token { kind: Newline, char_start: 28766, char_end: 28767, byte_start: 28767, byte_end: 28768, column_start: 4, column_end: 1, line_start: 858, line_end: 859 }: "\n"
Token { kind: Text, char_start: 28767, char_end: 28770, byte_start: 28768, byte_end: 28771, column_start: 1, column_end: 4, line_start: 859, line_end: 859 }: let
Token { kind: Space, char_start: 28770, char_end: 28771, byte_start: 28771, byte_end: 28772, column_start: 4, column_end: 5, line_start: 859, line_end: 859 }: " "
Token { kind: Text, char_start: 28771, char_end: 28791, byte_start: 28772, byte_end: 28792, column_start: 5, column_end: 25, line_start: 859, line_end: 859 }: g:FerretQFCommands=0
Token { kind: Newline, char_start: 28791, char_end: 28792, byte_start: 28792, byte_end: 28793, column_start: 25, column_end: 1, line_start: 859, line_end: 860 }: "\n"
Token { kind: CodeFence, char_start: 28792, char_end: 28795, byte_start: 28793, byte_end: 28796, column_start: 1, column_end: 4, line_start: 860, line_end: 860 }: ```
Token { kind: Newline, char_start: 28795, char_end: 28796, byte_start: 28796, byte_end: 28797, column_start: 4, column_end: 1, line_start: 860, line_end: 861 }: "\n"
Token { kind: Newline, char_start: 28796, char_end: 28797, byte_start: 28797, byte_end: 28798, column_start: 1, column_end: 1, line_start: 861, line_end: 862 }: "\n"
Token { kind: At, char_start: 28797, char_end: 28798, byte_start: 28798, byte_end: 28799, column_start: 1, column_end: 2, line_start: 862, line_end: 862 }: @
Token { kind: Text, char_start: 28798, char_end: 28804, byte_start: 28799, byte_end: 28805, column_start: 2, column_end: 8, line_start: 862, line_end: 862 }: option
Token { kind: Space, char_start: 28804, char_end: 28805, byte_start: 28805, byte_end: 28806, column_start: 8, column_end: 9, line_start: 862, line_end: 862 }: " "
Token { kind: Text, char_start: 28805, char_end: 28819, byte_start: 28806, byte_end: 28820, column_start: 9, column_end: 23, line_start: 862, line_end: 862 }: g:FerretFormat
Token { kind: Space, char_start: 28819, char_end: 28820, byte_start: 28820, byte_end: 28821, column_start: 23, column_end: 24, line_start: 862, line_end: 862 }: " "
Token { kind: Text, char_start: 28820, char_end: 28826, byte_start: 28821, byte_end: 28827, column_start: 24, column_end: 30, line_start: 862, line_end: 862 }: string
Token { kind: Space, char_start: 28826, char_end: 28827, byte_start: 28827, byte_end: 28828, column_start: 30, column_end: 31, line_start: 862, line_end: 862 }: " "
Token { kind: Text, char_start: 28827, char_end: 28840, byte_start: 28828, byte_end: 28841, column_start: 31, column_end: 44, line_start: 862, line_end: 862 }: "%f:%l:%c:%m"
Token { kind: Newline, char_start: 28840, char_end: 28841, byte_start: 28841, byte_end: 28842, column_start: 44, column_end: 1, line_start: 862, line_end: 863 }: "\n"
Token { kind: Newline, char_start: 28841, char_end: 28842, byte_start: 28842, byte_end: 28843, column_start: 1, column_end: 1, line_start: 863, line_end: 864 }: "\n"
Token { kind: Text, char_start: 28842, char_end: 28846, byte_start: 28843, byte_end: 28847, column_start: 1, column_end: 5, line_start: 864, line_end: 864 }: Sets
Token { kind: Space, char_start: 28846, char_end: 28847, byte_start: 28847, byte_end: 28848, column_start: 5, column_end: 6, line_start: 864, line_end: 864 }: " "
Token { kind: Text, char_start: 28847, char_end: 28850, byte_start: 28848, byte_end: 28851, column_start: 6, column_end: 9, line_start: 864, line_end: 864 }: the
Token { kind: Space, char_start: 28850, char_end: 28851, byte_start: 28851, byte_end: 28852, column_start: 9, column_end: 10, line_start: 864, line_end: 864 }: " "
Token { kind: Text, char_start: 28851, char_end: 28852, byte_start: 28852, byte_end: 28853, column_start: 10, column_end: 11, line_start: 864, line_end: 864 }: '
Token { kind: Bar, char_start: 28852, char_end: 28853, byte_start: 28853, byte_end: 28854, column_start: 11, column_end: 12, line_start: 864, line_end: 864 }: |
Token { kind: Text, char_start: 28853, char_end: 28863, byte_start: 28854, byte_end: 28864, column_start: 12, column_end: 22, line_start: 864, line_end: 864 }: grepformat
Token { kind: Bar, char_start: 28863, char_end: 28864, byte_start: 28864, byte_end: 28865, column_start: 22, column_end: 23, line_start: 864, line_end: 864 }: |
Token { kind: Text, char_start: 28864, char_end: 28865, byte_start: 28865, byte_end: 28866, column_start: 23, column_end: 24, line_start: 864, line_end: 864 }: '
Token { kind: Space, char_start: 28865, char_end: 28866, byte_start: 28866, byte_end: 28867, column_start: 24, column_end: 25, line_start: 864, line_end: 864 }: " "
Token { kind: Text, char_start: 28866, char_end: 28870, byte_start: 28867, byte_end: 28871, column_start: 25, column_end: 29, line_start: 864, line_end: 864 }: used
Token { kind: Space, char_start: 28870, char_end: 28871, byte_start: 28871, byte_end: 28872, column_start: 29, column_end: 30, line_start: 864, line_end: 864 }: " "
Token { kind: Text, char_start: 28871, char_end: 28873, byte_start: 28872, byte_end: 28874, column_start: 30, column_end: 32, line_start: 864, line_end: 864 }: by
Token { kind: Space, char_start: 28873, char_end: 28874, byte_start: 28874, byte_end: 28875, column_start: 32, column_end: 33, line_start: 864, line_end: 864 }: " "
Token { kind: Text, char_start: 28874, char_end: 28881, byte_start: 28875, byte_end: 28882, column_start: 33, column_end: 40, line_start: 864, line_end: 864 }: Ferret.
Token { kind: Newline, char_start: 28881, char_end: 28882, byte_start: 28882, byte_end: 28883, column_start: 40, column_end: 1, line_start: 864, line_end: 865 }: "\n"
Token { kind: Newline, char_start: 28882, char_end: 28883, byte_start: 28883, byte_end: 28884, column_start: 1, column_end: 1, line_start: 865, line_end: 866 }: "\n"
Token { kind: At, char_start: 28883, char_end: 28884, byte_start: 28884, byte_end: 28885, column_start: 1, column_end: 2, line_start: 866, line_end: 866 }: @
Token { kind: Text, char_start: 28884, char_end: 28890, byte_start: 28885, byte_end: 28891, column_start: 2, column_end: 8, line_start: 866, line_end: 866 }: option
Token { kind: Space, char_start: 28890, char_end: 28891, byte_start: 28891, byte_end: 28892, column_start: 8, column_end: 9, line_start: 866, line_end: 866 }: " "
Token { kind: Text, char_start: 28891, char_end: 28908, byte_start: 28892, byte_end: 28909, column_start: 9, column_end: 26, line_start: 866, line_end: 866 }: g:FerretQFOptions
Token { kind: Space, char_start: 28908, char_end: 28909, byte_start: 28909, byte_end: 28910, column_start: 26, column_end: 27, line_start: 866, line_end: 866 }: " "
Token { kind: Text, char_start: 28909, char_end: 28916, byte_start: 28910, byte_end: 28917, column_start: 27, column_end: 34, line_start: 866, line_end: 866 }: boolean
Token { kind: Space, char_start: 28916, char_end: 28917, byte_start: 28917, byte_end: 28918, column_start: 34, column_end: 35, line_start: 866, line_end: 866 }: " "
Token { kind: Text, char_start: 28917, char_end: 28918, byte_start: 28918, byte_end: 28919, column_start: 35, column_end: 36, line_start: 866, line_end: 866 }: 1
Token { kind: Newline, char_start: 28918, char_end: 28919, byte_start: 28919, byte_end: 28920, column_start: 36, column_end: 1, line_start: 866, line_end: 867 }: "\n"
Token { kind: Newline, char_start: 28919, char_end: 28920, byte_start: 28920, byte_end: 28921, column_start: 1, column_end: 1, line_start: 867, line_end: 868 }: "\n"
Token { kind: Text, char_start: 28920, char_end: 28928, byte_start: 28921, byte_end: 28929, column_start: 1, column_end: 9, line_start: 868, line_end: 868 }: Controls
Token { kind: Space, char_start: 28928, char_end: 28929, byte_start: 28929, byte_end: 28930, column_start: 9, column_end: 10, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28929, char_end: 28936, byte_start: 28930, byte_end: 28937, column_start: 10, column_end: 17, line_start: 868, line_end: 868 }: whether
Token { kind: Space, char_start: 28936, char_end: 28937, byte_start: 28937, byte_end: 28938, column_start: 17, column_end: 18, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28937, char_end: 28939, byte_start: 28938, byte_end: 28940, column_start: 18, column_end: 20, line_start: 868, line_end: 868 }: to
Token { kind: Space, char_start: 28939, char_end: 28940, byte_start: 28940, byte_end: 28941, column_start: 20, column_end: 21, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28940, char_end: 28943, byte_start: 28941, byte_end: 28944, column_start: 21, column_end: 24, line_start: 868, line_end: 868 }: set
Token { kind: Space, char_start: 28943, char_end: 28944, byte_start: 28944, byte_end: 28945, column_start: 24, column_end: 25, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28944, char_end: 28946, byte_start: 28945, byte_end: 28947, column_start: 25, column_end: 27, line_start: 868, line_end: 868 }: up
Token { kind: Space, char_start: 28946, char_end: 28947, byte_start: 28947, byte_end: 28948, column_start: 27, column_end: 28, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28947, char_end: 28954, byte_start: 28948, byte_end: 28955, column_start: 28, column_end: 35, line_start: 868, line_end: 868 }: setting
Token { kind: Space, char_start: 28954, char_end: 28955, byte_start: 28955, byte_end: 28956, column_start: 35, column_end: 36, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28955, char_end: 28964, byte_start: 28956, byte_end: 28965, column_start: 36, column_end: 45, line_start: 868, line_end: 868 }: overrides
Token { kind: Space, char_start: 28964, char_end: 28965, byte_start: 28965, byte_end: 28966, column_start: 45, column_end: 46, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28965, char_end: 28968, byte_start: 28966, byte_end: 28969, column_start: 46, column_end: 49, line_start: 868, line_end: 868 }: for
Token { kind: Space, char_start: 28968, char_end: 28969, byte_start: 28969, byte_end: 28970, column_start: 49, column_end: 50, line_start: 868, line_end: 868 }: " "
Token { kind: Bar, char_start: 28969, char_end: 28970, byte_start: 28970, byte_end: 28971, column_start: 50, column_end: 51, line_start: 868, line_end: 868 }: |
Token { kind: Text, char_start: 28970, char_end: 28978, byte_start: 28971, byte_end: 28979, column_start: 51, column_end: 59, line_start: 868, line_end: 868 }: quickfix
Token { kind: Bar, char_start: 28978, char_end: 28979, byte_start: 28979, byte_end: 28980, column_start: 59, column_end: 60, line_start: 868, line_end: 868 }: |
Token { kind: Space, char_start: 28979, char_end: 28980, byte_start: 28980, byte_end: 28981, column_start: 60, column_end: 61, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28980, char_end: 28988, byte_start: 28981, byte_end: 28989, column_start: 61, column_end: 69, line_start: 868, line_end: 868 }: windows.
Token { kind: Space, char_start: 28988, char_end: 28989, byte_start: 28989, byte_end: 28990, column_start: 69, column_end: 70, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28989, char_end: 28994, byte_start: 28990, byte_end: 28995, column_start: 70, column_end: 75, line_start: 868, line_end: 868 }: These
Token { kind: Space, char_start: 28994, char_end: 28995, byte_start: 28995, byte_end: 28996, column_start: 75, column_end: 76, line_start: 868, line_end: 868 }: " "
Token { kind: Text, char_start: 28995, char_end: 28998, byte_start: 28996, byte_end: 28999, column_start: 76, column_end: 79, line_start: 868, line_end: 868 }: are
Token { kind: Newline, char_start: 28998, char_end: 28999, byte_start: 28999, byte_end: 29000, column_start: 79, column_end: 1, line_start: 868, line_end: 869 }: "\n"
Token { kind: Text, char_start: 28999, char_end: 29006, byte_start: 29000, byte_end: 29007, column_start: 1, column_end: 8, line_start: 869, line_end: 869 }: various
Token { kind: Space, char_start: 29006, char_end: 29007, byte_start: 29007, byte_end: 29008, column_start: 8, column_end: 9, line_start: 869, line_end: 869 }: " "
Token { kind: Text, char_start: 29007, char_end: 29016, byte_start: 29008, byte_end: 29017, column_start: 9, column_end: 18, line_start: 869, line_end: 869 }: settings,
Token { kind: Space, char_start: 29016, char_end: 29017, byte_start: 29017, byte_end: 29018, column_start: 18, column_end: 19, line_start: 869, line_end: 869 }: " "
Token { kind: Text, char_start: 29017, char_end: 29021, byte_start: 29018, byte_end: 29022, column_start: 19, column_end: 23, line_start: 869, line_end: 869 }: such
Token { kind: Space, char_start: 29021, char_end: 29022, byte_start: 29022, byte_end: 29023, column_start: 23, column_end: 24, line_start: 869, line_end: 869 }: " "
Token { kind: Text, char_start: 29022, char_end: 29024, byte_start: 29023, byte_end: 29025, column_start: 24, column_end: 26, line_start: 869, line_end: 869 }: as
Token { kind: Space, char_start: 29024, char_end: 29025, byte_start: 29025, byte_end: 29026, column_start: 26, column_end: 27, line_start: 869, line_end: 869 }: " "
Token { kind: Bar, char_start: 29025, char_end: 29026, byte_start: 29026, byte_end: 29027, column_start: 27, column_end: 28, line_start: 869, line_end: 869 }: |
Token { kind: Text, char_start: 29026, char_end: 29042, byte_start: 29027, byte_end: 29043, column_start: 28, column_end: 44, line_start: 869, line_end: 869 }: norelativenumber
Token { kind: Bar, char_start: 29042, char_end: 29043, byte_start: 29043, byte_end: 29044, column_start: 44, column_end: 45, line_start: 869, line_end: 869 }: |
Token { kind: Text, char_start: 29043, char_end: 29044, byte_start: 29044, byte_end: 29045, column_start: 45, column_end: 46, line_start: 869, line_end: 869 }: ,
Token { kind: Space, char_start: 29044, char_end: 29045, byte_start: 29045, byte_end: 29046, column_start: 46, column_end: 47, line_start: 869, line_end: 869 }: " "
Token { kind: Bar, char_start: 29045, char_end: 29046, byte_start: 29046, byte_end: 29047, column_start: 47, column_end: 48, line_start: 869, line_end: 869 }: |
Token { kind: Text, char_start: 29046, char_end: 29052, byte_start: 29047, byte_end: 29053, column_start: 48, column_end: 54, line_start: 869, line_end: 869 }: nolist
Token { kind: Bar, char_start: 29052, char_end: 29053, byte_start: 29053, byte_end: 29054, column_start: 54, column_end: 55, line_start: 869, line_end: 869 }: |
Token { kind: Space, char_start: 29053, char_end: 29054, byte_start: 29054, byte_end: 29055, column_start: 55, column_end: 56, line_start: 869, line_end: 869 }: " "
Token { kind: Text, char_start: 29054, char_end: 29057, byte_start: 29055, byte_end: 29058, column_start: 56, column_end: 59, line_start: 869, line_end: 869 }: and
Token { kind: Space, char_start: 29057, char_end: 29058, byte_start: 29058, byte_end: 29059, column_start: 59, column_end: 60, line_start: 869, line_end: 869 }: " "
Token { kind: Bar, char_start: 29058, char_end: 29059, byte_start: 29059, byte_end: 29060, column_start: 60, column_end: 61, line_start: 869, line_end: 869 }: |
Token { kind: Text, char_start: 29059, char_end: 29065, byte_start: 29060, byte_end: 29066, column_start: 61, column_end: 67, line_start: 869, line_end: 869 }: nowrap
Token { kind: Bar, char_start: 29065, char_end: 29066, byte_start: 29066, byte_end: 29067, column_start: 67, column_end: 68, line_start: 869, line_end: 869 }: |
Token { kind: Text, char_start: 29066, char_end: 29067, byte_start: 29067, byte_end: 29068, column_start: 68, column_end: 69, line_start: 869, line_end: 869 }: ,
Token { kind: Space, char_start: 29067, char_end: 29068, byte_start: 29068, byte_end: 29069, column_start: 69, column_end: 70, line_start: 869, line_end: 869 }: " "
Token { kind: Text, char_start: 29068, char_end: 29072, byte_start: 29069, byte_end: 29073, column_start: 70, column_end: 74, line_start: 869, line_end: 869 }: that
Token { kind: Space, char_start: 29072, char_end: 29073, byte_start: 29073, byte_end: 29074, column_start: 74, column_end: 75, line_start: 869, line_end: 869 }: " "
Token { kind: Text, char_start: 29073, char_end: 29076, byte_start: 29074, byte_end: 29077, column_start: 75, column_end: 78, line_start: 869, line_end: 869 }: are
Token { kind: Newline, char_start: 29076, char_end: 29077, byte_start: 29077, byte_end: 29078, column_start: 78, column_end: 1, line_start: 869, line_end: 870 }: "\n"
Token { kind: Text, char_start: 29077, char_end: 29085, byte_start: 29078, byte_end: 29086, column_start: 1, column_end: 9, line_start: 870, line_end: 870 }: intended
Token { kind: Space, char_start: 29085, char_end: 29086, byte_start: 29086, byte_end: 29087, column_start: 9, column_end: 10, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29086, char_end: 29088, byte_start: 29087, byte_end: 29089, column_start: 10, column_end: 12, line_start: 870, line_end: 870 }: to
Token { kind: Space, char_start: 29088, char_end: 29089, byte_start: 29089, byte_end: 29090, column_start: 12, column_end: 13, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29089, char_end: 29093, byte_start: 29090, byte_end: 29094, column_start: 13, column_end: 17, line_start: 870, line_end: 870 }: make
Token { kind: Space, char_start: 29093, char_end: 29094, byte_start: 29094, byte_end: 29095, column_start: 17, column_end: 18, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29094, char_end: 29097, byte_start: 29095, byte_end: 29098, column_start: 18, column_end: 21, line_start: 870, line_end: 870 }: the
Token { kind: Space, char_start: 29097, char_end: 29098, byte_start: 29098, byte_end: 29099, column_start: 21, column_end: 22, line_start: 870, line_end: 870 }: " "
Token { kind: Bar, char_start: 29098, char_end: 29099, byte_start: 29099, byte_end: 29100, column_start: 22, column_end: 23, line_start: 870, line_end: 870 }: |
Token { kind: Text, char_start: 29099, char_end: 29107, byte_start: 29100, byte_end: 29108, column_start: 23, column_end: 31, line_start: 870, line_end: 870 }: quickfix
Token { kind: Bar, char_start: 29107, char_end: 29108, byte_start: 29108, byte_end: 29109, column_start: 31, column_end: 32, line_start: 870, line_end: 870 }: |
Token { kind: Space, char_start: 29108, char_end: 29109, byte_start: 29109, byte_end: 29110, column_start: 32, column_end: 33, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29109, char_end: 29116, byte_start: 29110, byte_end: 29117, column_start: 33, column_end: 40, line_start: 870, line_end: 870 }: window,
Token { kind: Space, char_start: 29116, char_end: 29117, byte_start: 29117, byte_end: 29118, column_start: 40, column_end: 41, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29117, char_end: 29122, byte_start: 29118, byte_end: 29123, column_start: 41, column_end: 46, line_start: 870, line_end: 870 }: which
Token { kind: Space, char_start: 29122, char_end: 29123, byte_start: 29123, byte_end: 29124, column_start: 46, column_end: 47, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29123, char_end: 29125, byte_start: 29124, byte_end: 29126, column_start: 47, column_end: 49, line_start: 870, line_end: 870 }: is
Token { kind: Space, char_start: 29125, char_end: 29126, byte_start: 29126, byte_end: 29127, column_start: 49, column_end: 50, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29126, char_end: 29135, byte_start: 29127, byte_end: 29136, column_start: 50, column_end: 59, line_start: 870, line_end: 870 }: typically
Token { kind: Space, char_start: 29135, char_end: 29136, byte_start: 29136, byte_end: 29137, column_start: 59, column_end: 60, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29136, char_end: 29140, byte_start: 29137, byte_end: 29141, column_start: 60, column_end: 64, line_start: 870, line_end: 870 }: very
Token { kind: Space, char_start: 29140, char_end: 29141, byte_start: 29141, byte_end: 29142, column_start: 64, column_end: 65, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29141, char_end: 29146, byte_start: 29142, byte_end: 29147, column_start: 65, column_end: 70, line_start: 870, line_end: 870 }: small
Token { kind: Space, char_start: 29146, char_end: 29147, byte_start: 29147, byte_end: 29148, column_start: 70, column_end: 71, line_start: 870, line_end: 870 }: " "
Token { kind: Text, char_start: 29147, char_end: 29155, byte_start: 29148, byte_end: 29156, column_start: 71, column_end: 79, line_start: 870, line_end: 870 }: relative
Token { kind: Newline, char_start: 29155, char_end: 29156, byte_start: 29156, byte_end: 29157, column_start: 79, column_end: 1, line_start: 870, line_end: 871 }: "\n"
Token { kind: Text, char_start: 29156, char_end: 29158, byte_start: 29157, byte_end: 29159, column_start: 1, column_end: 3, line_start: 871, line_end: 871 }: to
Token { kind: Space, char_start: 29158, char_end: 29159, byte_start: 29159, byte_end: 29160, column_start: 3, column_end: 4, line_start: 871, line_end: 871 }: " "
Token { kind: Text, char_start: 29159, char_end: 29164, byte_start: 29160, byte_end: 29165, column_start: 4, column_end: 9, line_start: 871, line_end: 871 }: other
Token { kind: Space, char_start: 29164, char_end: 29165, byte_start: 29165, byte_end: 29166, column_start: 9, column_end: 10, line_start: 871, line_end: 871 }: " "
Token { kind: Text, char_start: 29165, char_end: 29173, byte_start: 29166, byte_end: 29174, column_start: 10, column_end: 18, line_start: 871, line_end: 871 }: windows,
Token { kind: Space, char_start: 29173, char_end: 29174, byte_start: 29174, byte_end: 29175, column_start: 18, column_end: 19, line_start: 871, line_end: 871 }: " "
Token { kind: Text, char_start: 29174, char_end: 29178, byte_start: 29175, byte_end: 29179, column_start: 19, column_end: 23, line_start: 871, line_end: 871 }: more
Token { kind: Space, char_start: 29178, char_end: 29179, byte_start: 29179, byte_end: 29180, column_start: 23, column_end: 24, line_start: 871, line_end: 871 }: " "
Token { kind: Text, char_start: 29179, char_end: 29186, byte_start: 29180, byte_end: 29187, column_start: 24, column_end: 31, line_start: 871, line_end: 871 }: usable.
Token { kind: Newline, char_start: 29186, char_end: 29187, byte_start: 29187, byte_end: 29188, column_start: 31, column_end: 1, line_start: 871, line_end: 872 }: "\n"
Token { kind: Newline, char_start: 29187, char_end: 29188, byte_start: 29188, byte_end: 29189, column_start: 1, column_end: 1, line_start: 872, line_end: 873 }: "\n"
Token { kind: Text, char_start: 29188, char_end: 29189, byte_start: 29189, byte_end: 29190, column_start: 1, column_end: 2, line_start: 873, line_end: 873 }: A
Token { kind: Space, char_start: 29189, char_end: 29190, byte_start: 29190, byte_end: 29191, column_start: 2, column_end: 3, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29190, char_end: 29194, byte_start: 29191, byte_end: 29195, column_start: 3, column_end: 7, line_start: 873, line_end: 873 }: full
Token { kind: Space, char_start: 29194, char_end: 29195, byte_start: 29195, byte_end: 29196, column_start: 7, column_end: 8, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29195, char_end: 29199, byte_start: 29196, byte_end: 29200, column_start: 8, column_end: 12, line_start: 873, line_end: 873 }: list
Token { kind: Space, char_start: 29199, char_end: 29200, byte_start: 29200, byte_end: 29201, column_start: 12, column_end: 13, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29200, char_end: 29202, byte_start: 29201, byte_end: 29203, column_start: 13, column_end: 15, line_start: 873, line_end: 873 }: of
Token { kind: Space, char_start: 29202, char_end: 29203, byte_start: 29203, byte_end: 29204, column_start: 15, column_end: 16, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29203, char_end: 29213, byte_start: 29204, byte_end: 29214, column_start: 16, column_end: 26, line_start: 873, line_end: 873 }: overridden
Token { kind: Space, char_start: 29213, char_end: 29214, byte_start: 29214, byte_end: 29215, column_start: 26, column_end: 27, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29214, char_end: 29222, byte_start: 29215, byte_end: 29223, column_start: 27, column_end: 35, line_start: 873, line_end: 873 }: settings
Token { kind: Space, char_start: 29222, char_end: 29223, byte_start: 29223, byte_end: 29224, column_start: 35, column_end: 36, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29223, char_end: 29226, byte_start: 29224, byte_end: 29227, column_start: 36, column_end: 39, line_start: 873, line_end: 873 }: can
Token { kind: Space, char_start: 29226, char_end: 29227, byte_start: 29227, byte_end: 29228, column_start: 39, column_end: 40, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29227, char_end: 29229, byte_start: 29228, byte_end: 29230, column_start: 40, column_end: 42, line_start: 873, line_end: 873 }: be
Token { kind: Space, char_start: 29229, char_end: 29230, byte_start: 29230, byte_end: 29231, column_start: 42, column_end: 43, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29230, char_end: 29235, byte_start: 29231, byte_end: 29236, column_start: 43, column_end: 48, line_start: 873, line_end: 873 }: found
Token { kind: Space, char_start: 29235, char_end: 29236, byte_start: 29236, byte_end: 29237, column_start: 48, column_end: 49, line_start: 873, line_end: 873 }: " "
Token { kind: Text, char_start: 29236, char_end: 29238, byte_start: 29237, byte_end: 29239, column_start: 49, column_end: 51, line_start: 873, line_end: 873 }: in
Token { kind: Space, char_start: 29238, char_end: 29239, byte_start: 29239, byte_end: 29240, column_start: 51, column_end: 52, line_start: 873, line_end: 873 }: " "
Token { kind: Bar, char_start: 29239, char_end: 29240, byte_start: 29240, byte_end: 29241, column_start: 52, column_end: 53, line_start: 873, line_end: 873 }: |
Token { kind: Text, char_start: 29240, char_end: 29246, byte_start: 29241, byte_end: 29247, column_start: 53, column_end: 59, line_start: 873, line_end: 873 }: ferret
Token { kind: Hyphen, char_start: 29246, char_end: 29247, byte_start: 29247, byte_end: 29248, column_start: 59, column_end: 60, line_start: 873, line_end: 873 }: -
Token { kind: Text, char_start: 29247, char_end: 29256, byte_start: 29248, byte_end: 29257, column_start: 60, column_end: 69, line_start: 873, line_end: 873 }: overrides
Token { kind: Bar, char_start: 29256, char_end: 29257, byte_start: 29257, byte_end: 29258, column_start: 69, column_end: 70, line_start: 873, line_end: 873 }: |
Token { kind: Text, char_start: 29257, char_end: 29258, byte_start: 29258, byte_end: 29259, column_start: 70, column_end: 71, line_start: 873, line_end: 873 }: .
Token { kind: Newline, char_start: 29258, char_end: 29259, byte_start: 29259, byte_end: 29260, column_start: 71, column_end: 1, line_start: 873, line_end: 874 }: "\n"
Token { kind: Newline, char_start: 29259, char_end: 29260, byte_start: 29260, byte_end: 29261, column_start: 1, column_end: 1, line_start: 874, line_end: 875 }: "\n"
Token { kind: Text, char_start: 29260, char_end: 29262, byte_start: 29261, byte_end: 29263, column_start: 1, column_end: 3, line_start: 875, line_end: 875 }: To
Token { kind: Space, char_start: 29262, char_end: 29263, byte_start: 29263, byte_end: 29264, column_start: 3, column_end: 4, line_start: 875, line_end: 875 }: " "
Token { kind: Text, char_start: 29263, char_end: 29270, byte_start: 29264, byte_end: 29271, column_start: 4, column_end: 11, line_start: 875, line_end: 875 }: prevent
Token { kind: Space, char_start: 29270, char_end: 29271, byte_start: 29271, byte_end: 29272, column_start: 11, column_end: 12, line_start: 875, line_end: 875 }: " "
Token { kind: Text, char_start: 29271, char_end: 29274, byte_start: 29272, byte_end: 29275, column_start: 12, column_end: 15, line_start: 875, line_end: 875 }: the
Token { kind: Space, char_start: 29274, char_end: 29275, byte_start: 29275, byte_end: 29276, column_start: 15, column_end: 16, line_start: 875, line_end: 875 }: " "
Token { kind: Text, char_start: 29275, char_end: 29281, byte_start: 29276, byte_end: 29282, column_start: 16, column_end: 22, line_start: 875, line_end: 875 }: custom
Token { kind: Space, char_start: 29281, char_end: 29282, byte_start: 29282, byte_end: 29283, column_start: 22, column_end: 23, line_start: 875, line_end: 875 }: " "
Token { kind: Text, char_start: 29282, char_end: 29290, byte_start: 29283, byte_end: 29291, column_start: 23, column_end: 31, line_start: 875, line_end: 875 }: settings
Token { kind: Space, char_start: 29290, char_end: 29291, byte_start: 29291, byte_end: 29292, column_start: 31, column_end: 32, line_start: 875, line_end: 875 }: " "
Token { kind: Text, char_start: 29291, char_end: 29295, byte_start: 29292, byte_end: 29296, column_start: 32, column_end: 36, line_start: 875, line_end: 875 }: from
Token { kind: Space, char_start: 29295, char_end: 29296, byte_start: 29296, byte_end: 29297, column_start: 36, column_end: 37, line_start: 875, line_end: 875 }: " "
Token { kind: Text, char_start: 29296, char_end: 29301, byte_start: 29297, byte_end: 29302, column_start: 37, column_end: 42, line_start: 875, line_end: 875 }: being
Token { kind: Space, char_start: 29301, char_end: 29302, byte_start: 29302, byte_end: 29303, column_start: 42, column_end: 43, line_start: 875, line_end: 875 }: " "
Token { kind: Text, char_start: 29302, char_end: 29310, byte_start: 29303, byte_end: 29311, column_start: 43, column_end: 51, line_start: 875, line_end: 875 }: applied,
Token { kind: Space, char_start: 29310, char_end: 29311, byte_start: 29311, byte_end: 29312, column_start: 51, column_end: 52, line_start: 875, line_end: 875 }: " "
Token { kind: Text, char_start: 29311, char_end: 29314, byte_start: 29312, byte_end: 29315, column_start: 52, column_end: 55, line_start: 875, line_end: 875 }: set
Token { kind: Space, char_start: 29314, char_end: 29315, byte_start: 29315, byte_end: 29316, column_start: 55, column_end: 56, line_start: 875, line_end: 875 }: " "
Token { kind: Bar, char_start: 29315, char_end: 29316, byte_start: 29316, byte_end: 29317, column_start: 56, column_end: 57, line_start: 875, line_end: 875 }: |
Token { kind: Text, char_start: 29316, char_end: 29333, byte_start: 29317, byte_end: 29334, column_start: 57, column_end: 74, line_start: 875, line_end: 875 }: g:FerretQFOptions
Token { kind: Bar, char_start: 29333, char_end: 29334, byte_start: 29334, byte_end: 29335, column_start: 74, column_end: 75, line_start: 875, line_end: 875 }: |
Token { kind: Newline, char_start: 29334, char_end: 29335, byte_start: 29335, byte_end: 29336, column_start: 75, column_end: 1, line_start: 875, line_end: 876 }: "\n"
Token { kind: Text, char_start: 29335, char_end: 29337, byte_start: 29336, byte_end: 29338, column_start: 1, column_end: 3, line_start: 876, line_end: 876 }: to
Token { kind: Space, char_start: 29337, char_end: 29338, byte_start: 29338, byte_end: 29339, column_start: 3, column_end: 4, line_start: 876, line_end: 876 }: " "
Token { kind: Text, char_start: 29338, char_end: 29340, byte_start: 29339, byte_end: 29341, column_start: 4, column_end: 6, line_start: 876, line_end: 876 }: 0:
Token { kind: Newline, char_start: 29340, char_end: 29341, byte_start: 29341, byte_end: 29342, column_start: 6, column_end: 1, line_start: 876, line_end: 877 }: "\n"
Token { kind: Newline, char_start: 29341, char_end: 29342, byte_start: 29342, byte_end: 29343, column_start: 1, column_end: 1, line_start: 877, line_end: 878 }: "\n"
Token { kind: CodeFence, char_start: 29342, char_end: 29345, byte_start: 29343, byte_end: 29346, column_start: 1, column_end: 4, line_start: 878, line_end: 878 }: ```
Token { kind: Newline, char_start: 29345, char_end: 29346, byte_start: 29346, byte_end: 29347, column_start: 4, column_end: 1, line_start: 878, line_end: 879 }: "\n"
Token { kind: Text, char_start: 29346, char_end: 29349, byte_start: 29347, byte_end: 29350, column_start: 1, column_end: 4, line_start: 879, line_end: 879 }: let
Token { kind: Space, char_start: 29349, char_end: 29350, byte_start: 29350, byte_end: 29351, column_start: 4, column_end: 5, line_start: 879, line_end: 879 }: " "
Token { kind: Text, char_start: 29350, char_end: 29369, byte_start: 29351, byte_end: 29370, column_start: 5, column_end: 24, line_start: 879, line_end: 879 }: g:FerretQFOptions=0
Token { kind: Newline, char_start: 29369, char_end: 29370, byte_start: 29370, byte_end: 29371, column_start: 24, column_end: 1, line_start: 879, line_end: 880 }: "\n"
Token { kind: CodeFence, char_start: 29370, char_end: 29373, byte_start: 29371, byte_end: 29374, column_start: 1, column_end: 4, line_start: 880, line_end: 880 }: ```
Token { kind: Newline, char_start: 29373, char_end: 29374, byte_start: 29374, byte_end: 29375, column_start: 4, column_end: 1, line_start: 880, line_end: 881 }: "\n"
Token { kind: Newline, char_start: 29374, char_end: 29375, byte_start: 29375, byte_end: 29376, column_start: 1, column_end: 1, line_start: 881, line_end: 882 }: "\n"
Token { kind: At, char_start: 29375, char_end: 29376, byte_start: 29376, byte_end: 29377, column_start: 1, column_end: 2, line_start: 882, line_end: 882 }: @
Token { kind: Text, char_start: 29376, char_end: 29382, byte_start: 29377, byte_end: 29383, column_start: 2, column_end: 8, line_start: 882, line_end: 882 }: option
Token { kind: Space, char_start: 29382, char_end: 29383, byte_start: 29383, byte_end: 29384, column_start: 8, column_end: 9, line_start: 882, line_end: 882 }: " "
Token { kind: Text, char_start: 29383, char_end: 29396, byte_start: 29384, byte_end: 29397, column_start: 9, column_end: 22, line_start: 882, line_end: 882 }: g:FerretQFMap
Token { kind: Space, char_start: 29396, char_end: 29397, byte_start: 29397, byte_end: 29398, column_start: 22, column_end: 23, line_start: 882, line_end: 882 }: " "
Token { kind: Text, char_start: 29397, char_end: 29404, byte_start: 29398, byte_end: 29405, column_start: 23, column_end: 30, line_start: 882, line_end: 882 }: boolean
Token { kind: Space, char_start: 29404, char_end: 29405, byte_start: 29405, byte_end: 29406, column_start: 30, column_end: 31, line_start: 882, line_end: 882 }: " "
Token { kind: Text, char_start: 29405, char_end: 29406, byte_start: 29406, byte_end: 29407, column_start: 31, column_end: 32, line_start: 882, line_end: 882 }: 1
Token { kind: Newline, char_start: 29406, char_end: 29407, byte_start: 29407, byte_end: 29408, column_start: 32, column_end: 1, line_start: 882, line_end: 883 }: "\n"
Token { kind: Newline, char_start: 29407, char_end: 29408, byte_start: 29408, byte_end: 29409, column_start: 1, column_end: 1, line_start: 883, line_end: 884 }: "\n"
Token { kind: Text, char_start: 29408, char_end: 29416, byte_start: 29409, byte_end: 29417, column_start: 1, column_end: 9, line_start: 884, line_end: 884 }: Controls
Token { kind: Space, char_start: 29416, char_end: 29417, byte_start: 29417, byte_end: 29418, column_start: 9, column_end: 10, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29417, char_end: 29424, byte_start: 29418, byte_end: 29425, column_start: 10, column_end: 17, line_start: 884, line_end: 884 }: whether
Token { kind: Space, char_start: 29424, char_end: 29425, byte_start: 29425, byte_end: 29426, column_start: 17, column_end: 18, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29425, char_end: 29427, byte_start: 29426, byte_end: 29428, column_start: 18, column_end: 20, line_start: 884, line_end: 884 }: to
Token { kind: Space, char_start: 29427, char_end: 29428, byte_start: 29428, byte_end: 29429, column_start: 20, column_end: 21, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29428, char_end: 29431, byte_start: 29429, byte_end: 29432, column_start: 21, column_end: 24, line_start: 884, line_end: 884 }: set
Token { kind: Space, char_start: 29431, char_end: 29432, byte_start: 29432, byte_end: 29433, column_start: 24, column_end: 25, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29432, char_end: 29434, byte_start: 29433, byte_end: 29435, column_start: 25, column_end: 27, line_start: 884, line_end: 884 }: up
Token { kind: Space, char_start: 29434, char_end: 29435, byte_start: 29435, byte_end: 29436, column_start: 27, column_end: 28, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29435, char_end: 29443, byte_start: 29436, byte_end: 29444, column_start: 28, column_end: 36, line_start: 884, line_end: 884 }: mappings
Token { kind: Space, char_start: 29443, char_end: 29444, byte_start: 29444, byte_end: 29445, column_start: 36, column_end: 37, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29444, char_end: 29446, byte_start: 29445, byte_end: 29447, column_start: 37, column_end: 39, line_start: 884, line_end: 884 }: in
Token { kind: Space, char_start: 29446, char_end: 29447, byte_start: 29447, byte_end: 29448, column_start: 39, column_end: 40, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29447, char_end: 29450, byte_start: 29448, byte_end: 29451, column_start: 40, column_end: 43, line_start: 884, line_end: 884 }: the
Token { kind: Space, char_start: 29450, char_end: 29451, byte_start: 29451, byte_end: 29452, column_start: 43, column_end: 44, line_start: 884, line_end: 884 }: " "
Token { kind: Bar, char_start: 29451, char_end: 29452, byte_start: 29452, byte_end: 29453, column_start: 44, column_end: 45, line_start: 884, line_end: 884 }: |
Token { kind: Text, char_start: 29452, char_end: 29460, byte_start: 29453, byte_end: 29461, column_start: 45, column_end: 53, line_start: 884, line_end: 884 }: quickfix
Token { kind: Bar, char_start: 29460, char_end: 29461, byte_start: 29461, byte_end: 29462, column_start: 53, column_end: 54, line_start: 884, line_end: 884 }: |
Token { kind: Space, char_start: 29461, char_end: 29462, byte_start: 29462, byte_end: 29463, column_start: 54, column_end: 55, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29462, char_end: 29469, byte_start: 29463, byte_end: 29470, column_start: 55, column_end: 62, line_start: 884, line_end: 884 }: results
Token { kind: Space, char_start: 29469, char_end: 29470, byte_start: 29470, byte_end: 29471, column_start: 62, column_end: 63, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29470, char_end: 29476, byte_start: 29471, byte_end: 29477, column_start: 63, column_end: 69, line_start: 884, line_end: 884 }: window
Token { kind: Space, char_start: 29476, char_end: 29477, byte_start: 29477, byte_end: 29478, column_start: 69, column_end: 70, line_start: 884, line_end: 884 }: " "
Token { kind: Text, char_start: 29477, char_end: 29480, byte_start: 29478, byte_end: 29481, column_start: 70, column_end: 73, line_start: 884, line_end: 884 }: and
Token { kind: Newline, char_start: 29480, char_end: 29481, byte_start: 29481, byte_end: 29482, column_start: 73, column_end: 1, line_start: 884, line_end: 885 }: "\n"
Token { kind: Bar, char_start: 29481, char_end: 29482, byte_start: 29482, byte_end: 29483, column_start: 1, column_end: 2, line_start: 885, line_end: 885 }: |
Token { kind: Text, char_start: 29482, char_end: 29490, byte_start: 29483, byte_end: 29491, column_start: 2, column_end: 10, line_start: 885, line_end: 885 }: location
Token { kind: Hyphen, char_start: 29490, char_end: 29491, byte_start: 29491, byte_end: 29492, column_start: 10, column_end: 11, line_start: 885, line_end: 885 }: -
Token { kind: Text, char_start: 29491, char_end: 29495, byte_start: 29492, byte_end: 29496, column_start: 11, column_end: 15, line_start: 885, line_end: 885 }: list
Token { kind: Bar, char_start: 29495, char_end: 29496, byte_start: 29496, byte_end: 29497, column_start: 15, column_end: 16, line_start: 885, line_end: 885 }: |
Token { kind: Space, char_start: 29496, char_end: 29497, byte_start: 29497, byte_end: 29498, column_start: 16, column_end: 17, line_start: 885, line_end: 885 }: " "
Token { kind: Text, char_start: 29497, char_end: 29500, byte_start: 29498, byte_end: 29501, column_start: 17, column_end: 20, line_start: 885, line_end: 885 }: for
Token { kind: Space, char_start: 29500, char_end: 29501, byte_start: 29501, byte_end: 29502, column_start: 20, column_end: 21, line_start: 885, line_end: 885 }: " "
Token { kind: Text, char_start: 29501, char_end: 29509, byte_start: 29502, byte_end: 29510, column_start: 21, column_end: 29, line_start: 885, line_end: 885 }: deleting
Token { kind: Space, char_start: 29509, char_end: 29510, byte_start: 29510, byte_end: 29511, column_start: 29, column_end: 30, line_start: 885, line_end: 885 }: " "
Token { kind: Text, char_start: 29510, char_end: 29518, byte_start: 29511, byte_end: 29519, column_start: 30, column_end: 38, line_start: 885, line_end: 885 }: results.
Token { kind: Space, char_start: 29518, char_end: 29519, byte_start: 29519, byte_end: 29520, column_start: 38, column_end: 39, line_start: 885, line_end: 885 }: " "
Token { kind: Text, char_start: 29519, char_end: 29522, byte_start: 29520, byte_end: 29523, column_start: 39, column_end: 42, line_start: 885, line_end: 885 }: The
Token { kind: Space, char_start: 29522, char_end: 29523, byte_start: 29523, byte_end: 29524, column_start: 42, column_end: 43, line_start: 885, line_end: 885 }: " "
Token { kind: Text, char_start: 29523, char_end: 29531, byte_start: 29524, byte_end: 29532, column_start: 43, column_end: 51, line_start: 885, line_end: 885 }: mappings
Token { kind: Space, char_start: 29531, char_end: 29532, byte_start: 29532, byte_end: 29533, column_start: 51, column_end: 52, line_start: 885, line_end: 885 }: " "
Token { kind: Text, char_start: 29532, char_end: 29540, byte_start: 29533, byte_end: 29541, column_start: 52, column_end: 60, line_start: 885, line_end: 885 }: include:
Token { kind: Newline, char_start: 29540, char_end: 29541, byte_start: 29541, byte_end: 29542, column_start: 60, column_end: 1, line_start: 885, line_end: 886 }: "\n"
Token { kind: Newline, char_start: 29541, char_end: 29542, byte_start: 29542, byte_end: 29543, column_start: 1, column_end: 1, line_start: 886, line_end: 887 }: "\n"
Token { kind: Hyphen, char_start: 29542, char_end: 29543, byte_start: 29543, byte_end: 29544, column_start: 1, column_end: 2, line_start: 887, line_end: 887 }: -
Token { kind: Space, char_start: 29543, char_end: 29544, byte_start: 29544, byte_end: 29545, column_start: 2, column_end: 3, line_start: 887, line_end: 887 }: " "
Token { kind: Backtick, char_start: 29544, char_end: 29545, byte_start: 29545, byte_end: 29546, column_start: 3, column_end: 4, line_start: 887, line_end: 887 }: `
Token { kind: Text, char_start: 29545, char_end: 29546, byte_start: 29546, byte_end: 29547, column_start: 4, column_end: 5, line_start: 887, line_end: 887 }: d
Token { kind: Backtick, char_start: 29546, char_end: 29547, byte_start: 29547, byte_end: 29548, column_start: 5, column_end: 6, line_start: 887, line_end: 887 }: `
Token { kind: Space, char_start: 29547, char_end: 29548, byte_start: 29548, byte_end: 29549, column_start: 6, column_end: 7, line_start: 887, line_end: 887 }: " "
Token { kind: Lparen, char_start: 29548, char_end: 29549, byte_start: 29549, byte_end: 29550, column_start: 7, column_end: 8, line_start: 887, line_end: 887 }: (
Token { kind: Bar, char_start: 29549, char_end: 29550, byte_start: 29550, byte_end: 29551, column_start: 8, column_end: 9, line_start: 887, line_end: 887 }: |
Token { kind: Text, char_start: 29550, char_end: 29556, byte_start: 29551, byte_end: 29557, column_start: 9, column_end: 15, line_start: 887, line_end: 887 }: visual
Token { kind: Hyphen, char_start: 29556, char_end: 29557, byte_start: 29557, byte_end: 29558, column_start: 15, column_end: 16, line_start: 887, line_end: 887 }: -
Token { kind: Text, char_start: 29557, char_end: 29561, byte_start: 29558, byte_end: 29562, column_start: 16, column_end: 20, line_start: 887, line_end: 887 }: mode
Token { kind: Bar, char_start: 29561, char_end: 29562, byte_start: 29562, byte_end: 29563, column_start: 20, column_end: 21, line_start: 887, line_end: 887 }: |
Token { kind: Rparen, char_start: 29562, char_end: 29563, byte_start: 29563, byte_end: 29564, column_start: 21, column_end: 22, line_start: 887, line_end: 887 }: )
Token { kind: Text, char_start: 29563, char_end: 29564, byte_start: 29564, byte_end: 29565, column_start: 22, column_end: 23, line_start: 887, line_end: 887 }: :
Token { kind: Space, char_start: 29564, char_end: 29565, byte_start: 29565, byte_end: 29566, column_start: 23, column_end: 24, line_start: 887, line_end: 887 }: " "
Token { kind: Text, char_start: 29565, char_end: 29571, byte_start: 29566, byte_end: 29572, column_start: 24, column_end: 30, line_start: 887, line_end: 887 }: delete
Token { kind: Space, char_start: 29571, char_end: 29572, byte_start: 29572, byte_end: 29573, column_start: 30, column_end: 31, line_start: 887, line_end: 887 }: " "
Token { kind: Text, char_start: 29572, char_end: 29578, byte_start: 29573, byte_end: 29579, column_start: 31, column_end: 37, line_start: 887, line_end: 887 }: visual
Token { kind: Space, char_start: 29578, char_end: 29579, byte_start: 29579, byte_end: 29580, column_start: 37, column_end: 38, line_start: 887, line_end: 887 }: " "
Token { kind: Text, char_start: 29579, char_end: 29588, byte_start: 29580, byte_end: 29589, column_start: 38, column_end: 47, line_start: 887, line_end: 887 }: selection
Token { kind: Newline, char_start: 29588, char_end: 29589, byte_start: 29589, byte_end: 29590, column_start: 47, column_end: 1, line_start: 887, line_end: 888 }: "\n"
Token { kind: Hyphen, char_start: 29589, char_end: 29590, byte_start: 29590, byte_end: 29591, column_start: 1, column_end: 2, line_start: 888, line_end: 888 }: -
Token { kind: Space, char_start: 29590, char_end: 29591, byte_start: 29591, byte_end: 29592, column_start: 2, column_end: 3, line_start: 888, line_end: 888 }: " "
Token { kind: Backtick, char_start: 29591, char_end: 29592, byte_start: 29592, byte_end: 29593, column_start: 3, column_end: 4, line_start: 888, line_end: 888 }: `
Token { kind: Text, char_start: 29592, char_end: 29594, byte_start: 29593, byte_end: 29595, column_start: 4, column_end: 6, line_start: 888, line_end: 888 }: dd
Token { kind: Backtick, char_start: 29594, char_end: 29595, byte_start: 29595, byte_end: 29596, column_start: 6, column_end: 7, line_start: 888, line_end: 888 }: `
Token { kind: Space, char_start: 29595, char_end: 29596, byte_start: 29596, byte_end: 29597, column_start: 7, column_end: 8, line_start: 888, line_end: 888 }: " "
Token { kind: Lparen, char_start: 29596, char_end: 29597, byte_start: 29597, byte_end: 29598, column_start: 8, column_end: 9, line_start: 888, line_end: 888 }: (
Token { kind: Bar, char_start: 29597, char_end: 29598, byte_start: 29598, byte_end: 29599, column_start: 9, column_end: 10, line_start: 888, line_end: 888 }: |
Token { kind: Text, char_start: 29598, char_end: 29604, byte_start: 29599, byte_end: 29605, column_start: 10, column_end: 16, line_start: 888, line_end: 888 }: Normal
Token { kind: Hyphen, char_start: 29604, char_end: 29605, byte_start: 29605, byte_end: 29606, column_start: 16, column_end: 17, line_start: 888, line_end: 888 }: -
Token { kind: Text, char_start: 29605, char_end: 29609, byte_start: 29606, byte_end: 29610, column_start: 17, column_end: 21, line_start: 888, line_end: 888 }: mode
Token { kind: Bar, char_start: 29609, char_end: 29610, byte_start: 29610, byte_end: 29611, column_start: 21, column_end: 22, line_start: 888, line_end: 888 }: |
Token { kind: Rparen, char_start: 29610, char_end: 29611, byte_start: 29611, byte_end: 29612, column_start: 22, column_end: 23, line_start: 888, line_end: 888 }: )
Token { kind: Text, char_start: 29611, char_end: 29612, byte_start: 29612, byte_end: 29613, column_start: 23, column_end: 24, line_start: 888, line_end: 888 }: :
Token { kind: Space, char_start: 29612, char_end: 29613, byte_start: 29613, byte_end: 29614, column_start: 24, column_end: 25, line_start: 888, line_end: 888 }: " "
Token { kind: Text, char_start: 29613, char_end: 29619, byte_start: 29614, byte_end: 29620, column_start: 25, column_end: 31, line_start: 888, line_end: 888 }: delete
Token { kind: Space, char_start: 29619, char_end: 29620, byte_start: 29620, byte_end: 29621, column_start: 31, column_end: 32, line_start: 888, line_end: 888 }: " "
Token { kind: Text, char_start: 29620, char_end: 29627, byte_start: 29621, byte_end: 29628, column_start: 32, column_end: 39, line_start: 888, line_end: 888 }: current
Token { kind: Space, char_start: 29627, char_end: 29628, byte_start: 29628, byte_end: 29629, column_start: 39, column_end: 40, line_start: 888, line_end: 888 }: " "
Token { kind: Text, char_start: 29628, char_end: 29632, byte_start: 29629, byte_end: 29633, column_start: 40, column_end: 44, line_start: 888, line_end: 888 }: line
Token { kind: Newline, char_start: 29632, char_end: 29633, byte_start: 29633, byte_end: 29634, column_start: 44, column_end: 1, line_start: 888, line_end: 889 }: "\n"
Token { kind: Hyphen, char_start: 29633, char_end: 29634, byte_start: 29634, byte_end: 29635, column_start: 1, column_end: 2, line_start: 889, line_end: 889 }: -
Token { kind: Space, char_start: 29634, char_end: 29635, byte_start: 29635, byte_end: 29636, column_start: 2, column_end: 3, line_start: 889, line_end: 889 }: " "
Token { kind: Backtick, char_start: 29635, char_end: 29636, byte_start: 29636, byte_end: 29637, column_start: 3, column_end: 4, line_start: 889, line_end: 889 }: `
Token { kind: Text, char_start: 29636, char_end: 29637, byte_start: 29637, byte_end: 29638, column_start: 4, column_end: 5, line_start: 889, line_end: 889 }: d
Token { kind: Backtick, char_start: 29637, char_end: 29638, byte_start: 29638, byte_end: 29639, column_start: 5, column_end: 6, line_start: 889, line_end: 889 }: `
Token { kind: Text, char_start: 29638, char_end: 29646, byte_start: 29639, byte_end: 29647, column_start: 6, column_end: 14, line_start: 889, line_end: 889 }: {motion}
Token { kind: Space, char_start: 29646, char_end: 29647, byte_start: 29647, byte_end: 29648, column_start: 14, column_end: 15, line_start: 889, line_end: 889 }: " "
Token { kind: Lparen, char_start: 29647, char_end: 29648, byte_start: 29648, byte_end: 29649, column_start: 15, column_end: 16, line_start: 889, line_end: 889 }: (
Token { kind: Bar, char_start: 29648, char_end: 29649, byte_start: 29649, byte_end: 29650, column_start: 16, column_end: 17, line_start: 889, line_end: 889 }: |
Token { kind: Text, char_start: 29649, char_end: 29655, byte_start: 29650, byte_end: 29656, column_start: 17, column_end: 23, line_start: 889, line_end: 889 }: Normal
Token { kind: Hyphen, char_start: 29655, char_end: 29656, byte_start: 29656, byte_end: 29657, column_start: 23, column_end: 24, line_start: 889, line_end: 889 }: -
Token { kind: Text, char_start: 29656, char_end: 29660, byte_start: 29657, byte_end: 29661, column_start: 24, column_end: 28, line_start: 889, line_end: 889 }: mode
Token { kind: Bar, char_start: 29660, char_end: 29661, byte_start: 29661, byte_end: 29662, column_start: 28, column_end: 29, line_start: 889, line_end: 889 }: |
Token { kind: Rparen, char_start: 29661, char_end: 29662, byte_start: 29662, byte_end: 29663, column_start: 29, column_end: 30, line_start: 889, line_end: 889 }: )
Token { kind: Text, char_start: 29662, char_end: 29663, byte_start: 29663, byte_end: 29664, column_start: 30, column_end: 31, line_start: 889, line_end: 889 }: :
Token { kind: Space, char_start: 29663, char_end: 29664, byte_start: 29664, byte_end: 29665, column_start: 31, column_end: 32, line_start: 889, line_end: 889 }: " "
Token { kind: Text, char_start: 29664, char_end: 29670, byte_start: 29665, byte_end: 29671, column_start: 32, column_end: 38, line_start: 889, line_end: 889 }: delete
Token { kind: Space, char_start: 29670, char_end: 29671, byte_start: 29671, byte_end: 29672, column_start: 38, column_end: 39, line_start: 889, line_end: 889 }: " "
Token { kind: Text, char_start: 29671, char_end: 29676, byte_start: 29672, byte_end: 29677, column_start: 39, column_end: 44, line_start: 889, line_end: 889 }: range
Token { kind: Space, char_start: 29676, char_end: 29677, byte_start: 29677, byte_end: 29678, column_start: 44, column_end: 45, line_start: 889, line_end: 889 }: " "
Token { kind: Text, char_start: 29677, char_end: 29686, byte_start: 29678, byte_end: 29687, column_start: 45, column_end: 54, line_start: 889, line_end: 889 }: indicated
Token { kind: Space, char_start: 29686, char_end: 29687, byte_start: 29687, byte_end: 29688, column_start: 54, column_end: 55, line_start: 889, line_end: 889 }: " "
Token { kind: Text, char_start: 29687, char_end: 29689, byte_start: 29688, byte_end: 29690, column_start: 55, column_end: 57, line_start: 889, line_end: 889 }: by
Token { kind: Space, char_start: 29689, char_end: 29690, byte_start: 29690, byte_end: 29691, column_start: 57, column_end: 58, line_start: 889, line_end: 889 }: " "
Token { kind: Text, char_start: 29690, char_end: 29698, byte_start: 29691, byte_end: 29699, column_start: 58, column_end: 66, line_start: 889, line_end: 889 }: {motion}
Token { kind: Newline, char_start: 29698, char_end: 29699, byte_start: 29699, byte_end: 29700, column_start: 66, column_end: 1, line_start: 889, line_end: 890 }: "\n"
Token { kind: Newline, char_start: 29699, char_end: 29700, byte_start: 29700, byte_end: 29701, column_start: 1, column_end: 1, line_start: 890, line_end: 891 }: "\n"
Token { kind: Text, char_start: 29700, char_end: 29702, byte_start: 29701, byte_end: 29703, column_start: 1, column_end: 3, line_start: 891, line_end: 891 }: To
Token { kind: Space, char_start: 29702, char_end: 29703, byte_start: 29703, byte_end: 29704, column_start: 3, column_end: 4, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29703, char_end: 29710, byte_start: 29704, byte_end: 29711, column_start: 4, column_end: 11, line_start: 891, line_end: 891 }: prevent
Token { kind: Space, char_start: 29710, char_end: 29711, byte_start: 29711, byte_end: 29712, column_start: 11, column_end: 12, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29711, char_end: 29716, byte_start: 29712, byte_end: 29717, column_start: 12, column_end: 17, line_start: 891, line_end: 891 }: these
Token { kind: Space, char_start: 29716, char_end: 29717, byte_start: 29717, byte_end: 29718, column_start: 17, column_end: 18, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29717, char_end: 29725, byte_start: 29718, byte_end: 29726, column_start: 18, column_end: 26, line_start: 891, line_end: 891 }: mappings
Token { kind: Space, char_start: 29725, char_end: 29726, byte_start: 29726, byte_end: 29727, column_start: 26, column_end: 27, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29726, char_end: 29730, byte_start: 29727, byte_end: 29731, column_start: 27, column_end: 31, line_start: 891, line_end: 891 }: from
Token { kind: Space, char_start: 29730, char_end: 29731, byte_start: 29731, byte_end: 29732, column_start: 31, column_end: 32, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29731, char_end: 29736, byte_start: 29732, byte_end: 29737, column_start: 32, column_end: 37, line_start: 891, line_end: 891 }: being
Token { kind: Space, char_start: 29736, char_end: 29737, byte_start: 29737, byte_end: 29738, column_start: 37, column_end: 38, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29737, char_end: 29740, byte_start: 29738, byte_end: 29741, column_start: 38, column_end: 41, line_start: 891, line_end: 891 }: set
Token { kind: Space, char_start: 29740, char_end: 29741, byte_start: 29741, byte_end: 29742, column_start: 41, column_end: 42, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29741, char_end: 29744, byte_start: 29742, byte_end: 29745, column_start: 42, column_end: 45, line_start: 891, line_end: 891 }: up,
Token { kind: Space, char_start: 29744, char_end: 29745, byte_start: 29745, byte_end: 29746, column_start: 45, column_end: 46, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29745, char_end: 29748, byte_start: 29746, byte_end: 29749, column_start: 46, column_end: 49, line_start: 891, line_end: 891 }: set
Token { kind: Space, char_start: 29748, char_end: 29749, byte_start: 29749, byte_end: 29750, column_start: 49, column_end: 50, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29749, char_end: 29751, byte_start: 29750, byte_end: 29752, column_start: 50, column_end: 52, line_start: 891, line_end: 891 }: to
Token { kind: Space, char_start: 29751, char_end: 29752, byte_start: 29752, byte_end: 29753, column_start: 52, column_end: 53, line_start: 891, line_end: 891 }: " "
Token { kind: Text, char_start: 29752, char_end: 29754, byte_start: 29753, byte_end: 29755, column_start: 53, column_end: 55, line_start: 891, line_end: 891 }: 0:
Token { kind: Newline, char_start: 29754, char_end: 29755, byte_start: 29755, byte_end: 29756, column_start: 55, column_end: 1, line_start: 891, line_end: 892 }: "\n"
Token { kind: Newline, char_start: 29755, char_end: 29756, byte_start: 29756, byte_end: 29757, column_start: 1, column_end: 1, line_start: 892, line_end: 893 }: "\n"
Token { kind: CodeFence, char_start: 29756, char_end: 29759, byte_start: 29757, byte_end: 29760, column_start: 1, column_end: 4, line_start: 893, line_end: 893 }: ```
Token { kind: Newline, char_start: 29759, char_end: 29760, byte_start: 29760, byte_end: 29761, column_start: 4, column_end: 1, line_start: 893, line_end: 894 }: "\n"
Token { kind: Text, char_start: 29760, char_end: 29763, byte_start: 29761, byte_end: 29764, column_start: 1, column_end: 4, line_start: 894, line_end: 894 }: let
Token { kind: Space, char_start: 29763, char_end: 29764, byte_start: 29764, byte_end: 29765, column_start: 4, column_end: 5, line_start: 894, line_end: 894 }: " "
Token { kind: Text, char_start: 29764, char_end: 29779, byte_start: 29765, byte_end: 29780, column_start: 5, column_end: 20, line_start: 894, line_end: 894 }: g:FerretQFMap=0
Token { kind: Newline, char_start: 29779, char_end: 29780, byte_start: 29780, byte_end: 29781, column_start: 20, column_end: 1, line_start: 894, line_end: 895 }: "\n"
Token { kind: CodeFence, char_start: 29780, char_end: 29783, byte_start: 29781, byte_end: 29784, column_start: 1, column_end: 4, line_start: 895, line_end: 895 }: ```
Token { kind: Newline, char_start: 29783, char_end: 29784, byte_start: 29784, byte_end: 29785, column_start: 4, column_end: 1, line_start: 895, line_end: 896 }: "\n"
Token { kind: Newline, char_start: 29784, char_end: 29785, byte_start: 29785, byte_end: 29786, column_start: 1, column_end: 1, line_start: 896, line_end: 897 }: "\n"
Token { kind: At, char_start: 29785, char_end: 29786, byte_start: 29786, byte_end: 29787, column_start: 1, column_end: 2, line_start: 897, line_end: 897 }: @
Token { kind: Text, char_start: 29786, char_end: 29794, byte_start: 29787, byte_end: 29795, column_start: 2, column_end: 10, line_start: 897, line_end: 897 }: function
Token { kind: Space, char_start: 29794, char_end: 29795, byte_start: 29795, byte_end: 29796, column_start: 10, column_end: 11, line_start: 897, line_end: 897 }: " "
Token { kind: Text, char_start: 29795, char_end: 29801, byte_start: 29796, byte_end: 29802, column_start: 11, column_end: 17, line_start: 897, line_end: 897 }: ferret
Token { kind: Heading(Heading1), char_start: 29801, char_end: 29802, byte_start: 29802, byte_end: 29803, column_start: 17, column_end: 18, line_start: 897, line_end: 897 }: #
Token { kind: Text, char_start: 29802, char_end: 29823, byte_start: 29803, byte_end: 29824, column_start: 18, column_end: 39, line_start: 897, line_end: 897 }: get_default_arguments
Token { kind: Newline, char_start: 29823, char_end: 29824, byte_start: 29824, byte_end: 29825, column_start: 39, column_end: 1, line_start: 897, line_end: 898 }: "\n"
Token { kind: Newline, char_start: 29824, char_end: 29825, byte_start: 29825, byte_end: 29826, column_start: 1, column_end: 1, line_start: 898, line_end: 899 }: "\n"
Token { kind: Text, char_start: 29825, char_end: 29829, byte_start: 29826, byte_end: 29830, column_start: 1, column_end: 5, line_start: 899, line_end: 899 }: Call
Token { kind: Space, char_start: 29829, char_end: 29830, byte_start: 29830, byte_end: 29831, column_start: 5, column_end: 6, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29830, char_end: 29834, byte_start: 29831, byte_end: 29835, column_start: 6, column_end: 10, line_start: 899, line_end: 899 }: this
Token { kind: Space, char_start: 29834, char_end: 29835, byte_start: 29835, byte_end: 29836, column_start: 10, column_end: 11, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29835, char_end: 29839, byte_start: 29836, byte_end: 29840, column_start: 11, column_end: 15, line_start: 899, line_end: 899 }: with
Token { kind: Space, char_start: 29839, char_end: 29840, byte_start: 29840, byte_end: 29841, column_start: 15, column_end: 16, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29840, char_end: 29842, byte_start: 29841, byte_end: 29843, column_start: 16, column_end: 18, line_start: 899, line_end: 899 }: an
Token { kind: Space, char_start: 29842, char_end: 29843, byte_start: 29843, byte_end: 29844, column_start: 18, column_end: 19, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29843, char_end: 29853, byte_start: 29844, byte_end: 29854, column_start: 19, column_end: 29, line_start: 899, line_end: 899 }: executable
Token { kind: Space, char_start: 29853, char_end: 29854, byte_start: 29854, byte_end: 29855, column_start: 29, column_end: 30, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29854, char_end: 29858, byte_start: 29855, byte_end: 29859, column_start: 30, column_end: 34, line_start: 899, line_end: 899 }: name
Token { kind: Space, char_start: 29858, char_end: 29859, byte_start: 29859, byte_end: 29860, column_start: 34, column_end: 35, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29859, char_end: 29861, byte_start: 29860, byte_end: 29862, column_start: 35, column_end: 37, line_start: 899, line_end: 899 }: to
Token { kind: Space, char_start: 29861, char_end: 29862, byte_start: 29862, byte_end: 29863, column_start: 37, column_end: 38, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29862, char_end: 29866, byte_start: 29863, byte_end: 29867, column_start: 38, column_end: 42, line_start: 899, line_end: 899 }: find
Token { kind: Space, char_start: 29866, char_end: 29867, byte_start: 29867, byte_end: 29868, column_start: 42, column_end: 43, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29867, char_end: 29870, byte_start: 29868, byte_end: 29871, column_start: 43, column_end: 46, line_start: 899, line_end: 899 }: out
Token { kind: Space, char_start: 29870, char_end: 29871, byte_start: 29871, byte_end: 29872, column_start: 46, column_end: 47, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29871, char_end: 29874, byte_start: 29872, byte_end: 29875, column_start: 47, column_end: 50, line_start: 899, line_end: 899 }: the
Token { kind: Space, char_start: 29874, char_end: 29875, byte_start: 29875, byte_end: 29876, column_start: 50, column_end: 51, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29875, char_end: 29882, byte_start: 29876, byte_end: 29883, column_start: 51, column_end: 58, line_start: 899, line_end: 899 }: default
Token { kind: Space, char_start: 29882, char_end: 29883, byte_start: 29883, byte_end: 29884, column_start: 58, column_end: 59, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29883, char_end: 29892, byte_start: 29884, byte_end: 29893, column_start: 59, column_end: 68, line_start: 899, line_end: 899 }: arguments
Token { kind: Space, char_start: 29892, char_end: 29893, byte_start: 29893, byte_end: 29894, column_start: 68, column_end: 69, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29893, char_end: 29897, byte_start: 29894, byte_end: 29898, column_start: 69, column_end: 73, line_start: 899, line_end: 899 }: that
Token { kind: Space, char_start: 29897, char_end: 29898, byte_start: 29898, byte_end: 29899, column_start: 73, column_end: 74, line_start: 899, line_end: 899 }: " "
Token { kind: Text, char_start: 29898, char_end: 29902, byte_start: 29899, byte_end: 29903, column_start: 74, column_end: 78, line_start: 899, line_end: 899 }: will
Token { kind: Newline, char_start: 29902, char_end: 29903, byte_start: 29903, byte_end: 29904, column_start: 78, column_end: 1, line_start: 899, line_end: 900 }: "\n"
Token { kind: Text, char_start: 29903, char_end: 29905, byte_start: 29904, byte_end: 29906, column_start: 1, column_end: 3, line_start: 900, line_end: 900 }: be
Token { kind: Space, char_start: 29905, char_end: 29906, byte_start: 29906, byte_end: 29907, column_start: 3, column_end: 4, line_start: 900, line_end: 900 }: " "
Token { kind: Text, char_start: 29906, char_end: 29912, byte_start: 29907, byte_end: 29913, column_start: 4, column_end: 10, line_start: 900, line_end: 900 }: passed
Token { kind: Space, char_start: 29912, char_end: 29913, byte_start: 29913, byte_end: 29914, column_start: 10, column_end: 11, line_start: 900, line_end: 900 }: " "
Token { kind: Text, char_start: 29913, char_end: 29917, byte_start: 29914, byte_end: 29918, column_start: 11, column_end: 15, line_start: 900, line_end: 900 }: when
Token { kind: Space, char_start: 29917, char_end: 29918, byte_start: 29918, byte_end: 29919, column_start: 15, column_end: 16, line_start: 900, line_end: 900 }: " "
Token { kind: Text, char_start: 29918, char_end: 29926, byte_start: 29919, byte_end: 29927, column_start: 16, column_end: 24, line_start: 900, line_end: 900 }: invoking
Token { kind: Space, char_start: 29926, char_end: 29927, byte_start: 29927, byte_end: 29928, column_start: 24, column_end: 25, line_start: 900, line_end: 900 }: " "
Token { kind: Text, char_start: 29927, char_end: 29931, byte_start: 29928, byte_end: 29932, column_start: 25, column_end: 29, line_start: 900, line_end: 900 }: that
Token { kind: Space, char_start: 29931, char_end: 29932, byte_start: 29932, byte_end: 29933, column_start: 29, column_end: 30, line_start: 900, line_end: 900 }: " "
Token { kind: Text, char_start: 29932, char_end: 29943, byte_start: 29933, byte_end: 29944, column_start: 30, column_end: 41, line_start: 900, line_end: 900 }: executable.
Token { kind: Space, char_start: 29943, char_end: 29944, byte_start: 29944, byte_end: 29945, column_start: 41, column_end: 42, line_start: 900, line_end: 900 }: " "
Token { kind: Text, char_start: 29944, char_end: 29947, byte_start: 29945, byte_end: 29948, column_start: 42, column_end: 45, line_start: 900, line_end: 900 }: For
Token { kind: Space, char_start: 29947, char_end: 29948, byte_start: 29948, byte_end: 29949, column_start: 45, column_end: 46, line_start: 900, line_end: 900 }: " "
Token { kind: Text, char_start: 29948, char_end: 29956, byte_start: 29949, byte_end: 29957, column_start: 46, column_end: 54, line_start: 900, line_end: 900 }: example:
Token { kind: Newline, char_start: 29956, char_end: 29957, byte_start: 29957, byte_end: 29958, column_start: 54, column_end: 1, line_start: 900, line_end: 901 }: "\n"
Token { kind: Newline, char_start: 29957, char_end: 29958, byte_start: 29958, byte_end: 29959, column_start: 1, column_end: 1, line_start: 901, line_end: 902 }: "\n"
Token { kind: CodeFence, char_start: 29958, char_end: 29961, byte_start: 29959, byte_end: 29962, column_start: 1, column_end: 4, line_start: 902, line_end: 902 }: ```
Token { kind: Newline, char_start: 29961, char_end: 29962, byte_start: 29962, byte_end: 29963, column_start: 4, column_end: 1, line_start: 902, line_end: 903 }: "\n"
Token { kind: Text, char_start: 29962, char_end: 29966, byte_start: 29963, byte_end: 29967, column_start: 1, column_end: 5, line_start: 903, line_end: 903 }: echo
Token { kind: Space, char_start: 29966, char_end: 29967, byte_start: 29967, byte_end: 29968, column_start: 5, column_end: 6, line_start: 903, line_end: 903 }: " "
Token { kind: Text, char_start: 29967, char_end: 29973, byte_start: 29968, byte_end: 29974, column_start: 6, column_end: 12, line_start: 903, line_end: 903 }: ferret
Token { kind: Heading(Heading1), char_start: 29973, char_end: 29974, byte_start: 29974, byte_end: 29975, column_start: 12, column_end: 13, line_start: 903, line_end: 903 }: #
Token { kind: Text, char_start: 29974, char_end: 29995, byte_start: 29975, byte_end: 29996, column_start: 13, column_end: 34, line_start: 903, line_end: 903 }: get_default_arguments
Token { kind: Lparen, char_start: 29995, char_end: 29996, byte_start: 29996, byte_end: 29997, column_start: 34, column_end: 35, line_start: 903, line_end: 903 }: (
Token { kind: Text, char_start: 29996, char_end: 30000, byte_start: 29997, byte_end: 30001, column_start: 35, column_end: 39, line_start: 903, line_end: 903 }: 'rg'
Token { kind: Rparen, char_start: 30000, char_end: 30001, byte_start: 30001, byte_end: 30002, column_start: 39, column_end: 40, line_start: 903, line_end: 903 }: )
Token { kind: Newline, char_start: 30001, char_end: 30002, byte_start: 30002, byte_end: 30003, column_start: 40, column_end: 1, line_start: 903, line_end: 904 }: "\n"
Token { kind: CodeFence, char_start: 30002, char_end: 30005, byte_start: 30003, byte_end: 30006, column_start: 1, column_end: 4, line_start: 904, line_end: 904 }: ```
Token { kind: Newline, char_start: 30005, char_end: 30006, byte_start: 30006, byte_end: 30007, column_start: 4, column_end: 1, line_start: 904, line_end: 905 }: "\n"
Token { kind: Newline, char_start: 30006, char_end: 30007, byte_start: 30007, byte_end: 30008, column_start: 1, column_end: 1, line_start: 905, line_end: 906 }: "\n"
Token { kind: Text, char_start: 30007, char_end: 30011, byte_start: 30008, byte_end: 30012, column_start: 1, column_end: 5, line_start: 906, line_end: 906 }: This
Token { kind: Space, char_start: 30011, char_end: 30012, byte_start: 30012, byte_end: 30013, column_start: 5, column_end: 6, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30012, char_end: 30015, byte_start: 30013, byte_end: 30016, column_start: 6, column_end: 9, line_start: 906, line_end: 906 }: may
Token { kind: Space, char_start: 30015, char_end: 30016, byte_start: 30016, byte_end: 30017, column_start: 9, column_end: 10, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30016, char_end: 30018, byte_start: 30017, byte_end: 30019, column_start: 10, column_end: 12, line_start: 906, line_end: 906 }: be
Token { kind: Space, char_start: 30018, char_end: 30019, byte_start: 30019, byte_end: 30020, column_start: 12, column_end: 13, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30019, char_end: 30025, byte_start: 30020, byte_end: 30026, column_start: 13, column_end: 19, line_start: 906, line_end: 906 }: useful
Token { kind: Space, char_start: 30025, char_end: 30026, byte_start: 30026, byte_end: 30027, column_start: 19, column_end: 20, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30026, char_end: 30028, byte_start: 30027, byte_end: 30029, column_start: 20, column_end: 22, line_start: 906, line_end: 906 }: if
Token { kind: Space, char_start: 30028, char_end: 30029, byte_start: 30029, byte_end: 30030, column_start: 22, column_end: 23, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30029, char_end: 30032, byte_start: 30030, byte_end: 30033, column_start: 23, column_end: 26, line_start: 906, line_end: 906 }: you
Token { kind: Space, char_start: 30032, char_end: 30033, byte_start: 30033, byte_end: 30034, column_start: 26, column_end: 27, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30033, char_end: 30037, byte_start: 30034, byte_end: 30038, column_start: 27, column_end: 31, line_start: 906, line_end: 906 }: wish
Token { kind: Space, char_start: 30037, char_end: 30038, byte_start: 30038, byte_end: 30039, column_start: 31, column_end: 32, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30038, char_end: 30040, byte_start: 30039, byte_end: 30041, column_start: 32, column_end: 34, line_start: 906, line_end: 906 }: to
Token { kind: Space, char_start: 30040, char_end: 30041, byte_start: 30041, byte_end: 30042, column_start: 34, column_end: 35, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30041, char_end: 30047, byte_start: 30042, byte_end: 30048, column_start: 35, column_end: 41, line_start: 906, line_end: 906 }: extend
Token { kind: Space, char_start: 30047, char_end: 30048, byte_start: 30048, byte_end: 30049, column_start: 41, column_end: 42, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30048, char_end: 30050, byte_start: 30049, byte_end: 30051, column_start: 42, column_end: 44, line_start: 906, line_end: 906 }: or
Token { kind: Space, char_start: 30050, char_end: 30051, byte_start: 30051, byte_end: 30052, column_start: 44, column_end: 45, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30051, char_end: 30060, byte_start: 30052, byte_end: 30061, column_start: 45, column_end: 54, line_start: 906, line_end: 906 }: otherwise
Token { kind: Space, char_start: 30060, char_end: 30061, byte_start: 30061, byte_end: 30062, column_start: 54, column_end: 55, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30061, char_end: 30067, byte_start: 30062, byte_end: 30068, column_start: 55, column_end: 61, line_start: 906, line_end: 906 }: modify
Token { kind: Space, char_start: 30067, char_end: 30068, byte_start: 30068, byte_end: 30069, column_start: 61, column_end: 62, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30068, char_end: 30071, byte_start: 30069, byte_end: 30072, column_start: 62, column_end: 65, line_start: 906, line_end: 906 }: the
Token { kind: Space, char_start: 30071, char_end: 30072, byte_start: 30072, byte_end: 30073, column_start: 65, column_end: 66, line_start: 906, line_end: 906 }: " "
Token { kind: Text, char_start: 30072, char_end: 30081, byte_start: 30073, byte_end: 30082, column_start: 66, column_end: 75, line_start: 906, line_end: 906 }: arguments
Token { kind: Newline, char_start: 30081, char_end: 30082, byte_start: 30082, byte_end: 30083, column_start: 75, column_end: 1, line_start: 906, line_end: 907 }: "\n"
Token { kind: Text, char_start: 30082, char_end: 30084, byte_start: 30083, byte_end: 30085, column_start: 1, column_end: 3, line_start: 907, line_end: 907 }: by
Token { kind: Space, char_start: 30084, char_end: 30085, byte_start: 30085, byte_end: 30086, column_start: 3, column_end: 4, line_start: 907, line_end: 907 }: " "
Token { kind: Text, char_start: 30085, char_end: 30092, byte_start: 30086, byte_end: 30093, column_start: 4, column_end: 11, line_start: 907, line_end: 907 }: setting
Token { kind: Space, char_start: 30092, char_end: 30093, byte_start: 30093, byte_end: 30094, column_start: 11, column_end: 12, line_start: 907, line_end: 907 }: " "
Token { kind: Bar, char_start: 30093, char_end: 30094, byte_start: 30094, byte_end: 30095, column_start: 12, column_end: 13, line_start: 907, line_end: 907 }: |
Token { kind: Text, char_start: 30094, char_end: 30121, byte_start: 30095, byte_end: 30122, column_start: 13, column_end: 40, line_start: 907, line_end: 907 }: g:FerretExecutableArguments
Token { kind: Bar, char_start: 30121, char_end: 30122, byte_start: 30122, byte_end: 30123, column_start: 40, column_end: 41, line_start: 907, line_end: 907 }: |
Token { kind: Text, char_start: 30122, char_end: 30123, byte_start: 30123, byte_end: 30124, column_start: 41, column_end: 42, line_start: 907, line_end: 907 }: .
Token { kind: Newline, char_start: 30123, char_end: 30124, byte_start: 30124, byte_end: 30125, column_start: 42, column_end: 1, line_start: 907, line_end: 908 }: "\n"
Token { kind: Newline, char_start: 30124, char_end: 30125, byte_start: 30125, byte_end: 30126, column_start: 1, column_end: 1, line_start: 908, line_end: 909 }: "\n"
Token { kind: At, char_start: 30125, char_end: 30126, byte_start: 30126, byte_end: 30127, column_start: 1, column_end: 2, line_start: 909, line_end: 909 }: @
Token { kind: Text, char_start: 30126, char_end: 30132, byte_start: 30127, byte_end: 30133, column_start: 2, column_end: 8, line_start: 909, line_end: 909 }: option
Token { kind: Space, char_start: 30132, char_end: 30133, byte_start: 30133, byte_end: 30134, column_start: 8, column_end: 9, line_start: 909, line_end: 909 }: " "
Token { kind: Text, char_start: 30133, char_end: 30145, byte_start: 30134, byte_end: 30146, column_start: 9, column_end: 21, line_start: 909, line_end: 909 }: g:FerretNvim
Token { kind: Space, char_start: 30145, char_end: 30146, byte_start: 30146, byte_end: 30147, column_start: 21, column_end: 22, line_start: 909, line_end: 909 }: " "
Token { kind: Text, char_start: 30146, char_end: 30153, byte_start: 30147, byte_end: 30154, column_start: 22, column_end: 29, line_start: 909, line_end: 909 }: boolean
Token { kind: Space, char_start: 30153, char_end: 30154, byte_start: 30154, byte_end: 30155, column_start: 29, column_end: 30, line_start: 909, line_end: 909 }: " "
Token { kind: Text, char_start: 30154, char_end: 30155, byte_start: 30155, byte_end: 30156, column_start: 30, column_end: 31, line_start: 909, line_end: 909 }: 1
Token { kind: Newline, char_start: 30155, char_end: 30156, byte_start: 30156, byte_end: 30157, column_start: 31, column_end: 1, line_start: 909, line_end: 910 }: "\n"
Token { kind: Newline, char_start: 30156, char_end: 30157, byte_start: 30157, byte_end: 30158, column_start: 1, column_end: 1, line_start: 910, line_end: 911 }: "\n"
Token { kind: Text, char_start: 30157, char_end: 30165, byte_start: 30158, byte_end: 30166, column_start: 1, column_end: 9, line_start: 911, line_end: 911 }: Controls
Token { kind: Space, char_start: 30165, char_end: 30166, byte_start: 30166, byte_end: 30167, column_start: 9, column_end: 10, line_start: 911, line_end: 911 }: " "
Token { kind: Text, char_start: 30166, char_end: 30173, byte_start: 30167, byte_end: 30174, column_start: 10, column_end: 17, line_start: 911, line_end: 911 }: whether
Token { kind: Space, char_start: 30173, char_end: 30174, byte_start: 30174, byte_end: 30175, column_start: 17, column_end: 18, line_start: 911, line_end: 911 }: " "
Token { kind: Text, char_start: 30174, char_end: 30176, byte_start: 30175, byte_end: 30177, column_start: 18, column_end: 20, line_start: 911, line_end: 911 }: to
Token { kind: Space, char_start: 30176, char_end: 30177, byte_start: 30177, byte_end: 30178, column_start: 20, column_end: 21, line_start: 911, line_end: 911 }: " "
Token { kind: Text, char_start: 30177, char_end: 30180, byte_start: 30178, byte_end: 30181, column_start: 21, column_end: 24, line_start: 911, line_end: 911 }: use
Token { kind: Space, char_start: 30180, char_end: 30181, byte_start: 30181, byte_end: 30182, column_start: 24, column_end: 25, line_start: 911, line_end: 911 }: " "
Token { kind: Text, char_start: 30181, char_end: 30189, byte_start: 30182, byte_end: 30190, column_start: 25, column_end: 33, line_start: 911, line_end: 911 }: Neovim's
Token { kind: Space, char_start: 30189, char_end: 30190, byte_start: 30190, byte_end: 30191, column_start: 33, column_end: 34, line_start: 911, line_end: 911 }: " "
Token { kind: Bar, char_start: 30190, char_end: 30191, byte_start: 30191, byte_end: 30192, column_start: 34, column_end: 35, line_start: 911, line_end: 911 }: |
Token { kind: Text, char_start: 30191, char_end: 30194, byte_start: 30192, byte_end: 30195, column_start: 35, column_end: 38, line_start: 911, line_end: 911 }: job
Token { kind: Hyphen, char_start: 30194, char_end: 30195, byte_start: 30195, byte_end: 30196, column_start: 38, column_end: 39, line_start: 911, line_end: 911 }: -
Token { kind: Text, char_start: 30195, char_end: 30202, byte_start: 30196, byte_end: 30203, column_start: 39, column_end: 46, line_start: 911, line_end: 911 }: control
Token { kind: Bar, char_start: 30202, char_end: 30203, byte_start: 30203, byte_end: 30204, column_start: 46, column_end: 47, line_start: 911, line_end: 911 }: |
Token { kind: Space, char_start: 30203, char_end: 30204, byte_start: 30204, byte_end: 30205, column_start: 47, column_end: 48, line_start: 911, line_end: 911 }: " "
Token { kind: Text, char_start: 30204, char_end: 30213, byte_start: 30205, byte_end: 30214, column_start: 48, column_end: 57, line_start: 911, line_end: 911 }: features,
Token { kind: Space, char_start: 30213, char_end: 30214, byte_start: 30214, byte_end: 30215, column_start: 57, column_end: 58, line_start: 911, line_end: 911 }: " "
Token { kind: Text, char_start: 30214, char_end: 30218, byte_start: 30215, byte_end: 30219, column_start: 58, column_end: 62, line_start: 911, line_end: 911 }: when
Token { kind: Newline, char_start: 30218, char_end: 30219, byte_start: 30219, byte_end: 30220, column_start: 62, column_end: 1, line_start: 911, line_end: 912 }: "\n"
Token { kind: Text, char_start: 30219, char_end: 30229, byte_start: 30220, byte_end: 30230, column_start: 1, column_end: 11, line_start: 912, line_end: 912 }: available,
Token { kind: Space, char_start: 30229, char_end: 30230, byte_start: 30230, byte_end: 30231, column_start: 11, column_end: 12, line_start: 912, line_end: 912 }: " "
Token { kind: Text, char_start: 30230, char_end: 30232, byte_start: 30231, byte_end: 30233, column_start: 12, column_end: 14, line_start: 912, line_end: 912 }: to
Token { kind: Space, char_start: 30232, char_end: 30233, byte_start: 30233, byte_end: 30234, column_start: 14, column_end: 15, line_start: 912, line_end: 912 }: " "
Token { kind: Text, char_start: 30233, char_end: 30236, byte_start: 30234, byte_end: 30237, column_start: 15, column_end: 18, line_start: 912, line_end: 912 }: run
Token { kind: Space, char_start: 30236, char_end: 30237, byte_start: 30237, byte_end: 30238, column_start: 18, column_end: 19, line_start: 912, line_end: 912 }: " "
Token { kind: Text, char_start: 30237, char_end: 30245, byte_start: 30238, byte_end: 30246, column_start: 19, column_end: 27, line_start: 912, line_end: 912 }: searches
Token { kind: Space, char_start: 30245, char_end: 30246, byte_start: 30246, byte_end: 30247, column_start: 27, column_end: 28, line_start: 912, line_end: 912 }: " "
Token { kind: Text, char_start: 30246, char_end: 30261, byte_start: 30247, byte_end: 30262, column_start: 28, column_end: 43, line_start: 912, line_end: 912 }: asynchronously.
Token { kind: Space, char_start: 30261, char_end: 30262, byte_start: 30262, byte_end: 30263, column_start: 43, column_end: 44, line_start: 912, line_end: 912 }: " "
Token { kind: Text, char_start: 30262, char_end: 30264, byte_start: 30263, byte_end: 30265, column_start: 44, column_end: 46, line_start: 912, line_end: 912 }: To
Token { kind: Space, char_start: 30264, char_end: 30265, byte_start: 30265, byte_end: 30266, column_start: 46, column_end: 47, line_start: 912, line_end: 912 }: " "
Token { kind: Text, char_start: 30265, char_end: 30272, byte_start: 30266, byte_end: 30273, column_start: 47, column_end: 54, line_start: 912, line_end: 912 }: prevent
Token { kind: Space, char_start: 30272, char_end: 30273, byte_start: 30273, byte_end: 30274, column_start: 54, column_end: 55, line_start: 912, line_end: 912 }: " "
Token { kind: Text, char_start: 30273, char_end: 30277, byte_start: 30274, byte_end: 30278, column_start: 55, column_end: 59, line_start: 912, line_end: 912 }: this
Token { kind: Space, char_start: 30277, char_end: 30278, byte_start: 30278, byte_end: 30279, column_start: 59, column_end: 60, line_start: 912, line_end: 912 }: " "
Token { kind: Text, char_start: 30278, char_end: 30282, byte_start: 30279, byte_end: 30283, column_start: 60, column_end: 64, line_start: 912, line_end: 912 }: from
Token { kind: Newline, char_start: 30282, char_end: 30283, byte_start: 30283, byte_end: 30284, column_start: 64, column_end: 1, line_start: 912, line_end: 913 }: "\n"
Token { kind: Text, char_start: 30283, char_end: 30288, byte_start: 30284, byte_end: 30289, column_start: 1, column_end: 6, line_start: 913, line_end: 913 }: being
Token { kind: Space, char_start: 30288, char_end: 30289, byte_start: 30289, byte_end: 30290, column_start: 6, column_end: 7, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30289, char_end: 30294, byte_start: 30290, byte_end: 30295, column_start: 7, column_end: 12, line_start: 913, line_end: 913 }: used,
Token { kind: Space, char_start: 30294, char_end: 30295, byte_start: 30295, byte_end: 30296, column_start: 12, column_end: 13, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30295, char_end: 30298, byte_start: 30296, byte_end: 30299, column_start: 13, column_end: 16, line_start: 913, line_end: 913 }: set
Token { kind: Space, char_start: 30298, char_end: 30299, byte_start: 30299, byte_end: 30300, column_start: 16, column_end: 17, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30299, char_end: 30301, byte_start: 30300, byte_end: 30302, column_start: 17, column_end: 19, line_start: 913, line_end: 913 }: to
Token { kind: Space, char_start: 30301, char_end: 30302, byte_start: 30302, byte_end: 30303, column_start: 19, column_end: 20, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30302, char_end: 30304, byte_start: 30303, byte_end: 30305, column_start: 20, column_end: 22, line_start: 913, line_end: 913 }: 0,
Token { kind: Space, char_start: 30304, char_end: 30305, byte_start: 30305, byte_end: 30306, column_start: 22, column_end: 23, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30305, char_end: 30307, byte_start: 30306, byte_end: 30308, column_start: 23, column_end: 25, line_start: 913, line_end: 913 }: in
Token { kind: Space, char_start: 30307, char_end: 30308, byte_start: 30308, byte_end: 30309, column_start: 25, column_end: 26, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30308, char_end: 30313, byte_start: 30309, byte_end: 30314, column_start: 26, column_end: 31, line_start: 913, line_end: 913 }: which
Token { kind: Space, char_start: 30313, char_end: 30314, byte_start: 30314, byte_end: 30315, column_start: 31, column_end: 32, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30314, char_end: 30318, byte_start: 30315, byte_end: 30319, column_start: 32, column_end: 36, line_start: 913, line_end: 913 }: case
Token { kind: Space, char_start: 30318, char_end: 30319, byte_start: 30319, byte_end: 30320, column_start: 36, column_end: 37, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30319, char_end: 30325, byte_start: 30320, byte_end: 30326, column_start: 37, column_end: 43, line_start: 913, line_end: 913 }: Ferret
Token { kind: Space, char_start: 30325, char_end: 30326, byte_start: 30326, byte_end: 30327, column_start: 43, column_end: 44, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30326, char_end: 30330, byte_start: 30327, byte_end: 30331, column_start: 44, column_end: 48, line_start: 913, line_end: 913 }: will
Token { kind: Space, char_start: 30330, char_end: 30331, byte_start: 30331, byte_end: 30332, column_start: 48, column_end: 49, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30331, char_end: 30335, byte_start: 30332, byte_end: 30336, column_start: 49, column_end: 53, line_start: 913, line_end: 913 }: fall
Token { kind: Space, char_start: 30335, char_end: 30336, byte_start: 30336, byte_end: 30337, column_start: 53, column_end: 54, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30336, char_end: 30340, byte_start: 30337, byte_end: 30341, column_start: 54, column_end: 58, line_start: 913, line_end: 913 }: back
Token { kind: Space, char_start: 30340, char_end: 30341, byte_start: 30341, byte_end: 30342, column_start: 58, column_end: 59, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30341, char_end: 30343, byte_start: 30342, byte_end: 30344, column_start: 59, column_end: 61, line_start: 913, line_end: 913 }: to
Token { kind: Space, char_start: 30343, char_end: 30344, byte_start: 30344, byte_end: 30345, column_start: 61, column_end: 62, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30344, char_end: 30347, byte_start: 30345, byte_end: 30348, column_start: 62, column_end: 65, line_start: 913, line_end: 913 }: the
Token { kind: Space, char_start: 30347, char_end: 30348, byte_start: 30348, byte_end: 30349, column_start: 65, column_end: 66, line_start: 913, line_end: 913 }: " "
Token { kind: Text, char_start: 30348, char_end: 30352, byte_start: 30349, byte_end: 30353, column_start: 66, column_end: 70, line_start: 913, line_end: 913 }: next
Token { kind: Newline, char_start: 30352, char_end: 30353, byte_start: 30353, byte_end: 30354, column_start: 70, column_end: 1, line_start: 913, line_end: 914 }: "\n"
Token { kind: Text, char_start: 30353, char_end: 30359, byte_start: 30354, byte_end: 30360, column_start: 1, column_end: 7, line_start: 914, line_end: 914 }: method
Token { kind: Space, char_start: 30359, char_end: 30360, byte_start: 30360, byte_end: 30361, column_start: 7, column_end: 8, line_start: 914, line_end: 914 }: " "
Token { kind: Text, char_start: 30360, char_end: 30362, byte_start: 30361, byte_end: 30363, column_start: 8, column_end: 10, line_start: 914, line_end: 914 }: in
Token { kind: Space, char_start: 30362, char_end: 30363, byte_start: 30363, byte_end: 30364, column_start: 10, column_end: 11, line_start: 914, line_end: 914 }: " "
Token { kind: Text, char_start: 30363, char_end: 30366, byte_start: 30364, byte_end: 30367, column_start: 11, column_end: 14, line_start: 914, line_end: 914 }: the
Token { kind: Space, char_start: 30366, char_end: 30367, byte_start: 30367, byte_end: 30368, column_start: 14, column_end: 15, line_start: 914, line_end: 914 }: " "
Token { kind: Text, char_start: 30367, char_end: 30371, byte_start: 30368, byte_end: 30372, column_start: 15, column_end: 19, line_start: 914, line_end: 914 }: list
Token { kind: Space, char_start: 30371, char_end: 30372, byte_start: 30372, byte_end: 30373, column_start: 19, column_end: 20, line_start: 914, line_end: 914 }: " "
Token { kind: Lparen, char_start: 30372, char_end: 30373, byte_start: 30373, byte_end: 30374, column_start: 20, column_end: 21, line_start: 914, line_end: 914 }: (
Token { kind: Text, char_start: 30373, char_end: 30378, byte_start: 30374, byte_end: 30379, column_start: 21, column_end: 26, line_start: 914, line_end: 914 }: Vim's
Token { kind: Space, char_start: 30378, char_end: 30379, byte_start: 30379, byte_end: 30380, column_start: 26, column_end: 27, line_start: 914, line_end: 914 }: " "
Token { kind: Text, char_start: 30379, char_end: 30384, byte_start: 30380, byte_end: 30385, column_start: 27, column_end: 32, line_start: 914, line_end: 914 }: built
Token { kind: Hyphen, char_start: 30384, char_end: 30385, byte_start: 30385, byte_end: 30386, column_start: 32, column_end: 33, line_start: 914, line_end: 914 }: -
Token { kind: Text, char_start: 30385, char_end: 30387, byte_start: 30386, byte_end: 30388, column_start: 33, column_end: 35, line_start: 914, line_end: 914 }: in
Token { kind: Space, char_start: 30387, char_end: 30388, byte_start: 30388, byte_end: 30389, column_start: 35, column_end: 36, line_start: 914, line_end: 914 }: " "
Token { kind: Text, char_start: 30388, char_end: 30393, byte_start: 30389, byte_end: 30394, column_start: 36, column_end: 41, line_start: 914, line_end: 914 }: async
Token { kind: Space, char_start: 30393, char_end: 30394, byte_start: 30394, byte_end: 30395, column_start: 41, column_end: 42, line_start: 914, line_end: 914 }: " "
Token { kind: Text, char_start: 30394, char_end: 30404, byte_start: 30395, byte_end: 30405, column_start: 42, column_end: 52, line_start: 914, line_end: 914 }: primitives
Token { kind: Space, char_start: 30404, char_end: 30405, byte_start: 30405, byte_end: 30406, column_start: 52, column_end: 53, line_start: 914, line_end: 914 }: " "
unterminated horizontal rule (line 914, column 55)
Token { kind: Space, char_start: 30407, char_end: 30408, byte_start: 30408, byte_end: 30409, column_start: 55, column_end: 56, line_start: 914, line_end: 914 }: " "
Token { kind: Text, char_start: 30408, char_end: 30411, byte_start: 30409, byte_end: 30412, column_start: 56, column_end: 59, line_start: 914, line_end: 914 }: see
Token { kind: Newline, char_start: 30411, char_end: 30412, byte_start: 30412, byte_end: 30413, column_start: 59, column_end: 1, line_start: 914, line_end: 915 }: "\n"
Token { kind: Bar, char_start: 30412, char_end: 30413, byte_start: 30413, byte_end: 30414, column_start: 1, column_end: 2, line_start: 915, line_end: 915 }: |
Token { kind: Text, char_start: 30413, char_end: 30424, byte_start: 30414, byte_end: 30425, column_start: 2, column_end: 13, line_start: 915, line_end: 915 }: g:FerretJob
Token { kind: Bar, char_start: 30424, char_end: 30425, byte_start: 30425, byte_end: 30426, column_start: 13, column_end: 14, line_start: 915, line_end: 915 }: |
Token { kind: Space, char_start: 30425, char_end: 30426, byte_start: 30426, byte_end: 30427, column_start: 14, column_end: 15, line_start: 915, line_end: 915 }: " "
unterminated horizontal rule (line 915, column 17)
Token { kind: Space, char_start: 30428, char_end: 30429, byte_start: 30429, byte_end: 30430, column_start: 17, column_end: 18, line_start: 915, line_end: 915 }: " "
Token { kind: Text, char_start: 30429, char_end: 30434, byte_start: 30430, byte_end: 30435, column_start: 18, column_end: 23, line_start: 915, line_end: 915 }: which
Token { kind: Space, char_start: 30434, char_end: 30435, byte_start: 30435, byte_end: 30436, column_start: 23, column_end: 24, line_start: 915, line_end: 915 }: " "
Token { kind: Text, char_start: 30435, char_end: 30438, byte_start: 30436, byte_end: 30439, column_start: 24, column_end: 27, line_start: 915, line_end: 915 }: are
Token { kind: Space, char_start: 30438, char_end: 30439, byte_start: 30439, byte_end: 30440, column_start: 27, column_end: 28, line_start: 915, line_end: 915 }: " "
Token { kind: Text, char_start: 30439, char_end: 30448, byte_start: 30440, byte_end: 30449, column_start: 28, column_end: 37, line_start: 915, line_end: 915 }: typically
Token { kind: Space, char_start: 30448, char_end: 30449, byte_start: 30449, byte_end: 30450, column_start: 37, column_end: 38, line_start: 915, line_end: 915 }: " "
Token { kind: Text, char_start: 30449, char_end: 30452, byte_start: 30450, byte_end: 30453, column_start: 38, column_end: 41, line_start: 915, line_end: 915 }: not
Token { kind: Space, char_start: 30452, char_end: 30453, byte_start: 30453, byte_end: 30454, column_start: 41, column_end: 42, line_start: 915, line_end: 915 }: " "
Token { kind: Text, char_start: 30453, char_end: 30462, byte_start: 30454, byte_end: 30463, column_start: 42, column_end: 51, line_start: 915, line_end: 915 }: available
Token { kind: Space, char_start: 30462, char_end: 30463, byte_start: 30463, byte_end: 30464, column_start: 51, column_end: 52, line_start: 915, line_end: 915 }: " "
Token { kind: Text, char_start: 30463, char_end: 30465, byte_start: 30464, byte_end: 30466, column_start: 52, column_end: 54, line_start: 915, line_end: 915 }: in
Token { kind: Space, char_start: 30465, char_end: 30466, byte_start: 30466, byte_end: 30467, column_start: 54, column_end: 55, line_start: 915, line_end: 915 }: " "
Token { kind: Text, char_start: 30466, char_end: 30473, byte_start: 30467, byte_end: 30474, column_start: 55, column_end: 62, line_start: 915, line_end: 915 }: Neovim,
Token { kind: Space, char_start: 30473, char_end: 30474, byte_start: 30474, byte_end: 30475, column_start: 62, column_end: 63, line_start: 915, line_end: 915 }: " "
Token { kind: Text, char_start: 30474, char_end: 30476, byte_start: 30475, byte_end: 30477, column_start: 63, column_end: 65, line_start: 915, line_end: 915 }: so
Token { kind: Newline, char_start: 30476, char_end: 30477, byte_start: 30477, byte_end: 30478, column_start: 65, column_end: 1, line_start: 915, line_end: 916 }: "\n"
Token { kind: Text, char_start: 30477, char_end: 30481, byte_start: 30478, byte_end: 30482, column_start: 1, column_end: 5, line_start: 916, line_end: 916 }: will
Token { kind: Space, char_start: 30481, char_end: 30482, byte_start: 30482, byte_end: 30483, column_start: 5, column_end: 6, line_start: 916, line_end: 916 }: " "
Token { kind: Text, char_start: 30482, char_end: 30486, byte_start: 30483, byte_end: 30487, column_start: 6, column_end: 10, line_start: 916, line_end: 916 }: then
Token { kind: Space, char_start: 30486, char_end: 30487, byte_start: 30487, byte_end: 30488, column_start: 10, column_end: 11, line_start: 916, line_end: 916 }: " "
Token { kind: Text, char_start: 30487, char_end: 30491, byte_start: 30488, byte_end: 30492, column_start: 11, column_end: 15, line_start: 916, line_end: 916 }: fall
Token { kind: Space, char_start: 30491, char_end: 30492, byte_start: 30492, byte_end: 30493, column_start: 15, column_end: 16, line_start: 916, line_end: 916 }: " "
Token { kind: Text, char_start: 30492, char_end: 30496, byte_start: 30493, byte_end: 30497, column_start: 16, column_end: 20, line_start: 916, line_end: 916 }: back
Token { kind: Space, char_start: 30496, char_end: 30497, byte_start: 30497, byte_end: 30498, column_start: 20, column_end: 21, line_start: 916, line_end: 916 }: " "
Token { kind: Text, char_start: 30497, char_end: 30499, byte_start: 30498, byte_end: 30500, column_start: 21, column_end: 23, line_start: 916, line_end: 916 }: to
Token { kind: Space, char_start: 30499, char_end: 30500, byte_start: 30500, byte_end: 30501, column_start: 23, column_end: 24, line_start: 916, line_end: 916 }: " "
Token { kind: Text, char_start: 30500, char_end: 30503, byte_start: 30501, byte_end: 30504, column_start: 24, column_end: 27, line_start: 916, line_end: 916 }: the
Token { kind: Space, char_start: 30503, char_end: 30504, byte_start: 30504, byte_end: 30505, column_start: 27, column_end: 28, line_start: 916, line_end: 916 }: " "
Token { kind: Text, char_start: 30504, char_end: 30508, byte_start: 30505, byte_end: 30509, column_start: 28, column_end: 32, line_start: 916, line_end: 916 }: next
Token { kind: Space, char_start: 30508, char_end: 30509, byte_start: 30509, byte_end: 30510, column_start: 32, column_end: 33, line_start: 916, line_end: 916 }: " "
Token { kind: Text, char_start: 30509, char_end: 30518, byte_start: 30510, byte_end: 30519, column_start: 33, column_end: 42, line_start: 916, line_end: 916 }: available
Token { kind: Space, char_start: 30518, char_end: 30519, byte_start: 30519, byte_end: 30520, column_start: 42, column_end: 43, line_start: 916, line_end: 916 }: " "
Token { kind: Text, char_start: 30519, char_end: 30525, byte_start: 30520, byte_end: 30526, column_start: 43, column_end: 49, line_start: 916, line_end: 916 }: method
Token { kind: Rparen, char_start: 30525, char_end: 30526, byte_start: 30526, byte_end: 30527, column_start: 49, column_end: 50, line_start: 916, line_end: 916 }: )
Token { kind: Text, char_start: 30526, char_end: 30527, byte_start: 30527, byte_end: 30528, column_start: 50, column_end: 51, line_start: 916, line_end: 916 }: .
Token { kind: Newline, char_start: 30527, char_end: 30528, byte_start: 30528, byte_end: 30529, column_start: 51, column_end: 1, line_start: 916, line_end: 917 }: "\n"
Token { kind: Newline, char_start: 30528, char_end: 30529, byte_start: 30529, byte_end: 30530, column_start: 1, column_end: 1, line_start: 917, line_end: 918 }: "\n"
Token { kind: CodeFence, char_start: 30529, char_end: 30532, byte_start: 30530, byte_end: 30533, column_start: 1, column_end: 4, line_start: 918, line_end: 918 }: ```
Token { kind: Newline, char_start: 30532, char_end: 30533, byte_start: 30533, byte_end: 30534, column_start: 4, column_end: 1, line_start: 918, line_end: 919 }: "\n"
Token { kind: Text, char_start: 30533, char_end: 30536, byte_start: 30534, byte_end: 30537, column_start: 1, column_end: 4, line_start: 919, line_end: 919 }: let
Token { kind: Space, char_start: 30536, char_end: 30537, byte_start: 30537, byte_end: 30538, column_start: 4, column_end: 5, line_start: 919, line_end: 919 }: " "
Token { kind: Text, char_start: 30537, char_end: 30551, byte_start: 30538, byte_end: 30552, column_start: 5, column_end: 19, line_start: 919, line_end: 919 }: g:FerretNvim=0
Token { kind: Newline, char_start: 30551, char_end: 30552, byte_start: 30552, byte_end: 30553, column_start: 19, column_end: 1, line_start: 919, line_end: 920 }: "\n"
Token { kind: CodeFence, char_start: 30552, char_end: 30555, byte_start: 30553, byte_end: 30556, column_start: 1, column_end: 4, line_start: 920, line_end: 920 }: ```
Token { kind: Newline, char_start: 30555, char_end: 30556, byte_start: 30556, byte_end: 30557, column_start: 4, column_end: 1, line_start: 920, line_end: 921 }: "\n"
Token { kind: Newline, char_start: 30556, char_end: 30557, byte_start: 30557, byte_end: 30558, column_start: 1, column_end: 1, line_start: 921, line_end: 922 }: "\n"
Token { kind: At, char_start: 30557, char_end: 30558, byte_start: 30558, byte_end: 30559, column_start: 1, column_end: 2, line_start: 922, line_end: 922 }: @
Token { kind: Text, char_start: 30558, char_end: 30564, byte_start: 30559, byte_end: 30565, column_start: 2, column_end: 8, line_start: 922, line_end: 922 }: option
Token { kind: Space, char_start: 30564, char_end: 30565, byte_start: 30565, byte_end: 30566, column_start: 8, column_end: 9, line_start: 922, line_end: 922 }: " "
Token { kind: Text, char_start: 30565, char_end: 30576, byte_start: 30566, byte_end: 30577, column_start: 9, column_end: 20, line_start: 922, line_end: 922 }: g:FerretJob
Token { kind: Space, char_start: 30576, char_end: 30577, byte_start: 30577, byte_end: 30578, column_start: 20, column_end: 21, line_start: 922, line_end: 922 }: " "
Token { kind: Text, char_start: 30577, char_end: 30584, byte_start: 30578, byte_end: 30585, column_start: 21, column_end: 28, line_start: 922, line_end: 922 }: boolean
Token { kind: Space, char_start: 30584, char_end: 30585, byte_start: 30585, byte_end: 30586, column_start: 28, column_end: 29, line_start: 922, line_end: 922 }: " "
Token { kind: Text, char_start: 30585, char_end: 30586, byte_start: 30586, byte_end: 30587, column_start: 29, column_end: 30, line_start: 922, line_end: 922 }: 1
Token { kind: Newline, char_start: 30586, char_end: 30587, byte_start: 30587, byte_end: 30588, column_start: 30, column_end: 1, line_start: 922, line_end: 923 }: "\n"
Token { kind: Newline, char_start: 30587, char_end: 30588, byte_start: 30588, byte_end: 30589, column_start: 1, column_end: 1, line_start: 923, line_end: 924 }: "\n"
Token { kind: Text, char_start: 30588, char_end: 30596, byte_start: 30589, byte_end: 30597, column_start: 1, column_end: 9, line_start: 924, line_end: 924 }: Controls
Token { kind: Space, char_start: 30596, char_end: 30597, byte_start: 30597, byte_end: 30598, column_start: 9, column_end: 10, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30597, char_end: 30604, byte_start: 30598, byte_end: 30605, column_start: 10, column_end: 17, line_start: 924, line_end: 924 }: whether
Token { kind: Space, char_start: 30604, char_end: 30605, byte_start: 30605, byte_end: 30606, column_start: 17, column_end: 18, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30605, char_end: 30607, byte_start: 30606, byte_end: 30608, column_start: 18, column_end: 20, line_start: 924, line_end: 924 }: to
Token { kind: Space, char_start: 30607, char_end: 30608, byte_start: 30608, byte_end: 30609, column_start: 20, column_end: 21, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30608, char_end: 30611, byte_start: 30609, byte_end: 30612, column_start: 21, column_end: 24, line_start: 924, line_end: 924 }: use
Token { kind: Space, char_start: 30611, char_end: 30612, byte_start: 30612, byte_end: 30613, column_start: 24, column_end: 25, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30612, char_end: 30617, byte_start: 30613, byte_end: 30618, column_start: 25, column_end: 30, line_start: 924, line_end: 924 }: Vim's
Token { kind: Space, char_start: 30617, char_end: 30618, byte_start: 30618, byte_end: 30619, column_start: 30, column_end: 31, line_start: 924, line_end: 924 }: " "
Token { kind: Bar, char_start: 30618, char_end: 30619, byte_start: 30619, byte_end: 30620, column_start: 31, column_end: 32, line_start: 924, line_end: 924 }: |
Token { kind: Text, char_start: 30619, char_end: 30623, byte_start: 30620, byte_end: 30624, column_start: 32, column_end: 36, line_start: 924, line_end: 924 }: +job
Token { kind: Bar, char_start: 30623, char_end: 30624, byte_start: 30624, byte_end: 30625, column_start: 36, column_end: 37, line_start: 924, line_end: 924 }: |
Token { kind: Space, char_start: 30624, char_end: 30625, byte_start: 30625, byte_end: 30626, column_start: 37, column_end: 38, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30625, char_end: 30633, byte_start: 30626, byte_end: 30634, column_start: 38, column_end: 46, line_start: 924, line_end: 924 }: feature,
Token { kind: Space, char_start: 30633, char_end: 30634, byte_start: 30634, byte_end: 30635, column_start: 46, column_end: 47, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30634, char_end: 30638, byte_start: 30635, byte_end: 30639, column_start: 47, column_end: 51, line_start: 924, line_end: 924 }: when
Token { kind: Space, char_start: 30638, char_end: 30639, byte_start: 30639, byte_end: 30640, column_start: 51, column_end: 52, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30639, char_end: 30649, byte_start: 30640, byte_end: 30650, column_start: 52, column_end: 62, line_start: 924, line_end: 924 }: available,
Token { kind: Space, char_start: 30649, char_end: 30650, byte_start: 30650, byte_end: 30651, column_start: 62, column_end: 63, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30650, char_end: 30652, byte_start: 30651, byte_end: 30653, column_start: 63, column_end: 65, line_start: 924, line_end: 924 }: to
Token { kind: Space, char_start: 30652, char_end: 30653, byte_start: 30653, byte_end: 30654, column_start: 65, column_end: 66, line_start: 924, line_end: 924 }: " "
Token { kind: Text, char_start: 30653, char_end: 30656, byte_start: 30654, byte_end: 30657, column_start: 66, column_end: 69, line_start: 924, line_end: 924 }: run
Token { kind: Newline, char_start: 30656, char_end: 30657, byte_start: 30657, byte_end: 30658, column_start: 69, column_end: 1, line_start: 924, line_end: 925 }: "\n"
Token { kind: Text, char_start: 30657, char_end: 30665, byte_start: 30658, byte_end: 30666, column_start: 1, column_end: 9, line_start: 925, line_end: 925 }: searches
Token { kind: Space, char_start: 30665, char_end: 30666, byte_start: 30666, byte_end: 30667, column_start: 9, column_end: 10, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30666, char_end: 30681, byte_start: 30667, byte_end: 30682, column_start: 10, column_end: 25, line_start: 925, line_end: 925 }: asynchronously.
Token { kind: Space, char_start: 30681, char_end: 30682, byte_start: 30682, byte_end: 30683, column_start: 25, column_end: 26, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30682, char_end: 30684, byte_start: 30683, byte_end: 30685, column_start: 26, column_end: 28, line_start: 925, line_end: 925 }: To
Token { kind: Space, char_start: 30684, char_end: 30685, byte_start: 30685, byte_end: 30686, column_start: 28, column_end: 29, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30685, char_end: 30692, byte_start: 30686, byte_end: 30693, column_start: 29, column_end: 36, line_start: 925, line_end: 925 }: prevent
Token { kind: Space, char_start: 30692, char_end: 30693, byte_start: 30693, byte_end: 30694, column_start: 36, column_end: 37, line_start: 925, line_end: 925 }: " "
Token { kind: Bar, char_start: 30693, char_end: 30694, byte_start: 30694, byte_end: 30695, column_start: 37, column_end: 38, line_start: 925, line_end: 925 }: |
Token { kind: Text, char_start: 30694, char_end: 30698, byte_start: 30695, byte_end: 30699, column_start: 38, column_end: 42, line_start: 925, line_end: 925 }: +job
Token { kind: Bar, char_start: 30698, char_end: 30699, byte_start: 30699, byte_end: 30700, column_start: 42, column_end: 43, line_start: 925, line_end: 925 }: |
Token { kind: Space, char_start: 30699, char_end: 30700, byte_start: 30700, byte_end: 30701, column_start: 43, column_end: 44, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30700, char_end: 30704, byte_start: 30701, byte_end: 30705, column_start: 44, column_end: 48, line_start: 925, line_end: 925 }: from
Token { kind: Space, char_start: 30704, char_end: 30705, byte_start: 30705, byte_end: 30706, column_start: 48, column_end: 49, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30705, char_end: 30710, byte_start: 30706, byte_end: 30711, column_start: 49, column_end: 54, line_start: 925, line_end: 925 }: being
Token { kind: Space, char_start: 30710, char_end: 30711, byte_start: 30711, byte_end: 30712, column_start: 54, column_end: 55, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30711, char_end: 30716, byte_start: 30712, byte_end: 30717, column_start: 55, column_end: 60, line_start: 925, line_end: 925 }: used,
Token { kind: Space, char_start: 30716, char_end: 30717, byte_start: 30717, byte_end: 30718, column_start: 60, column_end: 61, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30717, char_end: 30720, byte_start: 30718, byte_end: 30721, column_start: 61, column_end: 64, line_start: 925, line_end: 925 }: set
Token { kind: Space, char_start: 30720, char_end: 30721, byte_start: 30721, byte_end: 30722, column_start: 64, column_end: 65, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30721, char_end: 30723, byte_start: 30722, byte_end: 30724, column_start: 65, column_end: 67, line_start: 925, line_end: 925 }: to
Token { kind: Space, char_start: 30723, char_end: 30724, byte_start: 30724, byte_end: 30725, column_start: 67, column_end: 68, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30724, char_end: 30726, byte_start: 30725, byte_end: 30727, column_start: 68, column_end: 70, line_start: 925, line_end: 925 }: 0,
Token { kind: Space, char_start: 30726, char_end: 30727, byte_start: 30727, byte_end: 30728, column_start: 70, column_end: 71, line_start: 925, line_end: 925 }: " "
Token { kind: Text, char_start: 30727, char_end: 30729, byte_start: 30728, byte_end: 30730, column_start: 71, column_end: 73, line_start: 925, line_end: 925 }: in
Token { kind: Newline, char_start: 30729, char_end: 30730, byte_start: 30730, byte_end: 30731, column_start: 73, column_end: 1, line_start: 925, line_end: 926 }: "\n"
Token { kind: Text, char_start: 30730, char_end: 30735, byte_start: 30731, byte_end: 30736, column_start: 1, column_end: 6, line_start: 926, line_end: 926 }: which
Token { kind: Space, char_start: 30735, char_end: 30736, byte_start: 30736, byte_end: 30737, column_start: 6, column_end: 7, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30736, char_end: 30740, byte_start: 30737, byte_end: 30741, column_start: 7, column_end: 11, line_start: 926, line_end: 926 }: case
Token { kind: Space, char_start: 30740, char_end: 30741, byte_start: 30741, byte_end: 30742, column_start: 11, column_end: 12, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30741, char_end: 30747, byte_start: 30742, byte_end: 30748, column_start: 12, column_end: 18, line_start: 926, line_end: 926 }: Ferret
Token { kind: Space, char_start: 30747, char_end: 30748, byte_start: 30748, byte_end: 30749, column_start: 18, column_end: 19, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30748, char_end: 30752, byte_start: 30749, byte_end: 30753, column_start: 19, column_end: 23, line_start: 926, line_end: 926 }: will
Token { kind: Space, char_start: 30752, char_end: 30753, byte_start: 30753, byte_end: 30754, column_start: 23, column_end: 24, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30753, char_end: 30757, byte_start: 30754, byte_end: 30758, column_start: 24, column_end: 28, line_start: 926, line_end: 926 }: fall
Token { kind: Space, char_start: 30757, char_end: 30758, byte_start: 30758, byte_end: 30759, column_start: 28, column_end: 29, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30758, char_end: 30762, byte_start: 30759, byte_end: 30763, column_start: 29, column_end: 33, line_start: 926, line_end: 926 }: back
Token { kind: Space, char_start: 30762, char_end: 30763, byte_start: 30763, byte_end: 30764, column_start: 33, column_end: 34, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30763, char_end: 30765, byte_start: 30764, byte_end: 30766, column_start: 34, column_end: 36, line_start: 926, line_end: 926 }: to
Token { kind: Space, char_start: 30765, char_end: 30766, byte_start: 30766, byte_end: 30767, column_start: 36, column_end: 37, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30766, char_end: 30769, byte_start: 30767, byte_end: 30770, column_start: 37, column_end: 40, line_start: 926, line_end: 926 }: the
Token { kind: Space, char_start: 30769, char_end: 30770, byte_start: 30770, byte_end: 30771, column_start: 40, column_end: 41, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30770, char_end: 30774, byte_start: 30771, byte_end: 30775, column_start: 41, column_end: 45, line_start: 926, line_end: 926 }: next
Token { kind: Space, char_start: 30774, char_end: 30775, byte_start: 30775, byte_end: 30776, column_start: 45, column_end: 46, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30775, char_end: 30784, byte_start: 30776, byte_end: 30785, column_start: 46, column_end: 55, line_start: 926, line_end: 926 }: available
Token { kind: Space, char_start: 30784, char_end: 30785, byte_start: 30785, byte_end: 30786, column_start: 55, column_end: 56, line_start: 926, line_end: 926 }: " "
Token { kind: Text, char_start: 30785, char_end: 30792, byte_start: 30786, byte_end: 30793, column_start: 56, column_end: 63, line_start: 926, line_end: 926 }: method.
Token { kind: Newline, char_start: 30792, char_end: 30793, byte_start: 30793, byte_end: 30794, column_start: 63, column_end: 1, line_start: 926, line_end: 927 }: "\n"
Token { kind: Newline, char_start: 30793, char_end: 30794, byte_start: 30794, byte_end: 30795, column_start: 1, column_end: 1, line_start: 927, line_end: 928 }: "\n"
Token { kind: CodeFence, char_start: 30794, char_end: 30797, byte_start: 30795, byte_end: 30798, column_start: 1, column_end: 4, line_start: 928, line_end: 928 }: ```
Token { kind: Newline, char_start: 30797, char_end: 30798, byte_start: 30798, byte_end: 30799, column_start: 4, column_end: 1, line_start: 928, line_end: 929 }: "\n"
Token { kind: Text, char_start: 30798, char_end: 30801, byte_start: 30799, byte_end: 30802, column_start: 1, column_end: 4, line_start: 929, line_end: 929 }: let
Token { kind: Space, char_start: 30801, char_end: 30802, byte_start: 30802, byte_end: 30803, column_start: 4, column_end: 5, line_start: 929, line_end: 929 }: " "
Token { kind: Text, char_start: 30802, char_end: 30815, byte_start: 30803, byte_end: 30816, column_start: 5, column_end: 18, line_start: 929, line_end: 929 }: g:FerretJob=0
Token { kind: Newline, char_start: 30815, char_end: 30816, byte_start: 30816, byte_end: 30817, column_start: 18, column_end: 1, line_start: 929, line_end: 930 }: "\n"
Token { kind: CodeFence, char_start: 30816, char_end: 30819, byte_start: 30817, byte_end: 30820, column_start: 1, column_end: 4, line_start: 930, line_end: 930 }: ```
Token { kind: Newline, char_start: 30819, char_end: 30820, byte_start: 30820, byte_end: 30821, column_start: 4, column_end: 1, line_start: 930, line_end: 931 }: "\n"
Token { kind: Newline, char_start: 30820, char_end: 30821, byte_start: 30821, byte_end: 30822, column_start: 1, column_end: 1, line_start: 931, line_end: 932 }: "\n"
Token { kind: At, char_start: 30821, char_end: 30822, byte_start: 30822, byte_end: 30823, column_start: 1, column_end: 2, line_start: 932, line_end: 932 }: @
Token { kind: Text, char_start: 30822, char_end: 30828, byte_start: 30823, byte_end: 30829, column_start: 2, column_end: 8, line_start: 932, line_end: 932 }: option
Token { kind: Space, char_start: 30828, char_end: 30829, byte_start: 30829, byte_end: 30830, column_start: 8, column_end: 9, line_start: 932, line_end: 932 }: " "
Token { kind: Text, char_start: 30829, char_end: 30845, byte_start: 30830, byte_end: 30846, column_start: 9, column_end: 25, line_start: 932, line_end: 932 }: g:FerretHlsearch
Token { kind: Space, char_start: 30845, char_end: 30846, byte_start: 30846, byte_end: 30847, column_start: 25, column_end: 26, line_start: 932, line_end: 932 }: " "
Token { kind: Text, char_start: 30846, char_end: 30853, byte_start: 30847, byte_end: 30854, column_start: 26, column_end: 33, line_start: 932, line_end: 932 }: boolean
Token { kind: Newline, char_start: 30853, char_end: 30854, byte_start: 30854, byte_end: 30855, column_start: 33, column_end: 1, line_start: 932, line_end: 933 }: "\n"
Token { kind: Newline, char_start: 30854, char_end: 30855, byte_start: 30855, byte_end: 30856, column_start: 1, column_end: 1, line_start: 933, line_end: 934 }: "\n"
Token { kind: Text, char_start: 30855, char_end: 30863, byte_start: 30856, byte_end: 30864, column_start: 1, column_end: 9, line_start: 934, line_end: 934 }: Controls
Token { kind: Space, char_start: 30863, char_end: 30864, byte_start: 30864, byte_end: 30865, column_start: 9, column_end: 10, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30864, char_end: 30871, byte_start: 30865, byte_end: 30872, column_start: 10, column_end: 17, line_start: 934, line_end: 934 }: whether
Token { kind: Space, char_start: 30871, char_end: 30872, byte_start: 30872, byte_end: 30873, column_start: 17, column_end: 18, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30872, char_end: 30878, byte_start: 30873, byte_end: 30879, column_start: 18, column_end: 24, line_start: 934, line_end: 934 }: Ferret
Token { kind: Space, char_start: 30878, char_end: 30879, byte_start: 30879, byte_end: 30880, column_start: 24, column_end: 25, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30879, char_end: 30885, byte_start: 30880, byte_end: 30886, column_start: 25, column_end: 31, line_start: 934, line_end: 934 }: should
Token { kind: Space, char_start: 30885, char_end: 30886, byte_start: 30886, byte_end: 30887, column_start: 31, column_end: 32, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30886, char_end: 30893, byte_start: 30887, byte_end: 30894, column_start: 32, column_end: 39, line_start: 934, line_end: 934 }: attempt
Token { kind: Space, char_start: 30893, char_end: 30894, byte_start: 30894, byte_end: 30895, column_start: 39, column_end: 40, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30894, char_end: 30896, byte_start: 30895, byte_end: 30897, column_start: 40, column_end: 42, line_start: 934, line_end: 934 }: to
Token { kind: Space, char_start: 30896, char_end: 30897, byte_start: 30897, byte_end: 30898, column_start: 42, column_end: 43, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30897, char_end: 30906, byte_start: 30898, byte_end: 30907, column_start: 43, column_end: 52, line_start: 934, line_end: 934 }: highlight
Token { kind: Space, char_start: 30906, char_end: 30907, byte_start: 30907, byte_end: 30908, column_start: 52, column_end: 53, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30907, char_end: 30910, byte_start: 30908, byte_end: 30911, column_start: 53, column_end: 56, line_start: 934, line_end: 934 }: the
Token { kind: Space, char_start: 30910, char_end: 30911, byte_start: 30911, byte_end: 30912, column_start: 56, column_end: 57, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30911, char_end: 30917, byte_start: 30912, byte_end: 30918, column_start: 57, column_end: 63, line_start: 934, line_end: 934 }: search
Token { kind: Space, char_start: 30917, char_end: 30918, byte_start: 30918, byte_end: 30919, column_start: 63, column_end: 64, line_start: 934, line_end: 934 }: " "
Token { kind: Text, char_start: 30918, char_end: 30925, byte_start: 30919, byte_end: 30926, column_start: 64, column_end: 71, line_start: 934, line_end: 934 }: pattern
Token { kind: Newline, char_start: 30925, char_end: 30926, byte_start: 30926, byte_end: 30927, column_start: 71, column_end: 1, line_start: 934, line_end: 935 }: "\n"
Token { kind: Text, char_start: 30926, char_end: 30930, byte_start: 30927, byte_end: 30931, column_start: 1, column_end: 5, line_start: 935, line_end: 935 }: when
Token { kind: Space, char_start: 30930, char_end: 30931, byte_start: 30931, byte_end: 30932, column_start: 5, column_end: 6, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30931, char_end: 30938, byte_start: 30932, byte_end: 30939, column_start: 6, column_end: 13, line_start: 935, line_end: 935 }: running
Token { kind: Space, char_start: 30938, char_end: 30939, byte_start: 30939, byte_end: 30940, column_start: 13, column_end: 14, line_start: 935, line_end: 935 }: " "
Token { kind: Bar, char_start: 30939, char_end: 30940, byte_start: 30940, byte_end: 30941, column_start: 14, column_end: 15, line_start: 935, line_end: 935 }: |
Token { kind: Text, char_start: 30940, char_end: 30944, byte_start: 30941, byte_end: 30945, column_start: 15, column_end: 19, line_start: 935, line_end: 935 }: :Ack
Token { kind: Bar, char_start: 30944, char_end: 30945, byte_start: 30945, byte_end: 30946, column_start: 19, column_end: 20, line_start: 935, line_end: 935 }: |
Token { kind: Space, char_start: 30945, char_end: 30946, byte_start: 30946, byte_end: 30947, column_start: 20, column_end: 21, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30946, char_end: 30948, byte_start: 30947, byte_end: 30949, column_start: 21, column_end: 23, line_start: 935, line_end: 935 }: or
Token { kind: Space, char_start: 30948, char_end: 30949, byte_start: 30949, byte_end: 30950, column_start: 23, column_end: 24, line_start: 935, line_end: 935 }: " "
Token { kind: Bar, char_start: 30949, char_end: 30950, byte_start: 30950, byte_end: 30951, column_start: 24, column_end: 25, line_start: 935, line_end: 935 }: |
Token { kind: Text, char_start: 30950, char_end: 30955, byte_start: 30951, byte_end: 30956, column_start: 25, column_end: 30, line_start: 935, line_end: 935 }: :Lack
Token { kind: Bar, char_start: 30955, char_end: 30956, byte_start: 30956, byte_end: 30957, column_start: 30, column_end: 31, line_start: 935, line_end: 935 }: |
Token { kind: Text, char_start: 30956, char_end: 30957, byte_start: 30957, byte_end: 30958, column_start: 31, column_end: 32, line_start: 935, line_end: 935 }: .
Token { kind: Space, char_start: 30957, char_end: 30958, byte_start: 30958, byte_end: 30959, column_start: 32, column_end: 33, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30958, char_end: 30960, byte_start: 30959, byte_end: 30961, column_start: 33, column_end: 35, line_start: 935, line_end: 935 }: If
Token { kind: Space, char_start: 30960, char_end: 30961, byte_start: 30961, byte_end: 30962, column_start: 35, column_end: 36, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30961, char_end: 30965, byte_start: 30962, byte_end: 30966, column_start: 36, column_end: 40, line_start: 935, line_end: 935 }: left
Token { kind: Space, char_start: 30965, char_end: 30966, byte_start: 30966, byte_end: 30967, column_start: 40, column_end: 41, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30966, char_end: 30972, byte_start: 30967, byte_end: 30973, column_start: 41, column_end: 47, line_start: 935, line_end: 935 }: unset,
Token { kind: Space, char_start: 30972, char_end: 30973, byte_start: 30973, byte_end: 30974, column_start: 47, column_end: 48, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30973, char_end: 30979, byte_start: 30974, byte_end: 30980, column_start: 48, column_end: 54, line_start: 935, line_end: 935 }: Ferret
Token { kind: Space, char_start: 30979, char_end: 30980, byte_start: 30980, byte_end: 30981, column_start: 54, column_end: 55, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30980, char_end: 30984, byte_start: 30981, byte_end: 30985, column_start: 55, column_end: 59, line_start: 935, line_end: 935 }: will
Token { kind: Space, char_start: 30984, char_end: 30985, byte_start: 30985, byte_end: 30986, column_start: 59, column_end: 60, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30985, char_end: 30992, byte_start: 30986, byte_end: 30993, column_start: 60, column_end: 67, line_start: 935, line_end: 935 }: respect
Token { kind: Space, char_start: 30992, char_end: 30993, byte_start: 30993, byte_end: 30994, column_start: 67, column_end: 68, line_start: 935, line_end: 935 }: " "
Token { kind: Text, char_start: 30993, char_end: 30996, byte_start: 30994, byte_end: 30997, column_start: 68, column_end: 71, line_start: 935, line_end: 935 }: the
Token { kind: Newline, char_start: 30996, char_end: 30997, byte_start: 30997, byte_end: 30998, column_start: 71, column_end: 1, line_start: 935, line_end: 936 }: "\n"
Token { kind: Text, char_start: 30997, char_end: 31004, byte_start: 30998, byte_end: 31005, column_start: 1, column_end: 8, line_start: 936, line_end: 936 }: current
Token { kind: Space, char_start: 31004, char_end: 31005, byte_start: 31005, byte_end: 31006, column_start: 8, column_end: 9, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31005, char_end: 31015, byte_start: 31006, byte_end: 31016, column_start: 9, column_end: 19, line_start: 936, line_end: 936 }: 'hlsearch'
Token { kind: Space, char_start: 31015, char_end: 31016, byte_start: 31016, byte_end: 31017, column_start: 19, column_end: 20, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31016, char_end: 31024, byte_start: 31017, byte_end: 31025, column_start: 20, column_end: 28, line_start: 936, line_end: 936 }: setting.
Token { kind: Space, char_start: 31024, char_end: 31025, byte_start: 31025, byte_end: 31026, column_start: 28, column_end: 29, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31025, char_end: 31027, byte_start: 31026, byte_end: 31028, column_start: 29, column_end: 31, line_start: 936, line_end: 936 }: To
Token { kind: Space, char_start: 31027, char_end: 31028, byte_start: 31028, byte_end: 31029, column_start: 31, column_end: 32, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31028, char_end: 31033, byte_start: 31029, byte_end: 31034, column_start: 32, column_end: 37, line_start: 936, line_end: 936 }: force
Token { kind: Space, char_start: 31033, char_end: 31034, byte_start: 31034, byte_end: 31035, column_start: 37, column_end: 38, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31034, char_end: 31046, byte_start: 31035, byte_end: 31047, column_start: 38, column_end: 50, line_start: 936, line_end: 936 }: highlighting
Token { kind: Space, char_start: 31046, char_end: 31047, byte_start: 31047, byte_end: 31048, column_start: 50, column_end: 51, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31047, char_end: 31049, byte_start: 31048, byte_end: 31050, column_start: 51, column_end: 53, line_start: 936, line_end: 936 }: on
Token { kind: Space, char_start: 31049, char_end: 31050, byte_start: 31050, byte_end: 31051, column_start: 53, column_end: 54, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31050, char_end: 31052, byte_start: 31051, byte_end: 31053, column_start: 54, column_end: 56, line_start: 936, line_end: 936 }: or
Token { kind: Space, char_start: 31052, char_end: 31053, byte_start: 31053, byte_end: 31054, column_start: 56, column_end: 57, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31053, char_end: 31056, byte_start: 31054, byte_end: 31057, column_start: 57, column_end: 60, line_start: 936, line_end: 936 }: off
Token { kind: Space, char_start: 31056, char_end: 31057, byte_start: 31057, byte_end: 31058, column_start: 60, column_end: 61, line_start: 936, line_end: 936 }: " "
Token { kind: Text, char_start: 31057, char_end: 31069, byte_start: 31058, byte_end: 31070, column_start: 61, column_end: 73, line_start: 936, line_end: 936 }: irrespective
Token { kind: Newline, char_start: 31069, char_end: 31070, byte_start: 31070, byte_end: 31071, column_start: 73, column_end: 1, line_start: 936, line_end: 937 }: "\n"
Token { kind: Text, char_start: 31070, char_end: 31072, byte_start: 31071, byte_end: 31073, column_start: 1, column_end: 3, line_start: 937, line_end: 937 }: of
Token { kind: Space, char_start: 31072, char_end: 31073, byte_start: 31073, byte_end: 31074, column_start: 3, column_end: 4, line_start: 937, line_end: 937 }: " "
Token { kind: Text, char_start: 31073, char_end: 31084, byte_start: 31074, byte_end: 31085, column_start: 4, column_end: 15, line_start: 937, line_end: 937 }: 'hlsearch',
Token { kind: Space, char_start: 31084, char_end: 31085, byte_start: 31085, byte_end: 31086, column_start: 15, column_end: 16, line_start: 937, line_end: 937 }: " "
Token { kind: Text, char_start: 31085, char_end: 31088, byte_start: 31086, byte_end: 31089, column_start: 16, column_end: 19, line_start: 937, line_end: 937 }: set
Token { kind: Space, char_start: 31088, char_end: 31089, byte_start: 31089, byte_end: 31090, column_start: 19, column_end: 20, line_start: 937, line_end: 937 }: " "
Token { kind: Bar, char_start: 31089, char_end: 31090, byte_start: 31090, byte_end: 31091, column_start: 20, column_end: 21, line_start: 937, line_end: 937 }: |
Token { kind: Text, char_start: 31090, char_end: 31106, byte_start: 31091, byte_end: 31107, column_start: 21, column_end: 37, line_start: 937, line_end: 937 }: g:FerretHlsearch
Token { kind: Bar, char_start: 31106, char_end: 31107, byte_start: 31107, byte_end: 31108, column_start: 37, column_end: 38, line_start: 937, line_end: 937 }: |
Token { kind: Space, char_start: 31107, char_end: 31108, byte_start: 31108, byte_end: 31109, column_start: 38, column_end: 39, line_start: 937, line_end: 937 }: " "
Token { kind: Text, char_start: 31108, char_end: 31110, byte_start: 31109, byte_end: 31111, column_start: 39, column_end: 41, line_start: 937, line_end: 937 }: to
Token { kind: Space, char_start: 31110, char_end: 31111, byte_start: 31111, byte_end: 31112, column_start: 41, column_end: 42, line_start: 937, line_end: 937 }: " "
Token { kind: Text, char_start: 31111, char_end: 31112, byte_start: 31112, byte_end: 31113, column_start: 42, column_end: 43, line_start: 937, line_end: 937 }: 1
Token { kind: Space, char_start: 31112, char_end: 31113, byte_start: 31113, byte_end: 31114, column_start: 43, column_end: 44, line_start: 937, line_end: 937 }: " "
Token { kind: Lparen, char_start: 31113, char_end: 31114, byte_start: 31114, byte_end: 31115, column_start: 44, column_end: 45, line_start: 937, line_end: 937 }: (
Token { kind: Text, char_start: 31114, char_end: 31116, byte_start: 31115, byte_end: 31117, column_start: 45, column_end: 47, line_start: 937, line_end: 937 }: on
Token { kind: Rparen, char_start: 31116, char_end: 31117, byte_start: 31117, byte_end: 31118, column_start: 47, column_end: 48, line_start: 937, line_end: 937 }: )
Token { kind: Space, char_start: 31117, char_end: 31118, byte_start: 31118, byte_end: 31119, column_start: 48, column_end: 49, line_start: 937, line_end: 937 }: " "
Token { kind: Text, char_start: 31118, char_end: 31120, byte_start: 31119, byte_end: 31121, column_start: 49, column_end: 51, line_start: 937, line_end: 937 }: or
Token { kind: Space, char_start: 31120, char_end: 31121, byte_start: 31121, byte_end: 31122, column_start: 51, column_end: 52, line_start: 937, line_end: 937 }: " "
Token { kind: Text, char_start: 31121, char_end: 31122, byte_start: 31122, byte_end: 31123, column_start: 52, column_end: 53, line_start: 937, line_end: 937 }: 0
Token { kind: Space, char_start: 31122, char_end: 31123, byte_start: 31123, byte_end: 31124, column_start: 53, column_end: 54, line_start: 937, line_end: 937 }: " "
Token { kind: Lparen, char_start: 31123, char_end: 31124, byte_start: 31124, byte_end: 31125, column_start: 54, column_end: 55, line_start: 937, line_end: 937 }: (
Token { kind: Text, char_start: 31124, char_end: 31127, byte_start: 31125, byte_end: 31128, column_start: 55, column_end: 58, line_start: 937, line_end: 937 }: off
Token { kind: Rparen, char_start: 31127, char_end: 31128, byte_start: 31128, byte_end: 31129, column_start: 58, column_end: 59, line_start: 937, line_end: 937 }: )
Token { kind: Text, char_start: 31128, char_end: 31129, byte_start: 31129, byte_end: 31130, column_start: 59, column_end: 60, line_start: 937, line_end: 937 }: :
Token { kind: Newline, char_start: 31129, char_end: 31130, byte_start: 31130, byte_end: 31131, column_start: 60, column_end: 1, line_start: 937, line_end: 938 }: "\n"
Token { kind: Newline, char_start: 31130, char_end: 31131, byte_start: 31131, byte_end: 31132, column_start: 1, column_end: 1, line_start: 938, line_end: 939 }: "\n"
Token { kind: CodeFence, char_start: 31131, char_end: 31134, byte_start: 31132, byte_end: 31135, column_start: 1, column_end: 4, line_start: 939, line_end: 939 }: ```
Token { kind: Newline, char_start: 31134, char_end: 31135, byte_start: 31135, byte_end: 31136, column_start: 4, column_end: 1, line_start: 939, line_end: 940 }: "\n"
Token { kind: Text, char_start: 31135, char_end: 31138, byte_start: 31136, byte_end: 31139, column_start: 1, column_end: 4, line_start: 940, line_end: 940 }: let
Token { kind: Space, char_start: 31138, char_end: 31139, byte_start: 31139, byte_end: 31140, column_start: 4, column_end: 5, line_start: 940, line_end: 940 }: " "
Token { kind: Text, char_start: 31139, char_end: 31157, byte_start: 31140, byte_end: 31158, column_start: 5, column_end: 23, line_start: 940, line_end: 940 }: g:FerretHlsearch=0
Token { kind: Newline, char_start: 31157, char_end: 31158, byte_start: 31158, byte_end: 31159, column_start: 23, column_end: 1, line_start: 940, line_end: 941 }: "\n"
Token { kind: CodeFence, char_start: 31158, char_end: 31161, byte_start: 31159, byte_end: 31162, column_start: 1, column_end: 4, line_start: 941, line_end: 941 }: ```
Token { kind: Newline, char_start: 31161, char_end: 31162, byte_start: 31162, byte_end: 31163, column_start: 4, column_end: 1, line_start: 941, line_end: 942 }: "\n"
Token { kind: Newline, char_start: 31162, char_end: 31163, byte_start: 31163, byte_end: 31164, column_start: 1, column_end: 1, line_start: 942, line_end: 943 }: "\n"
Token { kind: At, char_start: 31163, char_end: 31164, byte_start: 31164, byte_end: 31165, column_start: 1, column_end: 2, line_start: 943, line_end: 943 }: @
Token { kind: Text, char_start: 31164, char_end: 31170, byte_start: 31165, byte_end: 31171, column_start: 2, column_end: 8, line_start: 943, line_end: 943 }: option
Token { kind: Space, char_start: 31170, char_end: 31171, byte_start: 31171, byte_end: 31172, column_start: 8, column_end: 9, line_start: 943, line_end: 943 }: " "
Token { kind: Text, char_start: 31171, char_end: 31190, byte_start: 31172, byte_end: 31191, column_start: 9, column_end: 28, line_start: 943, line_end: 943 }: g:FerretAcksCommand
Token { kind: Space, char_start: 31190, char_end: 31191, byte_start: 31191, byte_end: 31192, column_start: 28, column_end: 29, line_start: 943, line_end: 943 }: " "
Token { kind: Text, char_start: 31191, char_end: 31197, byte_start: 31192, byte_end: 31198, column_start: 29, column_end: 35, line_start: 943, line_end: 943 }: string
Token { kind: Space, char_start: 31197, char_end: 31198, byte_start: 31198, byte_end: 31199, column_start: 35, column_end: 36, line_start: 943, line_end: 943 }: " "
Token { kind: Text, char_start: 31198, char_end: 31203, byte_start: 31199, byte_end: 31204, column_start: 36, column_end: 41, line_start: 943, line_end: 943 }: "cdo"
Token { kind: Newline, char_start: 31203, char_end: 31204, byte_start: 31204, byte_end: 31205, column_start: 41, column_end: 1, line_start: 943, line_end: 944 }: "\n"
Token { kind: Newline, char_start: 31204, char_end: 31205, byte_start: 31205, byte_end: 31206, column_start: 1, column_end: 1, line_start: 944, line_end: 945 }: "\n"
Token { kind: Text, char_start: 31205, char_end: 31213, byte_start: 31206, byte_end: 31214, column_start: 1, column_end: 9, line_start: 945, line_end: 945 }: Controls
Token { kind: Space, char_start: 31213, char_end: 31214, byte_start: 31214, byte_end: 31215, column_start: 9, column_end: 10, line_start: 945, line_end: 945 }: " "
Token { kind: Text, char_start: 31214, char_end: 31217, byte_start: 31215, byte_end: 31218, column_start: 10, column_end: 13, line_start: 945, line_end: 945 }: the
Token { kind: Space, char_start: 31217, char_end: 31218, byte_start: 31218, byte_end: 31219, column_start: 13, column_end: 14, line_start: 945, line_end: 945 }: " "
Token { kind: Text, char_start: 31218, char_end: 31228, byte_start: 31219, byte_end: 31229, column_start: 14, column_end: 24, line_start: 945, line_end: 945 }: underlying
Token { kind: Space, char_start: 31228, char_end: 31229, byte_start: 31229, byte_end: 31230, column_start: 24, column_end: 25, line_start: 945, line_end: 945 }: " "
Token { kind: Text, char_start: 31229, char_end: 31232, byte_start: 31230, byte_end: 31233, column_start: 25, column_end: 28, line_start: 945, line_end: 945 }: Vim
Token { kind: Space, char_start: 31232, char_end: 31233, byte_start: 31233, byte_end: 31234, column_start: 28, column_end: 29, line_start: 945, line_end: 945 }: " "
Token { kind: Text, char_start: 31233, char_end: 31240, byte_start: 31234, byte_end: 31241, column_start: 29, column_end: 36, line_start: 945, line_end: 945 }: command
Token { kind: Space, char_start: 31240, char_end: 31241, byte_start: 31241, byte_end: 31242, column_start: 36, column_end: 37, line_start: 945, line_end: 945 }: " "
Token { kind: Text, char_start: 31241, char_end: 31245, byte_start: 31242, byte_end: 31246, column_start: 37, column_end: 41, line_start: 945, line_end: 945 }: that
Token { kind: Space, char_start: 31245, char_end: 31246, byte_start: 31246, byte_end: 31247, column_start: 41, column_end: 42, line_start: 945, line_end: 945 }: " "
Token { kind: Bar, char_start: 31246, char_end: 31247, byte_start: 31247, byte_end: 31248, column_start: 42, column_end: 43, line_start: 945, line_end: 945 }: |
Token { kind: Text, char_start: 31247, char_end: 31252, byte_start: 31248, byte_end: 31253, column_start: 43, column_end: 48, line_start: 945, line_end: 945 }: :Acks
Token { kind: Bar, char_start: 31252, char_end: 31253, byte_start: 31253, byte_end: 31254, column_start: 48, column_end: 49, line_start: 945, line_end: 945 }: |
Token { kind: Space, char_start: 31253, char_end: 31254, byte_start: 31254, byte_end: 31255, column_start: 49, column_end: 50, line_start: 945, line_end: 945 }: " "
Token { kind: Text, char_start: 31254, char_end: 31258, byte_start: 31255, byte_end: 31259, column_start: 50, column_end: 54, line_start: 945, line_end: 945 }: uses
Token { kind: Space, char_start: 31258, char_end: 31259, byte_start: 31259, byte_end: 31260, column_start: 54, column_end: 55, line_start: 945, line_end: 945 }: " "
Token { kind: Text, char_start: 31259, char_end: 31261, byte_start: 31260, byte_end: 31262, column_start: 55, column_end: 57, line_start: 945, line_end: 945 }: to
Token { kind: Space, char_start: 31261, char_end: 31262, byte_start: 31262, byte_end: 31263, column_start: 57, column_end: 58, line_start: 945, line_end: 945 }: " "
Token { kind: Text, char_start: 31262, char_end: 31268, byte_start: 31263, byte_end: 31269, column_start: 58, column_end: 64, line_start: 945, line_end: 945 }: peform
Token { kind: Newline, char_start: 31268, char_end: 31269, byte_start: 31269, byte_end: 31270, column_start: 64, column_end: 1, line_start: 945, line_end: 946 }: "\n"
Token { kind: Text, char_start: 31269, char_end: 31283, byte_start: 31270, byte_end: 31284, column_start: 1, column_end: 15, line_start: 946, line_end: 946 }: substitutions.
Token { kind: Space, char_start: 31283, char_end: 31284, byte_start: 31284, byte_end: 31285, column_start: 15, column_end: 16, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31284, char_end: 31286, byte_start: 31285, byte_end: 31287, column_start: 16, column_end: 18, line_start: 946, line_end: 946 }: On
Token { kind: Space, char_start: 31286, char_end: 31287, byte_start: 31287, byte_end: 31288, column_start: 18, column_end: 19, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31287, char_end: 31295, byte_start: 31288, byte_end: 31296, column_start: 19, column_end: 27, line_start: 946, line_end: 946 }: versions
Token { kind: Space, char_start: 31295, char_end: 31296, byte_start: 31296, byte_end: 31297, column_start: 27, column_end: 28, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31296, char_end: 31298, byte_start: 31297, byte_end: 31299, column_start: 28, column_end: 30, line_start: 946, line_end: 946 }: of
Token { kind: Space, char_start: 31298, char_end: 31299, byte_start: 31299, byte_end: 31300, column_start: 30, column_end: 31, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31299, char_end: 31302, byte_start: 31300, byte_end: 31303, column_start: 31, column_end: 34, line_start: 946, line_end: 946 }: Vim
Token { kind: Space, char_start: 31302, char_end: 31303, byte_start: 31303, byte_end: 31304, column_start: 34, column_end: 35, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31303, char_end: 31307, byte_start: 31304, byte_end: 31308, column_start: 35, column_end: 39, line_start: 946, line_end: 946 }: that
Token { kind: Space, char_start: 31307, char_end: 31308, byte_start: 31308, byte_end: 31309, column_start: 39, column_end: 40, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31308, char_end: 31312, byte_start: 31309, byte_end: 31313, column_start: 40, column_end: 44, line_start: 946, line_end: 946 }: have
Token { kind: Space, char_start: 31312, char_end: 31313, byte_start: 31313, byte_end: 31314, column_start: 44, column_end: 45, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31313, char_end: 31316, byte_start: 31314, byte_end: 31317, column_start: 45, column_end: 48, line_start: 946, line_end: 946 }: it,
Token { kind: Space, char_start: 31316, char_end: 31317, byte_start: 31317, byte_end: 31318, column_start: 48, column_end: 49, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31317, char_end: 31325, byte_start: 31318, byte_end: 31326, column_start: 49, column_end: 57, line_start: 946, line_end: 946 }: defaults
Token { kind: Space, char_start: 31325, char_end: 31326, byte_start: 31326, byte_end: 31327, column_start: 57, column_end: 58, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31326, char_end: 31328, byte_start: 31327, byte_end: 31329, column_start: 58, column_end: 60, line_start: 946, line_end: 946 }: to
Token { kind: Space, char_start: 31328, char_end: 31329, byte_start: 31329, byte_end: 31330, column_start: 60, column_end: 61, line_start: 946, line_end: 946 }: " "
Token { kind: Bar, char_start: 31329, char_end: 31330, byte_start: 31330, byte_end: 31331, column_start: 61, column_end: 62, line_start: 946, line_end: 946 }: |
Token { kind: Text, char_start: 31330, char_end: 31334, byte_start: 31331, byte_end: 31335, column_start: 62, column_end: 66, line_start: 946, line_end: 946 }: :cdo
Token { kind: Bar, char_start: 31334, char_end: 31335, byte_start: 31335, byte_end: 31336, column_start: 66, column_end: 67, line_start: 946, line_end: 946 }: |
Token { kind: Text, char_start: 31335, char_end: 31336, byte_start: 31336, byte_end: 31337, column_start: 67, column_end: 68, line_start: 946, line_end: 946 }: ,
Token { kind: Space, char_start: 31336, char_end: 31337, byte_start: 31337, byte_end: 31338, column_start: 68, column_end: 69, line_start: 946, line_end: 946 }: " "
Token { kind: Text, char_start: 31337, char_end: 31342, byte_start: 31338, byte_end: 31343, column_start: 69, column_end: 74, line_start: 946, line_end: 946 }: which
Token { kind: Newline, char_start: 31342, char_end: 31343, byte_start: 31343, byte_end: 31344, column_start: 74, column_end: 1, line_start: 946, line_end: 947 }: "\n"
Token { kind: Text, char_start: 31343, char_end: 31348, byte_start: 31344, byte_end: 31349, column_start: 1, column_end: 6, line_start: 947, line_end: 947 }: means
Token { kind: Space, char_start: 31348, char_end: 31349, byte_start: 31349, byte_end: 31350, column_start: 6, column_end: 7, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31349, char_end: 31353, byte_start: 31350, byte_end: 31354, column_start: 7, column_end: 11, line_start: 947, line_end: 947 }: that
Token { kind: Space, char_start: 31353, char_end: 31354, byte_start: 31354, byte_end: 31355, column_start: 11, column_end: 12, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31354, char_end: 31367, byte_start: 31355, byte_end: 31368, column_start: 12, column_end: 25, line_start: 947, line_end: 947 }: substitutions
Token { kind: Space, char_start: 31367, char_end: 31368, byte_start: 31368, byte_end: 31369, column_start: 25, column_end: 26, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31368, char_end: 31372, byte_start: 31369, byte_end: 31373, column_start: 26, column_end: 30, line_start: 947, line_end: 947 }: will
Token { kind: Space, char_start: 31372, char_end: 31373, byte_start: 31373, byte_end: 31374, column_start: 30, column_end: 31, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31373, char_end: 31378, byte_start: 31374, byte_end: 31379, column_start: 31, column_end: 36, line_start: 947, line_end: 947 }: apply
Token { kind: Space, char_start: 31378, char_end: 31379, byte_start: 31379, byte_end: 31380, column_start: 36, column_end: 37, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31379, char_end: 31381, byte_start: 31380, byte_end: 31382, column_start: 37, column_end: 39, line_start: 947, line_end: 947 }: to
Token { kind: Space, char_start: 31381, char_end: 31382, byte_start: 31382, byte_end: 31383, column_start: 39, column_end: 40, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31382, char_end: 31385, byte_start: 31383, byte_end: 31386, column_start: 40, column_end: 43, line_start: 947, line_end: 947 }: the
Token { kind: Space, char_start: 31385, char_end: 31386, byte_start: 31386, byte_end: 31387, column_start: 43, column_end: 44, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31386, char_end: 31394, byte_start: 31387, byte_end: 31395, column_start: 44, column_end: 52, line_start: 947, line_end: 947 }: specific
Token { kind: Space, char_start: 31394, char_end: 31395, byte_start: 31395, byte_end: 31396, column_start: 52, column_end: 53, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31395, char_end: 31400, byte_start: 31396, byte_end: 31401, column_start: 53, column_end: 58, line_start: 947, line_end: 947 }: lines
Token { kind: Space, char_start: 31400, char_end: 31401, byte_start: 31401, byte_end: 31402, column_start: 58, column_end: 59, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31401, char_end: 31410, byte_start: 31402, byte_end: 31411, column_start: 59, column_end: 68, line_start: 947, line_end: 947 }: currently
Token { kind: Space, char_start: 31410, char_end: 31411, byte_start: 31411, byte_end: 31412, column_start: 68, column_end: 69, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31411, char_end: 31413, byte_start: 31412, byte_end: 31414, column_start: 69, column_end: 71, line_start: 947, line_end: 947 }: in
Token { kind: Space, char_start: 31413, char_end: 31414, byte_start: 31414, byte_end: 31415, column_start: 71, column_end: 72, line_start: 947, line_end: 947 }: " "
Token { kind: Text, char_start: 31414, char_end: 31417, byte_start: 31415, byte_end: 31418, column_start: 72, column_end: 75, line_start: 947, line_end: 947 }: the
Token { kind: Newline, char_start: 31417, char_end: 31418, byte_start: 31418, byte_end: 31419, column_start: 75, column_end: 1, line_start: 947, line_end: 948 }: "\n"
Token { kind: Bar, char_start: 31418, char_end: 31419, byte_start: 31419, byte_end: 31420, column_start: 1, column_end: 2, line_start: 948, line_end: 948 }: |
Token { kind: Text, char_start: 31419, char_end: 31427, byte_start: 31420, byte_end: 31428, column_start: 2, column_end: 10, line_start: 948, line_end: 948 }: quickfix
Token { kind: Bar, char_start: 31427, char_end: 31428, byte_start: 31428, byte_end: 31429, column_start: 10, column_end: 11, line_start: 948, line_end: 948 }: |
Token { kind: Space, char_start: 31428, char_end: 31429, byte_start: 31429, byte_end: 31430, column_start: 11, column_end: 12, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31429, char_end: 31437, byte_start: 31430, byte_end: 31438, column_start: 12, column_end: 20, line_start: 948, line_end: 948 }: listing.
Token { kind: Space, char_start: 31437, char_end: 31438, byte_start: 31438, byte_end: 31439, column_start: 20, column_end: 21, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31438, char_end: 31441, byte_start: 31439, byte_end: 31442, column_start: 21, column_end: 24, line_start: 948, line_end: 948 }: Can
Token { kind: Space, char_start: 31441, char_end: 31442, byte_start: 31442, byte_end: 31443, column_start: 24, column_end: 25, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31442, char_end: 31444, byte_start: 31443, byte_end: 31445, column_start: 25, column_end: 27, line_start: 948, line_end: 948 }: be
Token { kind: Space, char_start: 31444, char_end: 31445, byte_start: 31445, byte_end: 31446, column_start: 27, column_end: 28, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31445, char_end: 31448, byte_start: 31446, byte_end: 31449, column_start: 28, column_end: 31, line_start: 948, line_end: 948 }: set
Token { kind: Space, char_start: 31448, char_end: 31449, byte_start: 31449, byte_end: 31450, column_start: 31, column_end: 32, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31449, char_end: 31451, byte_start: 31450, byte_end: 31452, column_start: 32, column_end: 34, line_start: 948, line_end: 948 }: to
Token { kind: Space, char_start: 31451, char_end: 31452, byte_start: 31452, byte_end: 31453, column_start: 34, column_end: 35, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31452, char_end: 31458, byte_start: 31453, byte_end: 31459, column_start: 35, column_end: 41, line_start: 948, line_end: 948 }: "cfdo"
Token { kind: Space, char_start: 31458, char_end: 31459, byte_start: 31459, byte_end: 31460, column_start: 41, column_end: 42, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31459, char_end: 31461, byte_start: 31460, byte_end: 31462, column_start: 42, column_end: 44, line_start: 948, line_end: 948 }: to
Token { kind: Space, char_start: 31461, char_end: 31462, byte_start: 31462, byte_end: 31463, column_start: 44, column_end: 45, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31462, char_end: 31469, byte_start: 31463, byte_end: 31470, column_start: 45, column_end: 52, line_start: 948, line_end: 948 }: instead
Token { kind: Space, char_start: 31469, char_end: 31470, byte_start: 31470, byte_end: 31471, column_start: 52, column_end: 53, line_start: 948, line_end: 948 }: " "
Token { kind: Text, char_start: 31470, char_end: 31473, byte_start: 31471, byte_end: 31474, column_start: 53, column_end: 56, line_start: 948, line_end: 948 }: use
Token { kind: Space, char_start: 31473, char_end: 31474, byte_start: 31474, byte_end: 31475, column_start: 56, column_end: 57, line_start: 948, line_end: 948 }: " "
Token { kind: Bar, char_start: 31474, char_end: 31475, byte_start: 31475, byte_end: 31476, column_start: 57, column_end: 58, line_start: 948, line_end: 948 }: |
Token { kind: Text, char_start: 31475, char_end: 31480, byte_start: 31476, byte_end: 31481, column_start: 58, column_end: 63, line_start: 948, line_end: 948 }: :cfdo
Token { kind: Bar, char_start: 31480, char_end: 31481, byte_start: 31481, byte_end: 31482, column_start: 63, column_end: 64, line_start: 948, line_end: 948 }: |
Token { kind: Space, char_start: 31481, char_end: 31482, byte_start: 31482, byte_end: 31483, column_start: 64, column_end: 65, line_start: 948, line_end: 948 }: " "
Token { kind: Lparen, char_start: 31482, char_end: 31483, byte_start: 31483, byte_end: 31484, column_start: 65, column_end: 66, line_start: 948, line_end: 948 }: (
Token { kind: Text, char_start: 31483, char_end: 31485, byte_start: 31484, byte_end: 31486, column_start: 66, column_end: 68, line_start: 948, line_end: 948 }: if
Token { kind: Newline, char_start: 31485, char_end: 31486, byte_start: 31486, byte_end: 31487, column_start: 68, column_end: 1, line_start: 948, line_end: 949 }: "\n"
Token { kind: Text, char_start: 31486, char_end: 31495, byte_start: 31487, byte_end: 31496, column_start: 1, column_end: 10, line_start: 949, line_end: 949 }: available
Token { kind: Rparen, char_start: 31495, char_end: 31496, byte_start: 31496, byte_end: 31497, column_start: 10, column_end: 11, line_start: 949, line_end: 949 }: )
Token { kind: Text, char_start: 31496, char_end: 31497, byte_start: 31497, byte_end: 31498, column_start: 11, column_end: 12, line_start: 949, line_end: 949 }: ,
Token { kind: Space, char_start: 31497, char_end: 31498, byte_start: 31498, byte_end: 31499, column_start: 12, column_end: 13, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31498, char_end: 31503, byte_start: 31499, byte_end: 31504, column_start: 13, column_end: 18, line_start: 949, line_end: 949 }: which
Token { kind: Space, char_start: 31503, char_end: 31504, byte_start: 31504, byte_end: 31505, column_start: 18, column_end: 19, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31504, char_end: 31509, byte_start: 31505, byte_end: 31510, column_start: 19, column_end: 24, line_start: 949, line_end: 949 }: means
Token { kind: Space, char_start: 31509, char_end: 31510, byte_start: 31510, byte_end: 31511, column_start: 24, column_end: 25, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31510, char_end: 31514, byte_start: 31511, byte_end: 31515, column_start: 25, column_end: 29, line_start: 949, line_end: 949 }: that
Token { kind: Space, char_start: 31514, char_end: 31515, byte_start: 31515, byte_end: 31516, column_start: 29, column_end: 30, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31515, char_end: 31518, byte_start: 31516, byte_end: 31519, column_start: 30, column_end: 33, line_start: 949, line_end: 949 }: the
Token { kind: Space, char_start: 31518, char_end: 31519, byte_start: 31519, byte_end: 31520, column_start: 33, column_end: 34, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31519, char_end: 31532, byte_start: 31520, byte_end: 31533, column_start: 34, column_end: 47, line_start: 949, line_end: 949 }: substitutions
Token { kind: Space, char_start: 31532, char_end: 31533, byte_start: 31533, byte_end: 31534, column_start: 47, column_end: 48, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31533, char_end: 31537, byte_start: 31534, byte_end: 31538, column_start: 48, column_end: 52, line_start: 949, line_end: 949 }: will
Token { kind: Space, char_start: 31537, char_end: 31538, byte_start: 31538, byte_end: 31539, column_start: 52, column_end: 53, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31538, char_end: 31540, byte_start: 31539, byte_end: 31541, column_start: 53, column_end: 55, line_start: 949, line_end: 949 }: be
Token { kind: Space, char_start: 31540, char_end: 31541, byte_start: 31541, byte_end: 31542, column_start: 55, column_end: 56, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31541, char_end: 31548, byte_start: 31542, byte_end: 31549, column_start: 56, column_end: 63, line_start: 949, line_end: 949 }: applied
Token { kind: Space, char_start: 31548, char_end: 31549, byte_start: 31549, byte_end: 31550, column_start: 63, column_end: 64, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31549, char_end: 31551, byte_start: 31550, byte_end: 31552, column_start: 64, column_end: 66, line_start: 949, line_end: 949 }: on
Token { kind: Space, char_start: 31551, char_end: 31552, byte_start: 31552, byte_end: 31553, column_start: 66, column_end: 67, line_start: 949, line_end: 949 }: " "
Token { kind: Text, char_start: 31552, char_end: 31553, byte_start: 31553, byte_end: 31554, column_start: 67, column_end: 68, line_start: 949, line_end: 949 }: a
Token { kind: Newline, char_start: 31553, char_end: 31554, byte_start: 31554, byte_end: 31555, column_start: 68, column_end: 1, line_start: 949, line_end: 950 }: "\n"
Token { kind: Text, char_start: 31554, char_end: 31557, byte_start: 31555, byte_end: 31558, column_start: 1, column_end: 4, line_start: 950, line_end: 950 }: per
Token { kind: Hyphen, char_start: 31557, char_end: 31558, byte_start: 31558, byte_end: 31559, column_start: 4, column_end: 5, line_start: 950, line_end: 950 }: -
Token { kind: Text, char_start: 31558, char_end: 31562, byte_start: 31559, byte_end: 31563, column_start: 5, column_end: 9, line_start: 950, line_end: 950 }: file
Token { kind: Space, char_start: 31562, char_end: 31563, byte_start: 31563, byte_end: 31564, column_start: 9, column_end: 10, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31563, char_end: 31568, byte_start: 31564, byte_end: 31569, column_start: 10, column_end: 15, line_start: 950, line_end: 950 }: basis
Token { kind: Space, char_start: 31568, char_end: 31569, byte_start: 31569, byte_end: 31570, column_start: 15, column_end: 16, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31569, char_end: 31571, byte_start: 31570, byte_end: 31572, column_start: 16, column_end: 18, line_start: 950, line_end: 950 }: to
Token { kind: Space, char_start: 31571, char_end: 31572, byte_start: 31572, byte_end: 31573, column_start: 18, column_end: 19, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31572, char_end: 31575, byte_start: 31573, byte_end: 31576, column_start: 19, column_end: 22, line_start: 950, line_end: 950 }: all
Token { kind: Space, char_start: 31575, char_end: 31576, byte_start: 31576, byte_end: 31577, column_start: 22, column_end: 23, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31576, char_end: 31579, byte_start: 31577, byte_end: 31580, column_start: 23, column_end: 26, line_start: 950, line_end: 950 }: the
Token { kind: Space, char_start: 31579, char_end: 31580, byte_start: 31580, byte_end: 31581, column_start: 26, column_end: 27, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31580, char_end: 31585, byte_start: 31581, byte_end: 31586, column_start: 27, column_end: 32, line_start: 950, line_end: 950 }: files
Token { kind: Space, char_start: 31585, char_end: 31586, byte_start: 31586, byte_end: 31587, column_start: 32, column_end: 33, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31586, char_end: 31588, byte_start: 31587, byte_end: 31589, column_start: 33, column_end: 35, line_start: 950, line_end: 950 }: in
Token { kind: Space, char_start: 31588, char_end: 31589, byte_start: 31589, byte_end: 31590, column_start: 35, column_end: 36, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31589, char_end: 31592, byte_start: 31590, byte_end: 31593, column_start: 36, column_end: 39, line_start: 950, line_end: 950 }: the
Token { kind: Space, char_start: 31592, char_end: 31593, byte_start: 31593, byte_end: 31594, column_start: 39, column_end: 40, line_start: 950, line_end: 950 }: " "
Token { kind: Bar, char_start: 31593, char_end: 31594, byte_start: 31594, byte_end: 31595, column_start: 40, column_end: 41, line_start: 950, line_end: 950 }: |
Token { kind: Text, char_start: 31594, char_end: 31602, byte_start: 31595, byte_end: 31603, column_start: 41, column_end: 49, line_start: 950, line_end: 950 }: quickfix
Token { kind: Bar, char_start: 31602, char_end: 31603, byte_start: 31603, byte_end: 31604, column_start: 49, column_end: 50, line_start: 950, line_end: 950 }: |
Token { kind: Space, char_start: 31603, char_end: 31604, byte_start: 31604, byte_end: 31605, column_start: 50, column_end: 51, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31604, char_end: 31612, byte_start: 31605, byte_end: 31613, column_start: 51, column_end: 59, line_start: 950, line_end: 950 }: listing.
Token { kind: Space, char_start: 31612, char_end: 31613, byte_start: 31613, byte_end: 31614, column_start: 59, column_end: 60, line_start: 950, line_end: 950 }: " "
Token { kind: Text, char_start: 31613, char_end: 31617, byte_start: 31614, byte_end: 31618, column_start: 60, column_end: 64, line_start: 950, line_end: 950 }: This
Token { kind: Newline, char_start: 31617, char_end: 31618, byte_start: 31618, byte_end: 31619, column_start: 64, column_end: 1, line_start: 950, line_end: 951 }: "\n"
Token { kind: Text, char_start: 31618, char_end: 31629, byte_start: 31619, byte_end: 31630, column_start: 1, column_end: 12, line_start: 951, line_end: 951 }: distinction
Token { kind: Space, char_start: 31629, char_end: 31630, byte_start: 31630, byte_end: 31631, column_start: 12, column_end: 13, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31630, char_end: 31632, byte_start: 31631, byte_end: 31633, column_start: 13, column_end: 15, line_start: 951, line_end: 951 }: is
Token { kind: Space, char_start: 31632, char_end: 31633, byte_start: 31633, byte_end: 31634, column_start: 15, column_end: 16, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31633, char_end: 31642, byte_start: 31634, byte_end: 31643, column_start: 16, column_end: 25, line_start: 951, line_end: 951 }: important
Token { kind: Space, char_start: 31642, char_end: 31643, byte_start: 31643, byte_end: 31644, column_start: 25, column_end: 26, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31643, char_end: 31645, byte_start: 31644, byte_end: 31646, column_start: 26, column_end: 28, line_start: 951, line_end: 951 }: if
Token { kind: Space, char_start: 31645, char_end: 31646, byte_start: 31646, byte_end: 31647, column_start: 28, column_end: 29, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31646, char_end: 31649, byte_start: 31647, byte_end: 31650, column_start: 29, column_end: 32, line_start: 951, line_end: 951 }: you
Token { kind: Space, char_start: 31649, char_end: 31650, byte_start: 31650, byte_end: 31651, column_start: 32, column_end: 33, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31650, char_end: 31654, byte_start: 31651, byte_end: 31655, column_start: 33, column_end: 37, line_start: 951, line_end: 951 }: have
Token { kind: Space, char_start: 31654, char_end: 31655, byte_start: 31655, byte_end: 31656, column_start: 37, column_end: 38, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31655, char_end: 31659, byte_start: 31656, byte_end: 31660, column_start: 38, column_end: 42, line_start: 951, line_end: 951 }: used
Token { kind: Space, char_start: 31659, char_end: 31660, byte_start: 31660, byte_end: 31661, column_start: 42, column_end: 43, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31660, char_end: 31668, byte_start: 31661, byte_end: 31669, column_start: 43, column_end: 51, line_start: 951, line_end: 951 }: Ferret's
Token { kind: Space, char_start: 31668, char_end: 31669, byte_start: 31669, byte_end: 31670, column_start: 51, column_end: 52, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31669, char_end: 31677, byte_start: 31670, byte_end: 31678, column_start: 52, column_end: 60, line_start: 951, line_end: 951 }: bindings
Token { kind: Space, char_start: 31677, char_end: 31678, byte_start: 31678, byte_end: 31679, column_start: 60, column_end: 61, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31678, char_end: 31680, byte_start: 31679, byte_end: 31681, column_start: 61, column_end: 63, line_start: 951, line_end: 951 }: to
Token { kind: Space, char_start: 31680, char_end: 31681, byte_start: 31681, byte_end: 31682, column_start: 63, column_end: 64, line_start: 951, line_end: 951 }: " "
Token { kind: Text, char_start: 31681, char_end: 31687, byte_start: 31682, byte_end: 31688, column_start: 64, column_end: 70, line_start: 951, line_end: 951 }: delete
Token { kind: Newline, char_start: 31687, char_end: 31688, byte_start: 31688, byte_end: 31689, column_start: 70, column_end: 1, line_start: 951, line_end: 952 }: "\n"
Token { kind: Text, char_start: 31688, char_end: 31695, byte_start: 31689, byte_end: 31696, column_start: 1, column_end: 8, line_start: 952, line_end: 952 }: entries
Token { kind: Space, char_start: 31695, char_end: 31696, byte_start: 31696, byte_end: 31697, column_start: 8, column_end: 9, line_start: 952, line_end: 952 }: " "
Token { kind: Text, char_start: 31696, char_end: 31700, byte_start: 31697, byte_end: 31701, column_start: 9, column_end: 13, line_start: 952, line_end: 952 }: from
Token { kind: Space, char_start: 31700, char_end: 31701, byte_start: 31701, byte_end: 31702, column_start: 13, column_end: 14, line_start: 952, line_end: 952 }: " "
Token { kind: Text, char_start: 31701, char_end: 31704, byte_start: 31702, byte_end: 31705, column_start: 14, column_end: 17, line_start: 952, line_end: 952 }: the
Token { kind: Space, char_start: 31704, char_end: 31705, byte_start: 31705, byte_end: 31706, column_start: 17, column_end: 18, line_start: 952, line_end: 952 }: " "
Token { kind: Text, char_start: 31705, char_end: 31713, byte_start: 31706, byte_end: 31714, column_start: 18, column_end: 26, line_start: 952, line_end: 952 }: listing.
Token { kind: Newline, char_start: 31713, char_end: 31714, byte_start: 31714, byte_end: 31715, column_start: 26, column_end: 1, line_start: 952, line_end: 953 }: "\n"
Token { kind: Newline, char_start: 31714, char_end: 31715, byte_start: 31715, byte_end: 31716, column_start: 1, column_end: 1, line_start: 953, line_end: 954 }: "\n"
Token { kind: CodeFence, char_start: 31715, char_end: 31718, byte_start: 31716, byte_end: 31719, column_start: 1, column_end: 4, line_start: 954, line_end: 954 }: ```
Token { kind: Newline, char_start: 31718, char_end: 31719, byte_start: 31719, byte_end: 31720, column_start: 4, column_end: 1, line_start: 954, line_end: 955 }: "\n"
Token { kind: Text, char_start: 31719, char_end: 31722, byte_start: 31720, byte_end: 31723, column_start: 1, column_end: 4, line_start: 955, line_end: 955 }: let
Token { kind: Space, char_start: 31722, char_end: 31723, byte_start: 31723, byte_end: 31724, column_start: 4, column_end: 5, line_start: 955, line_end: 955 }: " "
Token { kind: Text, char_start: 31723, char_end: 31749, byte_start: 31724, byte_end: 31750, column_start: 5, column_end: 31, line_start: 955, line_end: 955 }: g:FerretAcksCommand='cfdo'
Token { kind: Newline, char_start: 31749, char_end: 31750, byte_start: 31750, byte_end: 31751, column_start: 31, column_end: 1, line_start: 955, line_end: 956 }: "\n"
Token { kind: CodeFence, char_start: 31750, char_end: 31753, byte_start: 31751, byte_end: 31754, column_start: 1, column_end: 4, line_start: 956, line_end: 956 }: ```
Token { kind: Newline, char_start: 31753, char_end: 31754, byte_start: 31754, byte_end: 31755, column_start: 4, column_end: 1, line_start: 956, line_end: 957 }: "\n"
Token { kind: Newline, char_start: 31754, char_end: 31755, byte_start: 31755, byte_end: 31756, column_start: 1, column_end: 1, line_start: 957, line_end: 958 }: "\n"
Token { kind: At, char_start: 31755, char_end: 31756, byte_start: 31756, byte_end: 31757, column_start: 1, column_end: 2, line_start: 958, line_end: 958 }: @
Token { kind: Text, char_start: 31756, char_end: 31762, byte_start: 31757, byte_end: 31763, column_start: 2, column_end: 8, line_start: 958, line_end: 958 }: option
Token { kind: Space, char_start: 31762, char_end: 31763, byte_start: 31763, byte_end: 31764, column_start: 8, column_end: 9, line_start: 958, line_end: 958 }: " "
Token { kind: Text, char_start: 31763, char_end: 31783, byte_start: 31764, byte_end: 31784, column_start: 9, column_end: 29, line_start: 958, line_end: 958 }: g:FerretLacksCommand
Token { kind: Space, char_start: 31783, char_end: 31784, byte_start: 31784, byte_end: 31785, column_start: 29, column_end: 30, line_start: 958, line_end: 958 }: " "
Token { kind: Text, char_start: 31784, char_end: 31790, byte_start: 31785, byte_end: 31791, column_start: 30, column_end: 36, line_start: 958, line_end: 958 }: string
Token { kind: Space, char_start: 31790, char_end: 31791, byte_start: 31791, byte_end: 31792, column_start: 36, column_end: 37, line_start: 958, line_end: 958 }: " "
Token { kind: Text, char_start: 31791, char_end: 31796, byte_start: 31792, byte_end: 31797, column_start: 37, column_end: 42, line_start: 958, line_end: 958 }: "ldo"
Token { kind: Newline, char_start: 31796, char_end: 31797, byte_start: 31797, byte_end: 31798, column_start: 42, column_end: 1, line_start: 958, line_end: 959 }: "\n"
Token { kind: Newline, char_start: 31797, char_end: 31798, byte_start: 31798, byte_end: 31799, column_start: 1, column_end: 1, line_start: 959, line_end: 960 }: "\n"
Token { kind: Text, char_start: 31798, char_end: 31806, byte_start: 31799, byte_end: 31807, column_start: 1, column_end: 9, line_start: 960, line_end: 960 }: Controls
Token { kind: Space, char_start: 31806, char_end: 31807, byte_start: 31807, byte_end: 31808, column_start: 9, column_end: 10, line_start: 960, line_end: 960 }: " "
Token { kind: Text, char_start: 31807, char_end: 31810, byte_start: 31808, byte_end: 31811, column_start: 10, column_end: 13, line_start: 960, line_end: 960 }: the
Token { kind: Space, char_start: 31810, char_end: 31811, byte_start: 31811, byte_end: 31812, column_start: 13, column_end: 14, line_start: 960, line_end: 960 }: " "
Token { kind: Text, char_start: 31811, char_end: 31821, byte_start: 31812, byte_end: 31822, column_start: 14, column_end: 24, line_start: 960, line_end: 960 }: underlying
Token { kind: Space, char_start: 31821, char_end: 31822, byte_start: 31822, byte_end: 31823, column_start: 24, column_end: 25, line_start: 960, line_end: 960 }: " "
Token { kind: Text, char_start: 31822, char_end: 31825, byte_start: 31823, byte_end: 31826, column_start: 25, column_end: 28, line_start: 960, line_end: 960 }: Vim
Token { kind: Space, char_start: 31825, char_end: 31826, byte_start: 31826, byte_end: 31827, column_start: 28, column_end: 29, line_start: 960, line_end: 960 }: " "
Token { kind: Text, char_start: 31826, char_end: 31833, byte_start: 31827, byte_end: 31834, column_start: 29, column_end: 36, line_start: 960, line_end: 960 }: command
Token { kind: Space, char_start: 31833, char_end: 31834, byte_start: 31834, byte_end: 31835, column_start: 36, column_end: 37, line_start: 960, line_end: 960 }: " "
Token { kind: Text, char_start: 31834, char_end: 31838, byte_start: 31835, byte_end: 31839, column_start: 37, column_end: 41, line_start: 960, line_end: 960 }: that
Token { kind: Space, char_start: 31838, char_end: 31839, byte_start: 31839, byte_end: 31840, column_start: 41, column_end: 42, line_start: 960, line_end: 960 }: " "
Token { kind: Bar, char_start: 31839, char_end: 31840, byte_start: 31840, byte_end: 31841, column_start: 42, column_end: 43, line_start: 960, line_end: 960 }: |
Token { kind: Text, char_start: 31840, char_end: 31846, byte_start: 31841, byte_end: 31847, column_start: 43, column_end: 49, line_start: 960, line_end: 960 }: :Lacks
Token { kind: Bar, char_start: 31846, char_end: 31847, byte_start: 31847, byte_end: 31848, column_start: 49, column_end: 50, line_start: 960, line_end: 960 }: |
Token { kind: Space, char_start: 31847, char_end: 31848, byte_start: 31848, byte_end: 31849, column_start: 50, column_end: 51, line_start: 960, line_end: 960 }: " "
Token { kind: Text, char_start: 31848, char_end: 31852, byte_start: 31849, byte_end: 31853, column_start: 51, column_end: 55, line_start: 960, line_end: 960 }: uses
Token { kind: Space, char_start: 31852, char_end: 31853, byte_start: 31853, byte_end: 31854, column_start: 55, column_end: 56, line_start: 960, line_end: 960 }: " "
Token { kind: Text, char_start: 31853, char_end: 31855, byte_start: 31854, byte_end: 31856, column_start: 56, column_end: 58, line_start: 960, line_end: 960 }: to
Token { kind: Space, char_start: 31855, char_end: 31856, byte_start: 31856, byte_end: 31857, column_start: 58, column_end: 59, line_start: 960, line_end: 960 }: " "
Token { kind: Text, char_start: 31856, char_end: 31862, byte_start: 31857, byte_end: 31863, column_start: 59, column_end: 65, line_start: 960, line_end: 960 }: peform
Token { kind: Newline, char_start: 31862, char_end: 31863, byte_start: 31863, byte_end: 31864, column_start: 65, column_end: 1, line_start: 960, line_end: 961 }: "\n"
Token { kind: Text, char_start: 31863, char_end: 31877, byte_start: 31864, byte_end: 31878, column_start: 1, column_end: 15, line_start: 961, line_end: 961 }: substitutions.
Token { kind: Space, char_start: 31877, char_end: 31878, byte_start: 31878, byte_end: 31879, column_start: 15, column_end: 16, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31878, char_end: 31880, byte_start: 31879, byte_end: 31881, column_start: 16, column_end: 18, line_start: 961, line_end: 961 }: On
Token { kind: Space, char_start: 31880, char_end: 31881, byte_start: 31881, byte_end: 31882, column_start: 18, column_end: 19, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31881, char_end: 31889, byte_start: 31882, byte_end: 31890, column_start: 19, column_end: 27, line_start: 961, line_end: 961 }: versions
Token { kind: Space, char_start: 31889, char_end: 31890, byte_start: 31890, byte_end: 31891, column_start: 27, column_end: 28, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31890, char_end: 31892, byte_start: 31891, byte_end: 31893, column_start: 28, column_end: 30, line_start: 961, line_end: 961 }: of
Token { kind: Space, char_start: 31892, char_end: 31893, byte_start: 31893, byte_end: 31894, column_start: 30, column_end: 31, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31893, char_end: 31896, byte_start: 31894, byte_end: 31897, column_start: 31, column_end: 34, line_start: 961, line_end: 961 }: Vim
Token { kind: Space, char_start: 31896, char_end: 31897, byte_start: 31897, byte_end: 31898, column_start: 34, column_end: 35, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31897, char_end: 31901, byte_start: 31898, byte_end: 31902, column_start: 35, column_end: 39, line_start: 961, line_end: 961 }: that
Token { kind: Space, char_start: 31901, char_end: 31902, byte_start: 31902, byte_end: 31903, column_start: 39, column_end: 40, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31902, char_end: 31906, byte_start: 31903, byte_end: 31907, column_start: 40, column_end: 44, line_start: 961, line_end: 961 }: have
Token { kind: Space, char_start: 31906, char_end: 31907, byte_start: 31907, byte_end: 31908, column_start: 44, column_end: 45, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31907, char_end: 31910, byte_start: 31908, byte_end: 31911, column_start: 45, column_end: 48, line_start: 961, line_end: 961 }: it,
Token { kind: Space, char_start: 31910, char_end: 31911, byte_start: 31911, byte_end: 31912, column_start: 48, column_end: 49, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31911, char_end: 31919, byte_start: 31912, byte_end: 31920, column_start: 49, column_end: 57, line_start: 961, line_end: 961 }: defaults
Token { kind: Space, char_start: 31919, char_end: 31920, byte_start: 31920, byte_end: 31921, column_start: 57, column_end: 58, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31920, char_end: 31922, byte_start: 31921, byte_end: 31923, column_start: 58, column_end: 60, line_start: 961, line_end: 961 }: to
Token { kind: Space, char_start: 31922, char_end: 31923, byte_start: 31923, byte_end: 31924, column_start: 60, column_end: 61, line_start: 961, line_end: 961 }: " "
Token { kind: Bar, char_start: 31923, char_end: 31924, byte_start: 31924, byte_end: 31925, column_start: 61, column_end: 62, line_start: 961, line_end: 961 }: |
Token { kind: Text, char_start: 31924, char_end: 31928, byte_start: 31925, byte_end: 31929, column_start: 62, column_end: 66, line_start: 961, line_end: 961 }: :ldo
Token { kind: Bar, char_start: 31928, char_end: 31929, byte_start: 31929, byte_end: 31930, column_start: 66, column_end: 67, line_start: 961, line_end: 961 }: |
Token { kind: Text, char_start: 31929, char_end: 31930, byte_start: 31930, byte_end: 31931, column_start: 67, column_end: 68, line_start: 961, line_end: 961 }: ,
Token { kind: Space, char_start: 31930, char_end: 31931, byte_start: 31931, byte_end: 31932, column_start: 68, column_end: 69, line_start: 961, line_end: 961 }: " "
Token { kind: Text, char_start: 31931, char_end: 31936, byte_start: 31932, byte_end: 31937, column_start: 69, column_end: 74, line_start: 961, line_end: 961 }: which
Token { kind: Newline, char_start: 31936, char_end: 31937, byte_start: 31937, byte_end: 31938, column_start: 74, column_end: 1, line_start: 961, line_end: 962 }: "\n"
Token { kind: Text, char_start: 31937, char_end: 31942, byte_start: 31938, byte_end: 31943, column_start: 1, column_end: 6, line_start: 962, line_end: 962 }: means
Token { kind: Space, char_start: 31942, char_end: 31943, byte_start: 31943, byte_end: 31944, column_start: 6, column_end: 7, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31943, char_end: 31947, byte_start: 31944, byte_end: 31948, column_start: 7, column_end: 11, line_start: 962, line_end: 962 }: that
Token { kind: Space, char_start: 31947, char_end: 31948, byte_start: 31948, byte_end: 31949, column_start: 11, column_end: 12, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31948, char_end: 31961, byte_start: 31949, byte_end: 31962, column_start: 12, column_end: 25, line_start: 962, line_end: 962 }: substitutions
Token { kind: Space, char_start: 31961, char_end: 31962, byte_start: 31962, byte_end: 31963, column_start: 25, column_end: 26, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31962, char_end: 31966, byte_start: 31963, byte_end: 31967, column_start: 26, column_end: 30, line_start: 962, line_end: 962 }: will
Token { kind: Space, char_start: 31966, char_end: 31967, byte_start: 31967, byte_end: 31968, column_start: 30, column_end: 31, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31967, char_end: 31972, byte_start: 31968, byte_end: 31973, column_start: 31, column_end: 36, line_start: 962, line_end: 962 }: apply
Token { kind: Space, char_start: 31972, char_end: 31973, byte_start: 31973, byte_end: 31974, column_start: 36, column_end: 37, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31973, char_end: 31975, byte_start: 31974, byte_end: 31976, column_start: 37, column_end: 39, line_start: 962, line_end: 962 }: to
Token { kind: Space, char_start: 31975, char_end: 31976, byte_start: 31976, byte_end: 31977, column_start: 39, column_end: 40, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31976, char_end: 31979, byte_start: 31977, byte_end: 31980, column_start: 40, column_end: 43, line_start: 962, line_end: 962 }: the
Token { kind: Space, char_start: 31979, char_end: 31980, byte_start: 31980, byte_end: 31981, column_start: 43, column_end: 44, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31980, char_end: 31988, byte_start: 31981, byte_end: 31989, column_start: 44, column_end: 52, line_start: 962, line_end: 962 }: specific
Token { kind: Space, char_start: 31988, char_end: 31989, byte_start: 31989, byte_end: 31990, column_start: 52, column_end: 53, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31989, char_end: 31994, byte_start: 31990, byte_end: 31995, column_start: 53, column_end: 58, line_start: 962, line_end: 962 }: lines
Token { kind: Space, char_start: 31994, char_end: 31995, byte_start: 31995, byte_end: 31996, column_start: 58, column_end: 59, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 31995, char_end: 32004, byte_start: 31996, byte_end: 32005, column_start: 59, column_end: 68, line_start: 962, line_end: 962 }: currently
Token { kind: Space, char_start: 32004, char_end: 32005, byte_start: 32005, byte_end: 32006, column_start: 68, column_end: 69, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 32005, char_end: 32007, byte_start: 32006, byte_end: 32008, column_start: 69, column_end: 71, line_start: 962, line_end: 962 }: in
Token { kind: Space, char_start: 32007, char_end: 32008, byte_start: 32008, byte_end: 32009, column_start: 71, column_end: 72, line_start: 962, line_end: 962 }: " "
Token { kind: Text, char_start: 32008, char_end: 32011, byte_start: 32009, byte_end: 32012, column_start: 72, column_end: 75, line_start: 962, line_end: 962 }: the
Token { kind: Newline, char_start: 32011, char_end: 32012, byte_start: 32012, byte_end: 32013, column_start: 75, column_end: 1, line_start: 962, line_end: 963 }: "\n"
Token { kind: Bar, char_start: 32012, char_end: 32013, byte_start: 32013, byte_end: 32014, column_start: 1, column_end: 2, line_start: 963, line_end: 963 }: |
Token { kind: Text, char_start: 32013, char_end: 32021, byte_start: 32014, byte_end: 32022, column_start: 2, column_end: 10, line_start: 963, line_end: 963 }: location
Token { kind: Hyphen, char_start: 32021, char_end: 32022, byte_start: 32022, byte_end: 32023, column_start: 10, column_end: 11, line_start: 963, line_end: 963 }: -
Token { kind: Text, char_start: 32022, char_end: 32026, byte_start: 32023, byte_end: 32027, column_start: 11, column_end: 15, line_start: 963, line_end: 963 }: list
Token { kind: Bar, char_start: 32026, char_end: 32027, byte_start: 32027, byte_end: 32028, column_start: 15, column_end: 16, line_start: 963, line_end: 963 }: |
Token { kind: Text, char_start: 32027, char_end: 32028, byte_start: 32028, byte_end: 32029, column_start: 16, column_end: 17, line_start: 963, line_end: 963 }: .
Token { kind: Space, char_start: 32028, char_end: 32029, byte_start: 32029, byte_end: 32030, column_start: 17, column_end: 18, line_start: 963, line_end: 963 }: " "
Token { kind: Text, char_start: 32029, char_end: 32032, byte_start: 32030, byte_end: 32033, column_start: 18, column_end: 21, line_start: 963, line_end: 963 }: Can
Token { kind: Space, char_start: 32032, char_end: 32033, byte_start: 32033, byte_end: 32034, column_start: 21, column_end: 22, line_start: 963, line_end: 963 }: " "
Token { kind: Text, char_start: 32033, char_end: 32035, byte_start: 32034, byte_end: 32036, column_start: 22, column_end: 24, line_start: 963, line_end: 963 }: be
Token { kind: Space, char_start: 32035, char_end: 32036, byte_start: 32036, byte_end: 32037, column_start: 24, column_end: 25, line_start: 963, line_end: 963 }: " "
Token { kind: Text, char_start: 32036, char_end: 32039, byte_start: 32037, byte_end: 32040, column_start: 25, column_end: 28, line_start: 963, line_end: 963 }: set
Token { kind: Space, char_start: 32039, char_end: 32040, byte_start: 32040, byte_end: 32041, column_start: 28, column_end: 29, line_start: 963, line_end: 963 }: " "
Token { kind: Text, char_start: 32040, char_end: 32042, byte_start: 32041, byte_end: 32043, column_start: 29, column_end: 31, line_start: 963, line_end: 963 }: to
Token { kind: Space, char_start: 32042, char_end: 32043, byte_start: 32043, byte_end: 32044, column_start: 31, column_end: 32, line_start: 963, line_end: 963 }: " "
Token { kind: Text, char_start: 32043, char_end: 32049, byte_start: 32044, byte_end: 32050, column_start: 32, column_end: 38, line_start: 963, line_end: 963 }: "lfdo"
Token { kind: Space, char_start: 32049, char_end: 32050, byte_start: 32050, byte_end: 32051, column_start: 38, column_end: 39, line_start: 963, line_end: 963 }: " "
Token { kind: Text, char_start: 32050, char_end: 32052, byte_start: 32051, byte_end: 32053, column_start: 39, column_end: 41, line_start: 963, line_end: 963 }: to
Token { kind: Space, char_start: 32052, char_end: 32053, byte_start: 32053, byte_end: 32054, column_start: 41, column_end: 42, line_start: 963, line_end: 963 }: " "
Token { kind: Text, char_start: 32053, char_end: 32060, byte_start: 32054, byte_end: 32061, column_start: 42, column_end: 49, line_start: 963, line_end: 963 }: instead
Token { kind: Space, char_start: 32060, char_end: 32061, byte_start: 32061, byte_end: 32062, column_start: 49, column_end: 50, line_start: 963, line_end: 963 }: " "
Token { kind: Text, char_start: 32061, char_end: 32064, byte_start: 32062, byte_end: 32065, column_start: 50, column_end: 53, line_start: 963, line_end: 963 }: use
Token { kind: Space, char_start: 32064, char_end: 32065, byte_start: 32065, byte_end: 32066, column_start: 53, column_end: 54, line_start: 963, line_end: 963 }: " "
Token { kind: Bar, char_start: 32065, char_end: 32066, byte_start: 32066, byte_end: 32067, column_start: 54, column_end: 55, line_start: 963, line_end: 963 }: |
Token { kind: Text, char_start: 32066, char_end: 32071, byte_start: 32067, byte_end: 32072, column_start: 55, column_end: 60, line_start: 963, line_end: 963 }: :lfdo
Token { kind: Bar, char_start: 32071, char_end: 32072, byte_start: 32072, byte_end: 32073, column_start: 60, column_end: 61, line_start: 963, line_end: 963 }: |
Token { kind: Space, char_start: 32072, char_end: 32073, byte_start: 32073, byte_end: 32074, column_start: 61, column_end: 62, line_start: 963, line_end: 963 }: " "
Token { kind: Lparen, char_start: 32073, char_end: 32074, byte_start: 32074, byte_end: 32075, column_start: 62, column_end: 63, line_start: 963, line_end: 963 }: (
Token { kind: Text, char_start: 32074, char_end: 32076, byte_start: 32075, byte_end: 32077, column_start: 63, column_end: 65, line_start: 963, line_end: 963 }: if
Token { kind: Newline, char_start: 32076, char_end: 32077, byte_start: 32077, byte_end: 32078, column_start: 65, column_end: 1, line_start: 963, line_end: 964 }: "\n"
Token { kind: Text, char_start: 32077, char_end: 32086, byte_start: 32078, byte_end: 32087, column_start: 1, column_end: 10, line_start: 964, line_end: 964 }: available
Token { kind: Rparen, char_start: 32086, char_end: 32087, byte_start: 32087, byte_end: 32088, column_start: 10, column_end: 11, line_start: 964, line_end: 964 }: )
Token { kind: Text, char_start: 32087, char_end: 32088, byte_start: 32088, byte_end: 32089, column_start: 11, column_end: 12, line_start: 964, line_end: 964 }: ,
Token { kind: Space, char_start: 32088, char_end: 32089, byte_start: 32089, byte_end: 32090, column_start: 12, column_end: 13, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32089, char_end: 32094, byte_start: 32090, byte_end: 32095, column_start: 13, column_end: 18, line_start: 964, line_end: 964 }: which
Token { kind: Space, char_start: 32094, char_end: 32095, byte_start: 32095, byte_end: 32096, column_start: 18, column_end: 19, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32095, char_end: 32100, byte_start: 32096, byte_end: 32101, column_start: 19, column_end: 24, line_start: 964, line_end: 964 }: means
Token { kind: Space, char_start: 32100, char_end: 32101, byte_start: 32101, byte_end: 32102, column_start: 24, column_end: 25, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32101, char_end: 32105, byte_start: 32102, byte_end: 32106, column_start: 25, column_end: 29, line_start: 964, line_end: 964 }: that
Token { kind: Space, char_start: 32105, char_end: 32106, byte_start: 32106, byte_end: 32107, column_start: 29, column_end: 30, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32106, char_end: 32109, byte_start: 32107, byte_end: 32110, column_start: 30, column_end: 33, line_start: 964, line_end: 964 }: the
Token { kind: Space, char_start: 32109, char_end: 32110, byte_start: 32110, byte_end: 32111, column_start: 33, column_end: 34, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32110, char_end: 32123, byte_start: 32111, byte_end: 32124, column_start: 34, column_end: 47, line_start: 964, line_end: 964 }: substitutions
Token { kind: Space, char_start: 32123, char_end: 32124, byte_start: 32124, byte_end: 32125, column_start: 47, column_end: 48, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32124, char_end: 32128, byte_start: 32125, byte_end: 32129, column_start: 48, column_end: 52, line_start: 964, line_end: 964 }: will
Token { kind: Space, char_start: 32128, char_end: 32129, byte_start: 32129, byte_end: 32130, column_start: 52, column_end: 53, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32129, char_end: 32131, byte_start: 32130, byte_end: 32132, column_start: 53, column_end: 55, line_start: 964, line_end: 964 }: be
Token { kind: Space, char_start: 32131, char_end: 32132, byte_start: 32132, byte_end: 32133, column_start: 55, column_end: 56, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32132, char_end: 32139, byte_start: 32133, byte_end: 32140, column_start: 56, column_end: 63, line_start: 964, line_end: 964 }: applied
Token { kind: Space, char_start: 32139, char_end: 32140, byte_start: 32140, byte_end: 32141, column_start: 63, column_end: 64, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32140, char_end: 32142, byte_start: 32141, byte_end: 32143, column_start: 64, column_end: 66, line_start: 964, line_end: 964 }: on
Token { kind: Space, char_start: 32142, char_end: 32143, byte_start: 32143, byte_end: 32144, column_start: 66, column_end: 67, line_start: 964, line_end: 964 }: " "
Token { kind: Text, char_start: 32143, char_end: 32144, byte_start: 32144, byte_end: 32145, column_start: 67, column_end: 68, line_start: 964, line_end: 964 }: a
Token { kind: Newline, char_start: 32144, char_end: 32145, byte_start: 32145, byte_end: 32146, column_start: 68, column_end: 1, line_start: 964, line_end: 965 }: "\n"
Token { kind: Text, char_start: 32145, char_end: 32148, byte_start: 32146, byte_end: 32149, column_start: 1, column_end: 4, line_start: 965, line_end: 965 }: per
Token { kind: Hyphen, char_start: 32148, char_end: 32149, byte_start: 32149, byte_end: 32150, column_start: 4, column_end: 5, line_start: 965, line_end: 965 }: -
Token { kind: Text, char_start: 32149, char_end: 32153, byte_start: 32150, byte_end: 32154, column_start: 5, column_end: 9, line_start: 965, line_end: 965 }: file
Token { kind: Space, char_start: 32153, char_end: 32154, byte_start: 32154, byte_end: 32155, column_start: 9, column_end: 10, line_start: 965, line_end: 965 }: " "
Token { kind: Text, char_start: 32154, char_end: 32159, byte_start: 32155, byte_end: 32160, column_start: 10, column_end: 15, line_start: 965, line_end: 965 }: basis
Token { kind: Space, char_start: 32159, char_end: 32160, byte_start: 32160, byte_end: 32161, column_start: 15, column_end: 16, line_start: 965, line_end: 965 }: " "
Token { kind: Text, char_start: 32160, char_end: 32162, byte_start: 32161, byte_end: 32163, column_start: 16, column_end: 18, line_start: 965, line_end: 965 }: to
Token { kind: Space, char_start: 32162, char_end: 32163, byte_start: 32163, byte_end: 32164, column_start: 18, column_end: 19, line_start: 965, line_end: 965 }: " "
Token { kind: Text, char_start: 32163, char_end: 32166, byte_start: 32164, byte_end: 32167, column_start: 19, column_end: 22, line_start: 965, line_end: 965 }: all
Token { kind: Space, char_start: 32166, char_end: 32167, byte_start: 32167, byte_end: 32168, column_start: 22, column_end: 23, line_start: 965, line_end: 965 }: " "
Token { kind: Text, char_start: 32167, char_end: 32170, byte_start: 32168, byte_end: 32171, column_start: 23, column_end: 26, line_start: 965, line_end: 965 }: the
Token { kind: Space, char_start: 32170, char_end: 32171, byte_start: 32171, byte_end: 32172, column_start: 26, column_end: 27, line_start: 965, line_end: 965 }: " "
Token { kind: Text, char_start: 32171, char_end: 32176, byte_start: 32172, byte_end: 32177, column_start: 27, column_end: 32, line_start: 965, line_end: 965 }: files
Token { kind: Space, char_start: 32176, char_end: 32177, byte_start: 32177, byte_end: 32178, column_start: 32, column_end: 33, line_start: 965, line_end: 965 }: " "
Token { kind: Text, char_start: 32177, char_end: 32179, byte_start: 32178, byte_end: 32180, column_start: 33, column_end: 35, line_start: 965, line_end: 965 }: in
Token { kind: Space, char_start: 32179, char_end: 32180, byte_start: 32180, byte_end: 32181, column_start: 35, column_end: 36, line_start: 965, line_end: 965 }: " "
Token { kind: Text, char_start: 32180, char_end: 32183, byte_start: 32181, byte_end: 32184, column_start: 36, column_end: 39, line_start: 965, line_end: 965 }: the
Token { kind: Space, char_start: 32183, char_end: 32184, byte_start: 32184, byte_end: 32185, column_start: 39, column_end: 40, line_start: 965, line_end: 965 }: " "
Token { kind: Bar, char_start: 32184, char_end: 32185, byte_start: 32185, byte_end: 32186, column_start: 40, column_end: 41, line_start: 965, line_end: 965 }: |
Token { kind: Text, char_start: 32185, char_end: 32193, byte_start: 32186, byte_end: 32194, column_start: 41, column_end: 49, line_start: 965, line_end: 965 }: location
Token { kind: Hyphen, char_start: 32193, char_end: 32194, byte_start: 32194, byte_end: 32195, column_start: 49, column_end: 50, line_start: 965, line_end: 965 }: -
Token { kind: Text, char_start: 32194, char_end: 32198, byte_start: 32195, byte_end: 32199, column_start: 50, column_end: 54, line_start: 965, line_end: 965 }: list
Token { kind: Bar, char_start: 32198, char_end: 32199, byte_start: 32199, byte_end: 32200, column_start: 54, column_end: 55, line_start: 965, line_end: 965 }: |
Token { kind: Text, char_start: 32199, char_end: 32200, byte_start: 32200, byte_end: 32201, column_start: 55, column_end: 56, line_start: 965, line_end: 965 }: .
Token { kind: Space, char_start: 32200, char_end: 32201, byte_start: 32201, byte_end: 32202, column_start: 56, column_end: 57, line_start: 965, line_end: 965 }: " "
Token { kind: Text, char_start: 32201, char_end: 32205, byte_start: 32202, byte_end: 32206, column_start: 57, column_end: 61, line_start: 965, line_end: 965 }: This
Token { kind: Newline, char_start: 32205, char_end: 32206, byte_start: 32206, byte_end: 32207, column_start: 61, column_end: 1, line_start: 965, line_end: 966 }: "\n"
Token { kind: Text, char_start: 32206, char_end: 32217, byte_start: 32207, byte_end: 32218, column_start: 1, column_end: 12, line_start: 966, line_end: 966 }: distinction
Token { kind: Space, char_start: 32217, char_end: 32218, byte_start: 32218, byte_end: 32219, column_start: 12, column_end: 13, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32218, char_end: 32220, byte_start: 32219, byte_end: 32221, column_start: 13, column_end: 15, line_start: 966, line_end: 966 }: is
Token { kind: Space, char_start: 32220, char_end: 32221, byte_start: 32221, byte_end: 32222, column_start: 15, column_end: 16, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32221, char_end: 32230, byte_start: 32222, byte_end: 32231, column_start: 16, column_end: 25, line_start: 966, line_end: 966 }: important
Token { kind: Space, char_start: 32230, char_end: 32231, byte_start: 32231, byte_end: 32232, column_start: 25, column_end: 26, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32231, char_end: 32233, byte_start: 32232, byte_end: 32234, column_start: 26, column_end: 28, line_start: 966, line_end: 966 }: if
Token { kind: Space, char_start: 32233, char_end: 32234, byte_start: 32234, byte_end: 32235, column_start: 28, column_end: 29, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32234, char_end: 32237, byte_start: 32235, byte_end: 32238, column_start: 29, column_end: 32, line_start: 966, line_end: 966 }: you
Token { kind: Space, char_start: 32237, char_end: 32238, byte_start: 32238, byte_end: 32239, column_start: 32, column_end: 33, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32238, char_end: 32242, byte_start: 32239, byte_end: 32243, column_start: 33, column_end: 37, line_start: 966, line_end: 966 }: have
Token { kind: Space, char_start: 32242, char_end: 32243, byte_start: 32243, byte_end: 32244, column_start: 37, column_end: 38, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32243, char_end: 32247, byte_start: 32244, byte_end: 32248, column_start: 38, column_end: 42, line_start: 966, line_end: 966 }: used
Token { kind: Space, char_start: 32247, char_end: 32248, byte_start: 32248, byte_end: 32249, column_start: 42, column_end: 43, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32248, char_end: 32256, byte_start: 32249, byte_end: 32257, column_start: 43, column_end: 51, line_start: 966, line_end: 966 }: Ferret's
Token { kind: Space, char_start: 32256, char_end: 32257, byte_start: 32257, byte_end: 32258, column_start: 51, column_end: 52, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32257, char_end: 32265, byte_start: 32258, byte_end: 32266, column_start: 52, column_end: 60, line_start: 966, line_end: 966 }: bindings
Token { kind: Space, char_start: 32265, char_end: 32266, byte_start: 32266, byte_end: 32267, column_start: 60, column_end: 61, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32266, char_end: 32268, byte_start: 32267, byte_end: 32269, column_start: 61, column_end: 63, line_start: 966, line_end: 966 }: to
Token { kind: Space, char_start: 32268, char_end: 32269, byte_start: 32269, byte_end: 32270, column_start: 63, column_end: 64, line_start: 966, line_end: 966 }: " "
Token { kind: Text, char_start: 32269, char_end: 32275, byte_start: 32270, byte_end: 32276, column_start: 64, column_end: 70, line_start: 966, line_end: 966 }: delete
Token { kind: Newline, char_start: 32275, char_end: 32276, byte_start: 32276, byte_end: 32277, column_start: 70, column_end: 1, line_start: 966, line_end: 967 }: "\n"
Token { kind: Text, char_start: 32276, char_end: 32283, byte_start: 32277, byte_end: 32284, column_start: 1, column_end: 8, line_start: 967, line_end: 967 }: entries
Token { kind: Space, char_start: 32283, char_end: 32284, byte_start: 32284, byte_end: 32285, column_start: 8, column_end: 9, line_start: 967, line_end: 967 }: " "
Token { kind: Text, char_start: 32284, char_end: 32288, byte_start: 32285, byte_end: 32289, column_start: 9, column_end: 13, line_start: 967, line_end: 967 }: from
Token { kind: Space, char_start: 32288, char_end: 32289, byte_start: 32289, byte_end: 32290, column_start: 13, column_end: 14, line_start: 967, line_end: 967 }: " "
Token { kind: Text, char_start: 32289, char_end: 32292, byte_start: 32290, byte_end: 32293, column_start: 14, column_end: 17, line_start: 967, line_end: 967 }: the
Token { kind: Space, char_start: 32292, char_end: 32293, byte_start: 32293, byte_end: 32294, column_start: 17, column_end: 18, line_start: 967, line_end: 967 }: " "
Token { kind: Text, char_start: 32293, char_end: 32301, byte_start: 32294, byte_end: 32302, column_start: 18, column_end: 26, line_start: 967, line_end: 967 }: listing.
Token { kind: Newline, char_start: 32301, char_end: 32302, byte_start: 32302, byte_end: 32303, column_start: 26, column_end: 1, line_start: 967, line_end: 968 }: "\n"
Token { kind: Newline, char_start: 32302, char_end: 32303, byte_start: 32303, byte_end: 32304, column_start: 1, column_end: 1, line_start: 968, line_end: 969 }: "\n"
Token { kind: CodeFence, char_start: 32303, char_end: 32306, byte_start: 32304, byte_end: 32307, column_start: 1, column_end: 4, line_start: 969, line_end: 969 }: ```
Token { kind: Newline, char_start: 32306, char_end: 32307, byte_start: 32307, byte_end: 32308, column_start: 4, column_end: 1, line_start: 969, line_end: 970 }: "\n"
Token { kind: Text, char_start: 32307, char_end: 32310, byte_start: 32308, byte_end: 32311, column_start: 1, column_end: 4, line_start: 970, line_end: 970 }: let
Token { kind: Space, char_start: 32310, char_end: 32311, byte_start: 32311, byte_end: 32312, column_start: 4, column_end: 5, line_start: 970, line_end: 970 }: " "
Token { kind: Text, char_start: 32311, char_end: 32338, byte_start: 32312, byte_end: 32339, column_start: 5, column_end: 32, line_start: 970, line_end: 970 }: g:FerretLacksCommand='lfdo'
Token { kind: Newline, char_start: 32338, char_end: 32339, byte_start: 32339, byte_end: 32340, column_start: 32, column_end: 1, line_start: 970, line_end: 971 }: "\n"
Token { kind: CodeFence, char_start: 32339, char_end: 32342, byte_start: 32340, byte_end: 32343, column_start: 1, column_end: 4, line_start: 971, line_end: 971 }: ```
Token { kind: Newline, char_start: 32342, char_end: 32343, byte_start: 32343, byte_end: 32344, column_start: 4, column_end: 1, line_start: 971, line_end: 972 }: "\n"
Token { kind: Newline, char_start: 32343, char_end: 32344, byte_start: 32344, byte_end: 32345, column_start: 1, column_end: 1, line_start: 972, line_end: 973 }: "\n"
Token { kind: At, char_start: 32344, char_end: 32345, byte_start: 32345, byte_end: 32346, column_start: 1, column_end: 2, line_start: 973, line_end: 973 }: @
Token { kind: Text, char_start: 32345, char_end: 32351, byte_start: 32346, byte_end: 32352, column_start: 2, column_end: 8, line_start: 973, line_end: 973 }: option
Token { kind: Space, char_start: 32351, char_end: 32352, byte_start: 32352, byte_end: 32353, column_start: 8, column_end: 9, line_start: 973, line_end: 973 }: " "
Token { kind: Text, char_start: 32352, char_end: 32369, byte_start: 32353, byte_end: 32370, column_start: 9, column_end: 26, line_start: 973, line_end: 973 }: g:FerretVeryMagic
Token { kind: Space, char_start: 32369, char_end: 32370, byte_start: 32370, byte_end: 32371, column_start: 26, column_end: 27, line_start: 973, line_end: 973 }: " "
Token { kind: Text, char_start: 32370, char_end: 32377, byte_start: 32371, byte_end: 32378, column_start: 27, column_end: 34, line_start: 973, line_end: 973 }: boolean
Token { kind: Space, char_start: 32377, char_end: 32378, byte_start: 32378, byte_end: 32379, column_start: 34, column_end: 35, line_start: 973, line_end: 973 }: " "
Token { kind: Text, char_start: 32378, char_end: 32379, byte_start: 32379, byte_end: 32380, column_start: 35, column_end: 36, line_start: 973, line_end: 973 }: 1
Token { kind: Newline, char_start: 32379, char_end: 32380, byte_start: 32380, byte_end: 32381, column_start: 36, column_end: 1, line_start: 973, line_end: 974 }: "\n"
Token { kind: Newline, char_start: 32380, char_end: 32381, byte_start: 32381, byte_end: 32382, column_start: 1, column_end: 1, line_start: 974, line_end: 975 }: "\n"
Token { kind: Text, char_start: 32381, char_end: 32389, byte_start: 32382, byte_end: 32390, column_start: 1, column_end: 9, line_start: 975, line_end: 975 }: Controls
Token { kind: Space, char_start: 32389, char_end: 32390, byte_start: 32390, byte_end: 32391, column_start: 9, column_end: 10, line_start: 975, line_end: 975 }: " "
Token { kind: Text, char_start: 32390, char_end: 32397, byte_start: 32391, byte_end: 32398, column_start: 10, column_end: 17, line_start: 975, line_end: 975 }: whether
Token { kind: Space, char_start: 32397, char_end: 32398, byte_start: 32398, byte_end: 32399, column_start: 17, column_end: 18, line_start: 975, line_end: 975 }: " "
Token { kind: Text, char_start: 32398, char_end: 32401, byte_start: 32399, byte_end: 32402, column_start: 18, column_end: 21, line_start: 975, line_end: 975 }: the
Token { kind: Space, char_start: 32401, char_end: 32402, byte_start: 32402, byte_end: 32403, column_start: 21, column_end: 22, line_start: 975, line_end: 975 }: " "
Token { kind: Bar, char_start: 32402, char_end: 32403, byte_start: 32403, byte_end: 32404, column_start: 22, column_end: 23, line_start: 975, line_end: 975 }: |
Token { kind: BlockQuote, char_start: 32403, char_end: 32404, byte_start: 32404, byte_end: 32405, column_start: 23, column_end: 24, line_start: 975, line_end: 975 }: <
Token { kind: Text, char_start: 32404, char_end: 32408, byte_start: 32405, byte_end: 32409, column_start: 24, column_end: 28, line_start: 975, line_end: 975 }: Plug
Token { kind: BlockQuote, char_start: 32408, char_end: 32409, byte_start: 32409, byte_end: 32410, column_start: 28, column_end: 29, line_start: 975, line_end: 975 }: >
Token { kind: Lparen, char_start: 32409, char_end: 32410, byte_start: 32410, byte_end: 32411, column_start: 29, column_end: 30, line_start: 975, line_end: 975 }: (
Token { kind: Text, char_start: 32410, char_end: 32420, byte_start: 32411, byte_end: 32421, column_start: 30, column_end: 40, line_start: 975, line_end: 975 }: FerretAcks
Token { kind: Rparen, char_start: 32420, char_end: 32421, byte_start: 32421, byte_end: 32422, column_start: 40, column_end: 41, line_start: 975, line_end: 975 }: )
Token { kind: Bar, char_start: 32421, char_end: 32422, byte_start: 32422, byte_end: 32423, column_start: 41, column_end: 42, line_start: 975, line_end: 975 }: |
Token { kind: Space, char_start: 32422, char_end: 32423, byte_start: 32423, byte_end: 32424, column_start: 42, column_end: 43, line_start: 975, line_end: 975 }: " "
Token { kind: Text, char_start: 32423, char_end: 32430, byte_start: 32424, byte_end: 32431, column_start: 43, column_end: 50, line_start: 975, line_end: 975 }: mapping
Token { kind: Space, char_start: 32430, char_end: 32431, byte_start: 32431, byte_end: 32432, column_start: 50, column_end: 51, line_start: 975, line_end: 975 }: " "
Token { kind: Text, char_start: 32431, char_end: 32437, byte_start: 32432, byte_end: 32438, column_start: 51, column_end: 57, line_start: 975, line_end: 975 }: should
Token { kind: Space, char_start: 32437, char_end: 32438, byte_start: 32438, byte_end: 32439, column_start: 57, column_end: 58, line_start: 975, line_end: 975 }: " "
Token { kind: Text, char_start: 32438, char_end: 32446, byte_start: 32439, byte_end: 32447, column_start: 58, column_end: 66, line_start: 975, line_end: 975 }: populate
Token { kind: Space, char_start: 32446, char_end: 32447, byte_start: 32447, byte_end: 32448, column_start: 66, column_end: 67, line_start: 975, line_end: 975 }: " "
Token { kind: Text, char_start: 32447, char_end: 32450, byte_start: 32448, byte_end: 32451, column_start: 67, column_end: 70, line_start: 975, line_end: 975 }: the
Token { kind: Space, char_start: 32450, char_end: 32451, byte_start: 32451, byte_end: 32452, column_start: 70, column_end: 71, line_start: 975, line_end: 975 }: " "
Token { kind: Text, char_start: 32451, char_end: 32458, byte_start: 32452, byte_end: 32459, column_start: 71, column_end: 78, line_start: 975, line_end: 975 }: command
Token { kind: Newline, char_start: 32458, char_end: 32459, byte_start: 32459, byte_end: 32460, column_start: 78, column_end: 1, line_start: 975, line_end: 976 }: "\n"
Token { kind: Text, char_start: 32459, char_end: 32463, byte_start: 32460, byte_end: 32464, column_start: 1, column_end: 5, line_start: 976, line_end: 976 }: line
Token { kind: Space, char_start: 32463, char_end: 32464, byte_start: 32464, byte_end: 32465, column_start: 5, column_end: 6, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32464, char_end: 32468, byte_start: 32465, byte_end: 32469, column_start: 6, column_end: 10, line_start: 976, line_end: 976 }: with
Token { kind: Space, char_start: 32468, char_end: 32469, byte_start: 32469, byte_end: 32470, column_start: 10, column_end: 11, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32469, char_end: 32472, byte_start: 32470, byte_end: 32473, column_start: 11, column_end: 14, line_start: 976, line_end: 976 }: the
Token { kind: Space, char_start: 32472, char_end: 32473, byte_start: 32473, byte_end: 32474, column_start: 14, column_end: 15, line_start: 976, line_end: 976 }: " "
Token { kind: Bar, char_start: 32473, char_end: 32474, byte_start: 32474, byte_end: 32475, column_start: 15, column_end: 16, line_start: 976, line_end: 976 }: |
Token { kind: Text, char_start: 32474, char_end: 32477, byte_start: 32475, byte_end: 32478, column_start: 16, column_end: 19, line_start: 976, line_end: 976 }: /\v
Token { kind: Bar, char_start: 32477, char_end: 32478, byte_start: 32478, byte_end: 32479, column_start: 19, column_end: 20, line_start: 976, line_end: 976 }: |
Token { kind: Space, char_start: 32478, char_end: 32479, byte_start: 32479, byte_end: 32480, column_start: 20, column_end: 21, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32479, char_end: 32484, byte_start: 32480, byte_end: 32485, column_start: 21, column_end: 26, line_start: 976, line_end: 976 }: "very
Token { kind: Space, char_start: 32484, char_end: 32485, byte_start: 32485, byte_end: 32486, column_start: 26, column_end: 27, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32485, char_end: 32491, byte_start: 32486, byte_end: 32492, column_start: 27, column_end: 33, line_start: 976, line_end: 976 }: magic"
Token { kind: Space, char_start: 32491, char_end: 32492, byte_start: 32492, byte_end: 32493, column_start: 33, column_end: 34, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32492, char_end: 32499, byte_start: 32493, byte_end: 32500, column_start: 34, column_end: 41, line_start: 976, line_end: 976 }: marker.
Token { kind: Space, char_start: 32499, char_end: 32500, byte_start: 32500, byte_end: 32501, column_start: 41, column_end: 42, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32500, char_end: 32505, byte_start: 32501, byte_end: 32506, column_start: 42, column_end: 47, line_start: 976, line_end: 976 }: Given
Token { kind: Space, char_start: 32505, char_end: 32506, byte_start: 32506, byte_end: 32507, column_start: 47, column_end: 48, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32506, char_end: 32510, byte_start: 32507, byte_end: 32511, column_start: 48, column_end: 52, line_start: 976, line_end: 976 }: that
Token { kind: Space, char_start: 32510, char_end: 32511, byte_start: 32511, byte_end: 32512, column_start: 52, column_end: 53, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32511, char_end: 32514, byte_start: 32512, byte_end: 32515, column_start: 53, column_end: 56, line_start: 976, line_end: 976 }: the
Token { kind: Space, char_start: 32514, char_end: 32515, byte_start: 32515, byte_end: 32516, column_start: 56, column_end: 57, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32515, char_end: 32523, byte_start: 32516, byte_end: 32524, column_start: 57, column_end: 65, line_start: 976, line_end: 976 }: argument
Token { kind: Space, char_start: 32523, char_end: 32524, byte_start: 32524, byte_end: 32525, column_start: 65, column_end: 66, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32524, char_end: 32530, byte_start: 32525, byte_end: 32531, column_start: 66, column_end: 72, line_start: 976, line_end: 976 }: passed
Token { kind: Space, char_start: 32530, char_end: 32531, byte_start: 32531, byte_end: 32532, column_start: 72, column_end: 73, line_start: 976, line_end: 976 }: " "
Token { kind: Text, char_start: 32531, char_end: 32533, byte_start: 32532, byte_end: 32534, column_start: 73, column_end: 75, line_start: 976, line_end: 976 }: to
Token { kind: Newline, char_start: 32533, char_end: 32534, byte_start: 32534, byte_end: 32535, column_start: 75, column_end: 1, line_start: 976, line_end: 977 }: "\n"
Token { kind: Bar, char_start: 32534, char_end: 32535, byte_start: 32535, byte_end: 32536, column_start: 1, column_end: 2, line_start: 977, line_end: 977 }: |
Token { kind: Text, char_start: 32535, char_end: 32540, byte_start: 32536, byte_end: 32541, column_start: 2, column_end: 7, line_start: 977, line_end: 977 }: :Acks
Token { kind: Bar, char_start: 32540, char_end: 32541, byte_start: 32541, byte_end: 32542, column_start: 7, column_end: 8, line_start: 977, line_end: 977 }: |
Token { kind: Space, char_start: 32541, char_end: 32542, byte_start: 32542, byte_end: 32543, column_start: 8, column_end: 9, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32542, char_end: 32544, byte_start: 32543, byte_end: 32545, column_start: 9, column_end: 11, line_start: 977, line_end: 977 }: is
Token { kind: Space, char_start: 32544, char_end: 32545, byte_start: 32545, byte_end: 32546, column_start: 11, column_end: 12, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32545, char_end: 32551, byte_start: 32546, byte_end: 32552, column_start: 12, column_end: 18, line_start: 977, line_end: 977 }: handed
Token { kind: Space, char_start: 32551, char_end: 32552, byte_start: 32552, byte_end: 32553, column_start: 18, column_end: 19, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32552, char_end: 32560, byte_start: 32553, byte_end: 32561, column_start: 19, column_end: 27, line_start: 977, line_end: 977 }: straight
Token { kind: Space, char_start: 32560, char_end: 32561, byte_start: 32561, byte_end: 32562, column_start: 27, column_end: 28, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32561, char_end: 32563, byte_start: 32562, byte_end: 32564, column_start: 28, column_end: 30, line_start: 977, line_end: 977 }: to
Token { kind: Space, char_start: 32563, char_end: 32564, byte_start: 32564, byte_end: 32565, column_start: 30, column_end: 31, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32564, char_end: 32568, byte_start: 32565, byte_end: 32569, column_start: 31, column_end: 35, line_start: 977, line_end: 977 }: Vim,
Token { kind: Space, char_start: 32568, char_end: 32569, byte_start: 32569, byte_end: 32570, column_start: 35, column_end: 36, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32569, char_end: 32574, byte_start: 32570, byte_end: 32575, column_start: 36, column_end: 41, line_start: 977, line_end: 977 }: using
Token { kind: Space, char_start: 32574, char_end: 32575, byte_start: 32575, byte_end: 32576, column_start: 41, column_end: 42, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32575, char_end: 32580, byte_start: 32576, byte_end: 32581, column_start: 42, column_end: 47, line_start: 977, line_end: 977 }: "very
Token { kind: Space, char_start: 32580, char_end: 32581, byte_start: 32581, byte_end: 32582, column_start: 47, column_end: 48, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32581, char_end: 32587, byte_start: 32582, byte_end: 32588, column_start: 48, column_end: 54, line_start: 977, line_end: 977 }: magic"
Token { kind: Space, char_start: 32587, char_end: 32588, byte_start: 32588, byte_end: 32589, column_start: 54, column_end: 55, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32588, char_end: 32593, byte_start: 32589, byte_end: 32594, column_start: 55, column_end: 60, line_start: 977, line_end: 977 }: makes
Token { kind: Space, char_start: 32593, char_end: 32594, byte_start: 32594, byte_end: 32595, column_start: 60, column_end: 61, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32594, char_end: 32596, byte_start: 32595, byte_end: 32597, column_start: 61, column_end: 63, line_start: 977, line_end: 977 }: it
Token { kind: Space, char_start: 32596, char_end: 32597, byte_start: 32597, byte_end: 32598, column_start: 63, column_end: 64, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32597, char_end: 32601, byte_start: 32598, byte_end: 32602, column_start: 64, column_end: 68, line_start: 977, line_end: 977 }: more
Token { kind: Space, char_start: 32601, char_end: 32602, byte_start: 32602, byte_end: 32603, column_start: 68, column_end: 69, line_start: 977, line_end: 977 }: " "
Token { kind: Text, char_start: 32602, char_end: 32608, byte_start: 32603, byte_end: 32609, column_start: 69, column_end: 75, line_start: 977, line_end: 977 }: likely
Token { kind: Newline, char_start: 32608, char_end: 32609, byte_start: 32609, byte_end: 32610, column_start: 75, column_end: 1, line_start: 977, line_end: 978 }: "\n"
Token { kind: Text, char_start: 32609, char_end: 32613, byte_start: 32610, byte_end: 32614, column_start: 1, column_end: 5, line_start: 978, line_end: 978 }: that
Token { kind: Space, char_start: 32613, char_end: 32614, byte_start: 32614, byte_end: 32615, column_start: 5, column_end: 6, line_start: 978, line_end: 978 }: " "
Token { kind: Text, char_start: 32614, char_end: 32617, byte_start: 32615, byte_end: 32618, column_start: 6, column_end: 9, line_start: 978, line_end: 978 }: the
Token { kind: Space, char_start: 32617, char_end: 32618, byte_start: 32618, byte_end: 32619, column_start: 9, column_end: 10, line_start: 978, line_end: 978 }: " "
Token { kind: Lparen, char_start: 32618, char_end: 32619, byte_start: 32619, byte_end: 32620, column_start: 10, column_end: 11, line_start: 978, line_end: 978 }: (
Token { kind: Text, char_start: 32619, char_end: 32627, byte_start: 32620, byte_end: 32628, column_start: 11, column_end: 19, line_start: 978, line_end: 978 }: probably
Token { kind: Space, char_start: 32627, char_end: 32628, byte_start: 32628, byte_end: 32629, column_start: 19, column_end: 20, line_start: 978, line_end: 978 }: " "
Token { kind: Text, char_start: 32628, char_end: 32632, byte_start: 32629, byte_end: 32633, column_start: 20, column_end: 24, line_start: 978, line_end: 978 }: Perl
Token { kind: Hyphen, char_start: 32632, char_end: 32633, byte_start: 32633, byte_end: 32634, column_start: 24, column_end: 25, line_start: 978, line_end: 978 }: -
Token { kind: Text, char_start: 32633, char_end: 32643, byte_start: 32634, byte_end: 32644, column_start: 25, column_end: 35, line_start: 978, line_end: 978 }: compatible
Token { kind: Rparen, char_start: 32643, char_end: 32644, byte_start: 32644, byte_end: 32645, column_start: 35, column_end: 36, line_start: 978, line_end: 978 }: )
Token { kind: Space, char_start: 32644, char_end: 32645, byte_start: 32645, byte_end: 32646, column_start: 36, column_end: 37, line_start: 978, line_end: 978 }: " "
Token { kind: Text, char_start: 32645, char_end: 32652, byte_start: 32646, byte_end: 32653, column_start: 37, column_end: 44, line_start: 978, line_end: 978 }: regular
Token { kind: Space, char_start: 32652, char_end: 32653, byte_start: 32653, byte_end: 32654, column_start: 44, column_end: 45, line_start: 978, line_end: 978 }: " "
Token { kind: Text, char_start: 32653, char_end: 32663, byte_start: 32654, byte_end: 32664, column_start: 45, column_end: 55, line_start: 978, line_end: 978 }: expression
Token { kind: Space, char_start: 32663, char_end: 32664, byte_start: 32664, byte_end: 32665, column_start: 55, column_end: 56, line_start: 978, line_end: 978 }: " "
Token { kind: Text, char_start: 32664, char_end: 32668, byte_start: 32665, byte_end: 32669, column_start: 56, column_end: 60, line_start: 978, line_end: 978 }: used
Token { kind: Space, char_start: 32668, char_end: 32669, byte_start: 32669, byte_end: 32670, column_start: 60, column_end: 61, line_start: 978, line_end: 978 }: " "
Token { kind: Text, char_start: 32669, char_end: 32671, byte_start: 32670, byte_end: 32672, column_start: 61, column_end: 63, line_start: 978, line_end: 978 }: in
Token { kind: Space, char_start: 32671, char_end: 32672, byte_start: 32672, byte_end: 32673, column_start: 63, column_end: 64, line_start: 978, line_end: 978 }: " "
Token { kind: Text, char_start: 32672, char_end: 32675, byte_start: 32673, byte_end: 32676, column_start: 64, column_end: 67, line_start: 978, line_end: 978 }: the
Token { kind: Space, char_start: 32675, char_end: 32676, byte_start: 32676, byte_end: 32677, column_start: 67, column_end: 68, line_start: 978, line_end: 978 }: " "
Token { kind: Text, char_start: 32676, char_end: 32683, byte_start: 32677, byte_end: 32684, column_start: 68, column_end: 75, line_start: 978, line_end: 978 }: initial
Token { kind: Newline, char_start: 32683, char_end: 32684, byte_start: 32684, byte_end: 32685, column_start: 75, column_end: 1, line_start: 978, line_end: 979 }: "\n"
Token { kind: Text, char_start: 32684, char_end: 32690, byte_start: 32685, byte_end: 32691, column_start: 1, column_end: 7, line_start: 979, line_end: 979 }: search
Token { kind: Space, char_start: 32690, char_end: 32691, byte_start: 32691, byte_end: 32692, column_start: 7, column_end: 8, line_start: 979, line_end: 979 }: " "
Token { kind: Text, char_start: 32691, char_end: 32694, byte_start: 32692, byte_end: 32695, column_start: 8, column_end: 11, line_start: 979, line_end: 979 }: can
Token { kind: Space, char_start: 32694, char_end: 32695, byte_start: 32695, byte_end: 32696, column_start: 11, column_end: 12, line_start: 979, line_end: 979 }: " "
Token { kind: Text, char_start: 32695, char_end: 32697, byte_start: 32696, byte_end: 32698, column_start: 12, column_end: 14, line_start: 979, line_end: 979 }: be
Token { kind: Space, char_start: 32697, char_end: 32698, byte_start: 32698, byte_end: 32699, column_start: 14, column_end: 15, line_start: 979, line_end: 979 }: " "
Token { kind: Text, char_start: 32698, char_end: 32702, byte_start: 32699, byte_end: 32703, column_start: 15, column_end: 19, line_start: 979, line_end: 979 }: used
Token { kind: Space, char_start: 32702, char_end: 32703, byte_start: 32703, byte_end: 32704, column_start: 19, column_end: 20, line_start: 979, line_end: 979 }: " "
Token { kind: Text, char_start: 32703, char_end: 32711, byte_start: 32704, byte_end: 32712, column_start: 20, column_end: 28, line_start: 979, line_end: 979 }: directly
Token { kind: Space, char_start: 32711, char_end: 32712, byte_start: 32712, byte_end: 32713, column_start: 28, column_end: 29, line_start: 979, line_end: 979 }: " "
Token { kind: Text, char_start: 32712, char_end: 32716, byte_start: 32713, byte_end: 32717, column_start: 29, column_end: 33, line_start: 979, line_end: 979 }: with
Token { kind: Space, char_start: 32716, char_end: 32717, byte_start: 32717, byte_end: 32718, column_start: 33, column_end: 34, line_start: 979, line_end: 979 }: " "
Token { kind: Text, char_start: 32717, char_end: 32722, byte_start: 32718, byte_end: 32723, column_start: 34, column_end: 39, line_start: 979, line_end: 979 }: Vim's
Token { kind: Space, char_start: 32722, char_end: 32723, byte_start: 32723, byte_end: 32724, column_start: 39, column_end: 40, line_start: 979, line_end: 979 }: " "
Token { kind: Lparen, char_start: 32723, char_end: 32724, byte_start: 32724, byte_end: 32725, column_start: 40, column_end: 41, line_start: 979, line_end: 979 }: (
Token { kind: Text, char_start: 32724, char_end: 32732, byte_start: 32725, byte_end: 32733, column_start: 41, column_end: 49, line_start: 979, line_end: 979 }: famously
Token { kind: Space, char_start: 32732, char_end: 32733, byte_start: 32733, byte_end: 32734, column_start: 49, column_end: 50, line_start: 979, line_end: 979 }: " "
Token { kind: Text, char_start: 32733, char_end: 32736, byte_start: 32734, byte_end: 32737, column_start: 50, column_end: 53, line_start: 979, line_end: 979 }: not
Token { kind: Hyphen, char_start: 32736, char_end: 32737, byte_start: 32737, byte_end: 32738, column_start: 53, column_end: 54, line_start: 979, line_end: 979 }: -
Token { kind: Text, char_start: 32737, char_end: 32741, byte_start: 32738, byte_end: 32742, column_start: 54, column_end: 58, line_start: 979, line_end: 979 }: Perl
Token { kind: Hyphen, char_start: 32741, char_end: 32742, byte_start: 32742, byte_end: 32743, column_start: 58, column_end: 59, line_start: 979, line_end: 979 }: -
Token { kind: Text, char_start: 32742, char_end: 32752, byte_start: 32743, byte_end: 32753, column_start: 59, column_end: 69, line_start: 979, line_end: 979 }: compatible
Token { kind: Rparen, char_start: 32752, char_end: 32753, byte_start: 32753, byte_end: 32754, column_start: 69, column_end: 70, line_start: 979, line_end: 979 }: )
Token { kind: Space, char_start: 32753, char_end: 32754, byte_start: 32754, byte_end: 32755, column_start: 70, column_end: 71, line_start: 979, line_end: 979 }: " "
Token { kind: Text, char_start: 32754, char_end: 32761, byte_start: 32755, byte_end: 32762, column_start: 71, column_end: 78, line_start: 979, line_end: 979 }: regular
Token { kind: Newline, char_start: 32761, char_end: 32762, byte_start: 32762, byte_end: 32763, column_start: 78, column_end: 1, line_start: 979, line_end: 980 }: "\n"
Token { kind: Text, char_start: 32762, char_end: 32772, byte_start: 32763, byte_end: 32773, column_start: 1, column_end: 11, line_start: 980, line_end: 980 }: expression
Token { kind: Space, char_start: 32772, char_end: 32773, byte_start: 32773, byte_end: 32774, column_start: 11, column_end: 12, line_start: 980, line_end: 980 }: " "
Token { kind: Text, char_start: 32773, char_end: 32780, byte_start: 32774, byte_end: 32781, column_start: 12, column_end: 19, line_start: 980, line_end: 980 }: engine.
Token { kind: Newline, char_start: 32780, char_end: 32781, byte_start: 32781, byte_end: 32782, column_start: 19, column_end: 1, line_start: 980, line_end: 981 }: "\n"
Token { kind: Newline, char_start: 32781, char_end: 32782, byte_start: 32782, byte_end: 32783, column_start: 1, column_end: 1, line_start: 981, line_end: 982 }: "\n"
Token { kind: Text, char_start: 32782, char_end: 32784, byte_start: 32783, byte_end: 32785, column_start: 1, column_end: 3, line_start: 982, line_end: 982 }: To
Token { kind: Space, char_start: 32784, char_end: 32785, byte_start: 32785, byte_end: 32786, column_start: 3, column_end: 4, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32785, char_end: 32792, byte_start: 32786, byte_end: 32793, column_start: 4, column_end: 11, line_start: 982, line_end: 982 }: prevent
Token { kind: Space, char_start: 32792, char_end: 32793, byte_start: 32793, byte_end: 32794, column_start: 11, column_end: 12, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32793, char_end: 32796, byte_start: 32794, byte_end: 32797, column_start: 12, column_end: 15, line_start: 982, line_end: 982 }: the
Token { kind: Space, char_start: 32796, char_end: 32797, byte_start: 32797, byte_end: 32798, column_start: 15, column_end: 16, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32797, char_end: 32806, byte_start: 32798, byte_end: 32807, column_start: 16, column_end: 25, line_start: 982, line_end: 982 }: automatic
Token { kind: Space, char_start: 32806, char_end: 32807, byte_start: 32807, byte_end: 32808, column_start: 25, column_end: 26, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32807, char_end: 32810, byte_start: 32808, byte_end: 32811, column_start: 26, column_end: 29, line_start: 982, line_end: 982 }: use
Token { kind: Space, char_start: 32810, char_end: 32811, byte_start: 32811, byte_end: 32812, column_start: 29, column_end: 30, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32811, char_end: 32813, byte_start: 32812, byte_end: 32814, column_start: 30, column_end: 32, line_start: 982, line_end: 982 }: of
Token { kind: Space, char_start: 32813, char_end: 32814, byte_start: 32814, byte_end: 32815, column_start: 32, column_end: 33, line_start: 982, line_end: 982 }: " "
Token { kind: Bar, char_start: 32814, char_end: 32815, byte_start: 32815, byte_end: 32816, column_start: 33, column_end: 34, line_start: 982, line_end: 982 }: |
Token { kind: Text, char_start: 32815, char_end: 32818, byte_start: 32816, byte_end: 32819, column_start: 34, column_end: 37, line_start: 982, line_end: 982 }: /\v
Token { kind: Bar, char_start: 32818, char_end: 32819, byte_start: 32819, byte_end: 32820, column_start: 37, column_end: 38, line_start: 982, line_end: 982 }: |
Token { kind: Text, char_start: 32819, char_end: 32820, byte_start: 32820, byte_end: 32821, column_start: 38, column_end: 39, line_start: 982, line_end: 982 }: ,
Token { kind: Space, char_start: 32820, char_end: 32821, byte_start: 32821, byte_end: 32822, column_start: 39, column_end: 40, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32821, char_end: 32824, byte_start: 32822, byte_end: 32825, column_start: 40, column_end: 43, line_start: 982, line_end: 982 }: set
Token { kind: Space, char_start: 32824, char_end: 32825, byte_start: 32825, byte_end: 32826, column_start: 43, column_end: 44, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32825, char_end: 32829, byte_start: 32826, byte_end: 32830, column_start: 44, column_end: 48, line_start: 982, line_end: 982 }: this
Token { kind: Space, char_start: 32829, char_end: 32830, byte_start: 32830, byte_end: 32831, column_start: 48, column_end: 49, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32830, char_end: 32836, byte_start: 32831, byte_end: 32837, column_start: 49, column_end: 55, line_start: 982, line_end: 982 }: option
Token { kind: Space, char_start: 32836, char_end: 32837, byte_start: 32837, byte_end: 32838, column_start: 55, column_end: 56, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32837, char_end: 32839, byte_start: 32838, byte_end: 32840, column_start: 56, column_end: 58, line_start: 982, line_end: 982 }: to
Token { kind: Space, char_start: 32839, char_end: 32840, byte_start: 32840, byte_end: 32841, column_start: 58, column_end: 59, line_start: 982, line_end: 982 }: " "
Token { kind: Text, char_start: 32840, char_end: 32842, byte_start: 32841, byte_end: 32843, column_start: 59, column_end: 61, line_start: 982, line_end: 982 }: 0:
Token { kind: Newline, char_start: 32842, char_end: 32843, byte_start: 32843, byte_end: 32844, column_start: 61, column_end: 1, line_start: 982, line_end: 983 }: "\n"
Token { kind: Newline, char_start: 32843, char_end: 32844, byte_start: 32844, byte_end: 32845, column_start: 1, column_end: 1, line_start: 983, line_end: 984 }: "\n"
Token { kind: CodeFence, char_start: 32844, char_end: 32847, byte_start: 32845, byte_end: 32848, column_start: 1, column_end: 4, line_start: 984, line_end: 984 }: ```
Token { kind: Newline, char_start: 32847, char_end: 32848, byte_start: 32848, byte_end: 32849, column_start: 4, column_end: 1, line_start: 984, line_end: 985 }: "\n"
Token { kind: Text, char_start: 32848, char_end: 32851, byte_start: 32849, byte_end: 32852, column_start: 1, column_end: 4, line_start: 985, line_end: 985 }: let
Token { kind: Space, char_start: 32851, char_end: 32852, byte_start: 32852, byte_end: 32853, column_start: 4, column_end: 5, line_start: 985, line_end: 985 }: " "
Token { kind: Text, char_start: 32852, char_end: 32871, byte_start: 32853, byte_end: 32872, column_start: 5, column_end: 24, line_start: 985, line_end: 985 }: g:FerretVeryMagic=0
Token { kind: Newline, char_start: 32871, char_end: 32872, byte_start: 32872, byte_end: 32873, column_start: 24, column_end: 1, line_start: 985, line_end: 986 }: "\n"
Token { kind: CodeFence, char_start: 32872, char_end: 32875, byte_start: 32873, byte_end: 32876, column_start: 1, column_end: 4, line_start: 986, line_end: 986 }: ```
Token { kind: Newline, char_start: 32875, char_end: 32876, byte_start: 32876, byte_end: 32877, column_start: 4, column_end: 1, line_start: 986, line_end: 987 }: "\n"
Token { kind: Newline, char_start: 32876, char_end: 32877, byte_start: 32877, byte_end: 32878, column_start: 1, column_end: 1, line_start: 987, line_end: 988 }: "\n"
Token { kind: At, char_start: 32877, char_end: 32878, byte_start: 32878, byte_end: 32879, column_start: 1, column_end: 2, line_start: 988, line_end: 988 }: @
Token { kind: Text, char_start: 32878, char_end: 32884, byte_start: 32879, byte_end: 32885, column_start: 2, column_end: 8, line_start: 988, line_end: 988 }: option
Token { kind: Space, char_start: 32884, char_end: 32885, byte_start: 32885, byte_end: 32886, column_start: 8, column_end: 9, line_start: 988, line_end: 988 }: " "
Token { kind: Text, char_start: 32885, char_end: 32903, byte_start: 32886, byte_end: 32904, column_start: 9, column_end: 27, line_start: 988, line_end: 988 }: g:FerretExecutable
Token { kind: Space, char_start: 32903, char_end: 32904, byte_start: 32904, byte_end: 32905, column_start: 27, column_end: 28, line_start: 988, line_end: 988 }: " "
Token { kind: Text, char_start: 32904, char_end: 32910, byte_start: 32905, byte_end: 32911, column_start: 28, column_end: 34, line_start: 988, line_end: 988 }: string
Token { kind: Space, char_start: 32910, char_end: 32911, byte_start: 32911, byte_end: 32912, column_start: 34, column_end: 35, line_start: 988, line_end: 988 }: " "
Token { kind: Text, char_start: 32911, char_end: 32925, byte_start: 32912, byte_end: 32926, column_start: 35, column_end: 49, line_start: 988, line_end: 988 }: "rg,ag,ack,ack
Token { kind: Hyphen, char_start: 32925, char_end: 32926, byte_start: 32926, byte_end: 32927, column_start: 49, column_end: 50, line_start: 988, line_end: 988 }: -
Token { kind: Text, char_start: 32926, char_end: 32931, byte_start: 32927, byte_end: 32932, column_start: 50, column_end: 55, line_start: 988, line_end: 988 }: grep"
Token { kind: Newline, char_start: 32931, char_end: 32932, byte_start: 32932, byte_end: 32933, column_start: 55, column_end: 1, line_start: 988, line_end: 989 }: "\n"
Token { kind: Newline, char_start: 32932, char_end: 32933, byte_start: 32933, byte_end: 32934, column_start: 1, column_end: 1, line_start: 989, line_end: 990 }: "\n"
Token { kind: Text, char_start: 32933, char_end: 32939, byte_start: 32934, byte_end: 32940, column_start: 1, column_end: 7, line_start: 990, line_end: 990 }: Ferret
Token { kind: Space, char_start: 32939, char_end: 32940, byte_start: 32940, byte_end: 32941, column_start: 7, column_end: 8, line_start: 990, line_end: 990 }: " "
Token { kind: Text, char_start: 32940, char_end: 32944, byte_start: 32941, byte_end: 32945, column_start: 8, column_end: 12, line_start: 990, line_end: 990 }: will
Token { kind: Space, char_start: 32944, char_end: 32945, byte_start: 32945, byte_end: 32946, column_start: 12, column_end: 13, line_start: 990, line_end: 990 }: " "
Token { kind: Text, char_start: 32945, char_end: 32959, byte_start: 32946, byte_end: 32960, column_start: 13, column_end: 27, line_start: 990, line_end: 990 }: preferentially
Token { kind: Space, char_start: 32959, char_end: 32960, byte_start: 32960, byte_end: 32961, column_start: 27, column_end: 28, line_start: 990, line_end: 990 }: " "
Token { kind: Text, char_start: 32960, char_end: 32963, byte_start: 32961, byte_end: 32964, column_start: 28, column_end: 31, line_start: 990, line_end: 990 }: use
Token { kind: Space, char_start: 32963, char_end: 32964, byte_start: 32964, byte_end: 32965, column_start: 31, column_end: 32, line_start: 990, line_end: 990 }: " "
Token { kind: Backtick, char_start: 32964, char_end: 32965, byte_start: 32965, byte_end: 32966, column_start: 32, column_end: 33, line_start: 990, line_end: 990 }: `
Token { kind: Text, char_start: 32965, char_end: 32967, byte_start: 32966, byte_end: 32968, column_start: 33, column_end: 35, line_start: 990, line_end: 990 }: rg
Token { kind: Backtick, char_start: 32967, char_end: 32968, byte_start: 32968, byte_end: 32969, column_start: 35, column_end: 36, line_start: 990, line_end: 990 }: `
Token { kind: Text, char_start: 32968, char_end: 32969, byte_start: 32969, byte_end: 32970, column_start: 36, column_end: 37, line_start: 990, line_end: 990 }: ,
Token { kind: Space, char_start: 32969, char_end: 32970, byte_start: 32970, byte_end: 32971, column_start: 37, column_end: 38, line_start: 990, line_end: 990 }: " "
Token { kind: Backtick, char_start: 32970, char_end: 32971, byte_start: 32971, byte_end: 32972, column_start: 38, column_end: 39, line_start: 990, line_end: 990 }: `
Token { kind: Text, char_start: 32971, char_end: 32973, byte_start: 32972, byte_end: 32974, column_start: 39, column_end: 41, line_start: 990, line_end: 990 }: ag
Token { kind: Backtick, char_start: 32973, char_end: 32974, byte_start: 32974, byte_end: 32975, column_start: 41, column_end: 42, line_start: 990, line_end: 990 }: `
Token { kind: Space, char_start: 32974, char_end: 32975, byte_start: 32975, byte_end: 32976, column_start: 42, column_end: 43, line_start: 990, line_end: 990 }: " "
Token { kind: Text, char_start: 32975, char_end: 32978, byte_start: 32976, byte_end: 32979, column_start: 43, column_end: 46, line_start: 990, line_end: 990 }: and
Token { kind: Space, char_start: 32978, char_end: 32979, byte_start: 32979, byte_end: 32980, column_start: 46, column_end: 47, line_start: 990, line_end: 990 }: " "
Token { kind: Text, char_start: 32979, char_end: 32986, byte_start: 32980, byte_end: 32987, column_start: 47, column_end: 54, line_start: 990, line_end: 990 }: finally
Token { kind: Space, char_start: 32986, char_end: 32987, byte_start: 32987, byte_end: 32988, column_start: 54, column_end: 55, line_start: 990, line_end: 990 }: " "
Token { kind: Backtick, char_start: 32987, char_end: 32988, byte_start: 32988, byte_end: 32989, column_start: 55, column_end: 56, line_start: 990, line_end: 990 }: `
Token { kind: Text, char_start: 32988, char_end: 32991, byte_start: 32989, byte_end: 32992, column_start: 56, column_end: 59, line_start: 990, line_end: 990 }: ack
Token { kind: Backtick, char_start: 32991, char_end: 32992, byte_start: 32992, byte_end: 32993, column_start: 59, column_end: 60, line_start: 990, line_end: 990 }: `
Token { kind: Text, char_start: 32992, char_end: 32993, byte_start: 32993, byte_end: 32994, column_start: 60, column_end: 61, line_start: 990, line_end: 990 }: /
Token { kind: Backtick, char_start: 32993, char_end: 32994, byte_start: 32994, byte_end: 32995, column_start: 61, column_end: 62, line_start: 990, line_end: 990 }: `
Token { kind: Text, char_start: 32994, char_end: 32997, byte_start: 32995, byte_end: 32998, column_start: 62, column_end: 65, line_start: 990, line_end: 990 }: ack
Token { kind: Hyphen, char_start: 32997, char_end: 32998, byte_start: 32998, byte_end: 32999, column_start: 65, column_end: 66, line_start: 990, line_end: 990 }: -
Token { kind: Text, char_start: 32998, char_end: 33002, byte_start: 32999, byte_end: 33003, column_start: 66, column_end: 70, line_start: 990, line_end: 990 }: grep
Token { kind: Backtick, char_start: 33002, char_end: 33003, byte_start: 33003, byte_end: 33004, column_start: 70, column_end: 71, line_start: 990, line_end: 990 }: `
Token { kind: Space, char_start: 33003, char_end: 33004, byte_start: 33004, byte_end: 33005, column_start: 71, column_end: 72, line_start: 990, line_end: 990 }: " "
Token { kind: Lparen, char_start: 33004, char_end: 33005, byte_start: 33005, byte_end: 33006, column_start: 72, column_end: 73, line_start: 990, line_end: 990 }: (
Token { kind: Text, char_start: 33005, char_end: 33007, byte_start: 33006, byte_end: 33008, column_start: 73, column_end: 75, line_start: 990, line_end: 990 }: in
Token { kind: Newline, char_start: 33007, char_end: 33008, byte_start: 33008, byte_end: 33009, column_start: 75, column_end: 1, line_start: 990, line_end: 991 }: "\n"
Token { kind: Text, char_start: 33008, char_end: 33012, byte_start: 33009, byte_end: 33013, column_start: 1, column_end: 5, line_start: 991, line_end: 991 }: that
Token { kind: Space, char_start: 33012, char_end: 33013, byte_start: 33013, byte_end: 33014, column_start: 5, column_end: 6, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33013, char_end: 33019, byte_start: 33014, byte_end: 33020, column_start: 6, column_end: 12, line_start: 991, line_end: 991 }: order,
Token { kind: Space, char_start: 33019, char_end: 33020, byte_start: 33020, byte_end: 33021, column_start: 12, column_end: 13, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33020, char_end: 33025, byte_start: 33021, byte_end: 33026, column_start: 13, column_end: 18, line_start: 991, line_end: 991 }: using
Token { kind: Space, char_start: 33025, char_end: 33026, byte_start: 33026, byte_end: 33027, column_start: 18, column_end: 19, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33026, char_end: 33029, byte_start: 33027, byte_end: 33030, column_start: 19, column_end: 22, line_start: 991, line_end: 991 }: the
Token { kind: Space, char_start: 33029, char_end: 33030, byte_start: 33030, byte_end: 33031, column_start: 22, column_end: 23, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33030, char_end: 33035, byte_start: 33031, byte_end: 33036, column_start: 23, column_end: 28, line_start: 991, line_end: 991 }: first
Token { kind: Space, char_start: 33035, char_end: 33036, byte_start: 33036, byte_end: 33037, column_start: 28, column_end: 29, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33036, char_end: 33041, byte_start: 33037, byte_end: 33042, column_start: 29, column_end: 34, line_start: 991, line_end: 991 }: found
Token { kind: Space, char_start: 33041, char_end: 33042, byte_start: 33042, byte_end: 33043, column_start: 34, column_end: 35, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33042, char_end: 33052, byte_start: 33043, byte_end: 33053, column_start: 35, column_end: 45, line_start: 991, line_end: 991 }: executable
Token { kind: Rparen, char_start: 33052, char_end: 33053, byte_start: 33053, byte_end: 33054, column_start: 45, column_end: 46, line_start: 991, line_end: 991 }: )
Token { kind: Text, char_start: 33053, char_end: 33054, byte_start: 33054, byte_end: 33055, column_start: 46, column_end: 47, line_start: 991, line_end: 991 }: ,
Token { kind: Space, char_start: 33054, char_end: 33055, byte_start: 33055, byte_end: 33056, column_start: 47, column_end: 48, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33055, char_end: 33062, byte_start: 33056, byte_end: 33063, column_start: 48, column_end: 55, line_start: 991, line_end: 991 }: however
Token { kind: Space, char_start: 33062, char_end: 33063, byte_start: 33063, byte_end: 33064, column_start: 55, column_end: 56, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33063, char_end: 33066, byte_start: 33064, byte_end: 33067, column_start: 56, column_end: 59, line_start: 991, line_end: 991 }: you
Token { kind: Space, char_start: 33066, char_end: 33067, byte_start: 33067, byte_end: 33068, column_start: 59, column_end: 60, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33067, char_end: 33070, byte_start: 33068, byte_end: 33071, column_start: 60, column_end: 63, line_start: 991, line_end: 991 }: can
Token { kind: Space, char_start: 33070, char_end: 33071, byte_start: 33071, byte_end: 33072, column_start: 63, column_end: 64, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33071, char_end: 33076, byte_start: 33072, byte_end: 33077, column_start: 64, column_end: 69, line_start: 991, line_end: 991 }: force
Token { kind: Space, char_start: 33076, char_end: 33077, byte_start: 33077, byte_end: 33078, column_start: 69, column_end: 70, line_start: 991, line_end: 991 }: " "
Token { kind: Text, char_start: 33077, char_end: 33081, byte_start: 33078, byte_end: 33082, column_start: 70, column_end: 74, line_start: 991, line_end: 991 }: your
Token { kind: Newline, char_start: 33081, char_end: 33082, byte_start: 33082, byte_end: 33083, column_start: 74, column_end: 1, line_start: 991, line_end: 992 }: "\n"
Token { kind: Text, char_start: 33082, char_end: 33092, byte_start: 33083, byte_end: 33093, column_start: 1, column_end: 11, line_start: 992, line_end: 992 }: preference
Token { kind: Space, char_start: 33092, char_end: 33093, byte_start: 33093, byte_end: 33094, column_start: 11, column_end: 12, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33093, char_end: 33096, byte_start: 33094, byte_end: 33097, column_start: 12, column_end: 15, line_start: 992, line_end: 992 }: for
Token { kind: Space, char_start: 33096, char_end: 33097, byte_start: 33097, byte_end: 33098, column_start: 15, column_end: 16, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33097, char_end: 33098, byte_start: 33098, byte_end: 33099, column_start: 16, column_end: 17, line_start: 992, line_end: 992 }: a
Token { kind: Space, char_start: 33098, char_end: 33099, byte_start: 33099, byte_end: 33100, column_start: 17, column_end: 18, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33099, char_end: 33107, byte_start: 33100, byte_end: 33108, column_start: 18, column_end: 26, line_start: 992, line_end: 992 }: specific
Token { kind: Space, char_start: 33107, char_end: 33108, byte_start: 33108, byte_end: 33109, column_start: 26, column_end: 27, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33108, char_end: 33112, byte_start: 33109, byte_end: 33113, column_start: 27, column_end: 31, line_start: 992, line_end: 992 }: tool
Token { kind: Space, char_start: 33112, char_end: 33113, byte_start: 33113, byte_end: 33114, column_start: 31, column_end: 32, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33113, char_end: 33115, byte_start: 33114, byte_end: 33116, column_start: 32, column_end: 34, line_start: 992, line_end: 992 }: to
Token { kind: Space, char_start: 33115, char_end: 33116, byte_start: 33116, byte_end: 33117, column_start: 34, column_end: 35, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33116, char_end: 33118, byte_start: 33117, byte_end: 33119, column_start: 35, column_end: 37, line_start: 992, line_end: 992 }: be
Token { kind: Space, char_start: 33118, char_end: 33119, byte_start: 33119, byte_end: 33120, column_start: 37, column_end: 38, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33119, char_end: 33123, byte_start: 33120, byte_end: 33124, column_start: 38, column_end: 42, line_start: 992, line_end: 992 }: used
Token { kind: Space, char_start: 33123, char_end: 33124, byte_start: 33124, byte_end: 33125, column_start: 42, column_end: 43, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33124, char_end: 33126, byte_start: 33125, byte_end: 33127, column_start: 43, column_end: 45, line_start: 992, line_end: 992 }: by
Token { kind: Space, char_start: 33126, char_end: 33127, byte_start: 33127, byte_end: 33128, column_start: 45, column_end: 46, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33127, char_end: 33134, byte_start: 33128, byte_end: 33135, column_start: 46, column_end: 53, line_start: 992, line_end: 992 }: setting
Token { kind: Space, char_start: 33134, char_end: 33135, byte_start: 33135, byte_end: 33136, column_start: 53, column_end: 54, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33135, char_end: 33137, byte_start: 33136, byte_end: 33138, column_start: 54, column_end: 56, line_start: 992, line_end: 992 }: an
Token { kind: Space, char_start: 33137, char_end: 33138, byte_start: 33138, byte_end: 33139, column_start: 56, column_end: 57, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33138, char_end: 33146, byte_start: 33139, byte_end: 33147, column_start: 57, column_end: 65, line_start: 992, line_end: 992 }: override
Token { kind: Space, char_start: 33146, char_end: 33147, byte_start: 33147, byte_end: 33148, column_start: 65, column_end: 66, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33147, char_end: 33149, byte_start: 33148, byte_end: 33150, column_start: 66, column_end: 68, line_start: 992, line_end: 992 }: in
Token { kind: Space, char_start: 33149, char_end: 33150, byte_start: 33150, byte_end: 33151, column_start: 68, column_end: 69, line_start: 992, line_end: 992 }: " "
Token { kind: Text, char_start: 33150, char_end: 33154, byte_start: 33151, byte_end: 33155, column_start: 69, column_end: 73, line_start: 992, line_end: 992 }: your
Token { kind: Newline, char_start: 33154, char_end: 33155, byte_start: 33155, byte_end: 33156, column_start: 73, column_end: 1, line_start: 992, line_end: 993 }: "\n"
Token { kind: Bar, char_start: 33155, char_end: 33156, byte_start: 33156, byte_end: 33157, column_start: 1, column_end: 2, line_start: 993, line_end: 993 }: |
Token { kind: Text, char_start: 33156, char_end: 33162, byte_start: 33157, byte_end: 33163, column_start: 2, column_end: 8, line_start: 993, line_end: 993 }: .vimrc
Token { kind: Bar, char_start: 33162, char_end: 33163, byte_start: 33163, byte_end: 33164, column_start: 8, column_end: 9, line_start: 993, line_end: 993 }: |
Token { kind: Text, char_start: 33163, char_end: 33164, byte_start: 33164, byte_end: 33165, column_start: 9, column_end: 10, line_start: 993, line_end: 993 }: .
Token { kind: Space, char_start: 33164, char_end: 33165, byte_start: 33165, byte_end: 33166, column_start: 10, column_end: 11, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33165, char_end: 33170, byte_start: 33166, byte_end: 33171, column_start: 11, column_end: 16, line_start: 993, line_end: 993 }: Valid
Token { kind: Space, char_start: 33170, char_end: 33171, byte_start: 33171, byte_end: 33172, column_start: 16, column_end: 17, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33171, char_end: 33177, byte_start: 33172, byte_end: 33178, column_start: 17, column_end: 23, line_start: 993, line_end: 993 }: values
Token { kind: Space, char_start: 33177, char_end: 33178, byte_start: 33178, byte_end: 33179, column_start: 23, column_end: 24, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33178, char_end: 33181, byte_start: 33179, byte_end: 33182, column_start: 24, column_end: 27, line_start: 993, line_end: 993 }: are
Token { kind: Space, char_start: 33181, char_end: 33182, byte_start: 33182, byte_end: 33183, column_start: 27, column_end: 28, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33182, char_end: 33183, byte_start: 33183, byte_end: 33184, column_start: 28, column_end: 29, line_start: 993, line_end: 993 }: a
Token { kind: Space, char_start: 33183, char_end: 33184, byte_start: 33184, byte_end: 33185, column_start: 29, column_end: 30, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33184, char_end: 33189, byte_start: 33185, byte_end: 33190, column_start: 30, column_end: 35, line_start: 993, line_end: 993 }: comma
Token { kind: Hyphen, char_start: 33189, char_end: 33190, byte_start: 33190, byte_end: 33191, column_start: 35, column_end: 36, line_start: 993, line_end: 993 }: -
Token { kind: Text, char_start: 33190, char_end: 33199, byte_start: 33191, byte_end: 33200, column_start: 36, column_end: 45, line_start: 993, line_end: 993 }: separated
Token { kind: Space, char_start: 33199, char_end: 33200, byte_start: 33200, byte_end: 33201, column_start: 45, column_end: 46, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33200, char_end: 33204, byte_start: 33201, byte_end: 33205, column_start: 46, column_end: 50, line_start: 993, line_end: 993 }: list
Token { kind: Space, char_start: 33204, char_end: 33205, byte_start: 33205, byte_end: 33206, column_start: 50, column_end: 51, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33205, char_end: 33207, byte_start: 33206, byte_end: 33208, column_start: 51, column_end: 53, line_start: 993, line_end: 993 }: of
Token { kind: Space, char_start: 33207, char_end: 33208, byte_start: 33208, byte_end: 33209, column_start: 53, column_end: 54, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33208, char_end: 33213, byte_start: 33209, byte_end: 33214, column_start: 54, column_end: 59, line_start: 993, line_end: 993 }: "rg",
Token { kind: Space, char_start: 33213, char_end: 33214, byte_start: 33214, byte_end: 33215, column_start: 59, column_end: 60, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33214, char_end: 33219, byte_start: 33215, byte_end: 33220, column_start: 60, column_end: 65, line_start: 993, line_end: 993 }: "ag",
Token { kind: Space, char_start: 33219, char_end: 33220, byte_start: 33220, byte_end: 33221, column_start: 65, column_end: 66, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33220, char_end: 33225, byte_start: 33221, byte_end: 33226, column_start: 66, column_end: 71, line_start: 993, line_end: 993 }: "ack"
Token { kind: Space, char_start: 33225, char_end: 33226, byte_start: 33226, byte_end: 33227, column_start: 71, column_end: 72, line_start: 993, line_end: 993 }: " "
Token { kind: Text, char_start: 33226, char_end: 33228, byte_start: 33227, byte_end: 33229, column_start: 72, column_end: 74, line_start: 993, line_end: 993 }: or
Token { kind: Newline, char_start: 33228, char_end: 33229, byte_start: 33229, byte_end: 33230, column_start: 74, column_end: 1, line_start: 993, line_end: 994 }: "\n"
Token { kind: Text, char_start: 33229, char_end: 33233, byte_start: 33230, byte_end: 33234, column_start: 1, column_end: 5, line_start: 994, line_end: 994 }: "ack
Token { kind: Hyphen, char_start: 33233, char_end: 33234, byte_start: 33234, byte_end: 33235, column_start: 5, column_end: 6, line_start: 994, line_end: 994 }: -
Token { kind: Text, char_start: 33234, char_end: 33240, byte_start: 33235, byte_end: 33241, column_start: 6, column_end: 12, line_start: 994, line_end: 994 }: grep".
Token { kind: Space, char_start: 33240, char_end: 33241, byte_start: 33241, byte_end: 33242, column_start: 12, column_end: 13, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33241, char_end: 33243, byte_start: 33242, byte_end: 33244, column_start: 13, column_end: 15, line_start: 994, line_end: 994 }: If
Token { kind: Space, char_start: 33243, char_end: 33244, byte_start: 33244, byte_end: 33245, column_start: 15, column_end: 16, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33244, char_end: 33246, byte_start: 33245, byte_end: 33247, column_start: 16, column_end: 18, line_start: 994, line_end: 994 }: no
Token { kind: Space, char_start: 33246, char_end: 33247, byte_start: 33247, byte_end: 33248, column_start: 18, column_end: 19, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33247, char_end: 33256, byte_start: 33248, byte_end: 33257, column_start: 19, column_end: 28, line_start: 994, line_end: 994 }: requested
Token { kind: Space, char_start: 33256, char_end: 33257, byte_start: 33257, byte_end: 33258, column_start: 28, column_end: 29, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33257, char_end: 33267, byte_start: 33258, byte_end: 33268, column_start: 29, column_end: 39, line_start: 994, line_end: 994 }: executable
Token { kind: Space, char_start: 33267, char_end: 33268, byte_start: 33268, byte_end: 33269, column_start: 39, column_end: 40, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33268, char_end: 33275, byte_start: 33269, byte_end: 33276, column_start: 40, column_end: 47, line_start: 994, line_end: 994 }: exists,
Token { kind: Space, char_start: 33275, char_end: 33276, byte_start: 33276, byte_end: 33277, column_start: 47, column_end: 48, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33276, char_end: 33282, byte_start: 33277, byte_end: 33283, column_start: 48, column_end: 54, line_start: 994, line_end: 994 }: Ferret
Token { kind: Space, char_start: 33282, char_end: 33283, byte_start: 33283, byte_end: 33284, column_start: 54, column_end: 55, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33283, char_end: 33287, byte_start: 33284, byte_end: 33288, column_start: 55, column_end: 59, line_start: 994, line_end: 994 }: will
Token { kind: Space, char_start: 33287, char_end: 33288, byte_start: 33288, byte_end: 33289, column_start: 59, column_end: 60, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33288, char_end: 33292, byte_start: 33289, byte_end: 33293, column_start: 60, column_end: 64, line_start: 994, line_end: 994 }: fall
Token { kind: Hyphen, char_start: 33292, char_end: 33293, byte_start: 33293, byte_end: 33294, column_start: 64, column_end: 65, line_start: 994, line_end: 994 }: -
Token { kind: Text, char_start: 33293, char_end: 33297, byte_start: 33294, byte_end: 33298, column_start: 65, column_end: 69, line_start: 994, line_end: 994 }: back
Token { kind: Space, char_start: 33297, char_end: 33298, byte_start: 33298, byte_end: 33299, column_start: 69, column_end: 70, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33298, char_end: 33300, byte_start: 33299, byte_end: 33301, column_start: 70, column_end: 72, line_start: 994, line_end: 994 }: to
Token { kind: Space, char_start: 33300, char_end: 33301, byte_start: 33301, byte_end: 33302, column_start: 72, column_end: 73, line_start: 994, line_end: 994 }: " "
Token { kind: Text, char_start: 33301, char_end: 33304, byte_start: 33302, byte_end: 33305, column_start: 73, column_end: 76, line_start: 994, line_end: 994 }: the
Token { kind: Newline, char_start: 33304, char_end: 33305, byte_start: 33305, byte_end: 33306, column_start: 76, column_end: 1, line_start: 994, line_end: 995 }: "\n"
Token { kind: Text, char_start: 33305, char_end: 33309, byte_start: 33306, byte_end: 33310, column_start: 1, column_end: 5, line_start: 995, line_end: 995 }: next
Token { kind: Space, char_start: 33309, char_end: 33310, byte_start: 33310, byte_end: 33311, column_start: 5, column_end: 6, line_start: 995, line_end: 995 }: " "
Token { kind: Text, char_start: 33310, char_end: 33312, byte_start: 33311, byte_end: 33313, column_start: 6, column_end: 8, line_start: 995, line_end: 995 }: in
Token { kind: Space, char_start: 33312, char_end: 33313, byte_start: 33313, byte_end: 33314, column_start: 8, column_end: 9, line_start: 995, line_end: 995 }: " "
Token { kind: Text, char_start: 33313, char_end: 33316, byte_start: 33314, byte_end: 33317, column_start: 9, column_end: 12, line_start: 995, line_end: 995 }: the
Token { kind: Space, char_start: 33316, char_end: 33317, byte_start: 33317, byte_end: 33318, column_start: 12, column_end: 13, line_start: 995, line_end: 995 }: " "
Token { kind: Text, char_start: 33317, char_end: 33324, byte_start: 33318, byte_end: 33325, column_start: 13, column_end: 20, line_start: 995, line_end: 995 }: default
Token { kind: Space, char_start: 33324, char_end: 33325, byte_start: 33325, byte_end: 33326, column_start: 20, column_end: 21, line_start: 995, line_end: 995 }: " "
Token { kind: Text, char_start: 33325, char_end: 33330, byte_start: 33326, byte_end: 33331, column_start: 21, column_end: 26, line_start: 995, line_end: 995 }: list.
Token { kind: Newline, char_start: 33330, char_end: 33331, byte_start: 33331, byte_end: 33332, column_start: 26, column_end: 1, line_start: 995, line_end: 996 }: "\n"
Token { kind: Newline, char_start: 33331, char_end: 33332, byte_start: 33332, byte_end: 33333, column_start: 1, column_end: 1, line_start: 996, line_end: 997 }: "\n"
Token { kind: Text, char_start: 33332, char_end: 33340, byte_start: 33333, byte_end: 33341, column_start: 1, column_end: 9, line_start: 997, line_end: 997 }: Example:
Token { kind: Newline, char_start: 33340, char_end: 33341, byte_start: 33341, byte_end: 33342, column_start: 9, column_end: 1, line_start: 997, line_end: 998 }: "\n"
Token { kind: Newline, char_start: 33341, char_end: 33342, byte_start: 33342, byte_end: 33343, column_start: 1, column_end: 1, line_start: 998, line_end: 999 }: "\n"
Token { kind: CodeFence, char_start: 33342, char_end: 33345, byte_start: 33343, byte_end: 33346, column_start: 1, column_end: 4, line_start: 999, line_end: 999 }: ```
Token { kind: Newline, char_start: 33345, char_end: 33346, byte_start: 33346, byte_end: 33347, column_start: 4, column_end: 1, line_start: 999, line_end: 1000 }: "\n"
Token { kind: Text, char_start: 33346, char_end: 33347, byte_start: 33347, byte_end: 33348, column_start: 1, column_end: 2, line_start: 1000, line_end: 1000 }: "
Token { kind: Space, char_start: 33347, char_end: 33348, byte_start: 33348, byte_end: 33349, column_start: 2, column_end: 3, line_start: 1000, line_end: 1000 }: " "
Token { kind: Text, char_start: 33348, char_end: 33354, byte_start: 33349, byte_end: 33355, column_start: 3, column_end: 9, line_start: 1000, line_end: 1000 }: Prefer
Token { kind: Space, char_start: 33354, char_end: 33355, byte_start: 33355, byte_end: 33356, column_start: 9, column_end: 10, line_start: 1000, line_end: 1000 }: " "
Token { kind: Backtick, char_start: 33355, char_end: 33356, byte_start: 33356, byte_end: 33357, column_start: 10, column_end: 11, line_start: 1000, line_end: 1000 }: `
Token { kind: Text, char_start: 33356, char_end: 33358, byte_start: 33357, byte_end: 33359, column_start: 11, column_end: 13, line_start: 1000, line_end: 1000 }: ag
Token { kind: Backtick, char_start: 33358, char_end: 33359, byte_start: 33359, byte_end: 33360, column_start: 13, column_end: 14, line_start: 1000, line_end: 1000 }: `
Token { kind: Space, char_start: 33359, char_end: 33360, byte_start: 33360, byte_end: 33361, column_start: 14, column_end: 15, line_start: 1000, line_end: 1000 }: " "
Token { kind: Text, char_start: 33360, char_end: 33364, byte_start: 33361, byte_end: 33365, column_start: 15, column_end: 19, line_start: 1000, line_end: 1000 }: over
Token { kind: Space, char_start: 33364, char_end: 33365, byte_start: 33365, byte_end: 33366, column_start: 19, column_end: 20, line_start: 1000, line_end: 1000 }: " "
Token { kind: Backtick, char_start: 33365, char_end: 33366, byte_start: 33366, byte_end: 33367, column_start: 20, column_end: 21, line_start: 1000, line_end: 1000 }: `
Token { kind: Text, char_start: 33366, char_end: 33368, byte_start: 33367, byte_end: 33369, column_start: 21, column_end: 23, line_start: 1000, line_end: 1000 }: rg
Token { kind: Backtick, char_start: 33368, char_end: 33369, byte_start: 33369, byte_end: 33370, column_start: 23, column_end: 24, line_start: 1000, line_end: 1000 }: `
Token { kind: Text, char_start: 33369, char_end: 33370, byte_start: 33370, byte_end: 33371, column_start: 24, column_end: 25, line_start: 1000, line_end: 1000 }: .
Token { kind: Newline, char_start: 33370, char_end: 33371, byte_start: 33371, byte_end: 33372, column_start: 25, column_end: 1, line_start: 1000, line_end: 1001 }: "\n"
Token { kind: Text, char_start: 33371, char_end: 33374, byte_start: 33372, byte_end: 33375, column_start: 1, column_end: 4, line_start: 1001, line_end: 1001 }: let
Token { kind: Space, char_start: 33374, char_end: 33375, byte_start: 33375, byte_end: 33376, column_start: 4, column_end: 5, line_start: 1001, line_end: 1001 }: " "
Token { kind: Text, char_start: 33375, char_end: 33401, byte_start: 33376, byte_end: 33402, column_start: 5, column_end: 31, line_start: 1001, line_end: 1001 }: g:FerretExecutable='ag,rg'
Token { kind: Newline, char_start: 33401, char_end: 33402, byte_start: 33402, byte_end: 33403, column_start: 31, column_end: 1, line_start: 1001, line_end: 1002 }: "\n"
Token { kind: CodeFence, char_start: 33402, char_end: 33405, byte_start: 33403, byte_end: 33406, column_start: 1, column_end: 4, line_start: 1002, line_end: 1002 }: ```
Token { kind: Newline, char_start: 33405, char_end: 33406, byte_start: 33406, byte_end: 33407, column_start: 4, column_end: 1, line_start: 1002, line_end: 1003 }: "\n"
Token { kind: Newline, char_start: 33406, char_end: 33407, byte_start: 33407, byte_end: 33408, column_start: 1, column_end: 1, line_start: 1003, line_end: 1004 }: "\n"
Token { kind: At, char_start: 33407, char_end: 33408, byte_start: 33408, byte_end: 33409, column_start: 1, column_end: 2, line_start: 1004, line_end: 1004 }: @
Token { kind: Text, char_start: 33408, char_end: 33414, byte_start: 33409, byte_end: 33415, column_start: 2, column_end: 8, line_start: 1004, line_end: 1004 }: option
Token { kind: Space, char_start: 33414, char_end: 33415, byte_start: 33415, byte_end: 33416, column_start: 8, column_end: 9, line_start: 1004, line_end: 1004 }: " "
Token { kind: Text, char_start: 33415, char_end: 33442, byte_start: 33416, byte_end: 33443, column_start: 9, column_end: 36, line_start: 1004, line_end: 1004 }: g:FerretExecutableArguments
Token { kind: Space, char_start: 33442, char_end: 33443, byte_start: 33443, byte_end: 33444, column_start: 36, column_end: 37, line_start: 1004, line_end: 1004 }: " "
Token { kind: Text, char_start: 33443, char_end: 33447, byte_start: 33444, byte_end: 33448, column_start: 37, column_end: 41, line_start: 1004, line_end: 1004 }: dict
Token { kind: Space, char_start: 33447, char_end: 33448, byte_start: 33448, byte_end: 33449, column_start: 41, column_end: 42, line_start: 1004, line_end: 1004 }: " "
Token { kind: Text, char_start: 33448, char_end: 33450, byte_start: 33449, byte_end: 33451, column_start: 42, column_end: 44, line_start: 1004, line_end: 1004 }: {}
Token { kind: Newline, char_start: 33450, char_end: 33451, byte_start: 33451, byte_end: 33452, column_start: 44, column_end: 1, line_start: 1004, line_end: 1005 }: "\n"
Token { kind: Newline, char_start: 33451, char_end: 33452, byte_start: 33452, byte_end: 33453, column_start: 1, column_end: 1, line_start: 1005, line_end: 1006 }: "\n"
Token { kind: Text, char_start: 33452, char_end: 33458, byte_start: 33453, byte_end: 33459, column_start: 1, column_end: 7, line_start: 1006, line_end: 1006 }: Allows
Token { kind: Space, char_start: 33458, char_end: 33459, byte_start: 33459, byte_end: 33460, column_start: 7, column_end: 8, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33459, char_end: 33462, byte_start: 33460, byte_end: 33463, column_start: 8, column_end: 11, line_start: 1006, line_end: 1006 }: you
Token { kind: Space, char_start: 33462, char_end: 33463, byte_start: 33463, byte_end: 33464, column_start: 11, column_end: 12, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33463, char_end: 33465, byte_start: 33464, byte_end: 33466, column_start: 12, column_end: 14, line_start: 1006, line_end: 1006 }: to
Token { kind: Space, char_start: 33465, char_end: 33466, byte_start: 33466, byte_end: 33467, column_start: 14, column_end: 15, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33466, char_end: 33474, byte_start: 33467, byte_end: 33475, column_start: 15, column_end: 23, line_start: 1006, line_end: 1006 }: override
Token { kind: Space, char_start: 33474, char_end: 33475, byte_start: 33475, byte_end: 33476, column_start: 23, column_end: 24, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33475, char_end: 33478, byte_start: 33476, byte_end: 33479, column_start: 24, column_end: 27, line_start: 1006, line_end: 1006 }: the
Token { kind: Space, char_start: 33478, char_end: 33479, byte_start: 33479, byte_end: 33480, column_start: 27, column_end: 28, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33479, char_end: 33486, byte_start: 33480, byte_end: 33487, column_start: 28, column_end: 35, line_start: 1006, line_end: 1006 }: default
Token { kind: Space, char_start: 33486, char_end: 33487, byte_start: 33487, byte_end: 33488, column_start: 35, column_end: 36, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33487, char_end: 33496, byte_start: 33488, byte_end: 33497, column_start: 36, column_end: 45, line_start: 1006, line_end: 1006 }: arguments
Token { kind: Space, char_start: 33496, char_end: 33497, byte_start: 33497, byte_end: 33498, column_start: 45, column_end: 46, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33497, char_end: 33501, byte_start: 33498, byte_end: 33502, column_start: 46, column_end: 50, line_start: 1006, line_end: 1006 }: that
Token { kind: Space, char_start: 33501, char_end: 33502, byte_start: 33502, byte_end: 33503, column_start: 50, column_end: 51, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33502, char_end: 33505, byte_start: 33503, byte_end: 33506, column_start: 51, column_end: 54, line_start: 1006, line_end: 1006 }: get
Token { kind: Space, char_start: 33505, char_end: 33506, byte_start: 33506, byte_end: 33507, column_start: 54, column_end: 55, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33506, char_end: 33512, byte_start: 33507, byte_end: 33513, column_start: 55, column_end: 61, line_start: 1006, line_end: 1006 }: passed
Token { kind: Space, char_start: 33512, char_end: 33513, byte_start: 33513, byte_end: 33514, column_start: 61, column_end: 62, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33513, char_end: 33515, byte_start: 33514, byte_end: 33516, column_start: 62, column_end: 64, line_start: 1006, line_end: 1006 }: to
Token { kind: Space, char_start: 33515, char_end: 33516, byte_start: 33516, byte_end: 33517, column_start: 64, column_end: 65, line_start: 1006, line_end: 1006 }: " "
Token { kind: Text, char_start: 33516, char_end: 33519, byte_start: 33517, byte_end: 33520, column_start: 65, column_end: 68, line_start: 1006, line_end: 1006 }: the
Token { kind: Newline, char_start: 33519, char_end: 33520, byte_start: 33520, byte_end: 33521, column_start: 68, column_end: 1, line_start: 1006, line_end: 1007 }: "\n"
Token { kind: Text, char_start: 33520, char_end: 33530, byte_start: 33521, byte_end: 33531, column_start: 1, column_end: 11, line_start: 1007, line_end: 1007 }: underlying
Token { kind: Space, char_start: 33530, char_end: 33531, byte_start: 33531, byte_end: 33532, column_start: 11, column_end: 12, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33531, char_end: 33537, byte_start: 33532, byte_end: 33538, column_start: 12, column_end: 18, line_start: 1007, line_end: 1007 }: search
Token { kind: Space, char_start: 33537, char_end: 33538, byte_start: 33538, byte_end: 33539, column_start: 18, column_end: 19, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33538, char_end: 33550, byte_start: 33539, byte_end: 33551, column_start: 19, column_end: 31, line_start: 1007, line_end: 1007 }: executables.
Token { kind: Space, char_start: 33550, char_end: 33551, byte_start: 33551, byte_end: 33552, column_start: 31, column_end: 32, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33551, char_end: 33554, byte_start: 33552, byte_end: 33555, column_start: 32, column_end: 35, line_start: 1007, line_end: 1007 }: For
Token { kind: Space, char_start: 33554, char_end: 33555, byte_start: 33555, byte_end: 33556, column_start: 35, column_end: 36, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33555, char_end: 33563, byte_start: 33556, byte_end: 33564, column_start: 36, column_end: 44, line_start: 1007, line_end: 1007 }: example,
Token { kind: Space, char_start: 33563, char_end: 33564, byte_start: 33564, byte_end: 33565, column_start: 44, column_end: 45, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33564, char_end: 33566, byte_start: 33565, byte_end: 33567, column_start: 45, column_end: 47, line_start: 1007, line_end: 1007 }: to
Token { kind: Space, char_start: 33566, char_end: 33567, byte_start: 33567, byte_end: 33568, column_start: 47, column_end: 48, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33567, char_end: 33570, byte_start: 33568, byte_end: 33571, column_start: 48, column_end: 51, line_start: 1007, line_end: 1007 }: add
Token { kind: Space, char_start: 33570, char_end: 33571, byte_start: 33571, byte_end: 33572, column_start: 51, column_end: 52, line_start: 1007, line_end: 1007 }: " "
Token { kind: Backtick, char_start: 33571, char_end: 33572, byte_start: 33572, byte_end: 33573, column_start: 52, column_end: 53, line_start: 1007, line_end: 1007 }: `
Token { kind: Hyphen, char_start: 33572, char_end: 33573, byte_start: 33573, byte_end: 33574, column_start: 53, column_end: 54, line_start: 1007, line_end: 1007 }: -
Token { kind: Text, char_start: 33573, char_end: 33574, byte_start: 33574, byte_end: 33575, column_start: 54, column_end: 55, line_start: 1007, line_end: 1007 }: s
Token { kind: Backtick, char_start: 33574, char_end: 33575, byte_start: 33575, byte_end: 33576, column_start: 55, column_end: 56, line_start: 1007, line_end: 1007 }: `
Token { kind: Space, char_start: 33575, char_end: 33576, byte_start: 33576, byte_end: 33577, column_start: 56, column_end: 57, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33576, char_end: 33578, byte_start: 33577, byte_end: 33579, column_start: 57, column_end: 59, line_start: 1007, line_end: 1007 }: to
Token { kind: Space, char_start: 33578, char_end: 33579, byte_start: 33579, byte_end: 33580, column_start: 59, column_end: 60, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33579, char_end: 33582, byte_start: 33580, byte_end: 33583, column_start: 60, column_end: 63, line_start: 1007, line_end: 1007 }: the
Token { kind: Space, char_start: 33582, char_end: 33583, byte_start: 33583, byte_end: 33584, column_start: 63, column_end: 64, line_start: 1007, line_end: 1007 }: " "
Token { kind: Text, char_start: 33583, char_end: 33590, byte_start: 33584, byte_end: 33591, column_start: 64, column_end: 71, line_start: 1007, line_end: 1007 }: default
Token { kind: Newline, char_start: 33590, char_end: 33591, byte_start: 33591, byte_end: 33592, column_start: 71, column_end: 1, line_start: 1007, line_end: 1008 }: "\n"
Token { kind: Text, char_start: 33591, char_end: 33600, byte_start: 33592, byte_end: 33601, column_start: 1, column_end: 10, line_start: 1008, line_end: 1008 }: arguments
Token { kind: Space, char_start: 33600, char_end: 33601, byte_start: 33601, byte_end: 33602, column_start: 10, column_end: 11, line_start: 1008, line_end: 1008 }: " "
Token { kind: Text, char_start: 33601, char_end: 33607, byte_start: 33602, byte_end: 33608, column_start: 11, column_end: 17, line_start: 1008, line_end: 1008 }: passed
Token { kind: Space, char_start: 33607, char_end: 33608, byte_start: 33608, byte_end: 33609, column_start: 17, column_end: 18, line_start: 1008, line_end: 1008 }: " "
Token { kind: Text, char_start: 33608, char_end: 33610, byte_start: 33609, byte_end: 33611, column_start: 18, column_end: 20, line_start: 1008, line_end: 1008 }: to
Token { kind: Space, char_start: 33610, char_end: 33611, byte_start: 33611, byte_end: 33612, column_start: 20, column_end: 21, line_start: 1008, line_end: 1008 }: " "
Token { kind: Backtick, char_start: 33611, char_end: 33612, byte_start: 33612, byte_end: 33613, column_start: 21, column_end: 22, line_start: 1008, line_end: 1008 }: `
Token { kind: Text, char_start: 33612, char_end: 33615, byte_start: 33613, byte_end: 33616, column_start: 22, column_end: 25, line_start: 1008, line_end: 1008 }: ack
Token { kind: Backtick, char_start: 33615, char_end: 33616, byte_start: 33616, byte_end: 33617, column_start: 25, column_end: 26, line_start: 1008, line_end: 1008 }: `
Token { kind: Space, char_start: 33616, char_end: 33617, byte_start: 33617, byte_end: 33618, column_start: 26, column_end: 27, line_start: 1008, line_end: 1008 }: " "
Token { kind: Lparen, char_start: 33617, char_end: 33618, byte_start: 33618, byte_end: 33619, column_start: 27, column_end: 28, line_start: 1008, line_end: 1008 }: (
Token { kind: Backtick, char_start: 33618, char_end: 33619, byte_start: 33619, byte_end: 33620, column_start: 28, column_end: 29, line_start: 1008, line_end: 1008 }: `
unterminated horizontal rule (line 1008, column 31)
Token { kind: Text, char_start: 33621, char_end: 33627, byte_start: 33622, byte_end: 33628, column_start: 31, column_end: 37, line_start: 1008, line_end: 1008 }: column
Token { kind: Space, char_start: 33627, char_end: 33628, byte_start: 33628, byte_end: 33629, column_start: 37, column_end: 38, line_start: 1008, line_end: 1008 }: " "
unterminated horizontal rule (line 1008, column 40)
Token { kind: Text, char_start: 33630, char_end: 33634, byte_start: 33631, byte_end: 33635, column_start: 40, column_end: 44, line_start: 1008, line_end: 1008 }: with
Token { kind: Hyphen, char_start: 33634, char_end: 33635, byte_start: 33635, byte_end: 33636, column_start: 44, column_end: 45, line_start: 1008, line_end: 1008 }: -
Token { kind: Text, char_start: 33635, char_end: 33643, byte_start: 33636, byte_end: 33644, column_start: 45, column_end: 53, line_start: 1008, line_end: 1008 }: filename
Token { kind: Backtick, char_start: 33643, char_end: 33644, byte_start: 33644, byte_end: 33645, column_start: 53, column_end: 54, line_start: 1008, line_end: 1008 }: `
Token { kind: Rparen, char_start: 33644, char_end: 33645, byte_start: 33645, byte_end: 33646, column_start: 54, column_end: 55, line_start: 1008, line_end: 1008 }: )
Token { kind: Text, char_start: 33645, char_end: 33646, byte_start: 33646, byte_end: 33647, column_start: 55, column_end: 56, line_start: 1008, line_end: 1008 }: :
Token { kind: Newline, char_start: 33646, char_end: 33647, byte_start: 33647, byte_end: 33648, column_start: 56, column_end: 1, line_start: 1008, line_end: 1009 }: "\n"
Token { kind: Newline, char_start: 33647, char_end: 33648, byte_start: 33648, byte_end: 33649, column_start: 1, column_end: 1, line_start: 1009, line_end: 1010 }: "\n"
Token { kind: CodeFence, char_start: 33648, char_end: 33651, byte_start: 33649, byte_end: 33652, column_start: 1, column_end: 4, line_start: 1010, line_end: 1010 }: ```
Token { kind: Newline, char_start: 33651, char_end: 33652, byte_start: 33652, byte_end: 33653, column_start: 4, column_end: 1, line_start: 1010, line_end: 1011 }: "\n"
Token { kind: Text, char_start: 33652, char_end: 33655, byte_start: 33653, byte_end: 33656, column_start: 1, column_end: 4, line_start: 1011, line_end: 1011 }: let
Token { kind: Space, char_start: 33655, char_end: 33656, byte_start: 33656, byte_end: 33657, column_start: 4, column_end: 5, line_start: 1011, line_end: 1011 }: " "
Token { kind: Text, char_start: 33656, char_end: 33683, byte_start: 33657, byte_end: 33684, column_start: 5, column_end: 32, line_start: 1011, line_end: 1011 }: g:FerretExecutableArguments
Token { kind: Space, char_start: 33683, char_end: 33684, byte_start: 33684, byte_end: 33685, column_start: 32, column_end: 33, line_start: 1011, line_end: 1011 }: " "
Token { kind: Text, char_start: 33684, char_end: 33685, byte_start: 33685, byte_end: 33686, column_start: 33, column_end: 34, line_start: 1011, line_end: 1011 }: =
Token { kind: Space, char_start: 33685, char_end: 33686, byte_start: 33686, byte_end: 33687, column_start: 34, column_end: 35, line_start: 1011, line_end: 1011 }: " "
Token { kind: Text, char_start: 33686, char_end: 33687, byte_start: 33687, byte_end: 33688, column_start: 35, column_end: 36, line_start: 1011, line_end: 1011 }: {
Token { kind: Newline, char_start: 33687, char_end: 33688, byte_start: 33688, byte_end: 33689, column_start: 36, column_end: 1, line_start: 1011, line_end: 1012 }: "\n"
Token { kind: Space, char_start: 33688, char_end: 33690, byte_start: 33689, byte_end: 33691, column_start: 1, column_end: 3, line_start: 1012, line_end: 1012 }: "  "
Token { kind: Text, char_start: 33690, char_end: 33691, byte_start: 33691, byte_end: 33692, column_start: 3, column_end: 4, line_start: 1012, line_end: 1012 }: \
Token { kind: Space, char_start: 33691, char_end: 33694, byte_start: 33692, byte_end: 33695, column_start: 4, column_end: 7, line_start: 1012, line_end: 1012 }: "   "
Token { kind: Text, char_start: 33694, char_end: 33700, byte_start: 33695, byte_end: 33701, column_start: 7, column_end: 13, line_start: 1012, line_end: 1012 }: 'ack':
Token { kind: Space, char_start: 33700, char_end: 33701, byte_start: 33701, byte_end: 33702, column_start: 13, column_end: 14, line_start: 1012, line_end: 1012 }: " "
Token { kind: Text, char_start: 33701, char_end: 33702, byte_start: 33702, byte_end: 33703, column_start: 14, column_end: 15, line_start: 1012, line_end: 1012 }: '
unterminated horizontal rule (line 1012, column 17)
Token { kind: Text, char_start: 33704, char_end: 33710, byte_start: 33705, byte_end: 33711, column_start: 17, column_end: 23, line_start: 1012, line_end: 1012 }: column
Token { kind: Space, char_start: 33710, char_end: 33711, byte_start: 33711, byte_end: 33712, column_start: 23, column_end: 24, line_start: 1012, line_end: 1012 }: " "
unterminated horizontal rule (line 1012, column 26)
Token { kind: Text, char_start: 33713, char_end: 33717, byte_start: 33714, byte_end: 33718, column_start: 26, column_end: 30, line_start: 1012, line_end: 1012 }: with
Token { kind: Hyphen, char_start: 33717, char_end: 33718, byte_start: 33718, byte_end: 33719, column_start: 30, column_end: 31, line_start: 1012, line_end: 1012 }: -
Token { kind: Text, char_start: 33718, char_end: 33726, byte_start: 33719, byte_end: 33727, column_start: 31, column_end: 39, line_start: 1012, line_end: 1012 }: filename
Token { kind: Space, char_start: 33726, char_end: 33727, byte_start: 33727, byte_end: 33728, column_start: 39, column_end: 40, line_start: 1012, line_end: 1012 }: " "
Token { kind: Hyphen, char_start: 33727, char_end: 33728, byte_start: 33728, byte_end: 33729, column_start: 40, column_end: 41, line_start: 1012, line_end: 1012 }: -
Token { kind: Text, char_start: 33728, char_end: 33730, byte_start: 33729, byte_end: 33731, column_start: 41, column_end: 43, line_start: 1012, line_end: 1012 }: s'
Token { kind: Newline, char_start: 33730, char_end: 33731, byte_start: 33731, byte_end: 33732, column_start: 43, column_end: 1, line_start: 1012, line_end: 1013 }: "\n"
Token { kind: Space, char_start: 33731, char_end: 33733, byte_start: 33732, byte_end: 33734, column_start: 1, column_end: 3, line_start: 1013, line_end: 1013 }: "  "
Token { kind: Text, char_start: 33733, char_end: 33734, byte_start: 33734, byte_end: 33735, column_start: 3, column_end: 4, line_start: 1013, line_end: 1013 }: \
Token { kind: Space, char_start: 33734, char_end: 33735, byte_start: 33735, byte_end: 33736, column_start: 4, column_end: 5, line_start: 1013, line_end: 1013 }: " "
Token { kind: Text, char_start: 33735, char_end: 33736, byte_start: 33736, byte_end: 33737, column_start: 5, column_end: 6, line_start: 1013, line_end: 1013 }: }
Token { kind: Newline, char_start: 33736, char_end: 33737, byte_start: 33737, byte_end: 33738, column_start: 6, column_end: 1, line_start: 1013, line_end: 1014 }: "\n"
Token { kind: CodeFence, char_start: 33737, char_end: 33740, byte_start: 33738, byte_end: 33741, column_start: 1, column_end: 4, line_start: 1014, line_end: 1014 }: ```
Token { kind: Newline, char_start: 33740, char_end: 33741, byte_start: 33741, byte_end: 33742, column_start: 4, column_end: 1, line_start: 1014, line_end: 1015 }: "\n"
Token { kind: Newline, char_start: 33741, char_end: 33742, byte_start: 33742, byte_end: 33743, column_start: 1, column_end: 1, line_start: 1015, line_end: 1016 }: "\n"
Token { kind: Text, char_start: 33742, char_end: 33744, byte_start: 33743, byte_end: 33745, column_start: 1, column_end: 3, line_start: 1016, line_end: 1016 }: To
Token { kind: Space, char_start: 33744, char_end: 33745, byte_start: 33745, byte_end: 33746, column_start: 3, column_end: 4, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33745, char_end: 33749, byte_start: 33746, byte_end: 33750, column_start: 4, column_end: 8, line_start: 1016, line_end: 1016 }: find
Token { kind: Space, char_start: 33749, char_end: 33750, byte_start: 33750, byte_end: 33751, column_start: 8, column_end: 9, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33750, char_end: 33753, byte_start: 33751, byte_end: 33754, column_start: 9, column_end: 12, line_start: 1016, line_end: 1016 }: out
Token { kind: Space, char_start: 33753, char_end: 33754, byte_start: 33754, byte_end: 33755, column_start: 12, column_end: 13, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33754, char_end: 33757, byte_start: 33755, byte_end: 33758, column_start: 13, column_end: 16, line_start: 1016, line_end: 1016 }: the
Token { kind: Space, char_start: 33757, char_end: 33758, byte_start: 33758, byte_end: 33759, column_start: 16, column_end: 17, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33758, char_end: 33765, byte_start: 33759, byte_end: 33766, column_start: 17, column_end: 24, line_start: 1016, line_end: 1016 }: default
Token { kind: Space, char_start: 33765, char_end: 33766, byte_start: 33766, byte_end: 33767, column_start: 24, column_end: 25, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33766, char_end: 33775, byte_start: 33767, byte_end: 33776, column_start: 25, column_end: 34, line_start: 1016, line_end: 1016 }: arguments
Token { kind: Space, char_start: 33775, char_end: 33776, byte_start: 33776, byte_end: 33777, column_start: 34, column_end: 35, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33776, char_end: 33779, byte_start: 33777, byte_end: 33780, column_start: 35, column_end: 38, line_start: 1016, line_end: 1016 }: for
Token { kind: Space, char_start: 33779, char_end: 33780, byte_start: 33780, byte_end: 33781, column_start: 38, column_end: 39, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33780, char_end: 33781, byte_start: 33781, byte_end: 33782, column_start: 39, column_end: 40, line_start: 1016, line_end: 1016 }: a
Token { kind: Space, char_start: 33781, char_end: 33782, byte_start: 33782, byte_end: 33783, column_start: 40, column_end: 41, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33782, char_end: 33787, byte_start: 33783, byte_end: 33788, column_start: 41, column_end: 46, line_start: 1016, line_end: 1016 }: given
Token { kind: Space, char_start: 33787, char_end: 33788, byte_start: 33788, byte_end: 33789, column_start: 46, column_end: 47, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33788, char_end: 33799, byte_start: 33789, byte_end: 33800, column_start: 47, column_end: 58, line_start: 1016, line_end: 1016 }: executable,
Token { kind: Space, char_start: 33799, char_end: 33800, byte_start: 33800, byte_end: 33801, column_start: 58, column_end: 59, line_start: 1016, line_end: 1016 }: " "
Token { kind: Text, char_start: 33800, char_end: 33803, byte_start: 33801, byte_end: 33804, column_start: 59, column_end: 62, line_start: 1016, line_end: 1016 }: see
Token { kind: Newline, char_start: 33803, char_end: 33804, byte_start: 33804, byte_end: 33805, column_start: 62, column_end: 1, line_start: 1016, line_end: 1017 }: "\n"
Token { kind: Bar, char_start: 33804, char_end: 33805, byte_start: 33805, byte_end: 33806, column_start: 1, column_end: 2, line_start: 1017, line_end: 1017 }: |
Token { kind: Text, char_start: 33805, char_end: 33811, byte_start: 33806, byte_end: 33812, column_start: 2, column_end: 8, line_start: 1017, line_end: 1017 }: ferret
Token { kind: Heading(Heading1), char_start: 33811, char_end: 33812, byte_start: 33812, byte_end: 33813, column_start: 8, column_end: 9, line_start: 1017, line_end: 1017 }: #
Token { kind: Text, char_start: 33812, char_end: 33833, byte_start: 33813, byte_end: 33834, column_start: 9, column_end: 30, line_start: 1017, line_end: 1017 }: get_default_arguments
Token { kind: Lparen, char_start: 33833, char_end: 33834, byte_start: 33834, byte_end: 33835, column_start: 30, column_end: 31, line_start: 1017, line_end: 1017 }: (
Token { kind: Rparen, char_start: 33834, char_end: 33835, byte_start: 33835, byte_end: 33836, column_start: 31, column_end: 32, line_start: 1017, line_end: 1017 }: )
Token { kind: Bar, char_start: 33835, char_end: 33836, byte_start: 33836, byte_end: 33837, column_start: 32, column_end: 33, line_start: 1017, line_end: 1017 }: |
Token { kind: Text, char_start: 33836, char_end: 33837, byte_start: 33837, byte_end: 33838, column_start: 33, column_end: 34, line_start: 1017, line_end: 1017 }: .
Token { kind: Newline, char_start: 33837, char_end: 33838, byte_start: 33838, byte_end: 33839, column_start: 34, column_end: 1, line_start: 1017, line_end: 1018 }: "\n"
Token { kind: Newline, char_start: 33838, char_end: 33839, byte_start: 33839, byte_end: 33840, column_start: 1, column_end: 1, line_start: 1018, line_end: 1019 }: "\n"
Token { kind: At, char_start: 33839, char_end: 33840, byte_start: 33840, byte_end: 33841, column_start: 1, column_end: 2, line_start: 1019, line_end: 1019 }: @
Token { kind: Text, char_start: 33840, char_end: 33846, byte_start: 33841, byte_end: 33847, column_start: 2, column_end: 8, line_start: 1019, line_end: 1019 }: option
Token { kind: Space, char_start: 33846, char_end: 33847, byte_start: 33847, byte_end: 33848, column_start: 8, column_end: 9, line_start: 1019, line_end: 1019 }: " "
Token { kind: Text, char_start: 33847, char_end: 33865, byte_start: 33848, byte_end: 33866, column_start: 9, column_end: 27, line_start: 1019, line_end: 1019 }: g:FerretMaxResults
Token { kind: Space, char_start: 33865, char_end: 33866, byte_start: 33866, byte_end: 33867, column_start: 27, column_end: 28, line_start: 1019, line_end: 1019 }: " "
Token { kind: Text, char_start: 33866, char_end: 33872, byte_start: 33867, byte_end: 33873, column_start: 28, column_end: 34, line_start: 1019, line_end: 1019 }: number
Token { kind: Space, char_start: 33872, char_end: 33873, byte_start: 33873, byte_end: 33874, column_start: 34, column_end: 35, line_start: 1019, line_end: 1019 }: " "
Token { kind: Text, char_start: 33873, char_end: 33879, byte_start: 33874, byte_end: 33880, column_start: 35, column_end: 41, line_start: 1019, line_end: 1019 }: 100000
Token { kind: Newline, char_start: 33879, char_end: 33880, byte_start: 33880, byte_end: 33881, column_start: 41, column_end: 1, line_start: 1019, line_end: 1020 }: "\n"
Token { kind: Newline, char_start: 33880, char_end: 33881, byte_start: 33881, byte_end: 33882, column_start: 1, column_end: 1, line_start: 1020, line_end: 1021 }: "\n"
Token { kind: Text, char_start: 33881, char_end: 33889, byte_start: 33882, byte_end: 33890, column_start: 1, column_end: 9, line_start: 1021, line_end: 1021 }: Controls
Token { kind: Space, char_start: 33889, char_end: 33890, byte_start: 33890, byte_end: 33891, column_start: 9, column_end: 10, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33890, char_end: 33893, byte_start: 33891, byte_end: 33894, column_start: 10, column_end: 13, line_start: 1021, line_end: 1021 }: the
Token { kind: Space, char_start: 33893, char_end: 33894, byte_start: 33894, byte_end: 33895, column_start: 13, column_end: 14, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33894, char_end: 33901, byte_start: 33895, byte_end: 33902, column_start: 14, column_end: 21, line_start: 1021, line_end: 1021 }: maximum
Token { kind: Space, char_start: 33901, char_end: 33902, byte_start: 33902, byte_end: 33903, column_start: 21, column_end: 22, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33902, char_end: 33908, byte_start: 33903, byte_end: 33909, column_start: 22, column_end: 28, line_start: 1021, line_end: 1021 }: number
Token { kind: Space, char_start: 33908, char_end: 33909, byte_start: 33909, byte_end: 33910, column_start: 28, column_end: 29, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33909, char_end: 33911, byte_start: 33910, byte_end: 33912, column_start: 29, column_end: 31, line_start: 1021, line_end: 1021 }: of
Token { kind: Space, char_start: 33911, char_end: 33912, byte_start: 33912, byte_end: 33913, column_start: 31, column_end: 32, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33912, char_end: 33919, byte_start: 33913, byte_end: 33920, column_start: 32, column_end: 39, line_start: 1021, line_end: 1021 }: results
Token { kind: Space, char_start: 33919, char_end: 33920, byte_start: 33920, byte_end: 33921, column_start: 39, column_end: 40, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33920, char_end: 33926, byte_start: 33921, byte_end: 33927, column_start: 40, column_end: 46, line_start: 1021, line_end: 1021 }: Ferret
Token { kind: Space, char_start: 33926, char_end: 33927, byte_start: 33927, byte_end: 33928, column_start: 46, column_end: 47, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33927, char_end: 33931, byte_start: 33928, byte_end: 33932, column_start: 47, column_end: 51, line_start: 1021, line_end: 1021 }: will
Token { kind: Space, char_start: 33931, char_end: 33932, byte_start: 33932, byte_end: 33933, column_start: 51, column_end: 52, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33932, char_end: 33939, byte_start: 33933, byte_end: 33940, column_start: 52, column_end: 59, line_start: 1021, line_end: 1021 }: attempt
Token { kind: Space, char_start: 33939, char_end: 33940, byte_start: 33940, byte_end: 33941, column_start: 59, column_end: 60, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33940, char_end: 33942, byte_start: 33941, byte_end: 33943, column_start: 60, column_end: 62, line_start: 1021, line_end: 1021 }: to
Token { kind: Space, char_start: 33942, char_end: 33943, byte_start: 33943, byte_end: 33944, column_start: 62, column_end: 63, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33943, char_end: 33949, byte_start: 33944, byte_end: 33950, column_start: 63, column_end: 69, line_start: 1021, line_end: 1021 }: gather
Token { kind: Space, char_start: 33949, char_end: 33950, byte_start: 33950, byte_end: 33951, column_start: 69, column_end: 70, line_start: 1021, line_end: 1021 }: " "
Token { kind: Text, char_start: 33950, char_end: 33956, byte_start: 33951, byte_end: 33957, column_start: 70, column_end: 76, line_start: 1021, line_end: 1021 }: before
Token { kind: Newline, char_start: 33956, char_end: 33957, byte_start: 33957, byte_end: 33958, column_start: 76, column_end: 1, line_start: 1021, line_end: 1022 }: "\n"
Token { kind: Text, char_start: 33957, char_end: 33967, byte_start: 33958, byte_end: 33968, column_start: 1, column_end: 11, line_start: 1022, line_end: 1022 }: displaying
Token { kind: Space, char_start: 33967, char_end: 33968, byte_start: 33968, byte_end: 33969, column_start: 11, column_end: 12, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 33968, char_end: 33971, byte_start: 33969, byte_end: 33972, column_start: 12, column_end: 15, line_start: 1022, line_end: 1022 }: the
Token { kind: Space, char_start: 33971, char_end: 33972, byte_start: 33972, byte_end: 33973, column_start: 15, column_end: 16, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 33972, char_end: 33980, byte_start: 33973, byte_end: 33981, column_start: 16, column_end: 24, line_start: 1022, line_end: 1022 }: results.
Token { kind: Space, char_start: 33980, char_end: 33981, byte_start: 33981, byte_end: 33982, column_start: 24, column_end: 25, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 33981, char_end: 33985, byte_start: 33982, byte_end: 33986, column_start: 25, column_end: 29, line_start: 1022, line_end: 1022 }: Note
Token { kind: Space, char_start: 33985, char_end: 33986, byte_start: 33986, byte_end: 33987, column_start: 29, column_end: 30, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 33986, char_end: 33990, byte_start: 33987, byte_end: 33991, column_start: 30, column_end: 34, line_start: 1022, line_end: 1022 }: that
Token { kind: Space, char_start: 33990, char_end: 33991, byte_start: 33991, byte_end: 33992, column_start: 34, column_end: 35, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 33991, char_end: 33995, byte_start: 33992, byte_end: 33996, column_start: 35, column_end: 39, line_start: 1022, line_end: 1022 }: this
Token { kind: Space, char_start: 33995, char_end: 33996, byte_start: 33996, byte_end: 33997, column_start: 39, column_end: 40, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 33996, char_end: 34000, byte_start: 33997, byte_end: 34001, column_start: 40, column_end: 44, line_start: 1022, line_end: 1022 }: only
Token { kind: Space, char_start: 34000, char_end: 34001, byte_start: 34001, byte_end: 34002, column_start: 44, column_end: 45, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 34001, char_end: 34008, byte_start: 34002, byte_end: 34009, column_start: 45, column_end: 52, line_start: 1022, line_end: 1022 }: applies
Token { kind: Space, char_start: 34008, char_end: 34009, byte_start: 34009, byte_end: 34010, column_start: 52, column_end: 53, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 34009, char_end: 34013, byte_start: 34010, byte_end: 34014, column_start: 53, column_end: 57, line_start: 1022, line_end: 1022 }: when
Token { kind: Space, char_start: 34013, char_end: 34014, byte_start: 34014, byte_end: 34015, column_start: 57, column_end: 58, line_start: 1022, line_end: 1022 }: " "
Token { kind: Text, char_start: 34014, char_end: 34023, byte_start: 34015, byte_end: 34024, column_start: 58, column_end: 67, line_start: 1022, line_end: 1022 }: searching
Token { kind: Newline, char_start: 34023, char_end: 34024, byte_start: 34024, byte_end: 34025, column_start: 67, column_end: 1, line_start: 1022, line_end: 1023 }: "\n"
Token { kind: Text, char_start: 34024, char_end: 34039, byte_start: 34025, byte_end: 34040, column_start: 1, column_end: 16, line_start: 1023, line_end: 1023 }: asynchronously;
Token { kind: Space, char_start: 34039, char_end: 34040, byte_start: 34040, byte_end: 34041, column_start: 16, column_end: 17, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34040, char_end: 34044, byte_start: 34041, byte_end: 34045, column_start: 17, column_end: 21, line_start: 1023, line_end: 1023 }: that
Token { kind: Space, char_start: 34044, char_end: 34045, byte_start: 34045, byte_end: 34046, column_start: 21, column_end: 22, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34045, char_end: 34048, byte_start: 34046, byte_end: 34049, column_start: 22, column_end: 25, line_start: 1023, line_end: 1023 }: is,
Token { kind: Space, char_start: 34048, char_end: 34049, byte_start: 34049, byte_end: 34050, column_start: 25, column_end: 26, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34049, char_end: 34051, byte_start: 34050, byte_end: 34052, column_start: 26, column_end: 28, line_start: 1023, line_end: 1023 }: on
Token { kind: Space, char_start: 34051, char_end: 34052, byte_start: 34052, byte_end: 34053, column_start: 28, column_end: 29, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34052, char_end: 34058, byte_start: 34053, byte_end: 34059, column_start: 29, column_end: 35, line_start: 1023, line_end: 1023 }: recent
Token { kind: Space, char_start: 34058, char_end: 34059, byte_start: 34059, byte_end: 34060, column_start: 35, column_end: 36, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34059, char_end: 34067, byte_start: 34060, byte_end: 34068, column_start: 36, column_end: 44, line_start: 1023, line_end: 1023 }: versions
Token { kind: Space, char_start: 34067, char_end: 34068, byte_start: 34068, byte_end: 34069, column_start: 44, column_end: 45, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34068, char_end: 34070, byte_start: 34069, byte_end: 34071, column_start: 45, column_end: 47, line_start: 1023, line_end: 1023 }: of
Token { kind: Space, char_start: 34070, char_end: 34071, byte_start: 34071, byte_end: 34072, column_start: 47, column_end: 48, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34071, char_end: 34074, byte_start: 34072, byte_end: 34075, column_start: 48, column_end: 51, line_start: 1023, line_end: 1023 }: Vim
Token { kind: Space, char_start: 34074, char_end: 34075, byte_start: 34075, byte_end: 34076, column_start: 51, column_end: 52, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34075, char_end: 34079, byte_start: 34076, byte_end: 34080, column_start: 52, column_end: 56, line_start: 1023, line_end: 1023 }: with
Token { kind: Space, char_start: 34079, char_end: 34080, byte_start: 34080, byte_end: 34081, column_start: 56, column_end: 57, line_start: 1023, line_end: 1023 }: " "
Token { kind: Bar, char_start: 34080, char_end: 34081, byte_start: 34081, byte_end: 34082, column_start: 57, column_end: 58, line_start: 1023, line_end: 1023 }: |
Token { kind: Text, char_start: 34081, char_end: 34085, byte_start: 34082, byte_end: 34086, column_start: 58, column_end: 62, line_start: 1023, line_end: 1023 }: +job
Token { kind: Bar, char_start: 34085, char_end: 34086, byte_start: 34086, byte_end: 34087, column_start: 62, column_end: 63, line_start: 1023, line_end: 1023 }: |
Token { kind: Space, char_start: 34086, char_end: 34087, byte_start: 34087, byte_end: 34088, column_start: 63, column_end: 64, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34087, char_end: 34094, byte_start: 34088, byte_end: 34095, column_start: 64, column_end: 71, line_start: 1023, line_end: 1023 }: support
Token { kind: Space, char_start: 34094, char_end: 34095, byte_start: 34095, byte_end: 34096, column_start: 71, column_end: 72, line_start: 1023, line_end: 1023 }: " "
Token { kind: Text, char_start: 34095, char_end: 34098, byte_start: 34096, byte_end: 34099, column_start: 72, column_end: 75, line_start: 1023, line_end: 1023 }: and
Token { kind: Newline, char_start: 34098, char_end: 34099, byte_start: 34099, byte_end: 34100, column_start: 75, column_end: 1, line_start: 1023, line_end: 1024 }: "\n"
Token { kind: Text, char_start: 34099, char_end: 34103, byte_start: 34100, byte_end: 34104, column_start: 1, column_end: 5, line_start: 1024, line_end: 1024 }: when
Token { kind: Space, char_start: 34103, char_end: 34104, byte_start: 34104, byte_end: 34105, column_start: 5, column_end: 6, line_start: 1024, line_end: 1024 }: " "
Token { kind: Bar, char_start: 34104, char_end: 34105, byte_start: 34105, byte_end: 34106, column_start: 6, column_end: 7, line_start: 1024, line_end: 1024 }: |
Token { kind: Text, char_start: 34105, char_end: 34116, byte_start: 34106, byte_end: 34117, column_start: 7, column_end: 18, line_start: 1024, line_end: 1024 }: g:FerretJob
Token { kind: Bar, char_start: 34116, char_end: 34117, byte_start: 34117, byte_end: 34118, column_start: 18, column_end: 19, line_start: 1024, line_end: 1024 }: |
Token { kind: Space, char_start: 34117, char_end: 34118, byte_start: 34118, byte_end: 34119, column_start: 19, column_end: 20, line_start: 1024, line_end: 1024 }: " "
Token { kind: Text, char_start: 34118, char_end: 34120, byte_start: 34119, byte_end: 34121, column_start: 20, column_end: 22, line_start: 1024, line_end: 1024 }: is
Token { kind: Space, char_start: 34120, char_end: 34121, byte_start: 34121, byte_end: 34122, column_start: 22, column_end: 23, line_start: 1024, line_end: 1024 }: " "
Token { kind: Text, char_start: 34121, char_end: 34124, byte_start: 34122, byte_end: 34125, column_start: 23, column_end: 26, line_start: 1024, line_end: 1024 }: not
Token { kind: Space, char_start: 34124, char_end: 34125, byte_start: 34125, byte_end: 34126, column_start: 26, column_end: 27, line_start: 1024, line_end: 1024 }: " "
Token { kind: Text, char_start: 34125, char_end: 34128, byte_start: 34126, byte_end: 34129, column_start: 27, column_end: 30, line_start: 1024, line_end: 1024 }: set
Token { kind: Space, char_start: 34128, char_end: 34129, byte_start: 34129, byte_end: 34130, column_start: 30, column_end: 31, line_start: 1024, line_end: 1024 }: " "
Token { kind: Text, char_start: 34129, char_end: 34131, byte_start: 34130, byte_end: 34132, column_start: 31, column_end: 33, line_start: 1024, line_end: 1024 }: to
Token { kind: Space, char_start: 34131, char_end: 34132, byte_start: 34132, byte_end: 34133, column_start: 33, column_end: 34, line_start: 1024, line_end: 1024 }: " "
Token { kind: Text, char_start: 34132, char_end: 34134, byte_start: 34133, byte_end: 34135, column_start: 34, column_end: 36, line_start: 1024, line_end: 1024 }: 0.
Token { kind: Newline, char_start: 34134, char_end: 34135, byte_start: 34135, byte_end: 34136, column_start: 36, column_end: 1, line_start: 1024, line_end: 1025 }: "\n"
Token { kind: Newline, char_start: 34135, char_end: 34136, byte_start: 34136, byte_end: 34137, column_start: 1, column_end: 1, line_start: 1025, line_end: 1026 }: "\n"
Token { kind: Text, char_start: 34136, char_end: 34139, byte_start: 34137, byte_end: 34140, column_start: 1, column_end: 4, line_start: 1026, line_end: 1026 }: The
Token { kind: Space, char_start: 34139, char_end: 34140, byte_start: 34140, byte_end: 34141, column_start: 4, column_end: 5, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34140, char_end: 34146, byte_start: 34141, byte_end: 34147, column_start: 5, column_end: 11, line_start: 1026, line_end: 1026 }: intent
Token { kind: Space, char_start: 34146, char_end: 34147, byte_start: 34147, byte_end: 34148, column_start: 11, column_end: 12, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34147, char_end: 34149, byte_start: 34148, byte_end: 34150, column_start: 12, column_end: 14, line_start: 1026, line_end: 1026 }: of
Token { kind: Space, char_start: 34149, char_end: 34150, byte_start: 34150, byte_end: 34151, column_start: 14, column_end: 15, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34150, char_end: 34154, byte_start: 34151, byte_end: 34155, column_start: 15, column_end: 19, line_start: 1026, line_end: 1026 }: this
Token { kind: Space, char_start: 34154, char_end: 34155, byte_start: 34155, byte_end: 34156, column_start: 19, column_end: 20, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34155, char_end: 34161, byte_start: 34156, byte_end: 34162, column_start: 20, column_end: 26, line_start: 1026, line_end: 1026 }: option
Token { kind: Space, char_start: 34161, char_end: 34162, byte_start: 34162, byte_end: 34163, column_start: 26, column_end: 27, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34162, char_end: 34164, byte_start: 34163, byte_end: 34165, column_start: 27, column_end: 29, line_start: 1026, line_end: 1026 }: is
Token { kind: Space, char_start: 34164, char_end: 34165, byte_start: 34165, byte_end: 34166, column_start: 29, column_end: 30, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34165, char_end: 34167, byte_start: 34166, byte_end: 34168, column_start: 30, column_end: 32, line_start: 1026, line_end: 1026 }: to
Token { kind: Space, char_start: 34167, char_end: 34168, byte_start: 34168, byte_end: 34169, column_start: 32, column_end: 33, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34168, char_end: 34175, byte_start: 34169, byte_end: 34176, column_start: 33, column_end: 40, line_start: 1026, line_end: 1026 }: prevent
Token { kind: Space, char_start: 34175, char_end: 34176, byte_start: 34176, byte_end: 34177, column_start: 40, column_end: 41, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34176, char_end: 34183, byte_start: 34177, byte_end: 34184, column_start: 41, column_end: 48, line_start: 1026, line_end: 1026 }: runaway
Token { kind: Space, char_start: 34183, char_end: 34184, byte_start: 34184, byte_end: 34185, column_start: 48, column_end: 49, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34184, char_end: 34190, byte_start: 34185, byte_end: 34191, column_start: 49, column_end: 55, line_start: 1026, line_end: 1026 }: search
Token { kind: Space, char_start: 34190, char_end: 34191, byte_start: 34191, byte_end: 34192, column_start: 55, column_end: 56, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34191, char_end: 34200, byte_start: 34192, byte_end: 34201, column_start: 56, column_end: 65, line_start: 1026, line_end: 1026 }: processes
Token { kind: Space, char_start: 34200, char_end: 34201, byte_start: 34201, byte_end: 34202, column_start: 65, column_end: 66, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34201, char_end: 34205, byte_start: 34202, byte_end: 34206, column_start: 66, column_end: 70, line_start: 1026, line_end: 1026 }: that
Token { kind: Space, char_start: 34205, char_end: 34206, byte_start: 34206, byte_end: 34207, column_start: 70, column_end: 71, line_start: 1026, line_end: 1026 }: " "
Token { kind: Text, char_start: 34206, char_end: 34213, byte_start: 34207, byte_end: 34214, column_start: 71, column_end: 78, line_start: 1026, line_end: 1026 }: produce
Token { kind: Newline, char_start: 34213, char_end: 34214, byte_start: 34214, byte_end: 34215, column_start: 78, column_end: 1, line_start: 1026, line_end: 1027 }: "\n"
Token { kind: Text, char_start: 34214, char_end: 34218, byte_start: 34215, byte_end: 34219, column_start: 1, column_end: 5, line_start: 1027, line_end: 1027 }: huge
Token { kind: Space, char_start: 34218, char_end: 34219, byte_start: 34219, byte_end: 34220, column_start: 5, column_end: 6, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34219, char_end: 34226, byte_start: 34220, byte_end: 34227, column_start: 6, column_end: 13, line_start: 1027, line_end: 1027 }: volumes
Token { kind: Space, char_start: 34226, char_end: 34227, byte_start: 34227, byte_end: 34228, column_start: 13, column_end: 14, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34227, char_end: 34229, byte_start: 34228, byte_end: 34230, column_start: 14, column_end: 16, line_start: 1027, line_end: 1027 }: of
Token { kind: Space, char_start: 34229, char_end: 34230, byte_start: 34230, byte_end: 34231, column_start: 16, column_end: 17, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34230, char_end: 34236, byte_start: 34231, byte_end: 34237, column_start: 17, column_end: 23, line_start: 1027, line_end: 1027 }: output
Token { kind: Space, char_start: 34236, char_end: 34237, byte_start: 34237, byte_end: 34238, column_start: 23, column_end: 24, line_start: 1027, line_end: 1027 }: " "
Token { kind: Lparen, char_start: 34237, char_end: 34238, byte_start: 34238, byte_end: 34239, column_start: 24, column_end: 25, line_start: 1027, line_end: 1027 }: (
Token { kind: Text, char_start: 34238, char_end: 34241, byte_start: 34239, byte_end: 34242, column_start: 25, column_end: 28, line_start: 1027, line_end: 1027 }: for
Token { kind: Space, char_start: 34241, char_end: 34242, byte_start: 34242, byte_end: 34243, column_start: 28, column_end: 29, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34242, char_end: 34250, byte_start: 34243, byte_end: 34251, column_start: 29, column_end: 37, line_start: 1027, line_end: 1027 }: example,
Token { kind: Space, char_start: 34250, char_end: 34251, byte_start: 34251, byte_end: 34252, column_start: 37, column_end: 38, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34251, char_end: 34260, byte_start: 34252, byte_end: 34261, column_start: 38, column_end: 47, line_start: 1027, line_end: 1027 }: searching
Token { kind: Space, char_start: 34260, char_end: 34261, byte_start: 34261, byte_end: 34262, column_start: 47, column_end: 48, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34261, char_end: 34264, byte_start: 34262, byte_end: 34265, column_start: 48, column_end: 51, line_start: 1027, line_end: 1027 }: for
Token { kind: Space, char_start: 34264, char_end: 34265, byte_start: 34265, byte_end: 34266, column_start: 51, column_end: 52, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34265, char_end: 34266, byte_start: 34266, byte_end: 34267, column_start: 52, column_end: 53, line_start: 1027, line_end: 1027 }: a
Token { kind: Space, char_start: 34266, char_end: 34267, byte_start: 34267, byte_end: 34268, column_start: 53, column_end: 54, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34267, char_end: 34273, byte_start: 34268, byte_end: 34274, column_start: 54, column_end: 60, line_start: 1027, line_end: 1027 }: common
Token { kind: Space, char_start: 34273, char_end: 34274, byte_start: 34274, byte_end: 34275, column_start: 60, column_end: 61, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34274, char_end: 34280, byte_start: 34275, byte_end: 34281, column_start: 61, column_end: 67, line_start: 1027, line_end: 1027 }: string
Token { kind: Space, char_start: 34280, char_end: 34281, byte_start: 34281, byte_end: 34282, column_start: 67, column_end: 68, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34281, char_end: 34285, byte_start: 34282, byte_end: 34286, column_start: 68, column_end: 72, line_start: 1027, line_end: 1027 }: like
Token { kind: Space, char_start: 34285, char_end: 34286, byte_start: 34286, byte_end: 34287, column_start: 72, column_end: 73, line_start: 1027, line_end: 1027 }: " "
Token { kind: Text, char_start: 34286, char_end: 34292, byte_start: 34287, byte_end: 34293, column_start: 73, column_end: 79, line_start: 1027, line_end: 1027 }: "test"
Token { kind: Newline, char_start: 34292, char_end: 34293, byte_start: 34293, byte_end: 34294, column_start: 79, column_end: 1, line_start: 1027, line_end: 1028 }: "\n"
Token { kind: Text, char_start: 34293, char_end: 34299, byte_start: 34294, byte_end: 34300, column_start: 1, column_end: 7, line_start: 1028, line_end: 1028 }: inside
Token { kind: Space, char_start: 34299, char_end: 34300, byte_start: 34300, byte_end: 34301, column_start: 7, column_end: 8, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34300, char_end: 34301, byte_start: 34301, byte_end: 34302, column_start: 8, column_end: 9, line_start: 1028, line_end: 1028 }: a
Token { kind: Space, char_start: 34301, char_end: 34302, byte_start: 34302, byte_end: 34303, column_start: 9, column_end: 10, line_start: 1028, line_end: 1028 }: " "
Token { kind: Bar, char_start: 34302, char_end: 34303, byte_start: 34303, byte_end: 34304, column_start: 10, column_end: 11, line_start: 1028, line_end: 1028 }: |
Token { kind: Text, char_start: 34303, char_end: 34308, byte_start: 34304, byte_end: 34309, column_start: 11, column_end: 16, line_start: 1028, line_end: 1028 }: $HOME
Token { kind: Bar, char_start: 34308, char_end: 34309, byte_start: 34309, byte_end: 34310, column_start: 16, column_end: 17, line_start: 1028, line_end: 1028 }: |
Token { kind: Space, char_start: 34309, char_end: 34310, byte_start: 34310, byte_end: 34311, column_start: 17, column_end: 18, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34310, char_end: 34319, byte_start: 34311, byte_end: 34320, column_start: 18, column_end: 27, line_start: 1028, line_end: 1028 }: directory
Token { kind: Space, char_start: 34319, char_end: 34320, byte_start: 34320, byte_end: 34321, column_start: 27, column_end: 28, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34320, char_end: 34330, byte_start: 34321, byte_end: 34331, column_start: 28, column_end: 38, line_start: 1028, line_end: 1028 }: containing
Token { kind: Space, char_start: 34330, char_end: 34331, byte_start: 34331, byte_end: 34332, column_start: 38, column_end: 39, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34331, char_end: 34339, byte_start: 34332, byte_end: 34340, column_start: 39, column_end: 47, line_start: 1028, line_end: 1028 }: millions
Token { kind: Space, char_start: 34339, char_end: 34340, byte_start: 34340, byte_end: 34341, column_start: 47, column_end: 48, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34340, char_end: 34342, byte_start: 34341, byte_end: 34343, column_start: 48, column_end: 50, line_start: 1028, line_end: 1028 }: of
Token { kind: Space, char_start: 34342, char_end: 34343, byte_start: 34343, byte_end: 34344, column_start: 50, column_end: 51, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34343, char_end: 34348, byte_start: 34344, byte_end: 34349, column_start: 51, column_end: 56, line_start: 1028, line_end: 1028 }: files
Token { kind: Rparen, char_start: 34348, char_end: 34349, byte_start: 34349, byte_end: 34350, column_start: 56, column_end: 57, line_start: 1028, line_end: 1028 }: )
Token { kind: Space, char_start: 34349, char_end: 34350, byte_start: 34350, byte_end: 34351, column_start: 57, column_end: 58, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34350, char_end: 34354, byte_start: 34351, byte_end: 34355, column_start: 58, column_end: 62, line_start: 1028, line_end: 1028 }: from
Token { kind: Space, char_start: 34354, char_end: 34355, byte_start: 34355, byte_end: 34356, column_start: 62, column_end: 63, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34355, char_end: 34362, byte_start: 34356, byte_end: 34363, column_start: 63, column_end: 70, line_start: 1028, line_end: 1028 }: locking
Token { kind: Space, char_start: 34362, char_end: 34363, byte_start: 34363, byte_end: 34364, column_start: 70, column_end: 71, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34363, char_end: 34365, byte_start: 34364, byte_end: 34366, column_start: 71, column_end: 73, line_start: 1028, line_end: 1028 }: up
Token { kind: Space, char_start: 34365, char_end: 34366, byte_start: 34366, byte_end: 34367, column_start: 73, column_end: 74, line_start: 1028, line_end: 1028 }: " "
Token { kind: Text, char_start: 34366, char_end: 34370, byte_start: 34367, byte_end: 34371, column_start: 74, column_end: 78, line_start: 1028, line_end: 1028 }: Vim.
Token { kind: Newline, char_start: 34370, char_end: 34371, byte_start: 34371, byte_end: 34372, column_start: 78, column_end: 1, line_start: 1028, line_end: 1029 }: "\n"
Token { kind: Newline, char_start: 34371, char_end: 34372, byte_start: 34372, byte_end: 34373, column_start: 1, column_end: 1, line_start: 1029, line_end: 1030 }: "\n"
Token { kind: Text, char_start: 34372, char_end: 34374, byte_start: 34373, byte_end: 34375, column_start: 1, column_end: 3, line_start: 1030, line_end: 1030 }: In
Token { kind: Space, char_start: 34374, char_end: 34375, byte_start: 34375, byte_end: 34376, column_start: 3, column_end: 4, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34375, char_end: 34378, byte_start: 34376, byte_end: 34379, column_start: 4, column_end: 7, line_start: 1030, line_end: 1030 }: the
Token { kind: Space, char_start: 34378, char_end: 34379, byte_start: 34379, byte_end: 34380, column_start: 7, column_end: 8, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34379, char_end: 34384, byte_start: 34380, byte_end: 34385, column_start: 8, column_end: 13, line_start: 1030, line_end: 1030 }: event
Token { kind: Space, char_start: 34384, char_end: 34385, byte_start: 34385, byte_end: 34386, column_start: 13, column_end: 14, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34385, char_end: 34389, byte_start: 34386, byte_end: 34390, column_start: 14, column_end: 18, line_start: 1030, line_end: 1030 }: that
Token { kind: Space, char_start: 34389, char_end: 34390, byte_start: 34390, byte_end: 34391, column_start: 18, column_end: 19, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34390, char_end: 34396, byte_start: 34391, byte_end: 34397, column_start: 19, column_end: 25, line_start: 1030, line_end: 1030 }: Ferret
Token { kind: Space, char_start: 34396, char_end: 34397, byte_start: 34397, byte_end: 34398, column_start: 25, column_end: 26, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34397, char_end: 34403, byte_start: 34398, byte_end: 34404, column_start: 26, column_end: 32, line_start: 1030, line_end: 1030 }: aborts
Token { kind: Space, char_start: 34403, char_end: 34404, byte_start: 34404, byte_end: 34405, column_start: 32, column_end: 33, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34404, char_end: 34405, byte_start: 34405, byte_end: 34406, column_start: 33, column_end: 34, line_start: 1030, line_end: 1030 }: a
Token { kind: Space, char_start: 34405, char_end: 34406, byte_start: 34406, byte_end: 34407, column_start: 34, column_end: 35, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34406, char_end: 34412, byte_start: 34407, byte_end: 34413, column_start: 35, column_end: 41, line_start: 1030, line_end: 1030 }: search
Token { kind: Space, char_start: 34412, char_end: 34413, byte_start: 34413, byte_end: 34414, column_start: 41, column_end: 42, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34413, char_end: 34417, byte_start: 34414, byte_end: 34418, column_start: 42, column_end: 46, line_start: 1030, line_end: 1030 }: that
Token { kind: Space, char_start: 34417, char_end: 34418, byte_start: 34418, byte_end: 34419, column_start: 46, column_end: 47, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34418, char_end: 34421, byte_start: 34419, byte_end: 34422, column_start: 47, column_end: 50, line_start: 1030, line_end: 1030 }: has
Token { kind: Space, char_start: 34421, char_end: 34422, byte_start: 34422, byte_end: 34423, column_start: 50, column_end: 51, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34422, char_end: 34425, byte_start: 34423, byte_end: 34426, column_start: 51, column_end: 54, line_start: 1030, line_end: 1030 }: hit
Token { kind: Space, char_start: 34425, char_end: 34426, byte_start: 34426, byte_end: 34427, column_start: 54, column_end: 55, line_start: 1030, line_end: 1030 }: " "
Token { kind: Text, char_start: 34426, char_end: 34429, byte_start: 34427, byte_end: 34430, column_start: 55, column_end: 58, line_start: 1030, line_end: 1030 }: the
Token { kind: Space, char_start: 34429, char_end: 34430, byte_start: 34430, byte_end: 34431, column_start: 58, column_end: 59, line_start: 1030, line_end: 1030 }: " "
Token { kind: Bar, char_start: 34430, char_end: 34431, byte_start: 34431, byte_end: 34432, column_start: 59, column_end: 60, line_start: 1030, line_end: 1030 }: |
Token { kind: Text, char_start: 34431, char_end: 34449, byte_start: 34432, byte_end: 34450, column_start: 60, column_end: 78, line_start: 1030, line_end: 1030 }: g:FerretMaxResults
Token { kind: Bar, char_start: 34449, char_end: 34450, byte_start: 34450, byte_end: 34451, column_start: 78, column_end: 79, line_start: 1030, line_end: 1030 }: |
Token { kind: Newline, char_start: 34450, char_end: 34451, byte_start: 34451, byte_end: 34452, column_start: 79, column_end: 1, line_start: 1030, line_end: 1031 }: "\n"
Token { kind: Text, char_start: 34451, char_end: 34457, byte_start: 34452, byte_end: 34458, column_start: 1, column_end: 7, line_start: 1031, line_end: 1031 }: limit,
Token { kind: Space, char_start: 34457, char_end: 34458, byte_start: 34458, byte_end: 34459, column_start: 7, column_end: 8, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34458, char_end: 34459, byte_start: 34459, byte_end: 34460, column_start: 8, column_end: 9, line_start: 1031, line_end: 1031 }: a
Token { kind: Space, char_start: 34459, char_end: 34460, byte_start: 34460, byte_end: 34461, column_start: 9, column_end: 10, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34460, char_end: 34467, byte_start: 34461, byte_end: 34468, column_start: 10, column_end: 17, line_start: 1031, line_end: 1031 }: message
Token { kind: Space, char_start: 34467, char_end: 34468, byte_start: 34468, byte_end: 34469, column_start: 17, column_end: 18, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34468, char_end: 34472, byte_start: 34469, byte_end: 34473, column_start: 18, column_end: 22, line_start: 1031, line_end: 1031 }: will
Token { kind: Space, char_start: 34472, char_end: 34473, byte_start: 34473, byte_end: 34474, column_start: 22, column_end: 23, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34473, char_end: 34475, byte_start: 34474, byte_end: 34476, column_start: 23, column_end: 25, line_start: 1031, line_end: 1031 }: be
Token { kind: Space, char_start: 34475, char_end: 34476, byte_start: 34476, byte_end: 34477, column_start: 25, column_end: 26, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34476, char_end: 34483, byte_start: 34477, byte_end: 34484, column_start: 26, column_end: 33, line_start: 1031, line_end: 1031 }: printed
Token { kind: Space, char_start: 34483, char_end: 34484, byte_start: 34484, byte_end: 34485, column_start: 33, column_end: 34, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34484, char_end: 34493, byte_start: 34485, byte_end: 34494, column_start: 34, column_end: 43, line_start: 1031, line_end: 1031 }: prompting
Token { kind: Space, char_start: 34493, char_end: 34494, byte_start: 34494, byte_end: 34495, column_start: 43, column_end: 44, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34494, char_end: 34499, byte_start: 34495, byte_end: 34500, column_start: 44, column_end: 49, line_start: 1031, line_end: 1031 }: users
Token { kind: Space, char_start: 34499, char_end: 34500, byte_start: 34500, byte_end: 34501, column_start: 49, column_end: 50, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34500, char_end: 34502, byte_start: 34501, byte_end: 34503, column_start: 50, column_end: 52, line_start: 1031, line_end: 1031 }: to
Token { kind: Space, char_start: 34502, char_end: 34503, byte_start: 34503, byte_end: 34504, column_start: 52, column_end: 53, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34503, char_end: 34506, byte_start: 34504, byte_end: 34507, column_start: 53, column_end: 56, line_start: 1031, line_end: 1031 }: run
Token { kind: Space, char_start: 34506, char_end: 34507, byte_start: 34507, byte_end: 34508, column_start: 56, column_end: 57, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34507, char_end: 34510, byte_start: 34508, byte_end: 34511, column_start: 57, column_end: 60, line_start: 1031, line_end: 1031 }: the
Token { kind: Space, char_start: 34510, char_end: 34511, byte_start: 34511, byte_end: 34512, column_start: 60, column_end: 61, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34511, char_end: 34517, byte_start: 34512, byte_end: 34518, column_start: 61, column_end: 67, line_start: 1031, line_end: 1031 }: search
Token { kind: Space, char_start: 34517, char_end: 34518, byte_start: 34518, byte_end: 34519, column_start: 67, column_end: 68, line_start: 1031, line_end: 1031 }: " "
Token { kind: Text, char_start: 34518, char_end: 34523, byte_start: 34519, byte_end: 34524, column_start: 68, column_end: 73, line_start: 1031, line_end: 1031 }: again
Token { kind: Newline, char_start: 34523, char_end: 34524, byte_start: 34524, byte_end: 34525, column_start: 73, column_end: 1, line_start: 1031, line_end: 1032 }: "\n"
Token { kind: Text, char_start: 34524, char_end: 34528, byte_start: 34525, byte_end: 34529, column_start: 1, column_end: 5, line_start: 1032, line_end: 1032 }: with
Token { kind: Space, char_start: 34528, char_end: 34529, byte_start: 34529, byte_end: 34530, column_start: 5, column_end: 6, line_start: 1032, line_end: 1032 }: " "
Token { kind: Bar, char_start: 34529, char_end: 34530, byte_start: 34530, byte_end: 34531, column_start: 6, column_end: 7, line_start: 1032, line_end: 1032 }: |
Token { kind: Text, char_start: 34530, char_end: 34534, byte_start: 34531, byte_end: 34535, column_start: 7, column_end: 11, line_start: 1032, line_end: 1032 }: :Ack
Token { kind: Bang, char_start: 34534, char_end: 34535, byte_start: 34535, byte_end: 34536, column_start: 11, column_end: 12, line_start: 1032, line_end: 1032 }: !
Token { kind: Bar, char_start: 34535, char_end: 34536, byte_start: 34536, byte_end: 34537, column_start: 12, column_end: 13, line_start: 1032, line_end: 1032 }: |
Token { kind: Space, char_start: 34536, char_end: 34537, byte_start: 34537, byte_end: 34538, column_start: 13, column_end: 14, line_start: 1032, line_end: 1032 }: " "
Token { kind: Text, char_start: 34537, char_end: 34539, byte_start: 34538, byte_end: 34540, column_start: 14, column_end: 16, line_start: 1032, line_end: 1032 }: or
Token { kind: Space, char_start: 34539, char_end: 34540, byte_start: 34540, byte_end: 34541, column_start: 16, column_end: 17, line_start: 1032, line_end: 1032 }: " "
Token { kind: Bar, char_start: 34540, char_end: 34541, byte_start: 34541, byte_end: 34542, column_start: 17, column_end: 18, line_start: 1032, line_end: 1032 }: |
Token { kind: Text, char_start: 34541, char_end: 34546, byte_start: 34542, byte_end: 34547, column_start: 18, column_end: 23, line_start: 1032, line_end: 1032 }: :Lack
Token { kind: Bang, char_start: 34546, char_end: 34547, byte_start: 34547, byte_end: 34548, column_start: 23, column_end: 24, line_start: 1032, line_end: 1032 }: !
Token { kind: Bar, char_start: 34547, char_end: 34548, byte_start: 34548, byte_end: 34549, column_start: 24, column_end: 25, line_start: 1032, line_end: 1032 }: |
Token { kind: Space, char_start: 34548, char_end: 34549, byte_start: 34549, byte_end: 34550, column_start: 25, column_end: 26, line_start: 1032, line_end: 1032 }: " "
Token { kind: Text, char_start: 34549, char_end: 34551, byte_start: 34550, byte_end: 34552, column_start: 26, column_end: 28, line_start: 1032, line_end: 1032 }: if
Token { kind: Space, char_start: 34551, char_end: 34552, byte_start: 34552, byte_end: 34553, column_start: 28, column_end: 29, line_start: 1032, line_end: 1032 }: " "
Token { kind: Text, char_start: 34552, char_end: 34556, byte_start: 34553, byte_end: 34557, column_start: 29, column_end: 33, line_start: 1032, line_end: 1032 }: they
Token { kind: Space, char_start: 34556, char_end: 34557, byte_start: 34557, byte_end: 34558, column_start: 33, column_end: 34, line_start: 1032, line_end: 1032 }: " "
Token { kind: Text, char_start: 34557, char_end: 34561, byte_start: 34558, byte_end: 34562, column_start: 34, column_end: 38, line_start: 1032, line_end: 1032 }: want
Token { kind: Space, char_start: 34561, char_end: 34562, byte_start: 34562, byte_end: 34563, column_start: 38, column_end: 39, line_start: 1032, line_end: 1032 }: " "
Token { kind: Text, char_start: 34562, char_end: 34564, byte_start: 34563, byte_end: 34565, column_start: 39, column_end: 41, line_start: 1032, line_end: 1032 }: to
Token { kind: Space, char_start: 34564, char_end: 34565, byte_start: 34565, byte_end: 34566, column_start: 41, column_end: 42, line_start: 1032, line_end: 1032 }: " "
Token { kind: Text, char_start: 34565, char_end: 34571, byte_start: 34566, byte_end: 34572, column_start: 42, column_end: 48, line_start: 1032, line_end: 1032 }: bypass
Token { kind: Space, char_start: 34571, char_end: 34572, byte_start: 34572, byte_end: 34573, column_start: 48, column_end: 49, line_start: 1032, line_end: 1032 }: " "
Token { kind: Text, char_start: 34572, char_end: 34575, byte_start: 34573, byte_end: 34576, column_start: 49, column_end: 52, line_start: 1032, line_end: 1032 }: the
Token { kind: Space, char_start: 34575, char_end: 34576, byte_start: 34576, byte_end: 34577, column_start: 52, column_end: 53, line_start: 1032, line_end: 1032 }: " "
Token { kind: Text, char_start: 34576, char_end: 34582, byte_start: 34577, byte_end: 34583, column_start: 53, column_end: 59, line_start: 1032, line_end: 1032 }: limit.
Token { kind: Newline, char_start: 34582, char_end: 34583, byte_start: 34583, byte_end: 34584, column_start: 59, column_end: 1, line_start: 1032, line_end: 1033 }: "\n"
Token { kind: Newline, char_start: 34583, char_end: 34584, byte_start: 34584, byte_end: 34585, column_start: 1, column_end: 1, line_start: 1033, line_end: 1034 }: "\n"
Token { kind: At, char_start: 34584, char_end: 34585, byte_start: 34585, byte_end: 34586, column_start: 1, column_end: 2, line_start: 1034, line_end: 1034 }: @
Token { kind: Text, char_start: 34585, char_end: 34591, byte_start: 34586, byte_end: 34592, column_start: 2, column_end: 8, line_start: 1034, line_end: 1034 }: option
Token { kind: Space, char_start: 34591, char_end: 34592, byte_start: 34592, byte_end: 34593, column_start: 8, column_end: 9, line_start: 1034, line_end: 1034 }: " "
Token { kind: Text, char_start: 34592, char_end: 34608, byte_start: 34593, byte_end: 34609, column_start: 9, column_end: 25, line_start: 1034, line_end: 1034 }: g:FerretAutojump
Token { kind: Space, char_start: 34608, char_end: 34609, byte_start: 34609, byte_end: 34610, column_start: 25, column_end: 26, line_start: 1034, line_end: 1034 }: " "
Token { kind: Text, char_start: 34609, char_end: 34615, byte_start: 34610, byte_end: 34616, column_start: 26, column_end: 32, line_start: 1034, line_end: 1034 }: number
Token { kind: Space, char_start: 34615, char_end: 34616, byte_start: 34616, byte_end: 34617, column_start: 32, column_end: 33, line_start: 1034, line_end: 1034 }: " "
Token { kind: Text, char_start: 34616, char_end: 34617, byte_start: 34617, byte_end: 34618, column_start: 33, column_end: 34, line_start: 1034, line_end: 1034 }: 1
Token { kind: Newline, char_start: 34617, char_end: 34618, byte_start: 34618, byte_end: 34619, column_start: 34, column_end: 1, line_start: 1034, line_end: 1035 }: "\n"
Token { kind: Newline, char_start: 34618, char_end: 34619, byte_start: 34619, byte_end: 34620, column_start: 1, column_end: 1, line_start: 1035, line_end: 1036 }: "\n"
Token { kind: Text, char_start: 34619, char_end: 34627, byte_start: 34620, byte_end: 34628, column_start: 1, column_end: 9, line_start: 1036, line_end: 1036 }: Controls
Token { kind: Space, char_start: 34627, char_end: 34628, byte_start: 34628, byte_end: 34629, column_start: 9, column_end: 10, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34628, char_end: 34635, byte_start: 34629, byte_end: 34636, column_start: 10, column_end: 17, line_start: 1036, line_end: 1036 }: whether
Token { kind: Space, char_start: 34635, char_end: 34636, byte_start: 34636, byte_end: 34637, column_start: 17, column_end: 18, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34636, char_end: 34642, byte_start: 34637, byte_end: 34643, column_start: 18, column_end: 24, line_start: 1036, line_end: 1036 }: Ferret
Token { kind: Space, char_start: 34642, char_end: 34643, byte_start: 34643, byte_end: 34644, column_start: 24, column_end: 25, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34643, char_end: 34647, byte_start: 34644, byte_end: 34648, column_start: 25, column_end: 29, line_start: 1036, line_end: 1036 }: will
Token { kind: Space, char_start: 34647, char_end: 34648, byte_start: 34648, byte_end: 34649, column_start: 29, column_end: 30, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34648, char_end: 34661, byte_start: 34649, byte_end: 34662, column_start: 30, column_end: 43, line_start: 1036, line_end: 1036 }: automatically
Token { kind: Space, char_start: 34661, char_end: 34662, byte_start: 34662, byte_end: 34663, column_start: 43, column_end: 44, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34662, char_end: 34666, byte_start: 34663, byte_end: 34667, column_start: 44, column_end: 48, line_start: 1036, line_end: 1036 }: jump
Token { kind: Space, char_start: 34666, char_end: 34667, byte_start: 34667, byte_end: 34668, column_start: 48, column_end: 49, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34667, char_end: 34669, byte_start: 34668, byte_end: 34670, column_start: 49, column_end: 51, line_start: 1036, line_end: 1036 }: to
Token { kind: Space, char_start: 34669, char_end: 34670, byte_start: 34670, byte_end: 34671, column_start: 51, column_end: 52, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34670, char_end: 34673, byte_start: 34671, byte_end: 34674, column_start: 52, column_end: 55, line_start: 1036, line_end: 1036 }: the
Token { kind: Space, char_start: 34673, char_end: 34674, byte_start: 34674, byte_end: 34675, column_start: 55, column_end: 56, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34674, char_end: 34679, byte_start: 34675, byte_end: 34680, column_start: 56, column_end: 61, line_start: 1036, line_end: 1036 }: first
Token { kind: Space, char_start: 34679, char_end: 34680, byte_start: 34680, byte_end: 34681, column_start: 61, column_end: 62, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34680, char_end: 34685, byte_start: 34681, byte_end: 34686, column_start: 62, column_end: 67, line_start: 1036, line_end: 1036 }: found
Token { kind: Space, char_start: 34685, char_end: 34686, byte_start: 34686, byte_end: 34687, column_start: 67, column_end: 68, line_start: 1036, line_end: 1036 }: " "
Token { kind: Text, char_start: 34686, char_end: 34692, byte_start: 34687, byte_end: 34693, column_start: 68, column_end: 74, line_start: 1036, line_end: 1036 }: match.
Token { kind: Newline, char_start: 34692, char_end: 34693, byte_start: 34693, byte_end: 34694, column_start: 74, column_end: 1, line_start: 1036, line_end: 1037 }: "\n"
Token { kind: Newline, char_start: 34693, char_end: 34694, byte_start: 34694, byte_end: 34695, column_start: 1, column_end: 1, line_start: 1037, line_end: 1038 }: "\n"
Token { kind: Hyphen, char_start: 34694, char_end: 34695, byte_start: 34695, byte_end: 34696, column_start: 1, column_end: 2, line_start: 1038, line_end: 1038 }: -
Token { kind: Space, char_start: 34695, char_end: 34696, byte_start: 34696, byte_end: 34697, column_start: 2, column_end: 3, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34696, char_end: 34699, byte_start: 34697, byte_end: 34700, column_start: 3, column_end: 6, line_start: 1038, line_end: 1038 }: Set
Token { kind: Space, char_start: 34699, char_end: 34700, byte_start: 34700, byte_end: 34701, column_start: 6, column_end: 7, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34700, char_end: 34702, byte_start: 34701, byte_end: 34703, column_start: 7, column_end: 9, line_start: 1038, line_end: 1038 }: to
Token { kind: Space, char_start: 34702, char_end: 34703, byte_start: 34703, byte_end: 34704, column_start: 9, column_end: 10, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34703, char_end: 34705, byte_start: 34704, byte_end: 34706, column_start: 10, column_end: 12, line_start: 1038, line_end: 1038 }: 0,
Token { kind: Space, char_start: 34705, char_end: 34706, byte_start: 34706, byte_end: 34707, column_start: 12, column_end: 13, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34706, char_end: 34712, byte_start: 34707, byte_end: 34713, column_start: 13, column_end: 19, line_start: 1038, line_end: 1038 }: Ferret
Token { kind: Space, char_start: 34712, char_end: 34713, byte_start: 34713, byte_end: 34714, column_start: 19, column_end: 20, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34713, char_end: 34717, byte_start: 34714, byte_end: 34718, column_start: 20, column_end: 24, line_start: 1038, line_end: 1038 }: will
Token { kind: Space, char_start: 34717, char_end: 34718, byte_start: 34718, byte_end: 34719, column_start: 24, column_end: 25, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34718, char_end: 34722, byte_start: 34719, byte_end: 34723, column_start: 25, column_end: 29, line_start: 1038, line_end: 1038 }: show
Token { kind: Space, char_start: 34722, char_end: 34723, byte_start: 34723, byte_end: 34724, column_start: 29, column_end: 30, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34723, char_end: 34726, byte_start: 34724, byte_end: 34727, column_start: 30, column_end: 33, line_start: 1038, line_end: 1038 }: the
Token { kind: Space, char_start: 34726, char_end: 34727, byte_start: 34727, byte_end: 34728, column_start: 33, column_end: 34, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34727, char_end: 34733, byte_start: 34728, byte_end: 34734, column_start: 34, column_end: 40, line_start: 1038, line_end: 1038 }: search
Token { kind: Space, char_start: 34733, char_end: 34734, byte_start: 34734, byte_end: 34735, column_start: 40, column_end: 41, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34734, char_end: 34741, byte_start: 34735, byte_end: 34742, column_start: 41, column_end: 48, line_start: 1038, line_end: 1038 }: results
Token { kind: Space, char_start: 34741, char_end: 34742, byte_start: 34742, byte_end: 34743, column_start: 48, column_end: 49, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34742, char_end: 34745, byte_start: 34743, byte_end: 34746, column_start: 49, column_end: 52, line_start: 1038, line_end: 1038 }: but
Token { kind: Space, char_start: 34745, char_end: 34746, byte_start: 34746, byte_end: 34747, column_start: 52, column_end: 53, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34746, char_end: 34753, byte_start: 34747, byte_end: 34754, column_start: 53, column_end: 60, line_start: 1038, line_end: 1038 }: perform
Token { kind: Space, char_start: 34753, char_end: 34754, byte_start: 34754, byte_end: 34755, column_start: 60, column_end: 61, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34754, char_end: 34756, byte_start: 34755, byte_end: 34757, column_start: 61, column_end: 63, line_start: 1038, line_end: 1038 }: no
Token { kind: Space, char_start: 34756, char_end: 34757, byte_start: 34757, byte_end: 34758, column_start: 63, column_end: 64, line_start: 1038, line_end: 1038 }: " "
Token { kind: Text, char_start: 34757, char_end: 34762, byte_start: 34758, byte_end: 34763, column_start: 64, column_end: 69, line_start: 1038, line_end: 1038 }: jump.
Token { kind: Newline, char_start: 34762, char_end: 34763, byte_start: 34763, byte_end: 34764, column_start: 69, column_end: 1, line_start: 1038, line_end: 1039 }: "\n"
Token { kind: Hyphen, char_start: 34763, char_end: 34764, byte_start: 34764, byte_end: 34765, column_start: 1, column_end: 2, line_start: 1039, line_end: 1039 }: -
Token { kind: Space, char_start: 34764, char_end: 34765, byte_start: 34765, byte_end: 34766, column_start: 2, column_end: 3, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34765, char_end: 34768, byte_start: 34766, byte_end: 34769, column_start: 3, column_end: 6, line_start: 1039, line_end: 1039 }: Set
Token { kind: Space, char_start: 34768, char_end: 34769, byte_start: 34769, byte_end: 34770, column_start: 6, column_end: 7, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34769, char_end: 34771, byte_start: 34770, byte_end: 34772, column_start: 7, column_end: 9, line_start: 1039, line_end: 1039 }: to
Token { kind: Space, char_start: 34771, char_end: 34772, byte_start: 34772, byte_end: 34773, column_start: 9, column_end: 10, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34772, char_end: 34773, byte_start: 34773, byte_end: 34774, column_start: 10, column_end: 11, line_start: 1039, line_end: 1039 }: 1
Token { kind: Space, char_start: 34773, char_end: 34774, byte_start: 34774, byte_end: 34775, column_start: 11, column_end: 12, line_start: 1039, line_end: 1039 }: " "
Token { kind: Lparen, char_start: 34774, char_end: 34775, byte_start: 34775, byte_end: 34776, column_start: 12, column_end: 13, line_start: 1039, line_end: 1039 }: (
Token { kind: Text, char_start: 34775, char_end: 34778, byte_start: 34776, byte_end: 34779, column_start: 13, column_end: 16, line_start: 1039, line_end: 1039 }: the
Token { kind: Space, char_start: 34778, char_end: 34779, byte_start: 34779, byte_end: 34780, column_start: 16, column_end: 17, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34779, char_end: 34786, byte_start: 34780, byte_end: 34787, column_start: 17, column_end: 24, line_start: 1039, line_end: 1039 }: default
Token { kind: Rparen, char_start: 34786, char_end: 34787, byte_start: 34787, byte_end: 34788, column_start: 24, column_end: 25, line_start: 1039, line_end: 1039 }: )
Token { kind: Text, char_start: 34787, char_end: 34788, byte_start: 34788, byte_end: 34789, column_start: 25, column_end: 26, line_start: 1039, line_end: 1039 }: ,
Token { kind: Space, char_start: 34788, char_end: 34789, byte_start: 34789, byte_end: 34790, column_start: 26, column_end: 27, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34789, char_end: 34795, byte_start: 34790, byte_end: 34796, column_start: 27, column_end: 33, line_start: 1039, line_end: 1039 }: Ferret
Token { kind: Space, char_start: 34795, char_end: 34796, byte_start: 34796, byte_end: 34797, column_start: 33, column_end: 34, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34796, char_end: 34800, byte_start: 34797, byte_end: 34801, column_start: 34, column_end: 38, line_start: 1039, line_end: 1039 }: will
Token { kind: Space, char_start: 34800, char_end: 34801, byte_start: 34801, byte_end: 34802, column_start: 38, column_end: 39, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34801, char_end: 34805, byte_start: 34802, byte_end: 34806, column_start: 39, column_end: 43, line_start: 1039, line_end: 1039 }: show
Token { kind: Space, char_start: 34805, char_end: 34806, byte_start: 34806, byte_end: 34807, column_start: 43, column_end: 44, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34806, char_end: 34809, byte_start: 34807, byte_end: 34810, column_start: 44, column_end: 47, line_start: 1039, line_end: 1039 }: the
Token { kind: Space, char_start: 34809, char_end: 34810, byte_start: 34810, byte_end: 34811, column_start: 47, column_end: 48, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34810, char_end: 34816, byte_start: 34811, byte_end: 34817, column_start: 48, column_end: 54, line_start: 1039, line_end: 1039 }: search
Token { kind: Space, char_start: 34816, char_end: 34817, byte_start: 34817, byte_end: 34818, column_start: 54, column_end: 55, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34817, char_end: 34824, byte_start: 34818, byte_end: 34825, column_start: 55, column_end: 62, line_start: 1039, line_end: 1039 }: results
Token { kind: Space, char_start: 34824, char_end: 34825, byte_start: 34825, byte_end: 34826, column_start: 62, column_end: 63, line_start: 1039, line_end: 1039 }: " "
Token { kind: Text, char_start: 34825, char_end: 34828, byte_start: 34826, byte_end: 34829, column_start: 63, column_end: 66, line_start: 1039, line_end: 1039 }: and
Token { kind: Newline, char_start: 34828, char_end: 34829, byte_start: 34829, byte_end: 34830, column_start: 66, column_end: 1, line_start: 1039, line_end: 1040 }: "\n"
Token { kind: Space, char_start: 34829, char_end: 34831, byte_start: 34830, byte_end: 34832, column_start: 1, column_end: 3, line_start: 1040, line_end: 1040 }: "  "
Token { kind: Text, char_start: 34831, char_end: 34836, byte_start: 34832, byte_end: 34837, column_start: 3, column_end: 8, line_start: 1040, line_end: 1040 }: focus
Token { kind: Space, char_start: 34836, char_end: 34837, byte_start: 34837, byte_end: 34838, column_start: 8, column_end: 9, line_start: 1040, line_end: 1040 }: " "
Token { kind: Text, char_start: 34837, char_end: 34840, byte_start: 34838, byte_end: 34841, column_start: 9, column_end: 12, line_start: 1040, line_end: 1040 }: the
Token { kind: Space, char_start: 34840, char_end: 34841, byte_start: 34841, byte_end: 34842, column_start: 12, column_end: 13, line_start: 1040, line_end: 1040 }: " "
Token { kind: Text, char_start: 34841, char_end: 34847, byte_start: 34842, byte_end: 34848, column_start: 13, column_end: 19, line_start: 1040, line_end: 1040 }: result
Token { kind: Space, char_start: 34847, char_end: 34848, byte_start: 34848, byte_end: 34849, column_start: 19, column_end: 20, line_start: 1040, line_end: 1040 }: " "
Token { kind: Text, char_start: 34848, char_end: 34856, byte_start: 34849, byte_end: 34857, column_start: 20, column_end: 28, line_start: 1040, line_end: 1040 }: listing.
Token { kind: Newline, char_start: 34856, char_end: 34857, byte_start: 34857, byte_end: 34858, column_start: 28, column_end: 1, line_start: 1040, line_end: 1041 }: "\n"
Token { kind: Hyphen, char_start: 34857, char_end: 34858, byte_start: 34858, byte_end: 34859, column_start: 1, column_end: 2, line_start: 1041, line_end: 1041 }: -
Token { kind: Space, char_start: 34858, char_end: 34859, byte_start: 34859, byte_end: 34860, column_start: 2, column_end: 3, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34859, char_end: 34862, byte_start: 34860, byte_end: 34863, column_start: 3, column_end: 6, line_start: 1041, line_end: 1041 }: Set
Token { kind: Space, char_start: 34862, char_end: 34863, byte_start: 34863, byte_end: 34864, column_start: 6, column_end: 7, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34863, char_end: 34865, byte_start: 34864, byte_end: 34866, column_start: 7, column_end: 9, line_start: 1041, line_end: 1041 }: to
Token { kind: Space, char_start: 34865, char_end: 34866, byte_start: 34866, byte_end: 34867, column_start: 9, column_end: 10, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34866, char_end: 34868, byte_start: 34867, byte_end: 34869, column_start: 10, column_end: 12, line_start: 1041, line_end: 1041 }: 2,
Token { kind: Space, char_start: 34868, char_end: 34869, byte_start: 34869, byte_end: 34870, column_start: 12, column_end: 13, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34869, char_end: 34875, byte_start: 34870, byte_end: 34876, column_start: 13, column_end: 19, line_start: 1041, line_end: 1041 }: Ferret
Token { kind: Space, char_start: 34875, char_end: 34876, byte_start: 34876, byte_end: 34877, column_start: 19, column_end: 20, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34876, char_end: 34880, byte_start: 34877, byte_end: 34881, column_start: 20, column_end: 24, line_start: 1041, line_end: 1041 }: will
Token { kind: Space, char_start: 34880, char_end: 34881, byte_start: 34881, byte_end: 34882, column_start: 24, column_end: 25, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34881, char_end: 34885, byte_start: 34882, byte_end: 34886, column_start: 25, column_end: 29, line_start: 1041, line_end: 1041 }: show
Token { kind: Space, char_start: 34885, char_end: 34886, byte_start: 34886, byte_end: 34887, column_start: 29, column_end: 30, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34886, char_end: 34889, byte_start: 34887, byte_end: 34890, column_start: 30, column_end: 33, line_start: 1041, line_end: 1041 }: the
Token { kind: Space, char_start: 34889, char_end: 34890, byte_start: 34890, byte_end: 34891, column_start: 33, column_end: 34, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34890, char_end: 34896, byte_start: 34891, byte_end: 34897, column_start: 34, column_end: 40, line_start: 1041, line_end: 1041 }: search
Token { kind: Space, char_start: 34896, char_end: 34897, byte_start: 34897, byte_end: 34898, column_start: 40, column_end: 41, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34897, char_end: 34904, byte_start: 34898, byte_end: 34905, column_start: 41, column_end: 48, line_start: 1041, line_end: 1041 }: results
Token { kind: Space, char_start: 34904, char_end: 34905, byte_start: 34905, byte_end: 34906, column_start: 48, column_end: 49, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34905, char_end: 34908, byte_start: 34906, byte_end: 34909, column_start: 49, column_end: 52, line_start: 1041, line_end: 1041 }: and
Token { kind: Space, char_start: 34908, char_end: 34909, byte_start: 34909, byte_end: 34910, column_start: 52, column_end: 53, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34909, char_end: 34913, byte_start: 34910, byte_end: 34914, column_start: 53, column_end: 57, line_start: 1041, line_end: 1041 }: jump
Token { kind: Space, char_start: 34913, char_end: 34914, byte_start: 34914, byte_end: 34915, column_start: 57, column_end: 58, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34914, char_end: 34916, byte_start: 34915, byte_end: 34917, column_start: 58, column_end: 60, line_start: 1041, line_end: 1041 }: to
Token { kind: Space, char_start: 34916, char_end: 34917, byte_start: 34917, byte_end: 34918, column_start: 60, column_end: 61, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34917, char_end: 34920, byte_start: 34918, byte_end: 34921, column_start: 61, column_end: 64, line_start: 1041, line_end: 1041 }: the
Token { kind: Space, char_start: 34920, char_end: 34921, byte_start: 34921, byte_end: 34922, column_start: 64, column_end: 65, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34921, char_end: 34926, byte_start: 34922, byte_end: 34927, column_start: 65, column_end: 70, line_start: 1041, line_end: 1041 }: first
Token { kind: Space, char_start: 34926, char_end: 34927, byte_start: 34927, byte_end: 34928, column_start: 70, column_end: 71, line_start: 1041, line_end: 1041 }: " "
Token { kind: Text, char_start: 34927, char_end: 34932, byte_start: 34928, byte_end: 34933, column_start: 71, column_end: 76, line_start: 1041, line_end: 1041 }: found
Token { kind: Newline, char_start: 34932, char_end: 34933, byte_start: 34933, byte_end: 34934, column_start: 76, column_end: 1, line_start: 1041, line_end: 1042 }: "\n"
Token { kind: Space, char_start: 34933, char_end: 34935, byte_start: 34934, byte_end: 34936, column_start: 1, column_end: 3, line_start: 1042, line_end: 1042 }: "  "
Token { kind: Text, char_start: 34935, char_end: 34941, byte_start: 34936, byte_end: 34942, column_start: 3, column_end: 9, line_start: 1042, line_end: 1042 }: match.
Token { kind: Newline, char_start: 34941, char_end: 34942, byte_start: 34942, byte_end: 34943, column_start: 9, column_end: 1, line_start: 1042, line_end: 1043 }: "\n"
Token { kind: Newline, char_start: 34942, char_end: 34943, byte_start: 34943, byte_end: 34944, column_start: 1, column_end: 1, line_start: 1043, line_end: 1044 }: "\n"
Token { kind: Text, char_start: 34943, char_end: 34950, byte_start: 34944, byte_end: 34951, column_start: 1, column_end: 8, line_start: 1044, line_end: 1044 }: Example
Token { kind: Space, char_start: 34950, char_end: 34951, byte_start: 34951, byte_end: 34952, column_start: 8, column_end: 9, line_start: 1044, line_end: 1044 }: " "
Token { kind: Text, char_start: 34951, char_end: 34960, byte_start: 34952, byte_end: 34961, column_start: 9, column_end: 18, line_start: 1044, line_end: 1044 }: override:
Token { kind: Newline, char_start: 34960, char_end: 34961, byte_start: 34961, byte_end: 34962, column_start: 18, column_end: 1, line_start: 1044, line_end: 1045 }: "\n"
Token { kind: Newline, char_start: 34961, char_end: 34962, byte_start: 34962, byte_end: 34963, column_start: 1, column_end: 1, line_start: 1045, line_end: 1046 }: "\n"
Token { kind: CodeFence, char_start: 34962, char_end: 34965, byte_start: 34963, byte_end: 34966, column_start: 1, column_end: 4, line_start: 1046, line_end: 1046 }: ```
Token { kind: Newline, char_start: 34965, char_end: 34966, byte_start: 34966, byte_end: 34967, column_start: 4, column_end: 1, line_start: 1046, line_end: 1047 }: "\n"
Token { kind: Text, char_start: 34966, char_end: 34969, byte_start: 34967, byte_end: 34970, column_start: 1, column_end: 4, line_start: 1047, line_end: 1047 }: let
Token { kind: Space, char_start: 34969, char_end: 34970, byte_start: 34970, byte_end: 34971, column_start: 4, column_end: 5, line_start: 1047, line_end: 1047 }: " "
Token { kind: Text, char_start: 34970, char_end: 34988, byte_start: 34971, byte_end: 34989, column_start: 5, column_end: 23, line_start: 1047, line_end: 1047 }: g:FerretAutojump=2
Token { kind: Newline, char_start: 34988, char_end: 34989, byte_start: 34989, byte_end: 34990, column_start: 23, column_end: 1, line_start: 1047, line_end: 1048 }: "\n"
Token { kind: CodeFence, char_start: 34989, char_end: 34992, byte_start: 34990, byte_end: 34993, column_start: 1, column_end: 4, line_start: 1048, line_end: 1048 }: ```
Token { kind: Newline, char_start: 34992, char_end: 34993, byte_start: 34993, byte_end: 34994, column_start: 4, column_end: 1, line_start: 1048, line_end: 1049 }: "\n"
Token { kind: Newline, char_start: 34993, char_end: 34994, byte_start: 34994, byte_end: 34995, column_start: 1, column_end: 1, line_start: 1049, line_end: 1050 }: "\n"
Token { kind: At, char_start: 34994, char_end: 34995, byte_start: 34995, byte_end: 34996, column_start: 1, column_end: 2, line_start: 1050, line_end: 1050 }: @
Token { kind: Text, char_start: 34995, char_end: 35001, byte_start: 34996, byte_end: 35002, column_start: 2, column_end: 8, line_start: 1050, line_end: 1050 }: option
Token { kind: Space, char_start: 35001, char_end: 35002, byte_start: 35002, byte_end: 35003, column_start: 8, column_end: 9, line_start: 1050, line_end: 1050 }: " "
Token { kind: Text, char_start: 35002, char_end: 35019, byte_start: 35003, byte_end: 35020, column_start: 9, column_end: 26, line_start: 1050, line_end: 1050 }: g:FerretQFHandler
Token { kind: Space, char_start: 35019, char_end: 35020, byte_start: 35020, byte_end: 35021, column_start: 26, column_end: 27, line_start: 1050, line_end: 1050 }: " "
Token { kind: Text, char_start: 35020, char_end: 35026, byte_start: 35021, byte_end: 35027, column_start: 27, column_end: 33, line_start: 1050, line_end: 1050 }: string
Token { kind: Space, char_start: 35026, char_end: 35027, byte_start: 35027, byte_end: 35028, column_start: 33, column_end: 34, line_start: 1050, line_end: 1050 }: " "
Token { kind: Text, char_start: 35027, char_end: 35036, byte_start: 35028, byte_end: 35037, column_start: 34, column_end: 43, line_start: 1050, line_end: 1050 }: "botright
Token { kind: Space, char_start: 35036, char_end: 35037, byte_start: 35037, byte_end: 35038, column_start: 43, column_end: 44, line_start: 1050, line_end: 1050 }: " "
Token { kind: Text, char_start: 35037, char_end: 35043, byte_start: 35038, byte_end: 35044, column_start: 44, column_end: 50, line_start: 1050, line_end: 1050 }: copen"
Token { kind: Newline, char_start: 35043, char_end: 35044, byte_start: 35044, byte_end: 35045, column_start: 50, column_end: 1, line_start: 1050, line_end: 1051 }: "\n"
Token { kind: Newline, char_start: 35044, char_end: 35045, byte_start: 35045, byte_end: 35046, column_start: 1, column_end: 1, line_start: 1051, line_end: 1052 }: "\n"
Token { kind: Text, char_start: 35045, char_end: 35051, byte_start: 35046, byte_end: 35052, column_start: 1, column_end: 7, line_start: 1052, line_end: 1052 }: Allows
Token { kind: Space, char_start: 35051, char_end: 35052, byte_start: 35052, byte_end: 35053, column_start: 7, column_end: 8, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35052, char_end: 35055, byte_start: 35053, byte_end: 35056, column_start: 8, column_end: 11, line_start: 1052, line_end: 1052 }: you
Token { kind: Space, char_start: 35055, char_end: 35056, byte_start: 35056, byte_end: 35057, column_start: 11, column_end: 12, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35056, char_end: 35058, byte_start: 35057, byte_end: 35059, column_start: 12, column_end: 14, line_start: 1052, line_end: 1052 }: to
Token { kind: Space, char_start: 35058, char_end: 35059, byte_start: 35059, byte_end: 35060, column_start: 14, column_end: 15, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35059, char_end: 35067, byte_start: 35060, byte_end: 35068, column_start: 15, column_end: 23, line_start: 1052, line_end: 1052 }: override
Token { kind: Space, char_start: 35067, char_end: 35068, byte_start: 35068, byte_end: 35069, column_start: 23, column_end: 24, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35068, char_end: 35071, byte_start: 35069, byte_end: 35072, column_start: 24, column_end: 27, line_start: 1052, line_end: 1052 }: the
Token { kind: Space, char_start: 35071, char_end: 35072, byte_start: 35072, byte_end: 35073, column_start: 27, column_end: 28, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35072, char_end: 35081, byte_start: 35073, byte_end: 35082, column_start: 28, column_end: 37, line_start: 1052, line_end: 1052 }: mechanism
Token { kind: Space, char_start: 35081, char_end: 35082, byte_start: 35082, byte_end: 35083, column_start: 37, column_end: 38, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35082, char_end: 35086, byte_start: 35083, byte_end: 35087, column_start: 38, column_end: 42, line_start: 1052, line_end: 1052 }: that
Token { kind: Space, char_start: 35086, char_end: 35087, byte_start: 35087, byte_end: 35088, column_start: 42, column_end: 43, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35087, char_end: 35092, byte_start: 35088, byte_end: 35093, column_start: 43, column_end: 48, line_start: 1052, line_end: 1052 }: opens
Token { kind: Space, char_start: 35092, char_end: 35093, byte_start: 35093, byte_end: 35094, column_start: 48, column_end: 49, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35093, char_end: 35096, byte_start: 35094, byte_end: 35097, column_start: 49, column_end: 52, line_start: 1052, line_end: 1052 }: the
Token { kind: Space, char_start: 35096, char_end: 35097, byte_start: 35097, byte_end: 35098, column_start: 52, column_end: 53, line_start: 1052, line_end: 1052 }: " "
Token { kind: Bar, char_start: 35097, char_end: 35098, byte_start: 35098, byte_end: 35099, column_start: 53, column_end: 54, line_start: 1052, line_end: 1052 }: |
Token { kind: Text, char_start: 35098, char_end: 35106, byte_start: 35099, byte_end: 35107, column_start: 54, column_end: 62, line_start: 1052, line_end: 1052 }: quickfix
Token { kind: Bar, char_start: 35106, char_end: 35107, byte_start: 35107, byte_end: 35108, column_start: 62, column_end: 63, line_start: 1052, line_end: 1052 }: |
Token { kind: Space, char_start: 35107, char_end: 35108, byte_start: 35108, byte_end: 35109, column_start: 63, column_end: 64, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35108, char_end: 35114, byte_start: 35109, byte_end: 35115, column_start: 64, column_end: 70, line_start: 1052, line_end: 1052 }: window
Token { kind: Space, char_start: 35114, char_end: 35115, byte_start: 35115, byte_end: 35116, column_start: 70, column_end: 71, line_start: 1052, line_end: 1052 }: " "
Token { kind: Text, char_start: 35115, char_end: 35117, byte_start: 35116, byte_end: 35118, column_start: 71, column_end: 73, line_start: 1052, line_end: 1052 }: to
Token { kind: Newline, char_start: 35117, char_end: 35118, byte_start: 35118, byte_end: 35119, column_start: 73, column_end: 1, line_start: 1052, line_end: 1053 }: "\n"
Token { kind: Text, char_start: 35118, char_end: 35125, byte_start: 35119, byte_end: 35126, column_start: 1, column_end: 8, line_start: 1053, line_end: 1053 }: display
Token { kind: Space, char_start: 35125, char_end: 35126, byte_start: 35126, byte_end: 35127, column_start: 8, column_end: 9, line_start: 1053, line_end: 1053 }: " "
Token { kind: Text, char_start: 35126, char_end: 35132, byte_start: 35127, byte_end: 35133, column_start: 9, column_end: 15, line_start: 1053, line_end: 1053 }: search
Token { kind: Space, char_start: 35132, char_end: 35133, byte_start: 35133, byte_end: 35134, column_start: 15, column_end: 16, line_start: 1053, line_end: 1053 }: " "
Token { kind: Text, char_start: 35133, char_end: 35141, byte_start: 35134, byte_end: 35142, column_start: 16, column_end: 24, line_start: 1053, line_end: 1053 }: results.
Token { kind: Newline, char_start: 35141, char_end: 35142, byte_start: 35142, byte_end: 35143, column_start: 24, column_end: 1, line_start: 1053, line_end: 1054 }: "\n"
Token { kind: Newline, char_start: 35142, char_end: 35143, byte_start: 35143, byte_end: 35144, column_start: 1, column_end: 1, line_start: 1054, line_end: 1055 }: "\n"
Token { kind: At, char_start: 35143, char_end: 35144, byte_start: 35144, byte_end: 35145, column_start: 1, column_end: 2, line_start: 1055, line_end: 1055 }: @
Token { kind: Text, char_start: 35144, char_end: 35150, byte_start: 35145, byte_end: 35151, column_start: 2, column_end: 8, line_start: 1055, line_end: 1055 }: option
Token { kind: Space, char_start: 35150, char_end: 35151, byte_start: 35151, byte_end: 35152, column_start: 8, column_end: 9, line_start: 1055, line_end: 1055 }: " "
Token { kind: Text, char_start: 35151, char_end: 35168, byte_start: 35152, byte_end: 35169, column_start: 9, column_end: 26, line_start: 1055, line_end: 1055 }: g:FerretLLHandler
Token { kind: Space, char_start: 35168, char_end: 35169, byte_start: 35169, byte_end: 35170, column_start: 26, column_end: 27, line_start: 1055, line_end: 1055 }: " "
Token { kind: Text, char_start: 35169, char_end: 35175, byte_start: 35170, byte_end: 35176, column_start: 27, column_end: 33, line_start: 1055, line_end: 1055 }: string
Token { kind: Space, char_start: 35175, char_end: 35176, byte_start: 35176, byte_end: 35177, column_start: 33, column_end: 34, line_start: 1055, line_end: 1055 }: " "
Token { kind: Text, char_start: 35176, char_end: 35183, byte_start: 35177, byte_end: 35184, column_start: 34, column_end: 41, line_start: 1055, line_end: 1055 }: "lopen"
Token { kind: Newline, char_start: 35183, char_end: 35184, byte_start: 35184, byte_end: 35185, column_start: 41, column_end: 1, line_start: 1055, line_end: 1056 }: "\n"
Token { kind: Newline, char_start: 35184, char_end: 35185, byte_start: 35185, byte_end: 35186, column_start: 1, column_end: 1, line_start: 1056, line_end: 1057 }: "\n"
Token { kind: Text, char_start: 35185, char_end: 35191, byte_start: 35186, byte_end: 35192, column_start: 1, column_end: 7, line_start: 1057, line_end: 1057 }: Allows
Token { kind: Space, char_start: 35191, char_end: 35192, byte_start: 35192, byte_end: 35193, column_start: 7, column_end: 8, line_start: 1057, line_end: 1057 }: " "
Token { kind: Text, char_start: 35192, char_end: 35195, byte_start: 35193, byte_end: 35196, column_start: 8, column_end: 11, line_start: 1057, line_end: 1057 }: you
Token { kind: Space, char_start: 35195, char_end: 35196, byte_start: 35196, byte_end: 35197, column_start: 11, column_end: 12, line_start: 1057, line_end: 1057 }: " "
Token { kind: Text, char_start: 35196, char_end: 35198, byte_start: 35197, byte_end: 35199, column_start: 12, column_end: 14, line_start: 1057, line_end: 1057 }: to
Token { kind: Space, char_start: 35198, char_end: 35199, byte_start: 35199, byte_end: 35200, column_start: 14, column_end: 15, line_start: 1057, line_end: 1057 }: " "
Token { kind: Text, char_start: 35199, char_end: 35207, byte_start: 35200, byte_end: 35208, column_start: 15, column_end: 23, line_start: 1057, line_end: 1057 }: override
Token { kind: Space, char_start: 35207, char_end: 35208, byte_start: 35208, byte_end: 35209, column_start: 23, column_end: 24, line_start: 1057, line_end: 1057 }: " "
Token { kind: Text, char_start: 35208, char_end: 35211, byte_start: 35209, byte_end: 35212, column_start: 24, column_end: 27, line_start: 1057, line_end: 1057 }: the
Token { kind: Space, char_start: 35211, char_end: 35212, byte_start: 35212, byte_end: 35213, column_start: 27, column_end: 28, line_start: 1057, line_end: 1057 }: " "
Token { kind: Text, char_start: 35212, char_end: 35221, byte_start: 35213, byte_end: 35222, column_start: 28, column_end: 37, line_start: 1057, line_end: 1057 }: mechanism
Token { kind: Space, char_start: 35221, char_end: 35222, byte_start: 35222, byte_end: 35223, column_start: 37, column_end: 38, line_start: 1057, line_end: 1057 }: " "
Token { kind: Text, char_start: 35222, char_end: 35226, byte_start: 35223, byte_end: 35227, column_start: 38, column_end: 42, line_start: 1057, line_end: 1057 }: that
Token { kind: Space, char_start: 35226, char_end: 35227, byte_start: 35227, byte_end: 35228, column_start: 42, column_end: 43, line_start: 1057, line_end: 1057 }: " "
Token { kind: Text, char_start: 35227, char_end: 35232, byte_start: 35228, byte_end: 35233, column_start: 43, column_end: 48, line_start: 1057, line_end: 1057 }: opens
Token { kind: Space, char_start: 35232, char_end: 35233, byte_start: 35233, byte_end: 35234, column_start: 48, column_end: 49, line_start: 1057, line_end: 1057 }: " "
Token { kind: Text, char_start: 35233, char_end: 35236, byte_start: 35234, byte_end: 35237, column_start: 49, column_end: 52, line_start: 1057, line_end: 1057 }: the
Token { kind: Space, char_start: 35236, char_end: 35237, byte_start: 35237, byte_end: 35238, column_start: 52, column_end: 53, line_start: 1057, line_end: 1057 }: " "
Token { kind: Bar, char_start: 35237, char_end: 35238, byte_start: 35238, byte_end: 35239, column_start: 53, column_end: 54, line_start: 1057, line_end: 1057 }: |
Token { kind: Text, char_start: 35238, char_end: 35246, byte_start: 35239, byte_end: 35247, column_start: 54, column_end: 62, line_start: 1057, line_end: 1057 }: location
Token { kind: Hyphen, char_start: 35246, char_end: 35247, byte_start: 35247, byte_end: 35248, column_start: 62, column_end: 63, line_start: 1057, line_end: 1057 }: -
Token { kind: Text, char_start: 35247, char_end: 35251, byte_start: 35248, byte_end: 35252, column_start: 63, column_end: 67, line_start: 1057, line_end: 1057 }: list
Token { kind: Bar, char_start: 35251, char_end: 35252, byte_start: 35252, byte_end: 35253, column_start: 67, column_end: 68, line_start: 1057, line_end: 1057 }: |
Token { kind: Newline, char_start: 35252, char_end: 35253, byte_start: 35253, byte_end: 35254, column_start: 68, column_end: 1, line_start: 1057, line_end: 1058 }: "\n"
Token { kind: Text, char_start: 35253, char_end: 35259, byte_start: 35254, byte_end: 35260, column_start: 1, column_end: 7, line_start: 1058, line_end: 1058 }: window
Token { kind: Space, char_start: 35259, char_end: 35260, byte_start: 35260, byte_end: 35261, column_start: 7, column_end: 8, line_start: 1058, line_end: 1058 }: " "
Token { kind: Text, char_start: 35260, char_end: 35262, byte_start: 35261, byte_end: 35263, column_start: 8, column_end: 10, line_start: 1058, line_end: 1058 }: to
Token { kind: Space, char_start: 35262, char_end: 35263, byte_start: 35263, byte_end: 35264, column_start: 10, column_end: 11, line_start: 1058, line_end: 1058 }: " "
Token { kind: Text, char_start: 35263, char_end: 35270, byte_start: 35264, byte_end: 35271, column_start: 11, column_end: 18, line_start: 1058, line_end: 1058 }: display
Token { kind: Space, char_start: 35270, char_end: 35271, byte_start: 35271, byte_end: 35272, column_start: 18, column_end: 19, line_start: 1058, line_end: 1058 }: " "
Token { kind: Text, char_start: 35271, char_end: 35277, byte_start: 35272, byte_end: 35278, column_start: 19, column_end: 25, line_start: 1058, line_end: 1058 }: search
Token { kind: Space, char_start: 35277, char_end: 35278, byte_start: 35278, byte_end: 35279, column_start: 25, column_end: 26, line_start: 1058, line_end: 1058 }: " "
Token { kind: Text, char_start: 35278, char_end: 35286, byte_start: 35279, byte_end: 35287, column_start: 26, column_end: 34, line_start: 1058, line_end: 1058 }: results.
