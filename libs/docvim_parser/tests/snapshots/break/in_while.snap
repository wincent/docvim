while true do
  if test() then
    print("test passed")
    break
  end
end

↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ OUTPUT ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

Block(
    [
        Node {
            comments: [],
            node: While {
                cexp: True,
                block: Block(
                    [
                        Node {
                            comments: [],
                            node: IfStatement {
                                consequents: [
                                    Consequent {
                                        cexp: FunctionCall {
                                            pexp: NamedVar(
                                                "test",
                                            ),
                                            args: [],
                                        },
                                        block: Block(
                                            [
                                                Node {
                                                    comments: [],
                                                    node: FunctionCallStatement {
                                                        pexp: NamedVar(
                                                            "print",
                                                        ),
                                                        args: [
                                                            CookedStr(
                                                                "test passed",
                                                            ),
                                                        ],
                                                    },
                                                },
                                                Node {
                                                    comments: [],
                                                    node: Break,
                                                },
                                            ],
                                        ),
                                    },
                                ],
                                alternate: None,
                            },
                        },
                    ],
                ),
            },
        },
    ],
)
