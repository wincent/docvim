-- We can mix various kinds of prefixexps together.

a() { force = true } "boo!"

-- Equivalent to (identical AST):

a()({force = true})("boo!")

↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓ OUTPUT ↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓↓

Block(
    [
        Node {
            comments: [
                Comment {
                    kind: LineComment,
                    content: "-- We can mix various kinds of prefixexps together.\n",
                    location: Location {
                        line_start: 1,
                        line_end: 2,
                        column_start: 1,
                        column_end: 1,
                    },
                },
            ],
            node: FunctionCallStatement {
                pexp: Node {
                    comments: [],
                    node: FunctionCall {
                        pexp: Node {
                            comments: [],
                            node: FunctionCall {
                                pexp: Node {
                                    comments: [],
                                    node: NamedVar(
                                        "a",
                                    ),
                                },
                                args: [],
                            },
                        },
                        args: [
                            Node {
                                comments: [],
                                node: Table(
                                    [
                                        Node {
                                            comments: [],
                                            node: Field {
                                                index: None,
                                                lexp: Node {
                                                    comments: [],
                                                    node: RawStr(
                                                        "force",
                                                    ),
                                                },
                                                rexp: Node {
                                                    comments: [],
                                                    node: True,
                                                },
                                            },
                                        },
                                    ],
                                ),
                            },
                        ],
                    },
                },
                args: [
                    Node {
                        comments: [],
                        node: CookedStr(
                            "boo!",
                        ),
                    },
                ],
            },
        },
        Node {
            comments: [
                Comment {
                    kind: LineComment,
                    content: "-- Equivalent to (identical AST):\n",
                    location: Location {
                        line_start: 5,
                        line_end: 6,
                        column_start: 1,
                        column_end: 1,
                    },
                },
            ],
            node: FunctionCallStatement {
                pexp: Node {
                    comments: [],
                    node: FunctionCall {
                        pexp: Node {
                            comments: [],
                            node: FunctionCall {
                                pexp: Node {
                                    comments: [],
                                    node: NamedVar(
                                        "a",
                                    ),
                                },
                                args: [],
                            },
                        },
                        args: [
                            Node {
                                comments: [],
                                node: Table(
                                    [
                                        Node {
                                            comments: [],
                                            node: Field {
                                                index: None,
                                                lexp: Node {
                                                    comments: [],
                                                    node: RawStr(
                                                        "force",
                                                    ),
                                                },
                                                rexp: Node {
                                                    comments: [],
                                                    node: True,
                                                },
                                            },
                                        },
                                    ],
                                ),
                            },
                        ],
                    },
                },
                args: [
                    Node {
                        comments: [],
                        node: CookedStr(
                            "boo!",
                        ),
                    },
                ],
            },
        },
    ],
)
